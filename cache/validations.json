{
  "version": "3.4",
  "log": [
    {
      "contracts/token20.sol:token20": {
        "src": "contracts/token20.sol:7",
        "version": {
          "withMetadata": "f80605843c956372b15b30d365785e2a16a756592dc88fafb353db448c85824c",
          "withoutMetadata": "31bf5c4a5554062c9108b294856383999f7dc0943ddb89fdeddcade312800856",
          "linkedWithoutMetadata": "31bf5c4a5554062c9108b294856383999f7dc0943ddb89fdeddcade312800856"
        },
        "inherit": [],
        "libraries": [],
        "methods": [
          "transfer(address,uint256)",
          "decimals()",
          "totalSupply()",
          "balanceOf(address)",
          "mint(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)",
          "increaseAllowance(address,uint256)",
          "decreaseAllowance(address,uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "state-variable-assignment",
            "name": "name",
            "src": "contracts/token20.sol:14"
          },
          {
            "kind": "state-variable-assignment",
            "name": "symbol",
            "src": "contracts/token20.sol:15"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_balances",
              "offset": 0,
              "slot": "0",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "token20",
              "src": "contracts/token20.sol:8"
            },
            {
              "label": "_allowances",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "token20",
              "src": "contracts/token20.sol:10"
            },
            {
              "label": "_totalSupply",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "token20",
              "src": "contracts/token20.sol:12"
            },
            {
              "label": "name",
              "offset": 0,
              "slot": "3",
              "type": "t_string_storage",
              "contract": "token20",
              "src": "contracts/token20.sol:14"
            },
            {
              "label": "symbol",
              "offset": 0,
              "slot": "4",
              "type": "t_string_storage",
              "contract": "token20",
              "src": "contracts/token20.sol:15"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.0"
      }
    },
    {
      "contracts/token20Run.sol:token20Run": {
        "src": "contracts/token20Run.sol:7",
        "version": {
          "withMetadata": "d8e0922e2c89414b22a5fcf350552c6295af820df26a7e37431c697009b24e5d",
          "withoutMetadata": "e850a9b90ed976e48c6e6ed5fb2d7288320df28e7af3f3cf79f577098605405a",
          "linkedWithoutMetadata": "e850a9b90ed976e48c6e6ed5fb2d7288320df28e7af3f3cf79f577098605405a"
        },
        "inherit": [],
        "libraries": [],
        "methods": [
          "transfer(address,uint256)",
          "decimals()",
          "totalSupply()",
          "balanceOf(address)",
          "mint(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)",
          "increaseAllowance(address,uint256)",
          "decreaseAllowance(address,uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "state-variable-assignment",
            "name": "name",
            "src": "contracts/token20Run.sol:15"
          },
          {
            "kind": "state-variable-assignment",
            "name": "symbol",
            "src": "contracts/token20Run.sol:16"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_balances",
              "offset": 0,
              "slot": "0",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "token20Run",
              "src": "contracts/token20Run.sol:9"
            },
            {
              "label": "_allowances",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "token20Run",
              "src": "contracts/token20Run.sol:11"
            },
            {
              "label": "_totalSupply",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "token20Run",
              "src": "contracts/token20Run.sol:13"
            },
            {
              "label": "name",
              "offset": 0,
              "slot": "3",
              "type": "t_string_storage",
              "contract": "token20Run",
              "src": "contracts/token20Run.sol:15"
            },
            {
              "label": "symbol",
              "offset": 0,
              "slot": "4",
              "type": "t_string_storage",
              "contract": "token20Run",
              "src": "contracts/token20Run.sol:16"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.1"
      }
    },
    {
      "contracts/token20.sol:token20": {
        "src": "contracts/token20.sol:7",
        "version": {
          "withMetadata": "f80605843c956372b15b30d365785e2a16a756592dc88fafb353db448c85824c",
          "withoutMetadata": "31bf5c4a5554062c9108b294856383999f7dc0943ddb89fdeddcade312800856",
          "linkedWithoutMetadata": "31bf5c4a5554062c9108b294856383999f7dc0943ddb89fdeddcade312800856"
        },
        "inherit": [],
        "libraries": [],
        "methods": [
          "transfer(address,uint256)",
          "decimals()",
          "totalSupply()",
          "balanceOf(address)",
          "mint(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)",
          "increaseAllowance(address,uint256)",
          "decreaseAllowance(address,uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "state-variable-assignment",
            "name": "name",
            "src": "contracts/token20.sol:14"
          },
          {
            "kind": "state-variable-assignment",
            "name": "symbol",
            "src": "contracts/token20.sol:15"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_balances",
              "offset": 0,
              "slot": "0",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "token20",
              "src": "contracts/token20.sol:8"
            },
            {
              "label": "_allowances",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "token20",
              "src": "contracts/token20.sol:10"
            },
            {
              "label": "_totalSupply",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "token20",
              "src": "contracts/token20.sol:12"
            },
            {
              "label": "name",
              "offset": 0,
              "slot": "3",
              "type": "t_string_storage",
              "contract": "token20",
              "src": "contracts/token20.sol:14"
            },
            {
              "label": "symbol",
              "offset": 0,
              "slot": "4",
              "type": "t_string_storage",
              "contract": "token20",
              "src": "contracts/token20.sol:15"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.0"
      }
    },
    {
      "@openzeppelin/contracts/access/Ownable.sol:Ownable": {
        "src": "@openzeppelin/contracts/access/Ownable.sol:20",
        "inherit": [
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [],
        "methods": [
          "owner()",
          "renounceOwnership()",
          "transferOwnership(address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Ownable",
            "src": "@openzeppelin/contracts/access/Ownable.sol:28"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Ownable",
              "src": "@openzeppelin/contracts/access/Ownable.sol:21"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.21"
      },
      "@openzeppelin/contracts/security/ReentrancyGuard.sol:ReentrancyGuard": {
        "src": "@openzeppelin/contracts/security/ReentrancyGuard.sol:22",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ReentrancyGuard",
            "src": "@openzeppelin/contracts/security/ReentrancyGuard.sol:39"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_status",
              "offset": 0,
              "slot": "0",
              "type": "t_uint256",
              "contract": "ReentrancyGuard",
              "src": "@openzeppelin/contracts/security/ReentrancyGuard.sol:37"
            }
          ],
          "types": {
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.21"
      },
      "@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20": {
        "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:38",
        "version": {
          "withMetadata": "ebc8f8d359d90df027debd2a3c48d52d34138a2f0dfc046f4f9e59bf73a723d8",
          "withoutMetadata": "b88954434c1323bef884c814f309755275a30d00fbd7290dedb8d43b871933fc",
          "linkedWithoutMetadata": "b88954434c1323bef884c814f309755275a30d00fbd7290dedb8d43b871933fc"
        },
        "inherit": [
          "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol:IERC20Metadata",
          "@openzeppelin/contracts/token/ERC20/IERC20.sol:IERC20",
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [],
        "methods": [
          "(string,string)",
          "name()",
          "symbol()",
          "decimals()",
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)",
          "increaseAllowance(address,uint256)",
          "decreaseAllowance(address,uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ERC20",
            "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:54"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_balances",
              "offset": 0,
              "slot": "0",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:39"
            },
            {
              "label": "_allowances",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:41"
            },
            {
              "label": "_totalSupply",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:43"
            },
            {
              "label": "_name",
              "offset": 0,
              "slot": "3",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:45"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "4",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:46"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.21"
      },
      "@openzeppelin/contracts/token/ERC20/IERC20.sol:IERC20": {
        "src": "@openzeppelin/contracts/token/ERC20/IERC20.sol:9",
        "inherit": [],
        "libraries": [],
        "methods": [
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.21"
      },
      "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol:IERC20Metadata": {
        "src": "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol:13",
        "inherit": [
          "@openzeppelin/contracts/token/ERC20/IERC20.sol:IERC20"
        ],
        "libraries": [],
        "methods": [
          "name()",
          "symbol()",
          "decimals()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.21"
      },
      "@openzeppelin/contracts/token/ERC20/extensions/IERC20Permit.sol:IERC20Permit": {
        "src": "@openzeppelin/contracts/token/ERC20/extensions/IERC20Permit.sol:42",
        "inherit": [],
        "libraries": [],
        "methods": [
          "permit(address,address,uint256,uint256,uint8,bytes32,bytes32)",
          "nonces(address)",
          "DOMAIN_SEPARATOR()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.21"
      },
      "@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol:SafeERC20": {
        "src": "@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol:19",
        "version": {
          "withMetadata": "0892d1c97bfcfbbed5864e70063801b058f49b0d78929d13dc422da9d73a6fc3",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [
          "@openzeppelin/contracts/utils/Address.sol:Address"
        ],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.21"
      },
      "@openzeppelin/contracts/utils/Address.sol:Address": {
        "src": "@openzeppelin/contracts/utils/Address.sol:9",
        "version": {
          "withMetadata": "9a930d75f706a1222edf21da2367c40d0d025481785c3fcb2021d592938d64d1",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [
          {
            "kind": "delegatecall",
            "src": "@openzeppelin/contracts/utils/Address.sol:185"
          },
          {
            "kind": "delegatecall",
            "src": "@openzeppelin/contracts/utils/Address.sol:185"
          }
        ],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.21"
      },
      "@openzeppelin/contracts/utils/Context.sol:Context": {
        "src": "@openzeppelin/contracts/utils/Context.sol:16",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.21"
      },
      "@openzeppelin/contracts/utils/math/Math.sol:Math": {
        "src": "@openzeppelin/contracts/utils/math/Math.sol:9",
        "version": {
          "withMetadata": "57a8b7ed4fc38819210ed6c891ebe43380fa62f722cd81865c517d0bf2024009",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.21"
      },
      "@openzeppelin/contracts/utils/math/SafeMath.sol:SafeMath": {
        "src": "@openzeppelin/contracts/utils/math/SafeMath.sol:16",
        "version": {
          "withMetadata": "b8f1bed39b26f5dc514125de79329ed0dbfe320e8d5a945d34e550b36c3aafcf",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.21"
      },
      "contracts/EthCallTest.sol:EthCallTest": {
        "src": "contracts/EthCallTest.sol:4",
        "version": {
          "withMetadata": "88044c06a2d6799a2aa3e700678ca2f5c03ae41dd45c25e81204293c6afa7a30",
          "withoutMetadata": "bd4c24fe6514787ffa1af28f8fe08df9cf2c0630aac3b2c09c72037cdeac9076",
          "linkedWithoutMetadata": "bd4c24fe6514787ffa1af28f8fe08df9cf2c0630aac3b2c09c72037cdeac9076"
        },
        "inherit": [],
        "libraries": [],
        "methods": [
          "caller()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.21"
      },
      "contracts/FirstDao.sol:FistDao": {
        "src": "contracts/FirstDao.sol:127",
        "version": {
          "withMetadata": "87594bf7d015e41aaf777bc0dc62e9e8a3685546fcfa065eb87291ef7f3f16f4",
          "withoutMetadata": "5bdb2538a3ba33172d93851875dfca20475ce01973348f896430788ab9d8314a",
          "linkedWithoutMetadata": "5bdb2538a3ba33172d93851875dfca20475ce01973348f896430788ab9d8314a"
        },
        "inherit": [
          "contracts/FirstDao.sol:Ownable",
          "contracts/FirstDao.sol:IERC20"
        ],
        "libraries": [
          "contracts/FirstDao.sol:SafeMath"
        ],
        "methods": [
          "(string,string)",
          "()",
          "initialize(address,address,address,address)",
          "transferEvent(address,address,uint256)",
          "feeState()",
          "getIsApproved(address)",
          "searchExcludedFromFeeAccounts(address)",
          "getDefaultBalance()",
          "insertIntoExcludedFromFeeAccounts(address[])",
          "deleteFromExcludedFromFeeAccounts(address[])",
          "claim(address,uint256)",
          "name()",
          "symbol()",
          "decimals()",
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "transferFrom(address,address,uint256)",
          "approve(address,uint256)",
          "allowance(address,address)",
          "increaseAllowance(address,uint256)",
          "decreaseAllowance(address,uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "FistDao",
            "src": "contracts/FirstDao.sol:159"
          },
          {
            "kind": "state-variable-assignment",
            "name": "_decimals",
            "src": "contracts/FirstDao.sol:132"
          },
          {
            "kind": "state-variable-assignment",
            "name": "_totalSupply",
            "src": "contracts/FirstDao.sol:133"
          },
          {
            "kind": "state-variable-assignment",
            "name": "_feeTax",
            "src": "contracts/FirstDao.sol:138"
          },
          {
            "kind": "state-variable-assignment",
            "name": "_feeMining",
            "src": "contracts/FirstDao.sol:139"
          },
          {
            "kind": "state-variable-assignment",
            "name": "_feeLiquidity",
            "src": "contracts/FirstDao.sol:140"
          },
          {
            "kind": "state-variable-assignment",
            "name": "_feeDivisor",
            "src": "contracts/FirstDao.sol:141"
          },
          {
            "kind": "state-variable-assignment",
            "name": "_removeAllFee",
            "src": "contracts/FirstDao.sol:143"
          },
          {
            "kind": "state-variable-assignment",
            "name": "_defaultBalance",
            "src": "contracts/FirstDao.sol:150"
          },
          {
            "kind": "state-variable-assignment",
            "name": "_defaultAmount",
            "src": "contracts/FirstDao.sol:151"
          },
          {
            "kind": "state-variable-assignment",
            "name": "_initialized111",
            "src": "contracts/FirstDao.sol:156"
          },
          {
            "kind": "state-variable-assignment",
            "name": "_reentry",
            "src": "contracts/FirstDao.sol:157"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Ownable",
              "src": "contracts/FirstDao.sol:58"
            },
            {
              "label": "_previousOwner",
              "offset": 0,
              "slot": "1",
              "type": "t_address",
              "contract": "Ownable",
              "src": "contracts/FirstDao.sol:59"
            },
            {
              "label": "_switchDate",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "Ownable",
              "src": "contracts/FirstDao.sol:60"
            },
            {
              "label": "_name",
              "offset": 0,
              "slot": "3",
              "type": "t_string_storage",
              "contract": "FistDao",
              "src": "contracts/FirstDao.sol:130"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "4",
              "type": "t_string_storage",
              "contract": "FistDao",
              "src": "contracts/FirstDao.sol:131"
            },
            {
              "label": "_decimals",
              "offset": 0,
              "slot": "5",
              "type": "t_uint8",
              "contract": "FistDao",
              "src": "contracts/FirstDao.sol:132"
            },
            {
              "label": "_totalSupply",
              "offset": 0,
              "slot": "6",
              "type": "t_uint256",
              "contract": "FistDao",
              "src": "contracts/FirstDao.sol:133"
            },
            {
              "label": "_balances",
              "offset": 0,
              "slot": "7",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "FistDao",
              "src": "contracts/FirstDao.sol:134"
            },
            {
              "label": "_allowances",
              "offset": 0,
              "slot": "8",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "FistDao",
              "src": "contracts/FirstDao.sol:135"
            },
            {
              "label": "_isApproved",
              "offset": 0,
              "slot": "9",
              "type": "t_mapping(t_address,t_bool)",
              "contract": "FistDao",
              "src": "contracts/FirstDao.sol:136"
            },
            {
              "label": "_feeTax",
              "offset": 0,
              "slot": "10",
              "type": "t_uint256",
              "contract": "FistDao",
              "src": "contracts/FirstDao.sol:138"
            },
            {
              "label": "_feeMining",
              "offset": 0,
              "slot": "11",
              "type": "t_uint256",
              "contract": "FistDao",
              "src": "contracts/FirstDao.sol:139"
            },
            {
              "label": "_feeLiquidity",
              "offset": 0,
              "slot": "12",
              "type": "t_uint256",
              "contract": "FistDao",
              "src": "contracts/FirstDao.sol:140"
            },
            {
              "label": "_feeDivisor",
              "offset": 0,
              "slot": "13",
              "type": "t_uint256",
              "contract": "FistDao",
              "src": "contracts/FirstDao.sol:141"
            },
            {
              "label": "_removeAllFee",
              "offset": 0,
              "slot": "14",
              "type": "t_bool",
              "contract": "FistDao",
              "src": "contracts/FirstDao.sol:143"
            },
            {
              "label": "_core",
              "offset": 1,
              "slot": "14",
              "type": "t_address",
              "contract": "FistDao",
              "src": "contracts/FirstDao.sol:145"
            },
            {
              "label": "_taxReceiver",
              "offset": 0,
              "slot": "15",
              "type": "t_address",
              "contract": "FistDao",
              "src": "contracts/FirstDao.sol:146"
            },
            {
              "label": "_miningPool",
              "offset": 0,
              "slot": "16",
              "type": "t_address",
              "contract": "FistDao",
              "src": "contracts/FirstDao.sol:147"
            },
            {
              "label": "_liquidityPool",
              "offset": 0,
              "slot": "17",
              "type": "t_address",
              "contract": "FistDao",
              "src": "contracts/FirstDao.sol:148"
            },
            {
              "label": "_defaultBalance",
              "offset": 0,
              "slot": "18",
              "type": "t_uint256",
              "contract": "FistDao",
              "src": "contracts/FirstDao.sol:150"
            },
            {
              "label": "_defaultAmount",
              "offset": 0,
              "slot": "19",
              "type": "t_uint256",
              "contract": "FistDao",
              "src": "contracts/FirstDao.sol:151"
            },
            {
              "label": "_isExcludedFromFee",
              "offset": 0,
              "slot": "20",
              "type": "t_mapping(t_address,t_bool)",
              "contract": "FistDao",
              "src": "contracts/FirstDao.sol:153"
            },
            {
              "label": "_excludedFromFeeAccounts",
              "offset": 0,
              "slot": "21",
              "type": "t_array(t_address)dyn_storage",
              "contract": "FistDao",
              "src": "contracts/FirstDao.sol:154"
            },
            {
              "label": "_initialized111",
              "offset": 0,
              "slot": "22",
              "type": "t_bool",
              "contract": "FistDao",
              "src": "contracts/FirstDao.sol:156"
            },
            {
              "label": "_reentry",
              "offset": 0,
              "slot": "23",
              "type": "t_uint256",
              "contract": "FistDao",
              "src": "contracts/FirstDao.sol:157"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_address)dyn_storage": {
              "label": "address[]",
              "numberOfBytes": "32"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint8": {
              "label": "uint8",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.21"
      },
      "contracts/FirstDao.sol:ICore": {
        "src": "contracts/FirstDao.sol:119",
        "inherit": [],
        "libraries": [],
        "methods": [
          "getPairAddress()",
          "airdrop()",
          "safety(address,address)",
          "start()",
          "end()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.21"
      },
      "contracts/FirstDao.sol:IERC20": {
        "src": "contracts/FirstDao.sol:8",
        "inherit": [],
        "libraries": [],
        "methods": [
          "name()",
          "symbol()",
          "decimals()",
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "transferFrom(address,address,uint256)",
          "approve(address,uint256)",
          "allowance(address,address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.21"
      },
      "contracts/FirstDao.sol:IFactory": {
        "src": "contracts/FirstDao.sol:91",
        "inherit": [],
        "libraries": [],
        "methods": [
          "createPair(address,address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.21"
      },
      "contracts/FirstDao.sol:IRouter01": {
        "src": "contracts/FirstDao.sol:95",
        "inherit": [],
        "libraries": [],
        "methods": [
          "factory()",
          "addLiquidity(address,address,uint256,uint256,uint256,uint256,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.21"
      },
      "contracts/FirstDao.sol:IRouter02": {
        "src": "contracts/FirstDao.sol:109",
        "inherit": [
          "contracts/FirstDao.sol:IRouter01"
        ],
        "libraries": [],
        "methods": [
          "swapExactTokensForTokensSupportingFeeOnTransferTokens(uint256,uint256,address[],address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.21"
      },
      "contracts/FirstDao.sol:Ownable": {
        "src": "contracts/FirstDao.sol:57",
        "inherit": [],
        "libraries": [],
        "methods": [
          "owner()",
          "switchDate()",
          "transferOwnership(uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Ownable",
            "src": "contracts/FirstDao.sol:63"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Ownable",
              "src": "contracts/FirstDao.sol:58"
            },
            {
              "label": "_previousOwner",
              "offset": 0,
              "slot": "1",
              "type": "t_address",
              "contract": "Ownable",
              "src": "contracts/FirstDao.sol:59"
            },
            {
              "label": "_switchDate",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "Ownable",
              "src": "contracts/FirstDao.sol:60"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.21"
      },
      "contracts/FirstDao.sol:SafeMath": {
        "src": "contracts/FirstDao.sol:22",
        "version": {
          "withMetadata": "95eb3df1bd62a62b1bf87150f7314053125cc709ed6eb26f9bf2a30d8fc55e32",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.21"
      },
      "contracts/IFiles.sol:Address": {
        "src": "contracts/IFiles.sol:147",
        "version": {
          "withMetadata": "73f3d745b82ff92d492794f39ddc131795315255895e196d918dc1260c813488",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.21"
      },
      "contracts/IFiles.sol:Context": {
        "src": "contracts/IFiles.sol:135",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.21"
      },
      "contracts/IFiles.sol:IBEP20": {
        "src": "contracts/IFiles.sol:9",
        "inherit": [],
        "libraries": [],
        "methods": [
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.21"
      },
      "contracts/IFiles.sol:IPancakeFactory": {
        "src": "contracts/IFiles.sol:327",
        "inherit": [],
        "libraries": [],
        "methods": [
          "feeTo()",
          "feeToSetter()",
          "getPair(address,address)",
          "allPairs(uint256)",
          "allPairsLength()",
          "createPair(address,address)",
          "setFeeTo(address)",
          "setFeeToSetter(address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.21"
      },
      "contracts/IFiles.sol:IPancakePair": {
        "src": "contracts/IFiles.sol:357",
        "inherit": [],
        "libraries": [],
        "methods": [
          "name()",
          "symbol()",
          "decimals()",
          "totalSupply()",
          "balanceOf(address)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transfer(address,uint256)",
          "transferFrom(address,address,uint256)",
          "DOMAIN_SEPARATOR()",
          "PERMIT_TYPEHASH()",
          "nonces(address)",
          "permit(address,address,uint256,uint256,uint8,bytes32,bytes32)",
          "MINIMUM_LIQUIDITY()",
          "factory()",
          "token0()",
          "token1()",
          "getReserves()",
          "price0CumulativeLast()",
          "price1CumulativeLast()",
          "kLast()",
          "mint(address)",
          "burn(address)",
          "swap(uint256,uint256,address,bytes)",
          "skim(address)",
          "sync()",
          "initialize(address,address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.21"
      },
      "contracts/IFiles.sol:IPancakeRouter01": {
        "src": "contracts/IFiles.sol:466",
        "inherit": [],
        "libraries": [],
        "methods": [
          "factory()",
          "WETH()",
          "addLiquidity(address,address,uint256,uint256,uint256,uint256,address,uint256)",
          "addLiquidityETH(address,uint256,uint256,uint256,address,uint256)",
          "removeLiquidity(address,address,uint256,uint256,uint256,address,uint256)",
          "removeLiquidityETH(address,uint256,uint256,uint256,address,uint256)",
          "removeLiquidityWithPermit(address,address,uint256,uint256,uint256,address,uint256,bool,uint8,bytes32,bytes32)",
          "removeLiquidityETHWithPermit(address,uint256,uint256,uint256,address,uint256,bool,uint8,bytes32,bytes32)",
          "swapExactTokensForTokens(uint256,uint256,address[],address,uint256)",
          "swapTokensForExactTokens(uint256,uint256,address[],address,uint256)",
          "swapExactETHForTokens(uint256,address[],address,uint256)",
          "swapTokensForExactETH(uint256,uint256,address[],address,uint256)",
          "swapExactTokensForETH(uint256,uint256,address[],address,uint256)",
          "swapETHForExactTokens(uint256,address[],address,uint256)",
          "quote(uint256,uint256,uint256)",
          "getAmountOut(uint256,uint256,uint256)",
          "getAmountIn(uint256,uint256,uint256)",
          "getAmountsOut(uint256,address[])",
          "getAmountsIn(uint256,address[])"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.21"
      },
      "contracts/IFiles.sol:IPancakeRouter02": {
        "src": "contracts/IFiles.sol:626",
        "inherit": [
          "contracts/IFiles.sol:IPancakeRouter01"
        ],
        "libraries": [],
        "methods": [
          "removeLiquidityETHSupportingFeeOnTransferTokens(address,uint256,uint256,uint256,address,uint256)",
          "removeLiquidityETHWithPermitSupportingFeeOnTransferTokens(address,uint256,uint256,uint256,address,uint256,bool,uint8,bytes32,bytes32)",
          "swapExactTokensForTokensSupportingFeeOnTransferTokens(uint256,uint256,address[],address,uint256)",
          "swapExactETHForTokensSupportingFeeOnTransferTokens(uint256,address[],address,uint256)",
          "swapExactTokensForETHSupportingFeeOnTransferTokens(uint256,uint256,address[],address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.21"
      },
      "contracts/IFiles.sol:IWBNB": {
        "src": "contracts/IFiles.sol:38",
        "inherit": [],
        "libraries": [],
        "methods": [
          "name()",
          "symbol()",
          "decimals()",
          "balanceOf(address)",
          "allowance(address,address)",
          "()",
          "deposit()",
          "withdraw(uint256)",
          "totalSupply()",
          "approve(address,uint256)",
          "transfer(address,uint256)",
          "transferFrom(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.21"
      },
      "contracts/IFiles.sol:Initializable": {
        "src": "contracts/IFiles.sol:249",
        "version": {
          "withMetadata": "ba793f874980ba8826e0f77e588821b7a373c942b97ebcd7e4e42f378e00e824",
          "withoutMetadata": "ac0db523ddc3e330f735df7b3b0b24460531c71290a891170e840f8f67d5ff6b",
          "linkedWithoutMetadata": "ac0db523ddc3e330f735df7b3b0b24460531c71290a891170e840f8f67d5ff6b"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "contracts/IFiles.sol:251"
            },
            {
              "label": "initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "contracts/IFiles.sol:252"
            },
            {
              "label": "______gap",
              "offset": 0,
              "slot": "1",
              "type": "t_array(t_uint256)50_storage",
              "contract": "Initializable",
              "src": "contracts/IFiles.sol:283"
            }
          ],
          "types": {
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]",
              "numberOfBytes": "1600"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.21"
      },
      "contracts/IFiles.sol:Ownable": {
        "src": "contracts/IFiles.sol:286",
        "version": {
          "withMetadata": "9b6e83ec071c913ea8078938bf6c8e47f6ce697f181f2ebf31dc4937807eb386",
          "withoutMetadata": "a3dd09084d5d3377afaa5e637593b425fb1172db63a48c2f62428555638775f8",
          "linkedWithoutMetadata": "a3dd09084d5d3377afaa5e637593b425fb1172db63a48c2f62428555638775f8"
        },
        "inherit": [
          "contracts/IFiles.sol:Initializable",
          "contracts/IFiles.sol:Context"
        ],
        "libraries": [],
        "methods": [
          "()",
          "initOwner(address)",
          "owner()",
          "renounceOwnership()",
          "transferOwnership(address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "contracts/IFiles.sol:251"
            },
            {
              "label": "initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "contracts/IFiles.sol:252"
            },
            {
              "label": "______gap",
              "offset": 0,
              "slot": "1",
              "type": "t_array(t_uint256)50_storage",
              "contract": "Initializable",
              "src": "contracts/IFiles.sol:283"
            },
            {
              "label": "_owner",
              "offset": 0,
              "slot": "51",
              "type": "t_address",
              "contract": "Ownable",
              "src": "contracts/IFiles.sol:287"
            },
            {
              "label": "_previousOwner",
              "offset": 0,
              "slot": "52",
              "type": "t_address",
              "contract": "Ownable",
              "src": "contracts/IFiles.sol:288"
            },
            {
              "label": "_lockTime",
              "offset": 0,
              "slot": "53",
              "type": "t_uint256",
              "contract": "Ownable",
              "src": "contracts/IFiles.sol:289"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]",
              "numberOfBytes": "1600"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.21"
      },
      "contracts/IFiles.sol:SafeMath": {
        "src": "contracts/IFiles.sol:68",
        "version": {
          "withMetadata": "6a5db877229c78c84b33e85a297bea1121c6a6195aa310f30cbe69888293c5ae",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.21"
      },
      "contracts/Logic.sol:Logic": {
        "src": "contracts/Logic.sol:9",
        "version": {
          "withMetadata": "087c86b163578853fb1cba09b22843df8f815c95bf2568200ddd8e1dbf167fea",
          "withoutMetadata": "a9feffbc7087e9529577fb0b368171b85b94d25918f43b5d410eb0f186274034",
          "linkedWithoutMetadata": "a9feffbc7087e9529577fb0b368171b85b94d25918f43b5d410eb0f186274034"
        },
        "inherit": [],
        "libraries": [],
        "methods": [
          "increment()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "state-variable-assignment",
            "name": "x",
            "src": "contracts/Logic.sol:13"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "implementation",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Logic",
              "src": "contracts/Logic.sol:9"
            },
            {
              "label": "x",
              "offset": 0,
              "slot": "1",
              "type": "t_uint256",
              "contract": "Logic",
              "src": "contracts/Logic.sol:13"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.21"
      },
      "contracts/Presale.sol:IGoldToken": {
        "src": "contracts/Presale.sol:8",
        "inherit": [],
        "libraries": [],
        "methods": [
          "mint(address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.21"
      },
      "contracts/Presale.sol:Presale": {
        "src": "contracts/Presale.sol:12",
        "version": {
          "withMetadata": "bc57b99abc2a8f27ec8bab17f5b79dc0d9a79d349f87d21f01c617628ebf54d0",
          "withoutMetadata": "e9fb862afb253e8537a819a46fb523127ad8cb97942410f41e470a6df9e0abc1",
          "linkedWithoutMetadata": "e9fb862afb253e8537a819a46fb523127ad8cb97942410f41e470a6df9e0abc1"
        },
        "inherit": [
          "@openzeppelin/contracts/security/ReentrancyGuard.sol:ReentrancyGuard",
          "@openzeppelin/contracts/access/Ownable.sol:Ownable",
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [],
        "methods": [
          "(address,address,address,uint256)",
          "createPreSale((uint256,uint256,uint256))",
          "sale()",
          "getCanIdoAmount(address)",
          "bindReffer(address)",
          "userBalance(address)",
          "userRewardBalance(address)",
          "userWithdraw()",
          "teamWithdraw(address)",
          "setUserWithdrawTime(uint256)",
          "setInviteMin(uint256)",
          "setPerMaxBuyUsdt(uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Presale",
            "src": "contracts/Presale.sol:46"
          },
          {
            "kind": "state-variable-assignment",
            "name": "perMaxBuyUsdt",
            "src": "contracts/Presale.sol:15"
          },
          {
            "kind": "state-variable-assignment",
            "name": "inviteMin",
            "src": "contracts/Presale.sol:31"
          },
          {
            "kind": "state-variable-assignment",
            "name": "maxSale",
            "src": "contracts/Presale.sol:33"
          },
          {
            "kind": "state-variable-assignment",
            "name": "rewardLevel",
            "src": "contracts/Presale.sol:36"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Ownable",
              "src": "@openzeppelin/contracts/access/Ownable.sol:21"
            },
            {
              "label": "_status",
              "offset": 0,
              "slot": "1",
              "type": "t_uint256",
              "contract": "ReentrancyGuard",
              "src": "@openzeppelin/contracts/security/ReentrancyGuard.sol:37"
            },
            {
              "label": "userWithdrawTime",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "Presale",
              "src": "contracts/Presale.sol:13"
            },
            {
              "label": "perMaxBuyUsdt",
              "offset": 0,
              "slot": "3",
              "type": "t_uint256",
              "contract": "Presale",
              "src": "contracts/Presale.sol:15"
            },
            {
              "label": "teamAddress",
              "offset": 0,
              "slot": "4",
              "type": "t_address",
              "contract": "Presale",
              "src": "contracts/Presale.sol:16"
            },
            {
              "label": "saleToken",
              "offset": 0,
              "slot": "5",
              "type": "t_address",
              "contract": "Presale",
              "src": "contracts/Presale.sol:17"
            },
            {
              "label": "usdtToken",
              "offset": 0,
              "slot": "6",
              "type": "t_address",
              "contract": "Presale",
              "src": "contracts/Presale.sol:18"
            },
            {
              "label": "goldTokenAddress",
              "offset": 0,
              "slot": "7",
              "type": "t_address",
              "contract": "Presale",
              "src": "contracts/Presale.sol:19"
            },
            {
              "label": "balances",
              "offset": 0,
              "slot": "8",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "Presale",
              "src": "contracts/Presale.sol:20"
            },
            {
              "label": "userBuyTotalUsdt",
              "offset": 0,
              "slot": "9",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "Presale",
              "src": "contracts/Presale.sol:21"
            },
            {
              "label": "rewardBalances",
              "offset": 0,
              "slot": "10",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "Presale",
              "src": "contracts/Presale.sol:22"
            },
            {
              "label": "reffers",
              "offset": 0,
              "slot": "11",
              "type": "t_mapping(t_address,t_address)",
              "contract": "Presale",
              "src": "contracts/Presale.sol:23"
            },
            {
              "label": "refferNumber",
              "offset": 0,
              "slot": "12",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "Presale",
              "src": "contracts/Presale.sol:24"
            },
            {
              "label": "teamRefferNumber",
              "offset": 0,
              "slot": "13",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "Presale",
              "src": "contracts/Presale.sol:25"
            },
            {
              "label": "firstIdo",
              "offset": 0,
              "slot": "14",
              "type": "t_mapping(t_address,t_bool)",
              "contract": "Presale",
              "src": "contracts/Presale.sol:26"
            },
            {
              "label": "totalIdoUSDT",
              "offset": 0,
              "slot": "15",
              "type": "t_uint256",
              "contract": "Presale",
              "src": "contracts/Presale.sol:27"
            },
            {
              "label": "totalIdoUser",
              "offset": 0,
              "slot": "16",
              "type": "t_uint256",
              "contract": "Presale",
              "src": "contracts/Presale.sol:28"
            },
            {
              "label": "totalSale",
              "offset": 0,
              "slot": "17",
              "type": "t_uint256",
              "contract": "Presale",
              "src": "contracts/Presale.sol:29"
            },
            {
              "label": "inviteMin",
              "offset": 0,
              "slot": "18",
              "type": "t_uint256",
              "contract": "Presale",
              "src": "contracts/Presale.sol:31"
            },
            {
              "label": "maxSale",
              "offset": 0,
              "slot": "19",
              "type": "t_uint256",
              "contract": "Presale",
              "src": "contracts/Presale.sol:33"
            },
            {
              "label": "isCloseSale",
              "offset": 0,
              "slot": "20",
              "type": "t_bool",
              "contract": "Presale",
              "src": "contracts/Presale.sol:34"
            },
            {
              "label": "rewardLevel",
              "offset": 0,
              "slot": "21",
              "type": "t_array(t_uint256)dyn_storage",
              "contract": "Presale",
              "src": "contracts/Presale.sol:36"
            },
            {
              "label": "presaleInfo",
              "offset": 0,
              "slot": "22",
              "type": "t_struct(PresaleInfo)5966_storage",
              "contract": "Presale",
              "src": "contracts/Presale.sol:44"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_uint256)dyn_storage": {
              "label": "uint256[]",
              "numberOfBytes": "32"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_mapping(t_address,t_address)": {
              "label": "mapping(address => address)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_struct(PresaleInfo)5966_storage": {
              "label": "struct Presale.PresaleInfo",
              "members": [
                {
                  "label": "startTime",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "endTime",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "price",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "2"
                }
              ],
              "numberOfBytes": "96"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.21"
      },
      "contracts/Proxy.sol:Proxy": {
        "src": "contracts/Proxy.sol:10",
        "version": {
          "withMetadata": "d4993e31bee17cb6bd7e4ba71f36becd25d3c2dd2ba398486dd4b854da916c62",
          "withoutMetadata": "bdd247d13ba3c9c8479f7c876818cbb29ebc3fac24c9554982a6818407a96483",
          "linkedWithoutMetadata": "bdd247d13ba3c9c8479f7c876818cbb29ebc3fac24c9554982a6818407a96483"
        },
        "inherit": [],
        "libraries": [],
        "methods": [
          "()",
          "()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "state-variable-assignment",
            "name": "implementation",
            "src": "contracts/Proxy.sol:14"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "implementation",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Proxy",
              "src": "contracts/Proxy.sol:14"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.21"
      },
      "contracts/ReentrancyGuard.sol:ReentrancyGuard": {
        "src": "contracts/ReentrancyGuard.sol:5",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ReentrancyGuard",
            "src": "contracts/ReentrancyGuard.sol:12"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_status",
              "offset": 0,
              "slot": "0",
              "type": "t_uint256",
              "contract": "ReentrancyGuard",
              "src": "contracts/ReentrancyGuard.sol:10"
            }
          ],
          "types": {
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.21"
      },
      "contracts/RichHusky.sol:Checker": {
        "src": "contracts/RichHusky.sol:520",
        "version": {
          "withMetadata": "17e1cf10fdffcda321c1a1f59d2b06178394724b4d8ad9b035a718122fed8a52",
          "withoutMetadata": "0faf6ca500781d04501ba7e4cf9138e35957321419c6ca29798480c22b3cc5cd",
          "linkedWithoutMetadata": "0faf6ca500781d04501ba7e4cf9138e35957321419c6ca29798480c22b3cc5cd"
        },
        "inherit": [],
        "libraries": [],
        "methods": [
          "isValid(address,address,address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.21"
      },
      "contracts/RichHusky.sol:Context": {
        "src": "contracts/RichHusky.sol:27",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.21"
      },
      "contracts/RichHusky.sol:ERC20": {
        "src": "contracts/RichHusky.sol:162",
        "version": {
          "withMetadata": "e092e43bc9c3243b7138ce015fa92d358fa66a764079145cfe1339f160fd055e",
          "withoutMetadata": "e248eda4094a79267c1d78eb85fb3a082e2ba4d153192b2644d6357dbed158f3",
          "linkedWithoutMetadata": "e248eda4094a79267c1d78eb85fb3a082e2ba4d153192b2644d6357dbed158f3"
        },
        "inherit": [
          "contracts/RichHusky.sol:IERC20Metadata",
          "contracts/RichHusky.sol:IERC20",
          "contracts/RichHusky.sol:Context"
        ],
        "libraries": [],
        "methods": [
          "(string,string)",
          "name()",
          "symbol()",
          "decimals()",
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)",
          "increaseAllowance(address,uint256)",
          "decreaseAllowance(address,uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ERC20",
            "src": "contracts/RichHusky.sol:181"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_balances",
              "offset": 0,
              "slot": "0",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC20",
              "src": "contracts/RichHusky.sol:163"
            },
            {
              "label": "_allowances",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "ERC20",
              "src": "contracts/RichHusky.sol:165"
            },
            {
              "label": "_totalSupply",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "ERC20",
              "src": "contracts/RichHusky.sol:167"
            },
            {
              "label": "_name",
              "offset": 0,
              "slot": "3",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "contracts/RichHusky.sol:169"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "4",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "contracts/RichHusky.sol:170"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.21"
      },
      "contracts/RichHusky.sol:IERC20": {
        "src": "contracts/RichHusky.sol:40",
        "inherit": [],
        "libraries": [],
        "methods": [
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.21"
      },
      "contracts/RichHusky.sol:IERC20Metadata": {
        "src": "contracts/RichHusky.sol:120",
        "inherit": [
          "contracts/RichHusky.sol:IERC20"
        ],
        "libraries": [],
        "methods": [
          "name()",
          "symbol()",
          "decimals()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.21"
      },
      "contracts/RichHusky.sol:IFactory": {
        "src": "contracts/RichHusky.sol:535",
        "inherit": [],
        "libraries": [],
        "methods": [
          "createPair(address,address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.21"
      },
      "contracts/RichHusky.sol:IGasToken": {
        "src": "contracts/RichHusky.sol:539",
        "inherit": [],
        "libraries": [],
        "methods": [
          "free(uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.21"
      },
      "contracts/RichHusky.sol:RichHusky": {
        "src": "contracts/RichHusky.sol:543",
        "version": {
          "withMetadata": "ce802161ba5ffecece3a7488fb3a07a35d8f78edf3674187d3eb27cc30777604",
          "withoutMetadata": "7c4ce62a347a52dc2685dbb41f6d968bb51e7d6abb10665abf0c7d7699da0d36",
          "linkedWithoutMetadata": "7c4ce62a347a52dc2685dbb41f6d968bb51e7d6abb10665abf0c7d7699da0d36"
        },
        "inherit": [
          "contracts/RichHusky.sol:ERC20",
          "contracts/RichHusky.sol:IERC20Metadata",
          "contracts/RichHusky.sol:IERC20",
          "contracts/RichHusky.sol:Context"
        ],
        "libraries": [
          "contracts/RichHusky.sol:Checker"
        ],
        "methods": [
          "(address)",
          "mint(address,uint256)",
          "updateAirdropAmount(uint256)",
          "withdrawFee(address,uint256)",
          "airdrop(address[],uint256)",
          "addBetaUsers(address[])",
          "removeBetaUsers(address[])",
          "multiCall(address[],bytes[])"
        ],
        "linkReferences": [
          {
            "src": "contracts/RichHusky.sol",
            "name": "Checker",
            "length": 20,
            "start": 5176,
            "placeholder": "__$1cb883ae52507a2d00adae80c79f632cb4$__"
          }
        ],
        "errors": [
          {
            "kind": "constructor",
            "contract": "RichHusky",
            "src": "contracts/RichHusky.sol:554"
          },
          {
            "kind": "state-variable-immutable",
            "name": "pancakeFactory",
            "src": "contracts/RichHusky.sol:549"
          },
          {
            "kind": "state-variable-immutable",
            "name": "WBNB",
            "src": "contracts/RichHusky.sol:550"
          },
          {
            "kind": "state-variable-immutable",
            "name": "GasToken",
            "src": "contracts/RichHusky.sol:552"
          },
          {
            "kind": "external-library-linking",
            "name": "Checker",
            "src": "contracts/RichHusky.sol"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_balances",
              "offset": 0,
              "slot": "0",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC20",
              "src": "contracts/RichHusky.sol:163"
            },
            {
              "label": "_allowances",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "ERC20",
              "src": "contracts/RichHusky.sol:165"
            },
            {
              "label": "_totalSupply",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "ERC20",
              "src": "contracts/RichHusky.sol:167"
            },
            {
              "label": "_name",
              "offset": 0,
              "slot": "3",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "contracts/RichHusky.sol:169"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "4",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "contracts/RichHusky.sol:170"
            },
            {
              "label": "dev",
              "offset": 0,
              "slot": "5",
              "type": "t_address",
              "contract": "RichHusky",
              "src": "contracts/RichHusky.sol:544"
            },
            {
              "label": "airdropAmount",
              "offset": 0,
              "slot": "6",
              "type": "t_uint256",
              "contract": "RichHusky",
              "src": "contracts/RichHusky.sol:545"
            },
            {
              "label": "betaUsers",
              "offset": 0,
              "slot": "7",
              "type": "t_mapping(t_address,t_bool)",
              "contract": "RichHusky",
              "src": "contracts/RichHusky.sol:546"
            },
            {
              "label": "pair",
              "offset": 0,
              "slot": "8",
              "type": "t_address",
              "contract": "RichHusky",
              "src": "contracts/RichHusky.sol:547"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.21"
      },
      "contracts/Staking.sol:IRejuvenate": {
        "src": "contracts/Staking.sol:9",
        "inherit": [],
        "libraries": [],
        "methods": [
          "mint(address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.21"
      },
      "contracts/Staking.sol:Staking": {
        "src": "contracts/Staking.sol:13",
        "version": {
          "withMetadata": "cbae12e54b6cd6515b1978bc00f1ee9d91b7cbf2c4865829fed7143af6b6e41d",
          "withoutMetadata": "b55bc576902d02f529046b57ae1f0ea06895e64c7e71fda859eaed91e730fbf4",
          "linkedWithoutMetadata": "b55bc576902d02f529046b57ae1f0ea06895e64c7e71fda859eaed91e730fbf4"
        },
        "inherit": [
          "@openzeppelin/contracts/security/ReentrancyGuard.sol:ReentrancyGuard",
          "@openzeppelin/contracts/access/Ownable.sol:Ownable",
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [],
        "methods": [
          "()",
          "changeRewardsPerBlock(uint256)",
          "rewardPerToken()",
          "earned(address)",
          "stake(uint256)",
          "unstake(uint256)",
          "claimRewards()",
          "pause()",
          "unpause()",
          "inCaseTokensGetStuck(address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Staking",
            "src": "contracts/Staking.sol:33"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Ownable",
              "src": "@openzeppelin/contracts/access/Ownable.sol:21"
            },
            {
              "label": "_status",
              "offset": 0,
              "slot": "1",
              "type": "t_uint256",
              "contract": "ReentrancyGuard",
              "src": "@openzeppelin/contracts/security/ReentrancyGuard.sol:37"
            },
            {
              "label": "paused",
              "offset": 0,
              "slot": "2",
              "type": "t_bool",
              "contract": "Staking",
              "src": "contracts/Staking.sol:14"
            },
            {
              "label": "_treasury",
              "offset": 1,
              "slot": "2",
              "type": "t_address",
              "contract": "Staking",
              "src": "contracts/Staking.sol:15"
            },
            {
              "label": "token",
              "offset": 0,
              "slot": "3",
              "type": "t_address",
              "contract": "Staking",
              "src": "contracts/Staking.sol:17"
            },
            {
              "label": "rewardRate",
              "offset": 0,
              "slot": "4",
              "type": "t_uint256",
              "contract": "Staking",
              "src": "contracts/Staking.sol:19"
            },
            {
              "label": "_lastUpdateBlock",
              "offset": 0,
              "slot": "5",
              "type": "t_uint256",
              "contract": "Staking",
              "src": "contracts/Staking.sol:20"
            },
            {
              "label": "_rewardsPerToken",
              "offset": 0,
              "slot": "6",
              "type": "t_uint256",
              "contract": "Staking",
              "src": "contracts/Staking.sol:21"
            },
            {
              "label": "data",
              "offset": 0,
              "slot": "7",
              "type": "t_array(t_struct(StakingData)8167_storage)dyn_storage",
              "contract": "Staking",
              "src": "contracts/Staking.sol:22"
            },
            {
              "label": "_userRewardsPerToken",
              "offset": 0,
              "slot": "8",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "Staking",
              "src": "contracts/Staking.sol:24"
            },
            {
              "label": "_rewards",
              "offset": 0,
              "slot": "9",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "Staking",
              "src": "contracts/Staking.sol:25"
            },
            {
              "label": "totalStaked",
              "offset": 0,
              "slot": "10",
              "type": "t_uint256",
              "contract": "Staking",
              "src": "contracts/Staking.sol:27"
            },
            {
              "label": "_balances",
              "offset": 0,
              "slot": "11",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "Staking",
              "src": "contracts/Staking.sol:28"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_struct(StakingData)8167_storage)dyn_storage": {
              "label": "struct StakingData[]",
              "numberOfBytes": "32"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_struct(StakingData)8167_storage": {
              "label": "struct StakingData",
              "members": [
                {
                  "label": "block",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "staked",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "1"
                }
              ],
              "numberOfBytes": "64"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.21"
      },
      "contracts/Utils.sol:PancakeLibrary": {
        "src": "contracts/Utils.sol:219",
        "version": {
          "withMetadata": "668337a75717822cd6d73bbd1c50526e84e4af10cd45125b1756676395a2f30c",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [
          "contracts/IFiles.sol:SafeMath"
        ],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.21"
      },
      "contracts/Utils.sol:Utils": {
        "src": "contracts/Utils.sol:6",
        "version": {
          "withMetadata": "a5775bd7ff330a5dfa7ddaef645bcc8fbccdcd3c38fbc9fc1755e3e3a9a09d47",
          "withoutMetadata": "8ca6da6b824cadf2e1f9c600b5f1381080c8b8d75dddf5423f35e25222daaeda",
          "linkedWithoutMetadata": "8ca6da6b824cadf2e1f9c600b5f1381080c8b8d75dddf5423f35e25222daaeda"
        },
        "inherit": [],
        "libraries": [
          "contracts/IFiles.sol:SafeMath"
        ],
        "methods": [
          "calculateBNBReward(uint256,uint256,uint256,uint256)",
          "calculateTopUpClaim(uint256,uint256,uint256,uint256)",
          "swapTokensForEth(address,uint256)",
          "swapETHForTokens(address,address,uint256)",
          "swapTokensForTokens(address,address,uint256)",
          "getAmountsout(uint256,address)",
          "addLiquidity(address,address,uint256,uint256)",
          "getAntiFlipTaxNo(uint256)",
          "calcReward(uint256,uint256,uint256,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.21"
      }
    },
    {
      "contracts/Token.sol:Token": {
        "src": "contracts/Token.sol:7",
        "version": {
          "withMetadata": "744df77cbe4cdc9429af588a9e06c7f67396a237fb55ebc17b86ec623503a94c",
          "withoutMetadata": "f5ca6d04b25ca02ba09827a28ce8e127c0f191b8b3deb669dfc4002108de7333",
          "linkedWithoutMetadata": "f5ca6d04b25ca02ba09827a28ce8e127c0f191b8b3deb669dfc4002108de7333"
        },
        "inherit": [],
        "libraries": [],
        "methods": [
          "()",
          "transfer(address,uint256)",
          "balanceOf(address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Token",
            "src": "contracts/Token.sol:27"
          },
          {
            "kind": "state-variable-assignment",
            "name": "name",
            "src": "contracts/Token.sol:10"
          },
          {
            "kind": "state-variable-assignment",
            "name": "symbol",
            "src": "contracts/Token.sol:11"
          },
          {
            "kind": "state-variable-assignment",
            "name": "totalSupply",
            "src": "contracts/Token.sol:14"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "name",
              "offset": 0,
              "slot": "0",
              "type": "t_string_storage",
              "contract": "Token",
              "src": "contracts/Token.sol:10"
            },
            {
              "label": "symbol",
              "offset": 0,
              "slot": "1",
              "type": "t_string_storage",
              "contract": "Token",
              "src": "contracts/Token.sol:11"
            },
            {
              "label": "totalSupply",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "Token",
              "src": "contracts/Token.sol:14"
            },
            {
              "label": "owner",
              "offset": 0,
              "slot": "3",
              "type": "t_address",
              "contract": "Token",
              "src": "contracts/Token.sol:17"
            },
            {
              "label": "balances",
              "offset": 0,
              "slot": "4",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "Token",
              "src": "contracts/Token.sol:20"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.7.0"
      }
    },
    {
      "@openzeppelin/contracts/access/Ownable.sol:Ownable": {
        "src": "@openzeppelin/contracts/access/Ownable.sol:20",
        "inherit": [
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [],
        "methods": [
          "owner()",
          "renounceOwnership()",
          "transferOwnership(address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Ownable",
            "src": "@openzeppelin/contracts/access/Ownable.sol:28"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Ownable",
              "src": "@openzeppelin/contracts/access/Ownable.sol:21"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.9"
      },
      "@openzeppelin/contracts/security/ReentrancyGuard.sol:ReentrancyGuard": {
        "src": "@openzeppelin/contracts/security/ReentrancyGuard.sol:22",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ReentrancyGuard",
            "src": "@openzeppelin/contracts/security/ReentrancyGuard.sol:39"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_status",
              "offset": 0,
              "slot": "0",
              "type": "t_uint256",
              "contract": "ReentrancyGuard",
              "src": "@openzeppelin/contracts/security/ReentrancyGuard.sol:37"
            }
          ],
          "types": {
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.9"
      },
      "@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20": {
        "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:38",
        "version": {
          "withMetadata": "72234dca84f09a64f91233def3eb29d3ee265e24b0c1e0aad7974a1a19de46fc",
          "withoutMetadata": "4d25d45e78727bcafc703bbb4907285a61f036774fab03605769f9bf1ded7566",
          "linkedWithoutMetadata": "4d25d45e78727bcafc703bbb4907285a61f036774fab03605769f9bf1ded7566"
        },
        "inherit": [
          "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol:IERC20Metadata",
          "@openzeppelin/contracts/token/ERC20/IERC20.sol:IERC20",
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [],
        "methods": [
          "(string,string)",
          "name()",
          "symbol()",
          "decimals()",
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)",
          "increaseAllowance(address,uint256)",
          "decreaseAllowance(address,uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ERC20",
            "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:54"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_balances",
              "offset": 0,
              "slot": "0",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:39"
            },
            {
              "label": "_allowances",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:41"
            },
            {
              "label": "_totalSupply",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:43"
            },
            {
              "label": "_name",
              "offset": 0,
              "slot": "3",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:45"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "4",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:46"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.9"
      },
      "@openzeppelin/contracts/token/ERC20/IERC20.sol:IERC20": {
        "src": "@openzeppelin/contracts/token/ERC20/IERC20.sol:9",
        "inherit": [],
        "libraries": [],
        "methods": [
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.9"
      },
      "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol:IERC20Metadata": {
        "src": "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol:13",
        "inherit": [
          "@openzeppelin/contracts/token/ERC20/IERC20.sol:IERC20"
        ],
        "libraries": [],
        "methods": [
          "name()",
          "symbol()",
          "decimals()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.9"
      },
      "@openzeppelin/contracts/token/ERC20/extensions/IERC20Permit.sol:IERC20Permit": {
        "src": "@openzeppelin/contracts/token/ERC20/extensions/IERC20Permit.sol:42",
        "inherit": [],
        "libraries": [],
        "methods": [
          "permit(address,address,uint256,uint256,uint8,bytes32,bytes32)",
          "nonces(address)",
          "DOMAIN_SEPARATOR()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.9"
      },
      "@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol:SafeERC20": {
        "src": "@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol:19",
        "version": {
          "withMetadata": "130b07384f70851fad1d3df7bb26772330599e3202e7ccd42eb1acc9506bbd2d",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [
          "@openzeppelin/contracts/utils/Address.sol:Address"
        ],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.9"
      },
      "@openzeppelin/contracts/utils/Address.sol:Address": {
        "src": "@openzeppelin/contracts/utils/Address.sol:9",
        "version": {
          "withMetadata": "41e77df3189979d034e0b96f29e1d3a829cc73226a0344948be05ad27f8d6200",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [
          {
            "kind": "delegatecall",
            "src": "@openzeppelin/contracts/utils/Address.sol:185"
          },
          {
            "kind": "delegatecall",
            "src": "@openzeppelin/contracts/utils/Address.sol:185"
          }
        ],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.9"
      },
      "@openzeppelin/contracts/utils/Context.sol:Context": {
        "src": "@openzeppelin/contracts/utils/Context.sol:16",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.9"
      },
      "@openzeppelin/contracts/utils/math/Math.sol:Math": {
        "src": "@openzeppelin/contracts/utils/math/Math.sol:9",
        "version": {
          "withMetadata": "ef1a932450af8225367bdb345a07fc69ee3f2408bca2646848376f2d0ee47194",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.9"
      },
      "@openzeppelin/contracts/utils/math/SafeMath.sol:SafeMath": {
        "src": "@openzeppelin/contracts/utils/math/SafeMath.sol:16",
        "version": {
          "withMetadata": "847c83cea6453741c54ac075161c36563cfacf85030ddf9d472aa15da44c7435",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.9"
      },
      "contracts/linkcode.sol:RecruitCoinTest": {
        "src": "contracts/linkcode.sol:14",
        "version": {
          "withMetadata": "266c99ee9908530067ed316651590869bb8f89241f5da83e1d989eb140912a03",
          "withoutMetadata": "e3bd94c0e4102cacecaf8c5e843db89aa036292f722b059fe5fc43072701d859",
          "linkedWithoutMetadata": "e3bd94c0e4102cacecaf8c5e843db89aa036292f722b059fe5fc43072701d859"
        },
        "inherit": [
          "@openzeppelin/contracts/security/ReentrancyGuard.sol:ReentrancyGuard",
          "@openzeppelin/contracts/access/Ownable.sol:Ownable",
          "@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20",
          "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol:IERC20Metadata",
          "@openzeppelin/contracts/token/ERC20/IERC20.sol:IERC20",
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [
          "@openzeppelin/contracts/utils/math/SafeMath.sol:SafeMath",
          "@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol:SafeERC20"
        ],
        "methods": [
          "()",
          "deposit(uint256,uint8)",
          "revoke(bytes32)",
          "claim(bytes32,uint256)",
          "earlyMint(address[],uint256[])",
          "mint(address[],uint256[])",
          "setBonus(uint256[4])",
          "setDates(uint256[4])",
          "setPaymentTokens(contract IERC20[])",
          "setPrices(uint256[2])",
          "withdrawTokens(uint8,uint256)",
          "computeNextVestingScheduleIdForHolder(address)",
          "getVestingScheduleByAddressAndIndex(address,uint256)",
          "getVestingSchedule(bytes32)",
          "computeVestingScheduleIdForAddressAndIndex(address,uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "RecruitCoinTest",
            "src": "contracts/linkcode.sol:97"
          },
          {
            "kind": "state-variable-assignment",
            "name": "supplies",
            "src": "contracts/linkcode.sol:19"
          },
          {
            "kind": "state-variable-assignment",
            "name": "prices",
            "src": "contracts/linkcode.sol:29"
          },
          {
            "kind": "state-variable-assignment",
            "name": "dates",
            "src": "contracts/linkcode.sol:30"
          },
          {
            "kind": "state-variable-assignment",
            "name": "bonus",
            "src": "contracts/linkcode.sol:36"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_balances",
              "offset": 0,
              "slot": "0",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:39"
            },
            {
              "label": "_allowances",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:41"
            },
            {
              "label": "_totalSupply",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:43"
            },
            {
              "label": "_name",
              "offset": 0,
              "slot": "3",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:45"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "4",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:46"
            },
            {
              "label": "_owner",
              "offset": 0,
              "slot": "5",
              "type": "t_address",
              "contract": "Ownable",
              "src": "@openzeppelin/contracts/access/Ownable.sol:21"
            },
            {
              "label": "_status",
              "offset": 0,
              "slot": "6",
              "type": "t_uint256",
              "contract": "ReentrancyGuard",
              "src": "@openzeppelin/contracts/security/ReentrancyGuard.sol:37"
            },
            {
              "label": "paymentTokens",
              "offset": 0,
              "slot": "7",
              "type": "t_array(t_contract(IERC20)842)dyn_storage",
              "contract": "RecruitCoinTest",
              "src": "contracts/linkcode.sol:18"
            },
            {
              "label": "supplies",
              "offset": 0,
              "slot": "8",
              "type": "t_array(t_uint256)8_storage",
              "contract": "RecruitCoinTest",
              "src": "contracts/linkcode.sol:19"
            },
            {
              "label": "prices",
              "offset": 0,
              "slot": "16",
              "type": "t_array(t_uint256)2_storage",
              "contract": "RecruitCoinTest",
              "src": "contracts/linkcode.sol:29"
            },
            {
              "label": "dates",
              "offset": 0,
              "slot": "18",
              "type": "t_array(t_uint256)4_storage",
              "contract": "RecruitCoinTest",
              "src": "contracts/linkcode.sol:30"
            },
            {
              "label": "bonus",
              "offset": 0,
              "slot": "22",
              "type": "t_array(t_uint256)4_storage",
              "contract": "RecruitCoinTest",
              "src": "contracts/linkcode.sol:36"
            },
            {
              "label": "vestingSchedulesIds",
              "offset": 0,
              "slot": "26",
              "type": "t_array(t_bytes32)dyn_storage",
              "contract": "RecruitCoinTest",
              "src": "contracts/linkcode.sol:72"
            },
            {
              "label": "vestingSchedules",
              "offset": 0,
              "slot": "27",
              "type": "t_mapping(t_bytes32,t_struct(VestingSchedule)2934_storage)",
              "contract": "RecruitCoinTest",
              "src": "contracts/linkcode.sol:73"
            },
            {
              "label": "vestingSchedulesTotalAmount",
              "offset": 0,
              "slot": "28",
              "type": "t_uint256",
              "contract": "RecruitCoinTest",
              "src": "contracts/linkcode.sol:74"
            },
            {
              "label": "holdersVestingCount",
              "offset": 0,
              "slot": "29",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "RecruitCoinTest",
              "src": "contracts/linkcode.sol:75"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_bytes32)dyn_storage": {
              "label": "bytes32[]",
              "numberOfBytes": "32"
            },
            "t_array(t_contract(IERC20)842)dyn_storage": {
              "label": "contract IERC20[]",
              "numberOfBytes": "32"
            },
            "t_array(t_uint256)2_storage": {
              "label": "uint256[2]",
              "numberOfBytes": "64"
            },
            "t_array(t_uint256)4_storage": {
              "label": "uint256[4]",
              "numberOfBytes": "128"
            },
            "t_array(t_uint256)8_storage": {
              "label": "uint256[8]",
              "numberOfBytes": "256"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_bytes32": {
              "label": "bytes32",
              "numberOfBytes": "32"
            },
            "t_contract(IERC20)842": {
              "label": "contract IERC20",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_bytes32,t_struct(VestingSchedule)2934_storage)": {
              "label": "mapping(bytes32 => struct RecruitCoinTest.VestingSchedule)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_struct(VestingSchedule)2934_storage": {
              "label": "struct RecruitCoinTest.VestingSchedule",
              "members": [
                {
                  "label": "initialized",
                  "type": "t_bool",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "beneficiary",
                  "type": "t_address",
                  "offset": 1,
                  "slot": "0"
                },
                {
                  "label": "cliff",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "start",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "duration",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "3"
                },
                {
                  "label": "slicePeriodSeconds",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "4"
                },
                {
                  "label": "revocable",
                  "type": "t_bool",
                  "offset": 0,
                  "slot": "5"
                },
                {
                  "label": "amountTotal",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "6"
                },
                {
                  "label": "released",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "7"
                },
                {
                  "label": "revoked",
                  "type": "t_bool",
                  "offset": 0,
                  "slot": "8"
                }
              ],
              "numberOfBytes": "288"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.9"
      }
    },
    {
      "contracts/ETR.sol:Context": {
        "src": "contracts/ETR.sol:119",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.7"
      },
      "contracts/ETR.sol:DividendPayingToken": {
        "src": "contracts/ETR.sol:764",
        "version": {
          "withMetadata": "878d927eb56902e60e9ccd22b3003544d516662402ec3ed48e32cc52acc6c9da",
          "withoutMetadata": "5f12a41bed77b8d846201b76f2baf2336ab1933a83d19dc96334fb9b5506070f",
          "linkedWithoutMetadata": "5f12a41bed77b8d846201b76f2baf2336ab1933a83d19dc96334fb9b5506070f"
        },
        "inherit": [
          "contracts/ETR.sol:DividendPayingTokenOptionalInterface",
          "contracts/ETR.sol:DividendPayingTokenInterface",
          "contracts/ETR.sol:Ownable",
          "contracts/ETR.sol:ERC20",
          "contracts/ETR.sol:IERC20Metadata",
          "contracts/ETR.sol:IERC20",
          "contracts/ETR.sol:Context"
        ],
        "libraries": [
          "contracts/ETR.sol:SafeMath",
          "contracts/ETR.sol:SafeMathUint",
          "contracts/ETR.sol:SafeMathInt"
        ],
        "methods": [
          "(string,string)",
          "distributeETHDividends(uint256)",
          "withdrawDividend()",
          "dividendOf(address)",
          "withdrawableDividendOf(address)",
          "withdrawnDividendOf(address)",
          "accumulativeDividendOf(address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "DividendPayingToken",
            "src": "contracts/ETR.sol:795"
          },
          {
            "kind": "state-variable-immutable",
            "name": "ETH",
            "src": "contracts/ETR.sol:769"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_balances",
              "offset": 0,
              "slot": "0",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC20",
              "src": "contracts/ETR.sol:301"
            },
            {
              "label": "_allowances",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "ERC20",
              "src": "contracts/ETR.sol:303"
            },
            {
              "label": "_totalSupply",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "ERC20",
              "src": "contracts/ETR.sol:305"
            },
            {
              "label": "_name",
              "offset": 0,
              "slot": "3",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "contracts/ETR.sol:307"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "4",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "contracts/ETR.sol:308"
            },
            {
              "label": "_owner",
              "offset": 0,
              "slot": "5",
              "type": "t_address",
              "contract": "Ownable",
              "src": "contracts/ETR.sol:706"
            },
            {
              "label": "magnifiedDividendPerShare",
              "offset": 0,
              "slot": "6",
              "type": "t_uint256",
              "contract": "DividendPayingToken",
              "src": "contracts/ETR.sol:777"
            },
            {
              "label": "magnifiedDividendCorrections",
              "offset": 0,
              "slot": "7",
              "type": "t_mapping(t_address,t_int256)",
              "contract": "DividendPayingToken",
              "src": "contracts/ETR.sol:790"
            },
            {
              "label": "withdrawnDividends",
              "offset": 0,
              "slot": "8",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "DividendPayingToken",
              "src": "contracts/ETR.sol:791"
            },
            {
              "label": "totalDividendsDistributed",
              "offset": 0,
              "slot": "9",
              "type": "t_uint256",
              "contract": "DividendPayingToken",
              "src": "contracts/ETR.sol:793"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_int256": {
              "label": "int256",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_int256)": {
              "label": "mapping(address => int256)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.7"
      },
      "contracts/ETR.sol:DividendPayingTokenInterface": {
        "src": "contracts/ETR.sol:655",
        "inherit": [],
        "libraries": [],
        "methods": [
          "dividendOf(address)",
          "withdrawDividend()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.7"
      },
      "contracts/ETR.sol:DividendPayingTokenOptionalInterface": {
        "src": "contracts/ETR.sol:687",
        "inherit": [],
        "libraries": [],
        "methods": [
          "withdrawableDividendOf(address)",
          "withdrawnDividendOf(address)",
          "accumulativeDividendOf(address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.7"
      },
      "contracts/ETR.sol:ERC20": {
        "src": "contracts/ETR.sol:298",
        "version": {
          "withMetadata": "92e573b53e972d61897cf822f80ea43b8298bfb9951e6cedad81ac9b86cdea6c",
          "withoutMetadata": "d6fd5edeffa35e9d21d521adbc6f22c349e9a622801eeb262bbfdc7c1e615ef1",
          "linkedWithoutMetadata": "d6fd5edeffa35e9d21d521adbc6f22c349e9a622801eeb262bbfdc7c1e615ef1"
        },
        "inherit": [
          "contracts/ETR.sol:IERC20Metadata",
          "contracts/ETR.sol:IERC20",
          "contracts/ETR.sol:Context"
        ],
        "libraries": [
          "contracts/ETR.sol:SafeMath"
        ],
        "methods": [
          "(string,string)",
          "name()",
          "symbol()",
          "decimals()",
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)",
          "increaseAllowance(address,uint256)",
          "decreaseAllowance(address,uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ERC20",
            "src": "contracts/ETR.sol:319"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_balances",
              "offset": 0,
              "slot": "0",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC20",
              "src": "contracts/ETR.sol:301"
            },
            {
              "label": "_allowances",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "ERC20",
              "src": "contracts/ETR.sol:303"
            },
            {
              "label": "_totalSupply",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "ERC20",
              "src": "contracts/ETR.sol:305"
            },
            {
              "label": "_name",
              "offset": 0,
              "slot": "3",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "contracts/ETR.sol:307"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "4",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "contracts/ETR.sol:308"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.7"
      },
      "contracts/ETR.sol:ETR": {
        "src": "contracts/ETR.sol:1188",
        "version": {
          "withMetadata": "6ba79ab4202d829ce004b7d72299d2cff74b5fe1277f3c7a6d083b957d0650d5",
          "withoutMetadata": "6ba79ab4202d829ce004b7d72299d2cff74b5fe1277f3c7a6d083b957d0650d5",
          "linkedWithoutMetadata": "6ba79ab4202d829ce004b7d72299d2cff74b5fe1277f3c7a6d083b957d0650d5"
        },
        "inherit": [
          "contracts/ETR.sol:Ownable",
          "contracts/ETR.sol:ERC20",
          "contracts/ETR.sol:IERC20Metadata",
          "contracts/ETR.sol:IERC20",
          "contracts/ETR.sol:Context"
        ],
        "libraries": [
          "contracts/ETR.sol:SafeMath"
        ],
        "methods": [
          "()",
          "()",
          "setTradingEnabled(bool)",
          "addToBlackList(address)",
          "removeFromBlackList(address)",
          "isBlacklisted(address)",
          "addToWhitelist(address)",
          "setAutomatedMarketMakerPair(address,bool)",
          "updateDividendTracker(address)",
          "updateUniswapV2Router(address)",
          "excludeOrIncludeFromFees(address,bool)",
          "excludeOrIncludeMultipleAccountsFromFees(address[],bool)",
          "excludeOrIncludeFromMaxTx(address,bool)",
          "excludeOrIncludeFromMaxWallet(address,bool)",
          "setMaxWalletToken(uint256)",
          "setMaxtx(uint256)",
          "setMarketingWallet(address payable)",
          "setETRWallet(address payable)",
          "setBuyFees(uint256,uint256,uint256,uint256)",
          "setSellFees(uint256,uint256,uint256,uint256)",
          "updateGasForProcessing(uint256)",
          "updateClaimWait(uint256)",
          "getClaimWait()",
          "getTotalDividendsDistributed()",
          "isExcludedFromFees(address)",
          "isExcludedFromMaxTx(address)",
          "isExcludedFromMaxWallet(address)",
          "withdrawableDividendOf(address)",
          "dividendTokenBalanceOf(address)",
          "excludeFromDividends(address)",
          "getAccountDividendsInfo(address)",
          "getAccountDividendsInfoAtIndex(uint256)",
          "processDividendTracker(uint256)",
          "claim()",
          "getLastProcessedIndex()",
          "getNumberOfDividendTokenHolders()",
          "changeSwapTokensAtAmount(uint256)",
          "manualSwapTokensForEth(uint256)",
          "withdrawStuckBNB()",
          "removeStuckToken(address)"
        ],
        "linkReferences": [
          {
            "src": "contracts/ETR.sol",
            "name": "IterableMapping",
            "length": 20,
            "start": 24424,
            "placeholder": "__$9b82b52d3d4feb469761ee097260b6c83b$__"
          },
          {
            "src": "contracts/ETR.sol",
            "name": "IterableMapping",
            "length": 20,
            "start": 24626,
            "placeholder": "__$9b82b52d3d4feb469761ee097260b6c83b$__"
          },
          {
            "src": "contracts/ETR.sol",
            "name": "IterableMapping",
            "length": 20,
            "start": 24831,
            "placeholder": "__$9b82b52d3d4feb469761ee097260b6c83b$__"
          },
          {
            "src": "contracts/ETR.sol",
            "name": "IterableMapping",
            "length": 20,
            "start": 25954,
            "placeholder": "__$9b82b52d3d4feb469761ee097260b6c83b$__"
          },
          {
            "src": "contracts/ETR.sol",
            "name": "IterableMapping",
            "length": 20,
            "start": 26084,
            "placeholder": "__$9b82b52d3d4feb469761ee097260b6c83b$__"
          },
          {
            "src": "contracts/ETR.sol",
            "name": "IterableMapping",
            "length": 20,
            "start": 26833,
            "placeholder": "__$9b82b52d3d4feb469761ee097260b6c83b$__"
          }
        ],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ETR",
            "src": "contracts/ETR.sol:1278"
          },
          {
            "kind": "state-variable-immutable",
            "name": "ETH",
            "src": "contracts/ETR.sol:1200"
          },
          {
            "kind": "state-variable-assignment",
            "name": "swapTokensAtAmount",
            "src": "contracts/ETR.sol:1202"
          },
          {
            "kind": "state-variable-assignment",
            "name": "maxTransactionAmount",
            "src": "contracts/ETR.sol:1203"
          },
          {
            "kind": "state-variable-assignment",
            "name": "_BuyETHRewardsFee",
            "src": "contracts/ETR.sol:1205"
          },
          {
            "kind": "state-variable-assignment",
            "name": "_BuyLiquidityFee",
            "src": "contracts/ETR.sol:1206"
          },
          {
            "kind": "state-variable-assignment",
            "name": "_BuyMarketingFee",
            "src": "contracts/ETR.sol:1207"
          },
          {
            "kind": "state-variable-assignment",
            "name": "_BuyBackETRFee",
            "src": "contracts/ETR.sol:1208"
          },
          {
            "kind": "state-variable-assignment",
            "name": "_BuyTotalFees",
            "src": "contracts/ETR.sol:1210"
          },
          {
            "kind": "state-variable-assignment",
            "name": "_SellETHRewardsFee",
            "src": "contracts/ETR.sol:1212"
          },
          {
            "kind": "state-variable-assignment",
            "name": "_SellLiquidityFee",
            "src": "contracts/ETR.sol:1213"
          },
          {
            "kind": "state-variable-assignment",
            "name": "_SellMarketingFee",
            "src": "contracts/ETR.sol:1214"
          },
          {
            "kind": "state-variable-assignment",
            "name": "_SellBackETRFee",
            "src": "contracts/ETR.sol:1215"
          },
          {
            "kind": "state-variable-assignment",
            "name": "_SellTotalFees",
            "src": "contracts/ETR.sol:1216"
          },
          {
            "kind": "state-variable-assignment",
            "name": "maxWalletToken",
            "src": "contracts/ETR.sol:1218"
          },
          {
            "kind": "state-variable-assignment",
            "name": "_marketingWalletAddress",
            "src": "contracts/ETR.sol:1220"
          },
          {
            "kind": "state-variable-assignment",
            "name": "_ETRWalletAddress",
            "src": "contracts/ETR.sol:1221"
          },
          {
            "kind": "state-variable-assignment",
            "name": "gasForProcessing",
            "src": "contracts/ETR.sol:1226"
          },
          {
            "kind": "external-library-linking",
            "name": "IterableMapping",
            "src": "contracts/ETR.sol"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_balances",
              "offset": 0,
              "slot": "0",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC20",
              "src": "contracts/ETR.sol:301"
            },
            {
              "label": "_allowances",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "ERC20",
              "src": "contracts/ETR.sol:303"
            },
            {
              "label": "_totalSupply",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "ERC20",
              "src": "contracts/ETR.sol:305"
            },
            {
              "label": "_name",
              "offset": 0,
              "slot": "3",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "contracts/ETR.sol:307"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "4",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "contracts/ETR.sol:308"
            },
            {
              "label": "_owner",
              "offset": 0,
              "slot": "5",
              "type": "t_address",
              "contract": "Ownable",
              "src": "contracts/ETR.sol:706"
            },
            {
              "label": "uniswapV2Router",
              "offset": 0,
              "slot": "6",
              "type": "t_contract(IUniswapV2Router02)2537",
              "contract": "ETR",
              "src": "contracts/ETR.sol:1191"
            },
            {
              "label": "uniswapV2Pair",
              "offset": 0,
              "slot": "7",
              "type": "t_address",
              "contract": "ETR",
              "src": "contracts/ETR.sol:1192"
            },
            {
              "label": "swapping",
              "offset": 20,
              "slot": "7",
              "type": "t_bool",
              "contract": "ETR",
              "src": "contracts/ETR.sol:1194"
            },
            {
              "label": "dividendTracker",
              "offset": 0,
              "slot": "8",
              "type": "t_contract(ETRDividendTracker)5307",
              "contract": "ETR",
              "src": "contracts/ETR.sol:1196"
            },
            {
              "label": "swapTokensAtAmount",
              "offset": 0,
              "slot": "9",
              "type": "t_uint256",
              "contract": "ETR",
              "src": "contracts/ETR.sol:1202"
            },
            {
              "label": "maxTransactionAmount",
              "offset": 0,
              "slot": "10",
              "type": "t_uint256",
              "contract": "ETR",
              "src": "contracts/ETR.sol:1203"
            },
            {
              "label": "_BuyETHRewardsFee",
              "offset": 0,
              "slot": "11",
              "type": "t_uint256",
              "contract": "ETR",
              "src": "contracts/ETR.sol:1205"
            },
            {
              "label": "_BuyLiquidityFee",
              "offset": 0,
              "slot": "12",
              "type": "t_uint256",
              "contract": "ETR",
              "src": "contracts/ETR.sol:1206"
            },
            {
              "label": "_BuyMarketingFee",
              "offset": 0,
              "slot": "13",
              "type": "t_uint256",
              "contract": "ETR",
              "src": "contracts/ETR.sol:1207"
            },
            {
              "label": "_BuyBackETRFee",
              "offset": 0,
              "slot": "14",
              "type": "t_uint256",
              "contract": "ETR",
              "src": "contracts/ETR.sol:1208"
            },
            {
              "label": "_BuyTotalFees",
              "offset": 0,
              "slot": "15",
              "type": "t_uint256",
              "contract": "ETR",
              "src": "contracts/ETR.sol:1210"
            },
            {
              "label": "_SellETHRewardsFee",
              "offset": 0,
              "slot": "16",
              "type": "t_uint256",
              "contract": "ETR",
              "src": "contracts/ETR.sol:1212"
            },
            {
              "label": "_SellLiquidityFee",
              "offset": 0,
              "slot": "17",
              "type": "t_uint256",
              "contract": "ETR",
              "src": "contracts/ETR.sol:1213"
            },
            {
              "label": "_SellMarketingFee",
              "offset": 0,
              "slot": "18",
              "type": "t_uint256",
              "contract": "ETR",
              "src": "contracts/ETR.sol:1214"
            },
            {
              "label": "_SellBackETRFee",
              "offset": 0,
              "slot": "19",
              "type": "t_uint256",
              "contract": "ETR",
              "src": "contracts/ETR.sol:1215"
            },
            {
              "label": "_SellTotalFees",
              "offset": 0,
              "slot": "20",
              "type": "t_uint256",
              "contract": "ETR",
              "src": "contracts/ETR.sol:1216"
            },
            {
              "label": "maxWalletToken",
              "offset": 0,
              "slot": "21",
              "type": "t_uint256",
              "contract": "ETR",
              "src": "contracts/ETR.sol:1218"
            },
            {
              "label": "_marketingWalletAddress",
              "offset": 0,
              "slot": "22",
              "type": "t_address",
              "contract": "ETR",
              "src": "contracts/ETR.sol:1220"
            },
            {
              "label": "_ETRWalletAddress",
              "offset": 0,
              "slot": "23",
              "type": "t_address",
              "contract": "ETR",
              "src": "contracts/ETR.sol:1221"
            },
            {
              "label": "tradingEnabled",
              "offset": 20,
              "slot": "23",
              "type": "t_bool",
              "contract": "ETR",
              "src": "contracts/ETR.sol:1224"
            },
            {
              "label": "gasForProcessing",
              "offset": 0,
              "slot": "24",
              "type": "t_uint256",
              "contract": "ETR",
              "src": "contracts/ETR.sol:1226"
            },
            {
              "label": "_isExcludedFromFees",
              "offset": 0,
              "slot": "25",
              "type": "t_mapping(t_address,t_bool)",
              "contract": "ETR",
              "src": "contracts/ETR.sol:1229"
            },
            {
              "label": "_isExcludedFromMaxWallet",
              "offset": 0,
              "slot": "26",
              "type": "t_mapping(t_address,t_bool)",
              "contract": "ETR",
              "src": "contracts/ETR.sol:1230"
            },
            {
              "label": "_isExcludedFromMaxTx",
              "offset": 0,
              "slot": "27",
              "type": "t_mapping(t_address,t_bool)",
              "contract": "ETR",
              "src": "contracts/ETR.sol:1231"
            },
            {
              "label": "_blacklisted",
              "offset": 0,
              "slot": "28",
              "type": "t_mapping(t_address,t_bool)",
              "contract": "ETR",
              "src": "contracts/ETR.sol:1232"
            },
            {
              "label": "_whitelisted",
              "offset": 0,
              "slot": "29",
              "type": "t_mapping(t_address,t_bool)",
              "contract": "ETR",
              "src": "contracts/ETR.sol:1233"
            },
            {
              "label": "automatedMarketMakerPairs",
              "offset": 0,
              "slot": "30",
              "type": "t_mapping(t_address,t_bool)",
              "contract": "ETR",
              "src": "contracts/ETR.sol:1236"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_contract(ETRDividendTracker)5307": {
              "label": "contract ETRDividendTracker",
              "numberOfBytes": "20"
            },
            "t_contract(IUniswapV2Router02)2537": {
              "label": "contract IUniswapV2Router02",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.7"
      },
      "contracts/ETR.sol:ETRDividendTracker": {
        "src": "contracts/ETR.sol:1817",
        "version": {
          "withMetadata": "2dea63e88214246b2c04ef855e9c9aedb0a982970524c9411c3e45a2f6613beb",
          "withoutMetadata": "2d9b850e04b2ab1b4a416e5a53058b76385120a6959bbbca0e09efef2ef505b7",
          "linkedWithoutMetadata": "2d9b850e04b2ab1b4a416e5a53058b76385120a6959bbbca0e09efef2ef505b7"
        },
        "inherit": [
          "contracts/ETR.sol:DividendPayingToken",
          "contracts/ETR.sol:DividendPayingTokenOptionalInterface",
          "contracts/ETR.sol:DividendPayingTokenInterface",
          "contracts/ETR.sol:Ownable",
          "contracts/ETR.sol:ERC20",
          "contracts/ETR.sol:IERC20Metadata",
          "contracts/ETR.sol:IERC20",
          "contracts/ETR.sol:Context"
        ],
        "libraries": [
          "contracts/ETR.sol:SafeMath",
          "contracts/ETR.sol:SafeMathInt",
          "contracts/ETR.sol:IterableMapping"
        ],
        "methods": [
          "()",
          "withdrawDividend()",
          "excludeFromDividends(address)",
          "updateClaimWait(uint256)",
          "getLastProcessedIndex()",
          "getNumberOfTokenHolders()",
          "getAccount(address)",
          "getAccountAtIndex(uint256)",
          "setBalance(address payable,uint256)",
          "process(uint256)",
          "processAccount(address payable,bool)"
        ],
        "linkReferences": [
          {
            "src": "contracts/ETR.sol",
            "name": "IterableMapping",
            "length": 20,
            "start": 2522,
            "placeholder": "__$9b82b52d3d4feb469761ee097260b6c83b$__"
          },
          {
            "src": "contracts/ETR.sol",
            "name": "IterableMapping",
            "length": 20,
            "start": 2724,
            "placeholder": "__$9b82b52d3d4feb469761ee097260b6c83b$__"
          },
          {
            "src": "contracts/ETR.sol",
            "name": "IterableMapping",
            "length": 20,
            "start": 2929,
            "placeholder": "__$9b82b52d3d4feb469761ee097260b6c83b$__"
          },
          {
            "src": "contracts/ETR.sol",
            "name": "IterableMapping",
            "length": 20,
            "start": 4052,
            "placeholder": "__$9b82b52d3d4feb469761ee097260b6c83b$__"
          },
          {
            "src": "contracts/ETR.sol",
            "name": "IterableMapping",
            "length": 20,
            "start": 4182,
            "placeholder": "__$9b82b52d3d4feb469761ee097260b6c83b$__"
          },
          {
            "src": "contracts/ETR.sol",
            "name": "IterableMapping",
            "length": 20,
            "start": 4931,
            "placeholder": "__$9b82b52d3d4feb469761ee097260b6c83b$__"
          }
        ],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ETRDividendTracker",
            "src": "contracts/ETR.sol:1837"
          },
          {
            "kind": "state-variable-immutable",
            "name": "minimumTokenBalanceForDividends",
            "src": "contracts/ETR.sol:1830"
          },
          {
            "kind": "external-library-linking",
            "name": "IterableMapping",
            "src": "contracts/ETR.sol"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_balances",
              "offset": 0,
              "slot": "0",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC20",
              "src": "contracts/ETR.sol:301"
            },
            {
              "label": "_allowances",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "ERC20",
              "src": "contracts/ETR.sol:303"
            },
            {
              "label": "_totalSupply",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "ERC20",
              "src": "contracts/ETR.sol:305"
            },
            {
              "label": "_name",
              "offset": 0,
              "slot": "3",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "contracts/ETR.sol:307"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "4",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "contracts/ETR.sol:308"
            },
            {
              "label": "_owner",
              "offset": 0,
              "slot": "5",
              "type": "t_address",
              "contract": "Ownable",
              "src": "contracts/ETR.sol:706"
            },
            {
              "label": "magnifiedDividendPerShare",
              "offset": 0,
              "slot": "6",
              "type": "t_uint256",
              "contract": "DividendPayingToken",
              "src": "contracts/ETR.sol:777"
            },
            {
              "label": "magnifiedDividendCorrections",
              "offset": 0,
              "slot": "7",
              "type": "t_mapping(t_address,t_int256)",
              "contract": "DividendPayingToken",
              "src": "contracts/ETR.sol:790"
            },
            {
              "label": "withdrawnDividends",
              "offset": 0,
              "slot": "8",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "DividendPayingToken",
              "src": "contracts/ETR.sol:791"
            },
            {
              "label": "totalDividendsDistributed",
              "offset": 0,
              "slot": "9",
              "type": "t_uint256",
              "contract": "DividendPayingToken",
              "src": "contracts/ETR.sol:793"
            },
            {
              "label": "tokenHoldersMap",
              "offset": 0,
              "slot": "10",
              "type": "t_struct(Map)1630_storage",
              "contract": "ETRDividendTracker",
              "src": "contracts/ETR.sol:1822"
            },
            {
              "label": "lastProcessedIndex",
              "offset": 0,
              "slot": "14",
              "type": "t_uint256",
              "contract": "ETRDividendTracker",
              "src": "contracts/ETR.sol:1823"
            },
            {
              "label": "excludedFromDividends",
              "offset": 0,
              "slot": "15",
              "type": "t_mapping(t_address,t_bool)",
              "contract": "ETRDividendTracker",
              "src": "contracts/ETR.sol:1825"
            },
            {
              "label": "lastClaimTimes",
              "offset": 0,
              "slot": "16",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ETRDividendTracker",
              "src": "contracts/ETR.sol:1827"
            },
            {
              "label": "claimWait",
              "offset": 0,
              "slot": "17",
              "type": "t_uint256",
              "contract": "ETRDividendTracker",
              "src": "contracts/ETR.sol:1829"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_address)dyn_storage": {
              "label": "address[]",
              "numberOfBytes": "32"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_int256": {
              "label": "int256",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_int256)": {
              "label": "mapping(address => int256)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_struct(Map)1630_storage": {
              "label": "struct IterableMapping.Map",
              "members": [
                {
                  "label": "keys",
                  "type": "t_array(t_address)dyn_storage",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "values",
                  "type": "t_mapping(t_address,t_uint256)",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "indexOf",
                  "type": "t_mapping(t_address,t_uint256)",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "inserted",
                  "type": "t_mapping(t_address,t_bool)",
                  "offset": 0,
                  "slot": "3"
                }
              ],
              "numberOfBytes": "128"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.7"
      },
      "contracts/ETR.sol:IERC20": {
        "src": "contracts/ETR.sol:12",
        "inherit": [],
        "libraries": [],
        "methods": [
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.7"
      },
      "contracts/ETR.sol:IERC20Metadata": {
        "src": "contracts/ETR.sol:92",
        "inherit": [
          "contracts/ETR.sol:IERC20"
        ],
        "libraries": [],
        "methods": [
          "name()",
          "symbol()",
          "decimals()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.7"
      },
      "contracts/ETR.sol:IUniswapV2Factory": {
        "src": "contracts/ETR.sol:1034",
        "inherit": [],
        "libraries": [],
        "methods": [
          "feeTo()",
          "feeToSetter()",
          "getPair(address,address)",
          "allPairs(uint256)",
          "allPairsLength()",
          "createPair(address,address)",
          "setFeeTo(address)",
          "setFeeToSetter(address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.7"
      },
      "contracts/ETR.sol:IUniswapV2Pair": {
        "src": "contracts/ETR.sol:983",
        "inherit": [],
        "libraries": [],
        "methods": [
          "name()",
          "symbol()",
          "decimals()",
          "totalSupply()",
          "balanceOf(address)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transfer(address,uint256)",
          "transferFrom(address,address,uint256)",
          "DOMAIN_SEPARATOR()",
          "PERMIT_TYPEHASH()",
          "nonces(address)",
          "permit(address,address,uint256,uint256,uint8,bytes32,bytes32)",
          "MINIMUM_LIQUIDITY()",
          "factory()",
          "token0()",
          "token1()",
          "getReserves()",
          "price0CumulativeLast()",
          "price1CumulativeLast()",
          "kLast()",
          "mint(address)",
          "burn(address)",
          "swap(uint256,uint256,address,bytes)",
          "skim(address)",
          "sync()",
          "initialize(address,address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.7"
      },
      "contracts/ETR.sol:IUniswapV2Router01": {
        "src": "contracts/ETR.sol:1050",
        "inherit": [],
        "libraries": [],
        "methods": [
          "factory()",
          "WETH()",
          "addLiquidity(address,address,uint256,uint256,uint256,uint256,address,uint256)",
          "addLiquidityETH(address,uint256,uint256,uint256,address,uint256)",
          "removeLiquidity(address,address,uint256,uint256,uint256,address,uint256)",
          "removeLiquidityETH(address,uint256,uint256,uint256,address,uint256)",
          "removeLiquidityWithPermit(address,address,uint256,uint256,uint256,address,uint256,bool,uint8,bytes32,bytes32)",
          "removeLiquidityETHWithPermit(address,uint256,uint256,uint256,address,uint256,bool,uint8,bytes32,bytes32)",
          "swapExactTokensForTokens(uint256,uint256,address[],address,uint256)",
          "swapTokensForExactTokens(uint256,uint256,address[],address,uint256)",
          "swapExactETHForTokens(uint256,address[],address,uint256)",
          "swapTokensForExactETH(uint256,uint256,address[],address,uint256)",
          "swapExactTokensForETH(uint256,uint256,address[],address,uint256)",
          "swapETHForExactTokens(uint256,address[],address,uint256)",
          "quote(uint256,uint256,uint256)",
          "getAmountOut(uint256,uint256,uint256)",
          "getAmountIn(uint256,uint256,uint256)",
          "getAmountsOut(uint256,address[])",
          "getAmountsIn(uint256,address[])"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.7"
      },
      "contracts/ETR.sol:IUniswapV2Router02": {
        "src": "contracts/ETR.sol:1146",
        "inherit": [
          "contracts/ETR.sol:IUniswapV2Router01"
        ],
        "libraries": [],
        "methods": [
          "removeLiquidityETHSupportingFeeOnTransferTokens(address,uint256,uint256,uint256,address,uint256)",
          "removeLiquidityETHWithPermitSupportingFeeOnTransferTokens(address,uint256,uint256,uint256,address,uint256,bool,uint8,bytes32,bytes32)",
          "swapExactTokensForTokensSupportingFeeOnTransferTokens(uint256,uint256,address[],address,uint256)",
          "swapExactETHForTokensSupportingFeeOnTransferTokens(uint256,address[],address,uint256)",
          "swapExactTokensForETHSupportingFeeOnTransferTokens(uint256,uint256,address[],address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.7"
      },
      "contracts/ETR.sol:IterableMapping": {
        "src": "contracts/ETR.sol:921",
        "version": {
          "withMetadata": "8a0aecea21840f408b9e358f04942fa7e339eb91f93eb71e1ef2bf8484cc09f4",
          "withoutMetadata": "de17e2600e3ef2cc9dcede00533ab195c35c94ab17a69e5bc5605d724fe0a8b1",
          "linkedWithoutMetadata": "de17e2600e3ef2cc9dcede00533ab195c35c94ab17a69e5bc5605d724fe0a8b1"
        },
        "inherit": [],
        "libraries": [],
        "methods": [
          "get(IterableMapping.Map storage,address)",
          "getIndexOfKey(IterableMapping.Map storage,address)",
          "getKeyAtIndex(IterableMapping.Map storage,uint256)",
          "size(IterableMapping.Map storage)",
          "set(IterableMapping.Map storage,address,uint256)",
          "remove(IterableMapping.Map storage,address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.7"
      },
      "contracts/ETR.sol:Ownable": {
        "src": "contracts/ETR.sol:705",
        "version": {
          "withMetadata": "5042109737536b65083dd15b02e6942f0b25c617dd90fe885abbaf1d1ce2fd91",
          "withoutMetadata": "cca71170c81c2afe795a617b9e843ceece74d5d8286cb195abeff2853b66075a",
          "linkedWithoutMetadata": "cca71170c81c2afe795a617b9e843ceece74d5d8286cb195abeff2853b66075a"
        },
        "inherit": [
          "contracts/ETR.sol:Context"
        ],
        "libraries": [],
        "methods": [
          "()",
          "owner()",
          "renounceOwnership()",
          "transferOwnership(address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Ownable",
            "src": "contracts/ETR.sol:713"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Ownable",
              "src": "contracts/ETR.sol:706"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.7"
      },
      "contracts/ETR.sol:SafeMath": {
        "src": "contracts/ETR.sol:130",
        "version": {
          "withMetadata": "c3f834d0fc2ebabdefe1a3a5be21e22f26d150cc6604ee9164856c0da922ff34",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.7"
      },
      "contracts/ETR.sol:SafeMathInt": {
        "src": "contracts/ETR.sol:592",
        "version": {
          "withMetadata": "d873154b6813e7466d9e2959827037b04ade6a67610301426cf5c718f757f22a",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.7"
      },
      "contracts/ETR.sol:SafeMathUint": {
        "src": "contracts/ETR.sol:580",
        "version": {
          "withMetadata": "f47c73291b048a42cecb64add849ad0be6b1f20fc54264c61d8a2af57567cd18",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.7"
      },
      "contracts/HOLD.sol:HODL1": {
        "src": "contracts/HOLD.sol:12",
        "version": {
          "withMetadata": "ee14f6be4f79331d95f0373af62890f1fc9ed426410c98bd965965e1f1e9b71d",
          "withoutMetadata": "0b8695774aa2c294486a1be0f0c895f8b75a9e87889db97b404f8bd769cb3ab8",
          "linkedWithoutMetadata": "0b8695774aa2c294486a1be0f0c895f8b75a9e87889db97b404f8bd769cb3ab8"
        },
        "inherit": [
          "contracts/ReentrancyGuard.sol:ReentrancyGuard",
          "contracts/IFiles.sol:Ownable",
          "contracts/IFiles.sol:Initializable",
          "contracts/IFiles.sol:IBEP20",
          "contracts/IFiles.sol:Context"
        ],
        "libraries": [
          "contracts/IFiles.sol:SafeMath",
          "contracts/IFiles.sol:Address",
          "contracts/Utils.sol:Utils"
        ],
        "methods": [
          "()",
          "name()",
          "symbol()",
          "decimals()",
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)",
          "increaseAllowance(address,uint256)",
          "decreaseAllowance(address,uint256)",
          "isExcludedFromReward(address)",
          "totalFees()",
          "deliver(uint256)",
          "reflectionFromToken(uint256,bool)",
          "tokenFromReflection(uint256)",
          "excludeFromReward(address)",
          "includeInReward(address)",
          "excludeFromFee(address)",
          "includeInFee(address)",
          "setTaxFeePercent(uint256)",
          "setLiquidityFeePercent(uint256)",
          "setSwapAndLiquifyEnabled(bool)",
          "()",
          "isExcludedFromFee(address)",
          "setMaxTxPercent(uint256)",
          "setExcludeFromMaxTx(address,bool)",
          "calculateBNBReward(address)",
          "redeemRewards(uint256)",
          "triggerSwapAndLiquify()",
          "changerewardCycleBlock(uint256)",
          "changereservewallet(address payable)",
          "changemarketingwallet(address payable)",
          "changetriggerwallet(address payable)",
          "reflectionfeestartstop(bool)",
          "migrateToken(address,uint256)",
          "migrateWBnb(address,uint256)",
          "migrateBnb(address payable,uint256)",
          "changeThreshHoldTopUpRate(uint256)",
          "changeSelltax(uint256)",
          "changeBuytax(uint256)",
          "changeTransfertax(uint256)",
          "changeTokenomics(uint256,uint256,uint256,uint256,uint256)",
          "changebnbclaimtax(uint256,uint256,uint256,uint256,uint256,uint256)",
          "changeminTokenNumberToSell(uint256)",
          "changeminTokenNumberUpperlimit(uint256)",
          "changerewardHardcap(uint256)",
          "updatePairAddress(address,bool)",
          "changeclaimBNBLimit(uint256)",
          "changereinvestLimit(uint256)",
          "changeHODLMasterChef(address)",
          "changeAntiFlipTax(uint256,uint8)",
          "changeStackingWallet(address payable)",
          "getStackingCounter(uint64)",
          "enableStacking(bool)",
          "changeBNBstackingLimit(uint256)",
          "startStacking()",
          "getStacked(address)",
          "stopStackingAndClaim(uint256)",
          "TestAddLiquidityWithoutTax(uint256)"
        ],
        "linkReferences": [
          {
            "src": "contracts/Utils.sol",
            "name": "Utils",
            "length": 20,
            "start": 5845,
            "placeholder": "__$1c41232b8c3f9382c4bdca1a05a1ab00e7$__"
          },
          {
            "src": "contracts/Utils.sol",
            "name": "Utils",
            "length": 20,
            "start": 6816,
            "placeholder": "__$1c41232b8c3f9382c4bdca1a05a1ab00e7$__"
          },
          {
            "src": "contracts/Utils.sol",
            "name": "Utils",
            "length": 20,
            "start": 8732,
            "placeholder": "__$1c41232b8c3f9382c4bdca1a05a1ab00e7$__"
          },
          {
            "src": "contracts/Utils.sol",
            "name": "Utils",
            "length": 20,
            "start": 14444,
            "placeholder": "__$1c41232b8c3f9382c4bdca1a05a1ab00e7$__"
          },
          {
            "src": "contracts/Utils.sol",
            "name": "Utils",
            "length": 20,
            "start": 14881,
            "placeholder": "__$1c41232b8c3f9382c4bdca1a05a1ab00e7$__"
          },
          {
            "src": "contracts/Utils.sol",
            "name": "Utils",
            "length": 20,
            "start": 15618,
            "placeholder": "__$1c41232b8c3f9382c4bdca1a05a1ab00e7$__"
          },
          {
            "src": "contracts/Utils.sol",
            "name": "Utils",
            "length": 20,
            "start": 15915,
            "placeholder": "__$1c41232b8c3f9382c4bdca1a05a1ab00e7$__"
          },
          {
            "src": "contracts/Utils.sol",
            "name": "Utils",
            "length": 20,
            "start": 17957,
            "placeholder": "__$1c41232b8c3f9382c4bdca1a05a1ab00e7$__"
          },
          {
            "src": "contracts/Utils.sol",
            "name": "Utils",
            "length": 20,
            "start": 20164,
            "placeholder": "__$1c41232b8c3f9382c4bdca1a05a1ab00e7$__"
          },
          {
            "src": "contracts/Utils.sol",
            "name": "Utils",
            "length": 20,
            "start": 20601,
            "placeholder": "__$1c41232b8c3f9382c4bdca1a05a1ab00e7$__"
          },
          {
            "src": "contracts/Utils.sol",
            "name": "Utils",
            "length": 20,
            "start": 21505,
            "placeholder": "__$1c41232b8c3f9382c4bdca1a05a1ab00e7$__"
          },
          {
            "src": "contracts/Utils.sol",
            "name": "Utils",
            "length": 20,
            "start": 21951,
            "placeholder": "__$1c41232b8c3f9382c4bdca1a05a1ab00e7$__"
          }
        ],
        "errors": [
          {
            "kind": "external-library-linking",
            "name": "Utils",
            "src": "contracts/Utils.sol"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "contracts/IFiles.sol:251"
            },
            {
              "label": "initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "contracts/IFiles.sol:252"
            },
            {
              "label": "______gap",
              "offset": 0,
              "slot": "1",
              "type": "t_array(t_uint256)50_storage",
              "contract": "Initializable",
              "src": "contracts/IFiles.sol:283"
            },
            {
              "label": "_owner",
              "offset": 0,
              "slot": "51",
              "type": "t_address",
              "contract": "Ownable",
              "src": "contracts/IFiles.sol:287"
            },
            {
              "label": "_previousOwner",
              "offset": 0,
              "slot": "52",
              "type": "t_address",
              "contract": "Ownable",
              "src": "contracts/IFiles.sol:288"
            },
            {
              "label": "_lockTime",
              "offset": 0,
              "slot": "53",
              "type": "t_uint256",
              "contract": "Ownable",
              "src": "contracts/IFiles.sol:289"
            },
            {
              "label": "_status",
              "offset": 0,
              "slot": "54",
              "type": "t_uint256",
              "contract": "ReentrancyGuard",
              "src": "contracts/ReentrancyGuard.sol:10"
            },
            {
              "label": "_rOwned",
              "offset": 0,
              "slot": "55",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "HODL1",
              "src": "contracts/HOLD.sol:16"
            },
            {
              "label": "_tOwned",
              "offset": 0,
              "slot": "56",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "HODL1",
              "src": "contracts/HOLD.sol:17"
            },
            {
              "label": "_allowances",
              "offset": 0,
              "slot": "57",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "HODL1",
              "src": "contracts/HOLD.sol:18"
            },
            {
              "label": "_isExcludedFromFee",
              "offset": 0,
              "slot": "58",
              "type": "t_mapping(t_address,t_bool)",
              "contract": "HODL1",
              "src": "contracts/HOLD.sol:20"
            },
            {
              "label": "_isExcluded",
              "offset": 0,
              "slot": "59",
              "type": "t_mapping(t_address,t_bool)",
              "contract": "HODL1",
              "src": "contracts/HOLD.sol:21"
            },
            {
              "label": "_isExcludedFromMaxTx",
              "offset": 0,
              "slot": "60",
              "type": "t_mapping(t_address,t_bool)",
              "contract": "HODL1",
              "src": "contracts/HOLD.sol:22"
            },
            {
              "label": "userClaimedBNB",
              "offset": 0,
              "slot": "61",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "HODL1",
              "src": "contracts/HOLD.sol:25"
            },
            {
              "label": "totalClaimedBNB",
              "offset": 0,
              "slot": "62",
              "type": "t_uint256",
              "contract": "HODL1",
              "src": "contracts/HOLD.sol:26"
            },
            {
              "label": "userreinvested",
              "offset": 0,
              "slot": "63",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "HODL1",
              "src": "contracts/HOLD.sol:28"
            },
            {
              "label": "totalreinvested",
              "offset": 0,
              "slot": "64",
              "type": "t_uint256",
              "contract": "HODL1",
              "src": "contracts/HOLD.sol:29"
            },
            {
              "label": "totalgasfeesdistributed",
              "offset": 0,
              "slot": "65",
              "type": "t_uint256",
              "contract": "HODL1",
              "src": "contracts/HOLD.sol:32"
            },
            {
              "label": "userrecievedgasfees",
              "offset": 0,
              "slot": "66",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "HODL1",
              "src": "contracts/HOLD.sol:33"
            },
            {
              "label": "deadAddress",
              "offset": 0,
              "slot": "67",
              "type": "t_address",
              "contract": "HODL1",
              "src": "contracts/HOLD.sol:35"
            },
            {
              "label": "_excluded",
              "offset": 0,
              "slot": "68",
              "type": "t_array(t_address)dyn_storage",
              "contract": "HODL1",
              "src": "contracts/HOLD.sol:37"
            },
            {
              "label": "MAX",
              "offset": 0,
              "slot": "69",
              "type": "t_uint256",
              "contract": "HODL1",
              "src": "contracts/HOLD.sol:39"
            },
            {
              "label": "_tTotal",
              "offset": 0,
              "slot": "70",
              "type": "t_uint256",
              "contract": "HODL1",
              "src": "contracts/HOLD.sol:40"
            },
            {
              "label": "_rTotal",
              "offset": 0,
              "slot": "71",
              "type": "t_uint256",
              "contract": "HODL1",
              "src": "contracts/HOLD.sol:41"
            },
            {
              "label": "_tFeeTotal",
              "offset": 0,
              "slot": "72",
              "type": "t_uint256",
              "contract": "HODL1",
              "src": "contracts/HOLD.sol:42"
            },
            {
              "label": "_name",
              "offset": 0,
              "slot": "73",
              "type": "t_string_storage",
              "contract": "HODL1",
              "src": "contracts/HOLD.sol:44"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "74",
              "type": "t_string_storage",
              "contract": "HODL1",
              "src": "contracts/HOLD.sol:45"
            },
            {
              "label": "_decimals",
              "offset": 0,
              "slot": "75",
              "type": "t_uint8",
              "contract": "HODL1",
              "src": "contracts/HOLD.sol:46"
            },
            {
              "label": "pancakeRouter",
              "offset": 1,
              "slot": "75",
              "type": "t_contract(IPancakeRouter02)10816",
              "contract": "HODL1",
              "src": "contracts/HOLD.sol:48"
            },
            {
              "label": "pancakePair",
              "offset": 0,
              "slot": "76",
              "type": "t_address",
              "contract": "HODL1",
              "src": "contracts/HOLD.sol:49"
            },
            {
              "label": "_inSwapAndLiquify",
              "offset": 20,
              "slot": "76",
              "type": "t_bool",
              "contract": "HODL1",
              "src": "contracts/HOLD.sol:51"
            },
            {
              "label": "daySeconds",
              "offset": 0,
              "slot": "77",
              "type": "t_uint256",
              "contract": "HODL1",
              "src": "contracts/HOLD.sol:53"
            },
            {
              "label": "userWalletAllowance",
              "offset": 0,
              "slot": "78",
              "type": "t_mapping(t_address,t_struct(WalletAllowance)5404_storage)",
              "contract": "HODL1",
              "src": "contracts/HOLD.sol:60"
            },
            {
              "label": "isBlacklisted",
              "offset": 0,
              "slot": "79",
              "type": "t_mapping(t_address,t_bool)",
              "contract": "HODL1",
              "src": "contracts/HOLD.sol:83"
            },
            {
              "label": "rewardCycleBlock",
              "offset": 0,
              "slot": "80",
              "type": "t_uint256",
              "contract": "HODL1",
              "src": "contracts/HOLD.sol:591"
            },
            {
              "label": "stackingCounterStart",
              "offset": 0,
              "slot": "81",
              "type": "t_uint256",
              "contract": "HODL1",
              "src": "contracts/HOLD.sol:592"
            },
            {
              "label": "threshHoldTopUpRate",
              "offset": 0,
              "slot": "82",
              "type": "t_uint256",
              "contract": "HODL1",
              "src": "contracts/HOLD.sol:593"
            },
            {
              "label": "_maxTxAmount",
              "offset": 0,
              "slot": "83",
              "type": "t_uint256",
              "contract": "HODL1",
              "src": "contracts/HOLD.sol:594"
            },
            {
              "label": "bnbStackingLimit",
              "offset": 0,
              "slot": "84",
              "type": "t_uint256",
              "contract": "HODL1",
              "src": "contracts/HOLD.sol:595"
            },
            {
              "label": "nextAvailableClaimDate",
              "offset": 0,
              "slot": "85",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "HODL1",
              "src": "contracts/HOLD.sol:596"
            },
            {
              "label": "swapAndLiquifyEnabled",
              "offset": 0,
              "slot": "86",
              "type": "t_bool",
              "contract": "HODL1",
              "src": "contracts/HOLD.sol:597"
            },
            {
              "label": "reserve_5",
              "offset": 0,
              "slot": "87",
              "type": "t_uint256",
              "contract": "HODL1",
              "src": "contracts/HOLD.sol:598"
            },
            {
              "label": "reserve_6",
              "offset": 0,
              "slot": "88",
              "type": "t_uint256",
              "contract": "HODL1",
              "src": "contracts/HOLD.sol:599"
            },
            {
              "label": "reflectionFeesDisabled",
              "offset": 0,
              "slot": "89",
              "type": "t_bool",
              "contract": "HODL1",
              "src": "contracts/HOLD.sol:601"
            },
            {
              "label": "_taxFee",
              "offset": 0,
              "slot": "90",
              "type": "t_uint256",
              "contract": "HODL1",
              "src": "contracts/HOLD.sol:603"
            },
            {
              "label": "_previousTaxFee",
              "offset": 0,
              "slot": "91",
              "type": "t_uint256",
              "contract": "HODL1",
              "src": "contracts/HOLD.sol:604"
            },
            {
              "label": "antiFlipTax",
              "offset": 0,
              "slot": "92",
              "type": "t_array(t_uint256)6_storage",
              "contract": "HODL1",
              "src": "contracts/HOLD.sol:606"
            },
            {
              "label": "bnbClaimTax",
              "offset": 0,
              "slot": "98",
              "type": "t_struct(LayerTax)7091_storage",
              "contract": "HODL1",
              "src": "contracts/HOLD.sol:608"
            },
            {
              "label": "selltax",
              "offset": 0,
              "slot": "104",
              "type": "t_uint256",
              "contract": "HODL1",
              "src": "contracts/HOLD.sol:619"
            },
            {
              "label": "buytax",
              "offset": 0,
              "slot": "105",
              "type": "t_uint256",
              "contract": "HODL1",
              "src": "contracts/HOLD.sol:620"
            },
            {
              "label": "transfertax",
              "offset": 0,
              "slot": "106",
              "type": "t_uint256",
              "contract": "HODL1",
              "src": "contracts/HOLD.sol:621"
            },
            {
              "label": "claimBNBLimit",
              "offset": 0,
              "slot": "107",
              "type": "t_uint256",
              "contract": "HODL1",
              "src": "contracts/HOLD.sol:623"
            },
            {
              "label": "reinvestLimit",
              "offset": 0,
              "slot": "108",
              "type": "t_uint256",
              "contract": "HODL1",
              "src": "contracts/HOLD.sol:624"
            },
            {
              "label": "reserve_1",
              "offset": 0,
              "slot": "109",
              "type": "t_uint256",
              "contract": "HODL1",
              "src": "contracts/HOLD.sol:625"
            },
            {
              "label": "reservewallet",
              "offset": 0,
              "slot": "110",
              "type": "t_address",
              "contract": "HODL1",
              "src": "contracts/HOLD.sol:627"
            },
            {
              "label": "teamwallet",
              "offset": 0,
              "slot": "111",
              "type": "t_address",
              "contract": "HODL1",
              "src": "contracts/HOLD.sol:628"
            },
            {
              "label": "marketingwallet",
              "offset": 0,
              "slot": "112",
              "type": "t_address",
              "contract": "HODL1",
              "src": "contracts/HOLD.sol:629"
            },
            {
              "label": "stackingWallet",
              "offset": 0,
              "slot": "113",
              "type": "t_address",
              "contract": "HODL1",
              "src": "contracts/HOLD.sol:630"
            },
            {
              "label": "_liquidityFee",
              "offset": 0,
              "slot": "114",
              "type": "t_uint256",
              "contract": "HODL1",
              "src": "contracts/HOLD.sol:632"
            },
            {
              "label": "_previousLiquidityFee",
              "offset": 0,
              "slot": "115",
              "type": "t_uint256",
              "contract": "HODL1",
              "src": "contracts/HOLD.sol:633"
            },
            {
              "label": "minTokenNumberToSell",
              "offset": 0,
              "slot": "116",
              "type": "t_uint256",
              "contract": "HODL1",
              "src": "contracts/HOLD.sol:635"
            },
            {
              "label": "minTokenNumberUpperlimit",
              "offset": 0,
              "slot": "117",
              "type": "t_uint256",
              "contract": "HODL1",
              "src": "contracts/HOLD.sol:636"
            },
            {
              "label": "rewardHardcap",
              "offset": 0,
              "slot": "118",
              "type": "t_uint256",
              "contract": "HODL1",
              "src": "contracts/HOLD.sol:638"
            },
            {
              "label": "tokenomics",
              "offset": 0,
              "slot": "119",
              "type": "t_struct(Tokenomics)7135_storage",
              "contract": "HODL1",
              "src": "contracts/HOLD.sol:640"
            },
            {
              "label": "_Reflection",
              "offset": 0,
              "slot": "124",
              "type": "t_uint256",
              "contract": "HODL1",
              "src": "contracts/HOLD.sol:650"
            },
            {
              "label": "_Tokenomics",
              "offset": 0,
              "slot": "125",
              "type": "t_uint256",
              "contract": "HODL1",
              "src": "contracts/HOLD.sol:651"
            },
            {
              "label": "triggerwallet",
              "offset": 0,
              "slot": "126",
              "type": "t_address",
              "contract": "HODL1",
              "src": "contracts/HOLD.sol:653"
            },
            {
              "label": "pairAddresses",
              "offset": 0,
              "slot": "127",
              "type": "t_mapping(t_address,t_bool)",
              "contract": "HODL1",
              "src": "contracts/HOLD.sol:655"
            },
            {
              "label": "HodlMasterChef",
              "offset": 0,
              "slot": "128",
              "type": "t_address",
              "contract": "HODL1",
              "src": "contracts/HOLD.sol:657"
            },
            {
              "label": "firstBuyTimeStamp",
              "offset": 0,
              "slot": "129",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "HODL1",
              "src": "contracts/HOLD.sol:659"
            },
            {
              "label": "rewardStacking",
              "offset": 0,
              "slot": "130",
              "type": "t_mapping(t_address,t_struct(stacking)7166_storage)",
              "contract": "HODL1",
              "src": "contracts/HOLD.sol:671"
            },
            {
              "label": "stackingEnabled",
              "offset": 0,
              "slot": "131",
              "type": "t_bool",
              "contract": "HODL1",
              "src": "contracts/HOLD.sol:672"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_address)dyn_storage": {
              "label": "address[]",
              "numberOfBytes": "32"
            },
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]",
              "numberOfBytes": "1600"
            },
            "t_array(t_uint256)6_storage": {
              "label": "uint256[6]",
              "numberOfBytes": "192"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_contract(IPancakeRouter02)10816": {
              "label": "contract IPancakeRouter02",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_struct(WalletAllowance)5404_storage)": {
              "label": "mapping(address => struct HODL1.WalletAllowance)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_struct(stacking)7166_storage)": {
              "label": "mapping(address => struct HODL1.stacking)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_struct(LayerTax)7091_storage": {
              "label": "struct HODL1.LayerTax",
              "members": [
                {
                  "label": "layer1",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "layer2",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "layer3",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "layer4",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "3"
                },
                {
                  "label": "layer5",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "4"
                },
                {
                  "label": "layer6",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "5"
                }
              ],
              "numberOfBytes": "192"
            },
            "t_struct(Tokenomics)7135_storage": {
              "label": "struct HODL1.Tokenomics",
              "members": [
                {
                  "label": "bnbReward",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "liquidity",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "marketing",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "reflection",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "3"
                },
                {
                  "label": "reserve",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "4"
                }
              ],
              "numberOfBytes": "160"
            },
            "t_struct(WalletAllowance)5404_storage": {
              "label": "struct HODL1.WalletAllowance",
              "members": [
                {
                  "label": "timestamp",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "amount",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "1"
                }
              ],
              "numberOfBytes": "64"
            },
            "t_struct(stacking)7166_storage": {
              "label": "struct HODL1.stacking",
              "members": [
                {
                  "label": "enabled",
                  "type": "t_bool",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "cycle",
                  "type": "t_uint64",
                  "offset": 1,
                  "slot": "0"
                },
                {
                  "label": "tsStartStacking",
                  "type": "t_uint64",
                  "offset": 9,
                  "slot": "0"
                },
                {
                  "label": "stackingCounter",
                  "type": "t_uint64",
                  "offset": 17,
                  "slot": "0"
                },
                {
                  "label": "stackingLimit",
                  "type": "t_uint96",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "amount",
                  "type": "t_uint96",
                  "offset": 12,
                  "slot": "1"
                },
                {
                  "label": "hardcap",
                  "type": "t_uint96",
                  "offset": 0,
                  "slot": "2"
                }
              ],
              "numberOfBytes": "96"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint64": {
              "label": "uint64",
              "numberOfBytes": "8"
            },
            "t_uint8": {
              "label": "uint8",
              "numberOfBytes": "1"
            },
            "t_uint96": {
              "label": "uint96",
              "numberOfBytes": "12"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.7"
      },
      "contracts/IFiles.sol:Address": {
        "src": "contracts/IFiles.sol:147",
        "version": {
          "withMetadata": "8bd2f499e975802848f3ffd5f13479b01b6af86caa87d5b4f60eb3f2c2a419d3",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.7"
      },
      "contracts/IFiles.sol:Context": {
        "src": "contracts/IFiles.sol:135",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.7"
      },
      "contracts/IFiles.sol:IBEP20": {
        "src": "contracts/IFiles.sol:9",
        "inherit": [],
        "libraries": [],
        "methods": [
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.7"
      },
      "contracts/IFiles.sol:IPancakeFactory": {
        "src": "contracts/IFiles.sol:327",
        "inherit": [],
        "libraries": [],
        "methods": [
          "feeTo()",
          "feeToSetter()",
          "getPair(address,address)",
          "allPairs(uint256)",
          "allPairsLength()",
          "createPair(address,address)",
          "setFeeTo(address)",
          "setFeeToSetter(address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.7"
      },
      "contracts/IFiles.sol:IPancakePair": {
        "src": "contracts/IFiles.sol:357",
        "inherit": [],
        "libraries": [],
        "methods": [
          "name()",
          "symbol()",
          "decimals()",
          "totalSupply()",
          "balanceOf(address)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transfer(address,uint256)",
          "transferFrom(address,address,uint256)",
          "DOMAIN_SEPARATOR()",
          "PERMIT_TYPEHASH()",
          "nonces(address)",
          "permit(address,address,uint256,uint256,uint8,bytes32,bytes32)",
          "MINIMUM_LIQUIDITY()",
          "factory()",
          "token0()",
          "token1()",
          "getReserves()",
          "price0CumulativeLast()",
          "price1CumulativeLast()",
          "kLast()",
          "mint(address)",
          "burn(address)",
          "swap(uint256,uint256,address,bytes)",
          "skim(address)",
          "sync()",
          "initialize(address,address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.7"
      },
      "contracts/IFiles.sol:IPancakeRouter01": {
        "src": "contracts/IFiles.sol:466",
        "inherit": [],
        "libraries": [],
        "methods": [
          "factory()",
          "WETH()",
          "addLiquidity(address,address,uint256,uint256,uint256,uint256,address,uint256)",
          "addLiquidityETH(address,uint256,uint256,uint256,address,uint256)",
          "removeLiquidity(address,address,uint256,uint256,uint256,address,uint256)",
          "removeLiquidityETH(address,uint256,uint256,uint256,address,uint256)",
          "removeLiquidityWithPermit(address,address,uint256,uint256,uint256,address,uint256,bool,uint8,bytes32,bytes32)",
          "removeLiquidityETHWithPermit(address,uint256,uint256,uint256,address,uint256,bool,uint8,bytes32,bytes32)",
          "swapExactTokensForTokens(uint256,uint256,address[],address,uint256)",
          "swapTokensForExactTokens(uint256,uint256,address[],address,uint256)",
          "swapExactETHForTokens(uint256,address[],address,uint256)",
          "swapTokensForExactETH(uint256,uint256,address[],address,uint256)",
          "swapExactTokensForETH(uint256,uint256,address[],address,uint256)",
          "swapETHForExactTokens(uint256,address[],address,uint256)",
          "quote(uint256,uint256,uint256)",
          "getAmountOut(uint256,uint256,uint256)",
          "getAmountIn(uint256,uint256,uint256)",
          "getAmountsOut(uint256,address[])",
          "getAmountsIn(uint256,address[])"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.7"
      },
      "contracts/IFiles.sol:IPancakeRouter02": {
        "src": "contracts/IFiles.sol:626",
        "inherit": [
          "contracts/IFiles.sol:IPancakeRouter01"
        ],
        "libraries": [],
        "methods": [
          "removeLiquidityETHSupportingFeeOnTransferTokens(address,uint256,uint256,uint256,address,uint256)",
          "removeLiquidityETHWithPermitSupportingFeeOnTransferTokens(address,uint256,uint256,uint256,address,uint256,bool,uint8,bytes32,bytes32)",
          "swapExactTokensForTokensSupportingFeeOnTransferTokens(uint256,uint256,address[],address,uint256)",
          "swapExactETHForTokensSupportingFeeOnTransferTokens(uint256,address[],address,uint256)",
          "swapExactTokensForETHSupportingFeeOnTransferTokens(uint256,uint256,address[],address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.7"
      },
      "contracts/IFiles.sol:IWBNB": {
        "src": "contracts/IFiles.sol:38",
        "inherit": [],
        "libraries": [],
        "methods": [
          "name()",
          "symbol()",
          "decimals()",
          "balanceOf(address)",
          "allowance(address,address)",
          "()",
          "deposit()",
          "withdraw(uint256)",
          "totalSupply()",
          "approve(address,uint256)",
          "transfer(address,uint256)",
          "transferFrom(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.7"
      },
      "contracts/IFiles.sol:Initializable": {
        "src": "contracts/IFiles.sol:249",
        "version": {
          "withMetadata": "9d7ec3df6525e7ffa61e311e2deca727bef66305a950f9c68cab0bc162087110",
          "withoutMetadata": "ac0db523ddc3e330f735df7b3b0b24460531c71290a891170e840f8f67d5ff6b",
          "linkedWithoutMetadata": "ac0db523ddc3e330f735df7b3b0b24460531c71290a891170e840f8f67d5ff6b"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "contracts/IFiles.sol:251"
            },
            {
              "label": "initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "contracts/IFiles.sol:252"
            },
            {
              "label": "______gap",
              "offset": 0,
              "slot": "1",
              "type": "t_array(t_uint256)50_storage",
              "contract": "Initializable",
              "src": "contracts/IFiles.sol:283"
            }
          ],
          "types": {
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]",
              "numberOfBytes": "1600"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.7"
      },
      "contracts/IFiles.sol:Ownable": {
        "src": "contracts/IFiles.sol:286",
        "version": {
          "withMetadata": "f224f75ce98e2ac13e84dc54edebbbec0e40b5066bf333874f794bea8bc0c215",
          "withoutMetadata": "a3dd09084d5d3377afaa5e637593b425fb1172db63a48c2f62428555638775f8",
          "linkedWithoutMetadata": "a3dd09084d5d3377afaa5e637593b425fb1172db63a48c2f62428555638775f8"
        },
        "inherit": [
          "contracts/IFiles.sol:Initializable",
          "contracts/IFiles.sol:Context"
        ],
        "libraries": [],
        "methods": [
          "()",
          "initOwner(address)",
          "owner()",
          "renounceOwnership()",
          "transferOwnership(address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "contracts/IFiles.sol:251"
            },
            {
              "label": "initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "contracts/IFiles.sol:252"
            },
            {
              "label": "______gap",
              "offset": 0,
              "slot": "1",
              "type": "t_array(t_uint256)50_storage",
              "contract": "Initializable",
              "src": "contracts/IFiles.sol:283"
            },
            {
              "label": "_owner",
              "offset": 0,
              "slot": "51",
              "type": "t_address",
              "contract": "Ownable",
              "src": "contracts/IFiles.sol:287"
            },
            {
              "label": "_previousOwner",
              "offset": 0,
              "slot": "52",
              "type": "t_address",
              "contract": "Ownable",
              "src": "contracts/IFiles.sol:288"
            },
            {
              "label": "_lockTime",
              "offset": 0,
              "slot": "53",
              "type": "t_uint256",
              "contract": "Ownable",
              "src": "contracts/IFiles.sol:289"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]",
              "numberOfBytes": "1600"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.7"
      },
      "contracts/IFiles.sol:SafeMath": {
        "src": "contracts/IFiles.sol:68",
        "version": {
          "withMetadata": "f48b55024cc5d76705eb5ef6491896045619ce1c9a067e5eaa78d256baf5ac79",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.7"
      },
      "contracts/ReentrancyGuard.sol:ReentrancyGuard": {
        "src": "contracts/ReentrancyGuard.sol:5",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ReentrancyGuard",
            "src": "contracts/ReentrancyGuard.sol:12"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_status",
              "offset": 0,
              "slot": "0",
              "type": "t_uint256",
              "contract": "ReentrancyGuard",
              "src": "contracts/ReentrancyGuard.sol:10"
            }
          ],
          "types": {
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.7"
      },
      "contracts/Utils.sol:PancakeLibrary": {
        "src": "contracts/Utils.sol:219",
        "version": {
          "withMetadata": "c1a0d1cedb43644869000b7d9274d7dfa43e67f8c7fc1bb05b04f4f4d3adc7ff",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [
          "contracts/IFiles.sol:SafeMath"
        ],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.7"
      },
      "contracts/Utils.sol:Utils": {
        "src": "contracts/Utils.sol:6",
        "version": {
          "withMetadata": "56839d224d4baf72a0db14abc0bf3e79778bcf988016f949a200988d32764527",
          "withoutMetadata": "b8baa37c8e7f3700fd6e6ac40b224ce9c7f4deb576d103e4ed6c669a97910132",
          "linkedWithoutMetadata": "b8baa37c8e7f3700fd6e6ac40b224ce9c7f4deb576d103e4ed6c669a97910132"
        },
        "inherit": [],
        "libraries": [
          "contracts/IFiles.sol:SafeMath"
        ],
        "methods": [
          "calculateBNBReward(uint256,uint256,uint256,uint256)",
          "calculateTopUpClaim(uint256,uint256,uint256,uint256)",
          "swapTokensForEth(address,uint256)",
          "swapETHForTokens(address,address,uint256)",
          "swapTokensForTokens(address,address,uint256)",
          "getAmountsout(uint256,address)",
          "addLiquidity(address,address,uint256,uint256)",
          "getAntiFlipTaxNo(uint256)",
          "calcReward(uint256,uint256,uint256,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.7"
      }
    },
    {
      "contracts/ChainAnexToken.sol:ChainAnexToken": {
        "src": "contracts/ChainAnexToken.sol:304",
        "version": {
          "withMetadata": "df0ffb9ec51c56a9b5c5cc8e466b4ad29a2d6ee3ac8f7bca9d7054a08b49f9a8",
          "withoutMetadata": "e78e1330b923fc470a722cb855915d1a6d7d7006300a4bbfcdcc8de2084e0f0a",
          "linkedWithoutMetadata": "e78e1330b923fc470a722cb855915d1a6d7d7006300a4bbfcdcc8de2084e0f0a"
        },
        "inherit": [
          "contracts/ChainAnexToken.sol:Owned",
          "contracts/ChainAnexToken.sol:Context",
          "contracts/ChainAnexToken.sol:IBEP20"
        ],
        "libraries": [
          "contracts/ChainAnexToken.sol:SafeMath"
        ],
        "methods": [
          "(address,string,string,uint256)",
          "name()",
          "symbol()",
          "decimals()",
          "totalSupply()",
          "balanceOf(address)",
          "unLockedBalanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)",
          "transferOtherCurrencies(address,address)",
          "burn(address,uint256)",
          "distributeTokens(address,uint256,uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ChainAnexToken",
            "src": "contracts/ChainAnexToken.sol:328"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Owned",
              "src": "contracts/ChainAnexToken.sol:278"
            },
            {
              "label": "_newOwner",
              "offset": 0,
              "slot": "1",
              "type": "t_address",
              "contract": "Owned",
              "src": "contracts/ChainAnexToken.sol:279"
            },
            {
              "label": "_balances",
              "offset": 0,
              "slot": "2",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ChainAnexToken",
              "src": "contracts/ChainAnexToken.sol:308"
            },
            {
              "label": "_unlockedTokens",
              "offset": 0,
              "slot": "3",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ChainAnexToken",
              "src": "contracts/ChainAnexToken.sol:310"
            },
            {
              "label": "_allowances",
              "offset": 0,
              "slot": "4",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "ChainAnexToken",
              "src": "contracts/ChainAnexToken.sol:312"
            },
            {
              "label": "records",
              "offset": 0,
              "slot": "5",
              "type": "t_mapping(t_address,t_array(t_struct(LockRecord)396_storage)dyn_storage)",
              "contract": "ChainAnexToken",
              "src": "contracts/ChainAnexToken.sol:320"
            },
            {
              "label": "_totalSupply",
              "offset": 0,
              "slot": "6",
              "type": "t_uint256",
              "contract": "ChainAnexToken",
              "src": "contracts/ChainAnexToken.sol:322"
            },
            {
              "label": "_name",
              "offset": 0,
              "slot": "7",
              "type": "t_string_storage",
              "contract": "ChainAnexToken",
              "src": "contracts/ChainAnexToken.sol:324"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "8",
              "type": "t_string_storage",
              "contract": "ChainAnexToken",
              "src": "contracts/ChainAnexToken.sol:325"
            },
            {
              "label": "_decimals",
              "offset": 0,
              "slot": "9",
              "type": "t_uint8",
              "contract": "ChainAnexToken",
              "src": "contracts/ChainAnexToken.sol:326"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_struct(LockRecord)396_storage)dyn_storage": {
              "label": "struct ChainAnexToken.LockRecord[]",
              "numberOfBytes": "32"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_mapping(t_address,t_array(t_struct(LockRecord)396_storage)dyn_storage)": {
              "label": "mapping(address => struct ChainAnexToken.LockRecord[])",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_struct(LockRecord)396_storage": {
              "label": "struct ChainAnexToken.LockRecord",
              "members": [
                {
                  "label": "lockingPeriod",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "tokens",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "isUnlocked",
                  "type": "t_bool",
                  "offset": 0,
                  "slot": "2"
                }
              ],
              "numberOfBytes": "96"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint8": {
              "label": "uint8",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.6.12"
      },
      "contracts/ChainAnexToken.sol:Context": {
        "src": "contracts/ChainAnexToken.sol:259",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.6.12"
      },
      "contracts/ChainAnexToken.sol:IBEP20": {
        "src": "contracts/ChainAnexToken.sol:13",
        "inherit": [],
        "libraries": [],
        "methods": [
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.6.12"
      },
      "contracts/ChainAnexToken.sol:Owned": {
        "src": "contracts/ChainAnexToken.sol:276",
        "version": {
          "withMetadata": "dcb4610bef28dc3500f3e18f8dec6e4af872306c1c5c9319b660449eddc90a12",
          "withoutMetadata": "e347010291216f8e50d42345679e477a9406c67cf2ba4efc7336bd3a4943129d",
          "linkedWithoutMetadata": "e347010291216f8e50d42345679e477a9406c67cf2ba4efc7336bd3a4943129d"
        },
        "inherit": [
          "contracts/ChainAnexToken.sol:Context"
        ],
        "libraries": [],
        "methods": [
          "transferOwnership(address)",
          "acceptOwnership()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Owned",
              "src": "contracts/ChainAnexToken.sol:278"
            },
            {
              "label": "_newOwner",
              "offset": 0,
              "slot": "1",
              "type": "t_address",
              "contract": "Owned",
              "src": "contracts/ChainAnexToken.sol:279"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.6.12"
      },
      "contracts/ChainAnexToken.sol:SafeMath": {
        "src": "contracts/ChainAnexToken.sol:104",
        "version": {
          "withMetadata": "da039a9768723916865be70f452233a5be631e289d58fbc11bba0a3312a1df3c",
          "withoutMetadata": "aaa148c474cd10e1a6cd0a52c0b55f1aa9b7bb7b42d7f1cb5acaea4f42f04bc8",
          "linkedWithoutMetadata": "aaa148c474cd10e1a6cd0a52c0b55f1aa9b7bb7b42d7f1cb5acaea4f42f04bc8"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.6.12"
      }
    },
    {
      "contracts/EthCallTest.sol:EthCallTest": {
        "src": "contracts/EthCallTest.sol:4",
        "version": {
          "withMetadata": "88044c06a2d6799a2aa3e700678ca2f5c03ae41dd45c25e81204293c6afa7a30",
          "withoutMetadata": "bd4c24fe6514787ffa1af28f8fe08df9cf2c0630aac3b2c09c72037cdeac9076",
          "linkedWithoutMetadata": "bd4c24fe6514787ffa1af28f8fe08df9cf2c0630aac3b2c09c72037cdeac9076"
        },
        "inherit": [],
        "libraries": [],
        "methods": [
          "caller()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.21"
      }
    },
    {
      "contracts/EthCallTest.sol:EthCallTest": {
        "src": "contracts/EthCallTest.sol:4",
        "version": {
          "withMetadata": "88044c06a2d6799a2aa3e700678ca2f5c03ae41dd45c25e81204293c6afa7a30",
          "withoutMetadata": "bd4c24fe6514787ffa1af28f8fe08df9cf2c0630aac3b2c09c72037cdeac9076",
          "linkedWithoutMetadata": "bd4c24fe6514787ffa1af28f8fe08df9cf2c0630aac3b2c09c72037cdeac9076"
        },
        "inherit": [],
        "libraries": [],
        "methods": [
          "caller()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.21"
      }
    },
    {
      "contracts/EthCallTest.sol:EthCallTest": {
        "src": "contracts/EthCallTest.sol:4",
        "version": {
          "withMetadata": "88044c06a2d6799a2aa3e700678ca2f5c03ae41dd45c25e81204293c6afa7a30",
          "withoutMetadata": "bd4c24fe6514787ffa1af28f8fe08df9cf2c0630aac3b2c09c72037cdeac9076",
          "linkedWithoutMetadata": "bd4c24fe6514787ffa1af28f8fe08df9cf2c0630aac3b2c09c72037cdeac9076"
        },
        "inherit": [],
        "libraries": [],
        "methods": [
          "caller()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.21"
      }
    },
    {
      "contracts/EthCallTest.sol:EthCallTest": {
        "src": "contracts/EthCallTest.sol:4",
        "version": {
          "withMetadata": "88044c06a2d6799a2aa3e700678ca2f5c03ae41dd45c25e81204293c6afa7a30",
          "withoutMetadata": "bd4c24fe6514787ffa1af28f8fe08df9cf2c0630aac3b2c09c72037cdeac9076",
          "linkedWithoutMetadata": "bd4c24fe6514787ffa1af28f8fe08df9cf2c0630aac3b2c09c72037cdeac9076"
        },
        "inherit": [],
        "libraries": [],
        "methods": [
          "caller()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.21"
      }
    },
    {
      "@openzeppelin/contracts/access/Ownable.sol:Ownable": {
        "src": "@openzeppelin/contracts/access/Ownable.sol:20",
        "inherit": [
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [],
        "methods": [
          "owner()",
          "renounceOwnership()",
          "transferOwnership(address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Ownable",
            "src": "@openzeppelin/contracts/access/Ownable.sol:28"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Ownable",
              "src": "@openzeppelin/contracts/access/Ownable.sol:21"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.21"
      },
      "@openzeppelin/contracts/security/ReentrancyGuard.sol:ReentrancyGuard": {
        "src": "@openzeppelin/contracts/security/ReentrancyGuard.sol:22",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ReentrancyGuard",
            "src": "@openzeppelin/contracts/security/ReentrancyGuard.sol:39"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_status",
              "offset": 0,
              "slot": "0",
              "type": "t_uint256",
              "contract": "ReentrancyGuard",
              "src": "@openzeppelin/contracts/security/ReentrancyGuard.sol:37"
            }
          ],
          "types": {
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.21"
      },
      "@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20": {
        "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:35",
        "version": {
          "withMetadata": "b653be9ad258ddaafa2304767243ba86eac7156acd9bf1a196bee0fef9b1c3a9",
          "withoutMetadata": "1d55e2dc08aae4fa5bd2ca8ac476f7a2e63bdfa7b0b51d4bd61db8705143a140",
          "linkedWithoutMetadata": "1d55e2dc08aae4fa5bd2ca8ac476f7a2e63bdfa7b0b51d4bd61db8705143a140"
        },
        "inherit": [
          "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol:IERC20Metadata",
          "@openzeppelin/contracts/token/ERC20/IERC20.sol:IERC20",
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [],
        "methods": [
          "(string,string)",
          "name()",
          "symbol()",
          "decimals()",
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)",
          "increaseAllowance(address,uint256)",
          "decreaseAllowance(address,uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ERC20",
            "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:54"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_balances",
              "offset": 0,
              "slot": "0",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:36"
            },
            {
              "label": "_allowances",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:38"
            },
            {
              "label": "_totalSupply",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:40"
            },
            {
              "label": "_name",
              "offset": 0,
              "slot": "3",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:42"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "4",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:43"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.21"
      },
      "@openzeppelin/contracts/token/ERC20/IERC20.sol:IERC20": {
        "src": "@openzeppelin/contracts/token/ERC20/IERC20.sol:9",
        "inherit": [],
        "libraries": [],
        "methods": [
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.21"
      },
      "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol:IERC20Metadata": {
        "src": "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol:13",
        "inherit": [
          "@openzeppelin/contracts/token/ERC20/IERC20.sol:IERC20"
        ],
        "libraries": [],
        "methods": [
          "name()",
          "symbol()",
          "decimals()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.21"
      },
      "@openzeppelin/contracts/token/ERC20/extensions/draft-IERC20Permit.sol:IERC20Permit": {
        "src": "@openzeppelin/contracts/token/ERC20/extensions/draft-IERC20Permit.sol:14",
        "inherit": [],
        "libraries": [],
        "methods": [
          "permit(address,address,uint256,uint256,uint8,bytes32,bytes32)",
          "nonces(address)",
          "DOMAIN_SEPARATOR()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.21"
      },
      "@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol:SafeERC20": {
        "src": "@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol:19",
        "version": {
          "withMetadata": "945db44b71722f915e3e7352ee22f854dfe8000e69eee742d881b64279bb0ad8",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [
          "@openzeppelin/contracts/utils/Address.sol:Address"
        ],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.21"
      },
      "@openzeppelin/contracts/utils/Address.sol:Address": {
        "src": "@openzeppelin/contracts/utils/Address.sol:9",
        "version": {
          "withMetadata": "9401bbf4dc0decc4c739a060967031a16e8de389388d98c32ec11cff440d6513",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [
          {
            "kind": "delegatecall",
            "src": "@openzeppelin/contracts/utils/Address.sol:191"
          },
          {
            "kind": "delegatecall",
            "src": "@openzeppelin/contracts/utils/Address.sol:191"
          }
        ],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.21"
      },
      "@openzeppelin/contracts/utils/Context.sol:Context": {
        "src": "@openzeppelin/contracts/utils/Context.sol:16",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.21"
      },
      "@openzeppelin/contracts/utils/math/Math.sol:Math": {
        "src": "@openzeppelin/contracts/utils/math/Math.sol:9",
        "version": {
          "withMetadata": "f58f3d1d6b53395057afc8a5e1edcbfcd81cdec0dfcf6b1290c8c2368b975278",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.21"
      },
      "@openzeppelin/contracts/utils/math/SafeMath.sol:SafeMath": {
        "src": "@openzeppelin/contracts/utils/math/SafeMath.sol:16",
        "version": {
          "withMetadata": "4167346fe154a63f59e72262dbca9ccb097c97b61ec5dfe163259378386d2ba4",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.21"
      },
      "contracts/Presale.sol:IGoldToken": {
        "src": "contracts/Presale.sol:8",
        "inherit": [],
        "libraries": [],
        "methods": [
          "mint(address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.21"
      },
      "contracts/Presale.sol:Presale": {
        "src": "contracts/Presale.sol:12",
        "version": {
          "withMetadata": "55de4f41aa2ae4e88c3e975f7f7c871c8630a6a915f505e8b168c82d5665ef13",
          "withoutMetadata": "2fa5a3bfe1ae715a2695aad2a1fdda65dd5f2dfe346a8af0822d82b296b7bc1b",
          "linkedWithoutMetadata": "2fa5a3bfe1ae715a2695aad2a1fdda65dd5f2dfe346a8af0822d82b296b7bc1b"
        },
        "inherit": [
          "@openzeppelin/contracts/security/ReentrancyGuard.sol:ReentrancyGuard",
          "@openzeppelin/contracts/access/Ownable.sol:Ownable",
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [],
        "methods": [
          "(address,address,address,uint256)",
          "createPreSale((uint256,uint256,uint256))",
          "sale()",
          "getCanIdoAmount(address)",
          "bindReffer(address)",
          "userBalance(address)",
          "userRewardBalance(address)",
          "userWithdraw()",
          "teamWithdraw(address)",
          "setUserWithdrawTime(uint256)",
          "setInviteMin(uint256)",
          "setPerMaxBuyUsdt(uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Presale",
            "src": "contracts/Presale.sol:46"
          },
          {
            "kind": "state-variable-assignment",
            "name": "perMaxBuyUsdt",
            "src": "contracts/Presale.sol:15"
          },
          {
            "kind": "state-variable-assignment",
            "name": "inviteMin",
            "src": "contracts/Presale.sol:31"
          },
          {
            "kind": "state-variable-assignment",
            "name": "maxSale",
            "src": "contracts/Presale.sol:33"
          },
          {
            "kind": "state-variable-assignment",
            "name": "rewardLevel",
            "src": "contracts/Presale.sol:36"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Ownable",
              "src": "@openzeppelin/contracts/access/Ownable.sol:21"
            },
            {
              "label": "_status",
              "offset": 0,
              "slot": "1",
              "type": "t_uint256",
              "contract": "ReentrancyGuard",
              "src": "@openzeppelin/contracts/security/ReentrancyGuard.sol:37"
            },
            {
              "label": "userWithdrawTime",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "Presale",
              "src": "contracts/Presale.sol:13"
            },
            {
              "label": "perMaxBuyUsdt",
              "offset": 0,
              "slot": "3",
              "type": "t_uint256",
              "contract": "Presale",
              "src": "contracts/Presale.sol:15"
            },
            {
              "label": "teamAddress",
              "offset": 0,
              "slot": "4",
              "type": "t_address",
              "contract": "Presale",
              "src": "contracts/Presale.sol:16"
            },
            {
              "label": "saleToken",
              "offset": 0,
              "slot": "5",
              "type": "t_address",
              "contract": "Presale",
              "src": "contracts/Presale.sol:17"
            },
            {
              "label": "usdtToken",
              "offset": 0,
              "slot": "6",
              "type": "t_address",
              "contract": "Presale",
              "src": "contracts/Presale.sol:18"
            },
            {
              "label": "goldTokenAddress",
              "offset": 0,
              "slot": "7",
              "type": "t_address",
              "contract": "Presale",
              "src": "contracts/Presale.sol:19"
            },
            {
              "label": "balances",
              "offset": 0,
              "slot": "8",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "Presale",
              "src": "contracts/Presale.sol:20"
            },
            {
              "label": "userBuyTotalUsdt",
              "offset": 0,
              "slot": "9",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "Presale",
              "src": "contracts/Presale.sol:21"
            },
            {
              "label": "rewardBalances",
              "offset": 0,
              "slot": "10",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "Presale",
              "src": "contracts/Presale.sol:22"
            },
            {
              "label": "reffers",
              "offset": 0,
              "slot": "11",
              "type": "t_mapping(t_address,t_address)",
              "contract": "Presale",
              "src": "contracts/Presale.sol:23"
            },
            {
              "label": "refferNumber",
              "offset": 0,
              "slot": "12",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "Presale",
              "src": "contracts/Presale.sol:24"
            },
            {
              "label": "teamRefferNumber",
              "offset": 0,
              "slot": "13",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "Presale",
              "src": "contracts/Presale.sol:25"
            },
            {
              "label": "firstIdo",
              "offset": 0,
              "slot": "14",
              "type": "t_mapping(t_address,t_bool)",
              "contract": "Presale",
              "src": "contracts/Presale.sol:26"
            },
            {
              "label": "totalIdoUSDT",
              "offset": 0,
              "slot": "15",
              "type": "t_uint256",
              "contract": "Presale",
              "src": "contracts/Presale.sol:27"
            },
            {
              "label": "totalIdoUser",
              "offset": 0,
              "slot": "16",
              "type": "t_uint256",
              "contract": "Presale",
              "src": "contracts/Presale.sol:28"
            },
            {
              "label": "totalSale",
              "offset": 0,
              "slot": "17",
              "type": "t_uint256",
              "contract": "Presale",
              "src": "contracts/Presale.sol:29"
            },
            {
              "label": "inviteMin",
              "offset": 0,
              "slot": "18",
              "type": "t_uint256",
              "contract": "Presale",
              "src": "contracts/Presale.sol:31"
            },
            {
              "label": "maxSale",
              "offset": 0,
              "slot": "19",
              "type": "t_uint256",
              "contract": "Presale",
              "src": "contracts/Presale.sol:33"
            },
            {
              "label": "isCloseSale",
              "offset": 0,
              "slot": "20",
              "type": "t_bool",
              "contract": "Presale",
              "src": "contracts/Presale.sol:34"
            },
            {
              "label": "rewardLevel",
              "offset": 0,
              "slot": "21",
              "type": "t_array(t_uint256)dyn_storage",
              "contract": "Presale",
              "src": "contracts/Presale.sol:36"
            },
            {
              "label": "presaleInfo",
              "offset": 0,
              "slot": "22",
              "type": "t_struct(PresaleInfo)2392_storage",
              "contract": "Presale",
              "src": "contracts/Presale.sol:44"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_uint256)dyn_storage": {
              "label": "uint256[]",
              "numberOfBytes": "32"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_mapping(t_address,t_address)": {
              "label": "mapping(address => address)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_struct(PresaleInfo)2392_storage": {
              "label": "struct Presale.PresaleInfo",
              "members": [
                {
                  "label": "startTime",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "endTime",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "price",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "2"
                }
              ],
              "numberOfBytes": "96"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.21"
      },
      "contracts/Staking.sol:IRejuvenate": {
        "src": "contracts/Staking.sol:9",
        "inherit": [],
        "libraries": [],
        "methods": [
          "mint(address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.21"
      },
      "contracts/Staking.sol:Staking": {
        "src": "contracts/Staking.sol:13",
        "version": {
          "withMetadata": "d4a43fbe5f8d6347383f0680dba0a94146fceda61d8f28fb0ed926fda6eca5bc",
          "withoutMetadata": "8e35a11dc4a30aced1c096dd5db7f6424d19b292b732012b8d44d054f9cea466",
          "linkedWithoutMetadata": "8e35a11dc4a30aced1c096dd5db7f6424d19b292b732012b8d44d054f9cea466"
        },
        "inherit": [
          "@openzeppelin/contracts/security/ReentrancyGuard.sol:ReentrancyGuard",
          "@openzeppelin/contracts/access/Ownable.sol:Ownable",
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [],
        "methods": [
          "()",
          "changeRewardsPerBlock(uint256)",
          "rewardPerToken()",
          "earned(address)",
          "stake(uint256)",
          "unstake(uint256)",
          "claimRewards()",
          "pause()",
          "unpause()",
          "inCaseTokensGetStuck(address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Staking",
            "src": "contracts/Staking.sol:33"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Ownable",
              "src": "@openzeppelin/contracts/access/Ownable.sol:21"
            },
            {
              "label": "_status",
              "offset": 0,
              "slot": "1",
              "type": "t_uint256",
              "contract": "ReentrancyGuard",
              "src": "@openzeppelin/contracts/security/ReentrancyGuard.sol:37"
            },
            {
              "label": "paused",
              "offset": 0,
              "slot": "2",
              "type": "t_bool",
              "contract": "Staking",
              "src": "contracts/Staking.sol:14"
            },
            {
              "label": "_treasury",
              "offset": 1,
              "slot": "2",
              "type": "t_address",
              "contract": "Staking",
              "src": "contracts/Staking.sol:15"
            },
            {
              "label": "token",
              "offset": 0,
              "slot": "3",
              "type": "t_address",
              "contract": "Staking",
              "src": "contracts/Staking.sol:17"
            },
            {
              "label": "rewardRate",
              "offset": 0,
              "slot": "4",
              "type": "t_uint256",
              "contract": "Staking",
              "src": "contracts/Staking.sol:19"
            },
            {
              "label": "_lastUpdateBlock",
              "offset": 0,
              "slot": "5",
              "type": "t_uint256",
              "contract": "Staking",
              "src": "contracts/Staking.sol:20"
            },
            {
              "label": "_rewardsPerToken",
              "offset": 0,
              "slot": "6",
              "type": "t_uint256",
              "contract": "Staking",
              "src": "contracts/Staking.sol:21"
            },
            {
              "label": "data",
              "offset": 0,
              "slot": "7",
              "type": "t_array(t_struct(StakingData)3375_storage)dyn_storage",
              "contract": "Staking",
              "src": "contracts/Staking.sol:22"
            },
            {
              "label": "_userRewardsPerToken",
              "offset": 0,
              "slot": "8",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "Staking",
              "src": "contracts/Staking.sol:24"
            },
            {
              "label": "_rewards",
              "offset": 0,
              "slot": "9",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "Staking",
              "src": "contracts/Staking.sol:25"
            },
            {
              "label": "totalStaked",
              "offset": 0,
              "slot": "10",
              "type": "t_uint256",
              "contract": "Staking",
              "src": "contracts/Staking.sol:27"
            },
            {
              "label": "_balances",
              "offset": 0,
              "slot": "11",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "Staking",
              "src": "contracts/Staking.sol:28"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_struct(StakingData)3375_storage)dyn_storage": {
              "label": "struct StakingData[]",
              "numberOfBytes": "32"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_struct(StakingData)3375_storage": {
              "label": "struct StakingData",
              "members": [
                {
                  "label": "block",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "staked",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "1"
                }
              ],
              "numberOfBytes": "64"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.21"
      }
    },
    {
      "contracts/RichHusky.sol:Checker": {
        "src": "contracts/RichHusky.sol:520",
        "version": {
          "withMetadata": "17e1cf10fdffcda321c1a1f59d2b06178394724b4d8ad9b035a718122fed8a52",
          "withoutMetadata": "0faf6ca500781d04501ba7e4cf9138e35957321419c6ca29798480c22b3cc5cd",
          "linkedWithoutMetadata": "0faf6ca500781d04501ba7e4cf9138e35957321419c6ca29798480c22b3cc5cd"
        },
        "inherit": [],
        "libraries": [],
        "methods": [
          "isValid(address,address,address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.21"
      },
      "contracts/RichHusky.sol:Context": {
        "src": "contracts/RichHusky.sol:27",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.21"
      },
      "contracts/RichHusky.sol:ERC20": {
        "src": "contracts/RichHusky.sol:162",
        "version": {
          "withMetadata": "e092e43bc9c3243b7138ce015fa92d358fa66a764079145cfe1339f160fd055e",
          "withoutMetadata": "e248eda4094a79267c1d78eb85fb3a082e2ba4d153192b2644d6357dbed158f3",
          "linkedWithoutMetadata": "e248eda4094a79267c1d78eb85fb3a082e2ba4d153192b2644d6357dbed158f3"
        },
        "inherit": [
          "contracts/RichHusky.sol:IERC20Metadata",
          "contracts/RichHusky.sol:IERC20",
          "contracts/RichHusky.sol:Context"
        ],
        "libraries": [],
        "methods": [
          "(string,string)",
          "name()",
          "symbol()",
          "decimals()",
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)",
          "increaseAllowance(address,uint256)",
          "decreaseAllowance(address,uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ERC20",
            "src": "contracts/RichHusky.sol:181"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_balances",
              "offset": 0,
              "slot": "0",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC20",
              "src": "contracts/RichHusky.sol:163"
            },
            {
              "label": "_allowances",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "ERC20",
              "src": "contracts/RichHusky.sol:165"
            },
            {
              "label": "_totalSupply",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "ERC20",
              "src": "contracts/RichHusky.sol:167"
            },
            {
              "label": "_name",
              "offset": 0,
              "slot": "3",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "contracts/RichHusky.sol:169"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "4",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "contracts/RichHusky.sol:170"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.21"
      },
      "contracts/RichHusky.sol:IERC20": {
        "src": "contracts/RichHusky.sol:40",
        "inherit": [],
        "libraries": [],
        "methods": [
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.21"
      },
      "contracts/RichHusky.sol:IERC20Metadata": {
        "src": "contracts/RichHusky.sol:120",
        "inherit": [
          "contracts/RichHusky.sol:IERC20"
        ],
        "libraries": [],
        "methods": [
          "name()",
          "symbol()",
          "decimals()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.21"
      },
      "contracts/RichHusky.sol:IFactory": {
        "src": "contracts/RichHusky.sol:535",
        "inherit": [],
        "libraries": [],
        "methods": [
          "createPair(address,address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.21"
      },
      "contracts/RichHusky.sol:IGasToken": {
        "src": "contracts/RichHusky.sol:539",
        "inherit": [],
        "libraries": [],
        "methods": [
          "free(uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.21"
      },
      "contracts/RichHusky.sol:RichHusky": {
        "src": "contracts/RichHusky.sol:543",
        "version": {
          "withMetadata": "ce802161ba5ffecece3a7488fb3a07a35d8f78edf3674187d3eb27cc30777604",
          "withoutMetadata": "7c4ce62a347a52dc2685dbb41f6d968bb51e7d6abb10665abf0c7d7699da0d36",
          "linkedWithoutMetadata": "7c4ce62a347a52dc2685dbb41f6d968bb51e7d6abb10665abf0c7d7699da0d36"
        },
        "inherit": [
          "contracts/RichHusky.sol:ERC20",
          "contracts/RichHusky.sol:IERC20Metadata",
          "contracts/RichHusky.sol:IERC20",
          "contracts/RichHusky.sol:Context"
        ],
        "libraries": [
          "contracts/RichHusky.sol:Checker"
        ],
        "methods": [
          "(address)",
          "mint(address,uint256)",
          "updateAirdropAmount(uint256)",
          "withdrawFee(address,uint256)",
          "airdrop(address[],uint256)",
          "addBetaUsers(address[])",
          "removeBetaUsers(address[])",
          "multiCall(address[],bytes[])"
        ],
        "linkReferences": [
          {
            "src": "contracts/RichHusky.sol",
            "name": "Checker",
            "length": 20,
            "start": 5176,
            "placeholder": "__$1cb883ae52507a2d00adae80c79f632cb4$__"
          }
        ],
        "errors": [
          {
            "kind": "constructor",
            "contract": "RichHusky",
            "src": "contracts/RichHusky.sol:554"
          },
          {
            "kind": "state-variable-immutable",
            "name": "pancakeFactory",
            "src": "contracts/RichHusky.sol:549"
          },
          {
            "kind": "state-variable-immutable",
            "name": "WBNB",
            "src": "contracts/RichHusky.sol:550"
          },
          {
            "kind": "state-variable-immutable",
            "name": "GasToken",
            "src": "contracts/RichHusky.sol:552"
          },
          {
            "kind": "external-library-linking",
            "name": "Checker",
            "src": "contracts/RichHusky.sol"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_balances",
              "offset": 0,
              "slot": "0",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC20",
              "src": "contracts/RichHusky.sol:163"
            },
            {
              "label": "_allowances",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "ERC20",
              "src": "contracts/RichHusky.sol:165"
            },
            {
              "label": "_totalSupply",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "ERC20",
              "src": "contracts/RichHusky.sol:167"
            },
            {
              "label": "_name",
              "offset": 0,
              "slot": "3",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "contracts/RichHusky.sol:169"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "4",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "contracts/RichHusky.sol:170"
            },
            {
              "label": "dev",
              "offset": 0,
              "slot": "5",
              "type": "t_address",
              "contract": "RichHusky",
              "src": "contracts/RichHusky.sol:544"
            },
            {
              "label": "airdropAmount",
              "offset": 0,
              "slot": "6",
              "type": "t_uint256",
              "contract": "RichHusky",
              "src": "contracts/RichHusky.sol:545"
            },
            {
              "label": "betaUsers",
              "offset": 0,
              "slot": "7",
              "type": "t_mapping(t_address,t_bool)",
              "contract": "RichHusky",
              "src": "contracts/RichHusky.sol:546"
            },
            {
              "label": "pair",
              "offset": 0,
              "slot": "8",
              "type": "t_address",
              "contract": "RichHusky",
              "src": "contracts/RichHusky.sol:547"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.21"
      }
    },
    {
      "contracts/FirstDao.sol:FistDao": {
        "src": "contracts/FirstDao.sol:127",
        "version": {
          "withMetadata": "87594bf7d015e41aaf777bc0dc62e9e8a3685546fcfa065eb87291ef7f3f16f4",
          "withoutMetadata": "5bdb2538a3ba33172d93851875dfca20475ce01973348f896430788ab9d8314a",
          "linkedWithoutMetadata": "5bdb2538a3ba33172d93851875dfca20475ce01973348f896430788ab9d8314a"
        },
        "inherit": [
          "contracts/FirstDao.sol:Ownable",
          "contracts/FirstDao.sol:IERC20"
        ],
        "libraries": [
          "contracts/FirstDao.sol:SafeMath"
        ],
        "methods": [
          "(string,string)",
          "()",
          "initialize(address,address,address,address)",
          "transferEvent(address,address,uint256)",
          "feeState()",
          "getIsApproved(address)",
          "searchExcludedFromFeeAccounts(address)",
          "getDefaultBalance()",
          "insertIntoExcludedFromFeeAccounts(address[])",
          "deleteFromExcludedFromFeeAccounts(address[])",
          "claim(address,uint256)",
          "name()",
          "symbol()",
          "decimals()",
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "transferFrom(address,address,uint256)",
          "approve(address,uint256)",
          "allowance(address,address)",
          "increaseAllowance(address,uint256)",
          "decreaseAllowance(address,uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "FistDao",
            "src": "contracts/FirstDao.sol:159"
          },
          {
            "kind": "state-variable-assignment",
            "name": "_decimals",
            "src": "contracts/FirstDao.sol:132"
          },
          {
            "kind": "state-variable-assignment",
            "name": "_totalSupply",
            "src": "contracts/FirstDao.sol:133"
          },
          {
            "kind": "state-variable-assignment",
            "name": "_feeTax",
            "src": "contracts/FirstDao.sol:138"
          },
          {
            "kind": "state-variable-assignment",
            "name": "_feeMining",
            "src": "contracts/FirstDao.sol:139"
          },
          {
            "kind": "state-variable-assignment",
            "name": "_feeLiquidity",
            "src": "contracts/FirstDao.sol:140"
          },
          {
            "kind": "state-variable-assignment",
            "name": "_feeDivisor",
            "src": "contracts/FirstDao.sol:141"
          },
          {
            "kind": "state-variable-assignment",
            "name": "_removeAllFee",
            "src": "contracts/FirstDao.sol:143"
          },
          {
            "kind": "state-variable-assignment",
            "name": "_defaultBalance",
            "src": "contracts/FirstDao.sol:150"
          },
          {
            "kind": "state-variable-assignment",
            "name": "_defaultAmount",
            "src": "contracts/FirstDao.sol:151"
          },
          {
            "kind": "state-variable-assignment",
            "name": "_initialized111",
            "src": "contracts/FirstDao.sol:156"
          },
          {
            "kind": "state-variable-assignment",
            "name": "_reentry",
            "src": "contracts/FirstDao.sol:157"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Ownable",
              "src": "contracts/FirstDao.sol:58"
            },
            {
              "label": "_previousOwner",
              "offset": 0,
              "slot": "1",
              "type": "t_address",
              "contract": "Ownable",
              "src": "contracts/FirstDao.sol:59"
            },
            {
              "label": "_switchDate",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "Ownable",
              "src": "contracts/FirstDao.sol:60"
            },
            {
              "label": "_name",
              "offset": 0,
              "slot": "3",
              "type": "t_string_storage",
              "contract": "FistDao",
              "src": "contracts/FirstDao.sol:130"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "4",
              "type": "t_string_storage",
              "contract": "FistDao",
              "src": "contracts/FirstDao.sol:131"
            },
            {
              "label": "_decimals",
              "offset": 0,
              "slot": "5",
              "type": "t_uint8",
              "contract": "FistDao",
              "src": "contracts/FirstDao.sol:132"
            },
            {
              "label": "_totalSupply",
              "offset": 0,
              "slot": "6",
              "type": "t_uint256",
              "contract": "FistDao",
              "src": "contracts/FirstDao.sol:133"
            },
            {
              "label": "_balances",
              "offset": 0,
              "slot": "7",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "FistDao",
              "src": "contracts/FirstDao.sol:134"
            },
            {
              "label": "_allowances",
              "offset": 0,
              "slot": "8",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "FistDao",
              "src": "contracts/FirstDao.sol:135"
            },
            {
              "label": "_isApproved",
              "offset": 0,
              "slot": "9",
              "type": "t_mapping(t_address,t_bool)",
              "contract": "FistDao",
              "src": "contracts/FirstDao.sol:136"
            },
            {
              "label": "_feeTax",
              "offset": 0,
              "slot": "10",
              "type": "t_uint256",
              "contract": "FistDao",
              "src": "contracts/FirstDao.sol:138"
            },
            {
              "label": "_feeMining",
              "offset": 0,
              "slot": "11",
              "type": "t_uint256",
              "contract": "FistDao",
              "src": "contracts/FirstDao.sol:139"
            },
            {
              "label": "_feeLiquidity",
              "offset": 0,
              "slot": "12",
              "type": "t_uint256",
              "contract": "FistDao",
              "src": "contracts/FirstDao.sol:140"
            },
            {
              "label": "_feeDivisor",
              "offset": 0,
              "slot": "13",
              "type": "t_uint256",
              "contract": "FistDao",
              "src": "contracts/FirstDao.sol:141"
            },
            {
              "label": "_removeAllFee",
              "offset": 0,
              "slot": "14",
              "type": "t_bool",
              "contract": "FistDao",
              "src": "contracts/FirstDao.sol:143"
            },
            {
              "label": "_core",
              "offset": 1,
              "slot": "14",
              "type": "t_address",
              "contract": "FistDao",
              "src": "contracts/FirstDao.sol:145"
            },
            {
              "label": "_taxReceiver",
              "offset": 0,
              "slot": "15",
              "type": "t_address",
              "contract": "FistDao",
              "src": "contracts/FirstDao.sol:146"
            },
            {
              "label": "_miningPool",
              "offset": 0,
              "slot": "16",
              "type": "t_address",
              "contract": "FistDao",
              "src": "contracts/FirstDao.sol:147"
            },
            {
              "label": "_liquidityPool",
              "offset": 0,
              "slot": "17",
              "type": "t_address",
              "contract": "FistDao",
              "src": "contracts/FirstDao.sol:148"
            },
            {
              "label": "_defaultBalance",
              "offset": 0,
              "slot": "18",
              "type": "t_uint256",
              "contract": "FistDao",
              "src": "contracts/FirstDao.sol:150"
            },
            {
              "label": "_defaultAmount",
              "offset": 0,
              "slot": "19",
              "type": "t_uint256",
              "contract": "FistDao",
              "src": "contracts/FirstDao.sol:151"
            },
            {
              "label": "_isExcludedFromFee",
              "offset": 0,
              "slot": "20",
              "type": "t_mapping(t_address,t_bool)",
              "contract": "FistDao",
              "src": "contracts/FirstDao.sol:153"
            },
            {
              "label": "_excludedFromFeeAccounts",
              "offset": 0,
              "slot": "21",
              "type": "t_array(t_address)dyn_storage",
              "contract": "FistDao",
              "src": "contracts/FirstDao.sol:154"
            },
            {
              "label": "_initialized111",
              "offset": 0,
              "slot": "22",
              "type": "t_bool",
              "contract": "FistDao",
              "src": "contracts/FirstDao.sol:156"
            },
            {
              "label": "_reentry",
              "offset": 0,
              "slot": "23",
              "type": "t_uint256",
              "contract": "FistDao",
              "src": "contracts/FirstDao.sol:157"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_address)dyn_storage": {
              "label": "address[]",
              "numberOfBytes": "32"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint8": {
              "label": "uint8",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.21"
      },
      "contracts/FirstDao.sol:ICore": {
        "src": "contracts/FirstDao.sol:119",
        "inherit": [],
        "libraries": [],
        "methods": [
          "getPairAddress()",
          "airdrop()",
          "safety(address,address)",
          "start()",
          "end()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.21"
      },
      "contracts/FirstDao.sol:IERC20": {
        "src": "contracts/FirstDao.sol:8",
        "inherit": [],
        "libraries": [],
        "methods": [
          "name()",
          "symbol()",
          "decimals()",
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "transferFrom(address,address,uint256)",
          "approve(address,uint256)",
          "allowance(address,address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.21"
      },
      "contracts/FirstDao.sol:IFactory": {
        "src": "contracts/FirstDao.sol:91",
        "inherit": [],
        "libraries": [],
        "methods": [
          "createPair(address,address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.21"
      },
      "contracts/FirstDao.sol:IRouter01": {
        "src": "contracts/FirstDao.sol:95",
        "inherit": [],
        "libraries": [],
        "methods": [
          "factory()",
          "addLiquidity(address,address,uint256,uint256,uint256,uint256,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.21"
      },
      "contracts/FirstDao.sol:IRouter02": {
        "src": "contracts/FirstDao.sol:109",
        "inherit": [
          "contracts/FirstDao.sol:IRouter01"
        ],
        "libraries": [],
        "methods": [
          "swapExactTokensForTokensSupportingFeeOnTransferTokens(uint256,uint256,address[],address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.21"
      },
      "contracts/FirstDao.sol:Ownable": {
        "src": "contracts/FirstDao.sol:57",
        "inherit": [],
        "libraries": [],
        "methods": [
          "owner()",
          "switchDate()",
          "transferOwnership(uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Ownable",
            "src": "contracts/FirstDao.sol:63"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Ownable",
              "src": "contracts/FirstDao.sol:58"
            },
            {
              "label": "_previousOwner",
              "offset": 0,
              "slot": "1",
              "type": "t_address",
              "contract": "Ownable",
              "src": "contracts/FirstDao.sol:59"
            },
            {
              "label": "_switchDate",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "Ownable",
              "src": "contracts/FirstDao.sol:60"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.21"
      },
      "contracts/FirstDao.sol:SafeMath": {
        "src": "contracts/FirstDao.sol:22",
        "version": {
          "withMetadata": "95eb3df1bd62a62b1bf87150f7314053125cc709ed6eb26f9bf2a30d8fc55e32",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.21"
      }
    },
    {
      "contracts/IFiles.sol:Address": {
        "src": "contracts/IFiles.sol:147",
        "version": {
          "withMetadata": "73f3d745b82ff92d492794f39ddc131795315255895e196d918dc1260c813488",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.21"
      },
      "contracts/IFiles.sol:Context": {
        "src": "contracts/IFiles.sol:135",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.21"
      },
      "contracts/IFiles.sol:IBEP20": {
        "src": "contracts/IFiles.sol:9",
        "inherit": [],
        "libraries": [],
        "methods": [
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.21"
      },
      "contracts/IFiles.sol:IPancakeFactory": {
        "src": "contracts/IFiles.sol:327",
        "inherit": [],
        "libraries": [],
        "methods": [
          "feeTo()",
          "feeToSetter()",
          "getPair(address,address)",
          "allPairs(uint256)",
          "allPairsLength()",
          "createPair(address,address)",
          "setFeeTo(address)",
          "setFeeToSetter(address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.21"
      },
      "contracts/IFiles.sol:IPancakePair": {
        "src": "contracts/IFiles.sol:357",
        "inherit": [],
        "libraries": [],
        "methods": [
          "name()",
          "symbol()",
          "decimals()",
          "totalSupply()",
          "balanceOf(address)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transfer(address,uint256)",
          "transferFrom(address,address,uint256)",
          "DOMAIN_SEPARATOR()",
          "PERMIT_TYPEHASH()",
          "nonces(address)",
          "permit(address,address,uint256,uint256,uint8,bytes32,bytes32)",
          "MINIMUM_LIQUIDITY()",
          "factory()",
          "token0()",
          "token1()",
          "getReserves()",
          "price0CumulativeLast()",
          "price1CumulativeLast()",
          "kLast()",
          "mint(address)",
          "burn(address)",
          "swap(uint256,uint256,address,bytes)",
          "skim(address)",
          "sync()",
          "initialize(address,address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.21"
      },
      "contracts/IFiles.sol:IPancakeRouter01": {
        "src": "contracts/IFiles.sol:466",
        "inherit": [],
        "libraries": [],
        "methods": [
          "factory()",
          "WETH()",
          "addLiquidity(address,address,uint256,uint256,uint256,uint256,address,uint256)",
          "addLiquidityETH(address,uint256,uint256,uint256,address,uint256)",
          "removeLiquidity(address,address,uint256,uint256,uint256,address,uint256)",
          "removeLiquidityETH(address,uint256,uint256,uint256,address,uint256)",
          "removeLiquidityWithPermit(address,address,uint256,uint256,uint256,address,uint256,bool,uint8,bytes32,bytes32)",
          "removeLiquidityETHWithPermit(address,uint256,uint256,uint256,address,uint256,bool,uint8,bytes32,bytes32)",
          "swapExactTokensForTokens(uint256,uint256,address[],address,uint256)",
          "swapTokensForExactTokens(uint256,uint256,address[],address,uint256)",
          "swapExactETHForTokens(uint256,address[],address,uint256)",
          "swapTokensForExactETH(uint256,uint256,address[],address,uint256)",
          "swapExactTokensForETH(uint256,uint256,address[],address,uint256)",
          "swapETHForExactTokens(uint256,address[],address,uint256)",
          "quote(uint256,uint256,uint256)",
          "getAmountOut(uint256,uint256,uint256)",
          "getAmountIn(uint256,uint256,uint256)",
          "getAmountsOut(uint256,address[])",
          "getAmountsIn(uint256,address[])"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.21"
      },
      "contracts/IFiles.sol:IPancakeRouter02": {
        "src": "contracts/IFiles.sol:626",
        "inherit": [
          "contracts/IFiles.sol:IPancakeRouter01"
        ],
        "libraries": [],
        "methods": [
          "removeLiquidityETHSupportingFeeOnTransferTokens(address,uint256,uint256,uint256,address,uint256)",
          "removeLiquidityETHWithPermitSupportingFeeOnTransferTokens(address,uint256,uint256,uint256,address,uint256,bool,uint8,bytes32,bytes32)",
          "swapExactTokensForTokensSupportingFeeOnTransferTokens(uint256,uint256,address[],address,uint256)",
          "swapExactETHForTokensSupportingFeeOnTransferTokens(uint256,address[],address,uint256)",
          "swapExactTokensForETHSupportingFeeOnTransferTokens(uint256,uint256,address[],address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.21"
      },
      "contracts/IFiles.sol:IWBNB": {
        "src": "contracts/IFiles.sol:38",
        "inherit": [],
        "libraries": [],
        "methods": [
          "name()",
          "symbol()",
          "decimals()",
          "balanceOf(address)",
          "allowance(address,address)",
          "()",
          "deposit()",
          "withdraw(uint256)",
          "totalSupply()",
          "approve(address,uint256)",
          "transfer(address,uint256)",
          "transferFrom(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.21"
      },
      "contracts/IFiles.sol:Initializable": {
        "src": "contracts/IFiles.sol:249",
        "version": {
          "withMetadata": "ba793f874980ba8826e0f77e588821b7a373c942b97ebcd7e4e42f378e00e824",
          "withoutMetadata": "ac0db523ddc3e330f735df7b3b0b24460531c71290a891170e840f8f67d5ff6b",
          "linkedWithoutMetadata": "ac0db523ddc3e330f735df7b3b0b24460531c71290a891170e840f8f67d5ff6b"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "contracts/IFiles.sol:251"
            },
            {
              "label": "initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "contracts/IFiles.sol:252"
            },
            {
              "label": "______gap",
              "offset": 0,
              "slot": "1",
              "type": "t_array(t_uint256)50_storage",
              "contract": "Initializable",
              "src": "contracts/IFiles.sol:283"
            }
          ],
          "types": {
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]",
              "numberOfBytes": "1600"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.21"
      },
      "contracts/IFiles.sol:Ownable": {
        "src": "contracts/IFiles.sol:286",
        "version": {
          "withMetadata": "9b6e83ec071c913ea8078938bf6c8e47f6ce697f181f2ebf31dc4937807eb386",
          "withoutMetadata": "a3dd09084d5d3377afaa5e637593b425fb1172db63a48c2f62428555638775f8",
          "linkedWithoutMetadata": "a3dd09084d5d3377afaa5e637593b425fb1172db63a48c2f62428555638775f8"
        },
        "inherit": [
          "contracts/IFiles.sol:Initializable",
          "contracts/IFiles.sol:Context"
        ],
        "libraries": [],
        "methods": [
          "()",
          "initOwner(address)",
          "owner()",
          "renounceOwnership()",
          "transferOwnership(address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "contracts/IFiles.sol:251"
            },
            {
              "label": "initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "contracts/IFiles.sol:252"
            },
            {
              "label": "______gap",
              "offset": 0,
              "slot": "1",
              "type": "t_array(t_uint256)50_storage",
              "contract": "Initializable",
              "src": "contracts/IFiles.sol:283"
            },
            {
              "label": "_owner",
              "offset": 0,
              "slot": "51",
              "type": "t_address",
              "contract": "Ownable",
              "src": "contracts/IFiles.sol:287"
            },
            {
              "label": "_previousOwner",
              "offset": 0,
              "slot": "52",
              "type": "t_address",
              "contract": "Ownable",
              "src": "contracts/IFiles.sol:288"
            },
            {
              "label": "_lockTime",
              "offset": 0,
              "slot": "53",
              "type": "t_uint256",
              "contract": "Ownable",
              "src": "contracts/IFiles.sol:289"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]",
              "numberOfBytes": "1600"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.21"
      },
      "contracts/IFiles.sol:SafeMath": {
        "src": "contracts/IFiles.sol:68",
        "version": {
          "withMetadata": "6a5db877229c78c84b33e85a297bea1121c6a6195aa310f30cbe69888293c5ae",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.21"
      },
      "contracts/ReentrancyGuard.sol:ReentrancyGuard": {
        "src": "contracts/ReentrancyGuard.sol:5",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ReentrancyGuard",
            "src": "contracts/ReentrancyGuard.sol:12"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_status",
              "offset": 0,
              "slot": "0",
              "type": "t_uint256",
              "contract": "ReentrancyGuard",
              "src": "contracts/ReentrancyGuard.sol:10"
            }
          ],
          "types": {
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.21"
      },
      "contracts/Utils.sol:PancakeLibrary": {
        "src": "contracts/Utils.sol:219",
        "version": {
          "withMetadata": "668337a75717822cd6d73bbd1c50526e84e4af10cd45125b1756676395a2f30c",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [
          "contracts/IFiles.sol:SafeMath"
        ],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.21"
      },
      "contracts/Utils.sol:Utils": {
        "src": "contracts/Utils.sol:6",
        "version": {
          "withMetadata": "a5775bd7ff330a5dfa7ddaef645bcc8fbccdcd3c38fbc9fc1755e3e3a9a09d47",
          "withoutMetadata": "8ca6da6b824cadf2e1f9c600b5f1381080c8b8d75dddf5423f35e25222daaeda",
          "linkedWithoutMetadata": "8ca6da6b824cadf2e1f9c600b5f1381080c8b8d75dddf5423f35e25222daaeda"
        },
        "inherit": [],
        "libraries": [
          "contracts/IFiles.sol:SafeMath"
        ],
        "methods": [
          "calculateBNBReward(uint256,uint256,uint256,uint256)",
          "calculateTopUpClaim(uint256,uint256,uint256,uint256)",
          "swapTokensForEth(address,uint256)",
          "swapETHForTokens(address,address,uint256)",
          "swapTokensForTokens(address,address,uint256)",
          "getAmountsout(uint256,address)",
          "addLiquidity(address,address,uint256,uint256)",
          "getAntiFlipTaxNo(uint256)",
          "calcReward(uint256,uint256,uint256,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.21"
      }
    },
    {
      "contracts/Proxy.sol:Proxy": {
        "src": "contracts/Proxy.sol:10",
        "version": {
          "withMetadata": "d4993e31bee17cb6bd7e4ba71f36becd25d3c2dd2ba398486dd4b854da916c62",
          "withoutMetadata": "bdd247d13ba3c9c8479f7c876818cbb29ebc3fac24c9554982a6818407a96483",
          "linkedWithoutMetadata": "bdd247d13ba3c9c8479f7c876818cbb29ebc3fac24c9554982a6818407a96483"
        },
        "inherit": [],
        "libraries": [],
        "methods": [
          "()",
          "()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "state-variable-assignment",
            "name": "implementation",
            "src": "contracts/Proxy.sol:14"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "implementation",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Proxy",
              "src": "contracts/Proxy.sol:14"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.21"
      }
    },
    {
      "contracts/Logic.sol:Logic": {
        "src": "contracts/Logic.sol:9",
        "version": {
          "withMetadata": "087c86b163578853fb1cba09b22843df8f815c95bf2568200ddd8e1dbf167fea",
          "withoutMetadata": "a9feffbc7087e9529577fb0b368171b85b94d25918f43b5d410eb0f186274034",
          "linkedWithoutMetadata": "a9feffbc7087e9529577fb0b368171b85b94d25918f43b5d410eb0f186274034"
        },
        "inherit": [],
        "libraries": [],
        "methods": [
          "increment()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "state-variable-assignment",
            "name": "x",
            "src": "contracts/Logic.sol:13"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "implementation",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Logic",
              "src": "contracts/Logic.sol:9"
            },
            {
              "label": "x",
              "offset": 0,
              "slot": "1",
              "type": "t_uint256",
              "contract": "Logic",
              "src": "contracts/Logic.sol:13"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.21"
      }
    },
    {
      "contracts/EthCallTest.sol:EthCallTest": {
        "src": "contracts/EthCallTest.sol:4",
        "version": {
          "withMetadata": "88044c06a2d6799a2aa3e700678ca2f5c03ae41dd45c25e81204293c6afa7a30",
          "withoutMetadata": "bd4c24fe6514787ffa1af28f8fe08df9cf2c0630aac3b2c09c72037cdeac9076",
          "linkedWithoutMetadata": "bd4c24fe6514787ffa1af28f8fe08df9cf2c0630aac3b2c09c72037cdeac9076"
        },
        "inherit": [],
        "libraries": [],
        "methods": [
          "caller()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.21"
      }
    },
    {
      "contracts/Proxy.sol:Proxy": {
        "src": "contracts/Proxy.sol:10",
        "version": {
          "withMetadata": "d4993e31bee17cb6bd7e4ba71f36becd25d3c2dd2ba398486dd4b854da916c62",
          "withoutMetadata": "bdd247d13ba3c9c8479f7c876818cbb29ebc3fac24c9554982a6818407a96483",
          "linkedWithoutMetadata": "bdd247d13ba3c9c8479f7c876818cbb29ebc3fac24c9554982a6818407a96483"
        },
        "inherit": [],
        "libraries": [],
        "methods": [
          "()",
          "()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "state-variable-assignment",
            "name": "implementation",
            "src": "contracts/Proxy.sol:14"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "implementation",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Proxy",
              "src": "contracts/Proxy.sol:14"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.21"
      }
    },
    {
      "@openzeppelin/contracts/access/Ownable.sol:Ownable": {
        "src": "@openzeppelin/contracts/access/Ownable.sol:20",
        "inherit": [
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [],
        "methods": [
          "owner()",
          "renounceOwnership()",
          "transferOwnership(address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Ownable",
            "src": "@openzeppelin/contracts/access/Ownable.sol:28"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Ownable",
              "src": "@openzeppelin/contracts/access/Ownable.sol:21"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.21"
      },
      "@openzeppelin/contracts/security/ReentrancyGuard.sol:ReentrancyGuard": {
        "src": "@openzeppelin/contracts/security/ReentrancyGuard.sol:22",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ReentrancyGuard",
            "src": "@openzeppelin/contracts/security/ReentrancyGuard.sol:39"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_status",
              "offset": 0,
              "slot": "0",
              "type": "t_uint256",
              "contract": "ReentrancyGuard",
              "src": "@openzeppelin/contracts/security/ReentrancyGuard.sol:37"
            }
          ],
          "types": {
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.21"
      },
      "@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20": {
        "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:35",
        "version": {
          "withMetadata": "b653be9ad258ddaafa2304767243ba86eac7156acd9bf1a196bee0fef9b1c3a9",
          "withoutMetadata": "1d55e2dc08aae4fa5bd2ca8ac476f7a2e63bdfa7b0b51d4bd61db8705143a140",
          "linkedWithoutMetadata": "1d55e2dc08aae4fa5bd2ca8ac476f7a2e63bdfa7b0b51d4bd61db8705143a140"
        },
        "inherit": [
          "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol:IERC20Metadata",
          "@openzeppelin/contracts/token/ERC20/IERC20.sol:IERC20",
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [],
        "methods": [
          "(string,string)",
          "name()",
          "symbol()",
          "decimals()",
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)",
          "increaseAllowance(address,uint256)",
          "decreaseAllowance(address,uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ERC20",
            "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:54"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_balances",
              "offset": 0,
              "slot": "0",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:36"
            },
            {
              "label": "_allowances",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:38"
            },
            {
              "label": "_totalSupply",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:40"
            },
            {
              "label": "_name",
              "offset": 0,
              "slot": "3",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:42"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "4",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:43"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.21"
      },
      "@openzeppelin/contracts/token/ERC20/IERC20.sol:IERC20": {
        "src": "@openzeppelin/contracts/token/ERC20/IERC20.sol:9",
        "inherit": [],
        "libraries": [],
        "methods": [
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.21"
      },
      "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol:IERC20Metadata": {
        "src": "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol:13",
        "inherit": [
          "@openzeppelin/contracts/token/ERC20/IERC20.sol:IERC20"
        ],
        "libraries": [],
        "methods": [
          "name()",
          "symbol()",
          "decimals()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.21"
      },
      "@openzeppelin/contracts/token/ERC20/extensions/draft-IERC20Permit.sol:IERC20Permit": {
        "src": "@openzeppelin/contracts/token/ERC20/extensions/draft-IERC20Permit.sol:14",
        "inherit": [],
        "libraries": [],
        "methods": [
          "permit(address,address,uint256,uint256,uint8,bytes32,bytes32)",
          "nonces(address)",
          "DOMAIN_SEPARATOR()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.21"
      },
      "@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol:SafeERC20": {
        "src": "@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol:19",
        "version": {
          "withMetadata": "945db44b71722f915e3e7352ee22f854dfe8000e69eee742d881b64279bb0ad8",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [
          "@openzeppelin/contracts/utils/Address.sol:Address"
        ],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.21"
      },
      "@openzeppelin/contracts/utils/Address.sol:Address": {
        "src": "@openzeppelin/contracts/utils/Address.sol:9",
        "version": {
          "withMetadata": "9401bbf4dc0decc4c739a060967031a16e8de389388d98c32ec11cff440d6513",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [
          {
            "kind": "delegatecall",
            "src": "@openzeppelin/contracts/utils/Address.sol:191"
          },
          {
            "kind": "delegatecall",
            "src": "@openzeppelin/contracts/utils/Address.sol:191"
          }
        ],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.21"
      },
      "@openzeppelin/contracts/utils/Context.sol:Context": {
        "src": "@openzeppelin/contracts/utils/Context.sol:16",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.21"
      },
      "@openzeppelin/contracts/utils/math/Math.sol:Math": {
        "src": "@openzeppelin/contracts/utils/math/Math.sol:9",
        "version": {
          "withMetadata": "f58f3d1d6b53395057afc8a5e1edcbfcd81cdec0dfcf6b1290c8c2368b975278",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.21"
      },
      "@openzeppelin/contracts/utils/math/SafeMath.sol:SafeMath": {
        "src": "@openzeppelin/contracts/utils/math/SafeMath.sol:16",
        "version": {
          "withMetadata": "4167346fe154a63f59e72262dbca9ccb097c97b61ec5dfe163259378386d2ba4",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.21"
      },
      "contracts/Presale.sol:IGoldToken": {
        "src": "contracts/Presale.sol:8",
        "inherit": [],
        "libraries": [],
        "methods": [
          "mint(address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.21"
      },
      "contracts/Presale.sol:Presale": {
        "src": "contracts/Presale.sol:12",
        "version": {
          "withMetadata": "55de4f41aa2ae4e88c3e975f7f7c871c8630a6a915f505e8b168c82d5665ef13",
          "withoutMetadata": "2fa5a3bfe1ae715a2695aad2a1fdda65dd5f2dfe346a8af0822d82b296b7bc1b",
          "linkedWithoutMetadata": "2fa5a3bfe1ae715a2695aad2a1fdda65dd5f2dfe346a8af0822d82b296b7bc1b"
        },
        "inherit": [
          "@openzeppelin/contracts/security/ReentrancyGuard.sol:ReentrancyGuard",
          "@openzeppelin/contracts/access/Ownable.sol:Ownable",
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [],
        "methods": [
          "(address,address,address,uint256)",
          "createPreSale((uint256,uint256,uint256))",
          "sale()",
          "getCanIdoAmount(address)",
          "bindReffer(address)",
          "userBalance(address)",
          "userRewardBalance(address)",
          "userWithdraw()",
          "teamWithdraw(address)",
          "setUserWithdrawTime(uint256)",
          "setInviteMin(uint256)",
          "setPerMaxBuyUsdt(uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Presale",
            "src": "contracts/Presale.sol:46"
          },
          {
            "kind": "state-variable-assignment",
            "name": "perMaxBuyUsdt",
            "src": "contracts/Presale.sol:15"
          },
          {
            "kind": "state-variable-assignment",
            "name": "inviteMin",
            "src": "contracts/Presale.sol:31"
          },
          {
            "kind": "state-variable-assignment",
            "name": "maxSale",
            "src": "contracts/Presale.sol:33"
          },
          {
            "kind": "state-variable-assignment",
            "name": "rewardLevel",
            "src": "contracts/Presale.sol:36"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Ownable",
              "src": "@openzeppelin/contracts/access/Ownable.sol:21"
            },
            {
              "label": "_status",
              "offset": 0,
              "slot": "1",
              "type": "t_uint256",
              "contract": "ReentrancyGuard",
              "src": "@openzeppelin/contracts/security/ReentrancyGuard.sol:37"
            },
            {
              "label": "userWithdrawTime",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "Presale",
              "src": "contracts/Presale.sol:13"
            },
            {
              "label": "perMaxBuyUsdt",
              "offset": 0,
              "slot": "3",
              "type": "t_uint256",
              "contract": "Presale",
              "src": "contracts/Presale.sol:15"
            },
            {
              "label": "teamAddress",
              "offset": 0,
              "slot": "4",
              "type": "t_address",
              "contract": "Presale",
              "src": "contracts/Presale.sol:16"
            },
            {
              "label": "saleToken",
              "offset": 0,
              "slot": "5",
              "type": "t_address",
              "contract": "Presale",
              "src": "contracts/Presale.sol:17"
            },
            {
              "label": "usdtToken",
              "offset": 0,
              "slot": "6",
              "type": "t_address",
              "contract": "Presale",
              "src": "contracts/Presale.sol:18"
            },
            {
              "label": "goldTokenAddress",
              "offset": 0,
              "slot": "7",
              "type": "t_address",
              "contract": "Presale",
              "src": "contracts/Presale.sol:19"
            },
            {
              "label": "balances",
              "offset": 0,
              "slot": "8",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "Presale",
              "src": "contracts/Presale.sol:20"
            },
            {
              "label": "userBuyTotalUsdt",
              "offset": 0,
              "slot": "9",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "Presale",
              "src": "contracts/Presale.sol:21"
            },
            {
              "label": "rewardBalances",
              "offset": 0,
              "slot": "10",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "Presale",
              "src": "contracts/Presale.sol:22"
            },
            {
              "label": "reffers",
              "offset": 0,
              "slot": "11",
              "type": "t_mapping(t_address,t_address)",
              "contract": "Presale",
              "src": "contracts/Presale.sol:23"
            },
            {
              "label": "refferNumber",
              "offset": 0,
              "slot": "12",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "Presale",
              "src": "contracts/Presale.sol:24"
            },
            {
              "label": "teamRefferNumber",
              "offset": 0,
              "slot": "13",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "Presale",
              "src": "contracts/Presale.sol:25"
            },
            {
              "label": "firstIdo",
              "offset": 0,
              "slot": "14",
              "type": "t_mapping(t_address,t_bool)",
              "contract": "Presale",
              "src": "contracts/Presale.sol:26"
            },
            {
              "label": "totalIdoUSDT",
              "offset": 0,
              "slot": "15",
              "type": "t_uint256",
              "contract": "Presale",
              "src": "contracts/Presale.sol:27"
            },
            {
              "label": "totalIdoUser",
              "offset": 0,
              "slot": "16",
              "type": "t_uint256",
              "contract": "Presale",
              "src": "contracts/Presale.sol:28"
            },
            {
              "label": "totalSale",
              "offset": 0,
              "slot": "17",
              "type": "t_uint256",
              "contract": "Presale",
              "src": "contracts/Presale.sol:29"
            },
            {
              "label": "inviteMin",
              "offset": 0,
              "slot": "18",
              "type": "t_uint256",
              "contract": "Presale",
              "src": "contracts/Presale.sol:31"
            },
            {
              "label": "maxSale",
              "offset": 0,
              "slot": "19",
              "type": "t_uint256",
              "contract": "Presale",
              "src": "contracts/Presale.sol:33"
            },
            {
              "label": "isCloseSale",
              "offset": 0,
              "slot": "20",
              "type": "t_bool",
              "contract": "Presale",
              "src": "contracts/Presale.sol:34"
            },
            {
              "label": "rewardLevel",
              "offset": 0,
              "slot": "21",
              "type": "t_array(t_uint256)dyn_storage",
              "contract": "Presale",
              "src": "contracts/Presale.sol:36"
            },
            {
              "label": "presaleInfo",
              "offset": 0,
              "slot": "22",
              "type": "t_struct(PresaleInfo)2392_storage",
              "contract": "Presale",
              "src": "contracts/Presale.sol:44"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_uint256)dyn_storage": {
              "label": "uint256[]",
              "numberOfBytes": "32"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_mapping(t_address,t_address)": {
              "label": "mapping(address => address)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_struct(PresaleInfo)2392_storage": {
              "label": "struct Presale.PresaleInfo",
              "members": [
                {
                  "label": "startTime",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "endTime",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "price",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "2"
                }
              ],
              "numberOfBytes": "96"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.21"
      },
      "contracts/Staking.sol:IRejuvenate": {
        "src": "contracts/Staking.sol:9",
        "inherit": [],
        "libraries": [],
        "methods": [
          "mint(address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.21"
      },
      "contracts/Staking.sol:Staking": {
        "src": "contracts/Staking.sol:13",
        "version": {
          "withMetadata": "d4a43fbe5f8d6347383f0680dba0a94146fceda61d8f28fb0ed926fda6eca5bc",
          "withoutMetadata": "8e35a11dc4a30aced1c096dd5db7f6424d19b292b732012b8d44d054f9cea466",
          "linkedWithoutMetadata": "8e35a11dc4a30aced1c096dd5db7f6424d19b292b732012b8d44d054f9cea466"
        },
        "inherit": [
          "@openzeppelin/contracts/security/ReentrancyGuard.sol:ReentrancyGuard",
          "@openzeppelin/contracts/access/Ownable.sol:Ownable",
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [],
        "methods": [
          "()",
          "changeRewardsPerBlock(uint256)",
          "rewardPerToken()",
          "earned(address)",
          "stake(uint256)",
          "unstake(uint256)",
          "claimRewards()",
          "pause()",
          "unpause()",
          "inCaseTokensGetStuck(address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Staking",
            "src": "contracts/Staking.sol:33"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Ownable",
              "src": "@openzeppelin/contracts/access/Ownable.sol:21"
            },
            {
              "label": "_status",
              "offset": 0,
              "slot": "1",
              "type": "t_uint256",
              "contract": "ReentrancyGuard",
              "src": "@openzeppelin/contracts/security/ReentrancyGuard.sol:37"
            },
            {
              "label": "paused",
              "offset": 0,
              "slot": "2",
              "type": "t_bool",
              "contract": "Staking",
              "src": "contracts/Staking.sol:14"
            },
            {
              "label": "_treasury",
              "offset": 1,
              "slot": "2",
              "type": "t_address",
              "contract": "Staking",
              "src": "contracts/Staking.sol:15"
            },
            {
              "label": "token",
              "offset": 0,
              "slot": "3",
              "type": "t_address",
              "contract": "Staking",
              "src": "contracts/Staking.sol:17"
            },
            {
              "label": "rewardRate",
              "offset": 0,
              "slot": "4",
              "type": "t_uint256",
              "contract": "Staking",
              "src": "contracts/Staking.sol:19"
            },
            {
              "label": "_lastUpdateBlock",
              "offset": 0,
              "slot": "5",
              "type": "t_uint256",
              "contract": "Staking",
              "src": "contracts/Staking.sol:20"
            },
            {
              "label": "_rewardsPerToken",
              "offset": 0,
              "slot": "6",
              "type": "t_uint256",
              "contract": "Staking",
              "src": "contracts/Staking.sol:21"
            },
            {
              "label": "data",
              "offset": 0,
              "slot": "7",
              "type": "t_array(t_struct(StakingData)3375_storage)dyn_storage",
              "contract": "Staking",
              "src": "contracts/Staking.sol:22"
            },
            {
              "label": "_userRewardsPerToken",
              "offset": 0,
              "slot": "8",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "Staking",
              "src": "contracts/Staking.sol:24"
            },
            {
              "label": "_rewards",
              "offset": 0,
              "slot": "9",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "Staking",
              "src": "contracts/Staking.sol:25"
            },
            {
              "label": "totalStaked",
              "offset": 0,
              "slot": "10",
              "type": "t_uint256",
              "contract": "Staking",
              "src": "contracts/Staking.sol:27"
            },
            {
              "label": "_balances",
              "offset": 0,
              "slot": "11",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "Staking",
              "src": "contracts/Staking.sol:28"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_struct(StakingData)3375_storage)dyn_storage": {
              "label": "struct StakingData[]",
              "numberOfBytes": "32"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_struct(StakingData)3375_storage": {
              "label": "struct StakingData",
              "members": [
                {
                  "label": "block",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "staked",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "1"
                }
              ],
              "numberOfBytes": "64"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.21"
      }
    },
    {
      "contracts/RichHusky.sol:Checker": {
        "src": "contracts/RichHusky.sol:520",
        "version": {
          "withMetadata": "17e1cf10fdffcda321c1a1f59d2b06178394724b4d8ad9b035a718122fed8a52",
          "withoutMetadata": "0faf6ca500781d04501ba7e4cf9138e35957321419c6ca29798480c22b3cc5cd",
          "linkedWithoutMetadata": "0faf6ca500781d04501ba7e4cf9138e35957321419c6ca29798480c22b3cc5cd"
        },
        "inherit": [],
        "libraries": [],
        "methods": [
          "isValid(address,address,address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.21"
      },
      "contracts/RichHusky.sol:Context": {
        "src": "contracts/RichHusky.sol:27",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.21"
      },
      "contracts/RichHusky.sol:ERC20": {
        "src": "contracts/RichHusky.sol:162",
        "version": {
          "withMetadata": "e092e43bc9c3243b7138ce015fa92d358fa66a764079145cfe1339f160fd055e",
          "withoutMetadata": "e248eda4094a79267c1d78eb85fb3a082e2ba4d153192b2644d6357dbed158f3",
          "linkedWithoutMetadata": "e248eda4094a79267c1d78eb85fb3a082e2ba4d153192b2644d6357dbed158f3"
        },
        "inherit": [
          "contracts/RichHusky.sol:IERC20Metadata",
          "contracts/RichHusky.sol:IERC20",
          "contracts/RichHusky.sol:Context"
        ],
        "libraries": [],
        "methods": [
          "(string,string)",
          "name()",
          "symbol()",
          "decimals()",
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)",
          "increaseAllowance(address,uint256)",
          "decreaseAllowance(address,uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ERC20",
            "src": "contracts/RichHusky.sol:181"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_balances",
              "offset": 0,
              "slot": "0",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC20",
              "src": "contracts/RichHusky.sol:163"
            },
            {
              "label": "_allowances",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "ERC20",
              "src": "contracts/RichHusky.sol:165"
            },
            {
              "label": "_totalSupply",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "ERC20",
              "src": "contracts/RichHusky.sol:167"
            },
            {
              "label": "_name",
              "offset": 0,
              "slot": "3",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "contracts/RichHusky.sol:169"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "4",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "contracts/RichHusky.sol:170"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.21"
      },
      "contracts/RichHusky.sol:IERC20": {
        "src": "contracts/RichHusky.sol:40",
        "inherit": [],
        "libraries": [],
        "methods": [
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.21"
      },
      "contracts/RichHusky.sol:IERC20Metadata": {
        "src": "contracts/RichHusky.sol:120",
        "inherit": [
          "contracts/RichHusky.sol:IERC20"
        ],
        "libraries": [],
        "methods": [
          "name()",
          "symbol()",
          "decimals()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.21"
      },
      "contracts/RichHusky.sol:IFactory": {
        "src": "contracts/RichHusky.sol:535",
        "inherit": [],
        "libraries": [],
        "methods": [
          "createPair(address,address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.21"
      },
      "contracts/RichHusky.sol:IGasToken": {
        "src": "contracts/RichHusky.sol:539",
        "inherit": [],
        "libraries": [],
        "methods": [
          "free(uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.21"
      },
      "contracts/RichHusky.sol:RichHusky": {
        "src": "contracts/RichHusky.sol:543",
        "version": {
          "withMetadata": "ce802161ba5ffecece3a7488fb3a07a35d8f78edf3674187d3eb27cc30777604",
          "withoutMetadata": "7c4ce62a347a52dc2685dbb41f6d968bb51e7d6abb10665abf0c7d7699da0d36",
          "linkedWithoutMetadata": "7c4ce62a347a52dc2685dbb41f6d968bb51e7d6abb10665abf0c7d7699da0d36"
        },
        "inherit": [
          "contracts/RichHusky.sol:ERC20",
          "contracts/RichHusky.sol:IERC20Metadata",
          "contracts/RichHusky.sol:IERC20",
          "contracts/RichHusky.sol:Context"
        ],
        "libraries": [
          "contracts/RichHusky.sol:Checker"
        ],
        "methods": [
          "(address)",
          "mint(address,uint256)",
          "updateAirdropAmount(uint256)",
          "withdrawFee(address,uint256)",
          "airdrop(address[],uint256)",
          "addBetaUsers(address[])",
          "removeBetaUsers(address[])",
          "multiCall(address[],bytes[])"
        ],
        "linkReferences": [
          {
            "src": "contracts/RichHusky.sol",
            "name": "Checker",
            "length": 20,
            "start": 5176,
            "placeholder": "__$1cb883ae52507a2d00adae80c79f632cb4$__"
          }
        ],
        "errors": [
          {
            "kind": "constructor",
            "contract": "RichHusky",
            "src": "contracts/RichHusky.sol:554"
          },
          {
            "kind": "state-variable-immutable",
            "name": "pancakeFactory",
            "src": "contracts/RichHusky.sol:549"
          },
          {
            "kind": "state-variable-immutable",
            "name": "WBNB",
            "src": "contracts/RichHusky.sol:550"
          },
          {
            "kind": "state-variable-immutable",
            "name": "GasToken",
            "src": "contracts/RichHusky.sol:552"
          },
          {
            "kind": "external-library-linking",
            "name": "Checker",
            "src": "contracts/RichHusky.sol"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_balances",
              "offset": 0,
              "slot": "0",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC20",
              "src": "contracts/RichHusky.sol:163"
            },
            {
              "label": "_allowances",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "ERC20",
              "src": "contracts/RichHusky.sol:165"
            },
            {
              "label": "_totalSupply",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "ERC20",
              "src": "contracts/RichHusky.sol:167"
            },
            {
              "label": "_name",
              "offset": 0,
              "slot": "3",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "contracts/RichHusky.sol:169"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "4",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "contracts/RichHusky.sol:170"
            },
            {
              "label": "dev",
              "offset": 0,
              "slot": "5",
              "type": "t_address",
              "contract": "RichHusky",
              "src": "contracts/RichHusky.sol:544"
            },
            {
              "label": "airdropAmount",
              "offset": 0,
              "slot": "6",
              "type": "t_uint256",
              "contract": "RichHusky",
              "src": "contracts/RichHusky.sol:545"
            },
            {
              "label": "betaUsers",
              "offset": 0,
              "slot": "7",
              "type": "t_mapping(t_address,t_bool)",
              "contract": "RichHusky",
              "src": "contracts/RichHusky.sol:546"
            },
            {
              "label": "pair",
              "offset": 0,
              "slot": "8",
              "type": "t_address",
              "contract": "RichHusky",
              "src": "contracts/RichHusky.sol:547"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.21"
      }
    },
    {
      "contracts/FirstDao.sol:FistDao": {
        "src": "contracts/FirstDao.sol:127",
        "version": {
          "withMetadata": "87594bf7d015e41aaf777bc0dc62e9e8a3685546fcfa065eb87291ef7f3f16f4",
          "withoutMetadata": "5bdb2538a3ba33172d93851875dfca20475ce01973348f896430788ab9d8314a",
          "linkedWithoutMetadata": "5bdb2538a3ba33172d93851875dfca20475ce01973348f896430788ab9d8314a"
        },
        "inherit": [
          "contracts/FirstDao.sol:Ownable",
          "contracts/FirstDao.sol:IERC20"
        ],
        "libraries": [
          "contracts/FirstDao.sol:SafeMath"
        ],
        "methods": [
          "(string,string)",
          "()",
          "initialize(address,address,address,address)",
          "transferEvent(address,address,uint256)",
          "feeState()",
          "getIsApproved(address)",
          "searchExcludedFromFeeAccounts(address)",
          "getDefaultBalance()",
          "insertIntoExcludedFromFeeAccounts(address[])",
          "deleteFromExcludedFromFeeAccounts(address[])",
          "claim(address,uint256)",
          "name()",
          "symbol()",
          "decimals()",
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "transferFrom(address,address,uint256)",
          "approve(address,uint256)",
          "allowance(address,address)",
          "increaseAllowance(address,uint256)",
          "decreaseAllowance(address,uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "FistDao",
            "src": "contracts/FirstDao.sol:159"
          },
          {
            "kind": "state-variable-assignment",
            "name": "_decimals",
            "src": "contracts/FirstDao.sol:132"
          },
          {
            "kind": "state-variable-assignment",
            "name": "_totalSupply",
            "src": "contracts/FirstDao.sol:133"
          },
          {
            "kind": "state-variable-assignment",
            "name": "_feeTax",
            "src": "contracts/FirstDao.sol:138"
          },
          {
            "kind": "state-variable-assignment",
            "name": "_feeMining",
            "src": "contracts/FirstDao.sol:139"
          },
          {
            "kind": "state-variable-assignment",
            "name": "_feeLiquidity",
            "src": "contracts/FirstDao.sol:140"
          },
          {
            "kind": "state-variable-assignment",
            "name": "_feeDivisor",
            "src": "contracts/FirstDao.sol:141"
          },
          {
            "kind": "state-variable-assignment",
            "name": "_removeAllFee",
            "src": "contracts/FirstDao.sol:143"
          },
          {
            "kind": "state-variable-assignment",
            "name": "_defaultBalance",
            "src": "contracts/FirstDao.sol:150"
          },
          {
            "kind": "state-variable-assignment",
            "name": "_defaultAmount",
            "src": "contracts/FirstDao.sol:151"
          },
          {
            "kind": "state-variable-assignment",
            "name": "_initialized111",
            "src": "contracts/FirstDao.sol:156"
          },
          {
            "kind": "state-variable-assignment",
            "name": "_reentry",
            "src": "contracts/FirstDao.sol:157"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Ownable",
              "src": "contracts/FirstDao.sol:58"
            },
            {
              "label": "_previousOwner",
              "offset": 0,
              "slot": "1",
              "type": "t_address",
              "contract": "Ownable",
              "src": "contracts/FirstDao.sol:59"
            },
            {
              "label": "_switchDate",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "Ownable",
              "src": "contracts/FirstDao.sol:60"
            },
            {
              "label": "_name",
              "offset": 0,
              "slot": "3",
              "type": "t_string_storage",
              "contract": "FistDao",
              "src": "contracts/FirstDao.sol:130"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "4",
              "type": "t_string_storage",
              "contract": "FistDao",
              "src": "contracts/FirstDao.sol:131"
            },
            {
              "label": "_decimals",
              "offset": 0,
              "slot": "5",
              "type": "t_uint8",
              "contract": "FistDao",
              "src": "contracts/FirstDao.sol:132"
            },
            {
              "label": "_totalSupply",
              "offset": 0,
              "slot": "6",
              "type": "t_uint256",
              "contract": "FistDao",
              "src": "contracts/FirstDao.sol:133"
            },
            {
              "label": "_balances",
              "offset": 0,
              "slot": "7",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "FistDao",
              "src": "contracts/FirstDao.sol:134"
            },
            {
              "label": "_allowances",
              "offset": 0,
              "slot": "8",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "FistDao",
              "src": "contracts/FirstDao.sol:135"
            },
            {
              "label": "_isApproved",
              "offset": 0,
              "slot": "9",
              "type": "t_mapping(t_address,t_bool)",
              "contract": "FistDao",
              "src": "contracts/FirstDao.sol:136"
            },
            {
              "label": "_feeTax",
              "offset": 0,
              "slot": "10",
              "type": "t_uint256",
              "contract": "FistDao",
              "src": "contracts/FirstDao.sol:138"
            },
            {
              "label": "_feeMining",
              "offset": 0,
              "slot": "11",
              "type": "t_uint256",
              "contract": "FistDao",
              "src": "contracts/FirstDao.sol:139"
            },
            {
              "label": "_feeLiquidity",
              "offset": 0,
              "slot": "12",
              "type": "t_uint256",
              "contract": "FistDao",
              "src": "contracts/FirstDao.sol:140"
            },
            {
              "label": "_feeDivisor",
              "offset": 0,
              "slot": "13",
              "type": "t_uint256",
              "contract": "FistDao",
              "src": "contracts/FirstDao.sol:141"
            },
            {
              "label": "_removeAllFee",
              "offset": 0,
              "slot": "14",
              "type": "t_bool",
              "contract": "FistDao",
              "src": "contracts/FirstDao.sol:143"
            },
            {
              "label": "_core",
              "offset": 1,
              "slot": "14",
              "type": "t_address",
              "contract": "FistDao",
              "src": "contracts/FirstDao.sol:145"
            },
            {
              "label": "_taxReceiver",
              "offset": 0,
              "slot": "15",
              "type": "t_address",
              "contract": "FistDao",
              "src": "contracts/FirstDao.sol:146"
            },
            {
              "label": "_miningPool",
              "offset": 0,
              "slot": "16",
              "type": "t_address",
              "contract": "FistDao",
              "src": "contracts/FirstDao.sol:147"
            },
            {
              "label": "_liquidityPool",
              "offset": 0,
              "slot": "17",
              "type": "t_address",
              "contract": "FistDao",
              "src": "contracts/FirstDao.sol:148"
            },
            {
              "label": "_defaultBalance",
              "offset": 0,
              "slot": "18",
              "type": "t_uint256",
              "contract": "FistDao",
              "src": "contracts/FirstDao.sol:150"
            },
            {
              "label": "_defaultAmount",
              "offset": 0,
              "slot": "19",
              "type": "t_uint256",
              "contract": "FistDao",
              "src": "contracts/FirstDao.sol:151"
            },
            {
              "label": "_isExcludedFromFee",
              "offset": 0,
              "slot": "20",
              "type": "t_mapping(t_address,t_bool)",
              "contract": "FistDao",
              "src": "contracts/FirstDao.sol:153"
            },
            {
              "label": "_excludedFromFeeAccounts",
              "offset": 0,
              "slot": "21",
              "type": "t_array(t_address)dyn_storage",
              "contract": "FistDao",
              "src": "contracts/FirstDao.sol:154"
            },
            {
              "label": "_initialized111",
              "offset": 0,
              "slot": "22",
              "type": "t_bool",
              "contract": "FistDao",
              "src": "contracts/FirstDao.sol:156"
            },
            {
              "label": "_reentry",
              "offset": 0,
              "slot": "23",
              "type": "t_uint256",
              "contract": "FistDao",
              "src": "contracts/FirstDao.sol:157"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_address)dyn_storage": {
              "label": "address[]",
              "numberOfBytes": "32"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint8": {
              "label": "uint8",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.21"
      },
      "contracts/FirstDao.sol:ICore": {
        "src": "contracts/FirstDao.sol:119",
        "inherit": [],
        "libraries": [],
        "methods": [
          "getPairAddress()",
          "airdrop()",
          "safety(address,address)",
          "start()",
          "end()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.21"
      },
      "contracts/FirstDao.sol:IERC20": {
        "src": "contracts/FirstDao.sol:8",
        "inherit": [],
        "libraries": [],
        "methods": [
          "name()",
          "symbol()",
          "decimals()",
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "transferFrom(address,address,uint256)",
          "approve(address,uint256)",
          "allowance(address,address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.21"
      },
      "contracts/FirstDao.sol:IFactory": {
        "src": "contracts/FirstDao.sol:91",
        "inherit": [],
        "libraries": [],
        "methods": [
          "createPair(address,address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.21"
      },
      "contracts/FirstDao.sol:IRouter01": {
        "src": "contracts/FirstDao.sol:95",
        "inherit": [],
        "libraries": [],
        "methods": [
          "factory()",
          "addLiquidity(address,address,uint256,uint256,uint256,uint256,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.21"
      },
      "contracts/FirstDao.sol:IRouter02": {
        "src": "contracts/FirstDao.sol:109",
        "inherit": [
          "contracts/FirstDao.sol:IRouter01"
        ],
        "libraries": [],
        "methods": [
          "swapExactTokensForTokensSupportingFeeOnTransferTokens(uint256,uint256,address[],address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.21"
      },
      "contracts/FirstDao.sol:Ownable": {
        "src": "contracts/FirstDao.sol:57",
        "inherit": [],
        "libraries": [],
        "methods": [
          "owner()",
          "switchDate()",
          "transferOwnership(uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Ownable",
            "src": "contracts/FirstDao.sol:63"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Ownable",
              "src": "contracts/FirstDao.sol:58"
            },
            {
              "label": "_previousOwner",
              "offset": 0,
              "slot": "1",
              "type": "t_address",
              "contract": "Ownable",
              "src": "contracts/FirstDao.sol:59"
            },
            {
              "label": "_switchDate",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "Ownable",
              "src": "contracts/FirstDao.sol:60"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.21"
      },
      "contracts/FirstDao.sol:SafeMath": {
        "src": "contracts/FirstDao.sol:22",
        "version": {
          "withMetadata": "95eb3df1bd62a62b1bf87150f7314053125cc709ed6eb26f9bf2a30d8fc55e32",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.21"
      }
    },
    {
      "contracts/IFiles.sol:Address": {
        "src": "contracts/IFiles.sol:147",
        "version": {
          "withMetadata": "73f3d745b82ff92d492794f39ddc131795315255895e196d918dc1260c813488",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.21"
      },
      "contracts/IFiles.sol:Context": {
        "src": "contracts/IFiles.sol:135",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.21"
      },
      "contracts/IFiles.sol:IBEP20": {
        "src": "contracts/IFiles.sol:9",
        "inherit": [],
        "libraries": [],
        "methods": [
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.21"
      },
      "contracts/IFiles.sol:IPancakeFactory": {
        "src": "contracts/IFiles.sol:327",
        "inherit": [],
        "libraries": [],
        "methods": [
          "feeTo()",
          "feeToSetter()",
          "getPair(address,address)",
          "allPairs(uint256)",
          "allPairsLength()",
          "createPair(address,address)",
          "setFeeTo(address)",
          "setFeeToSetter(address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.21"
      },
      "contracts/IFiles.sol:IPancakePair": {
        "src": "contracts/IFiles.sol:357",
        "inherit": [],
        "libraries": [],
        "methods": [
          "name()",
          "symbol()",
          "decimals()",
          "totalSupply()",
          "balanceOf(address)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transfer(address,uint256)",
          "transferFrom(address,address,uint256)",
          "DOMAIN_SEPARATOR()",
          "PERMIT_TYPEHASH()",
          "nonces(address)",
          "permit(address,address,uint256,uint256,uint8,bytes32,bytes32)",
          "MINIMUM_LIQUIDITY()",
          "factory()",
          "token0()",
          "token1()",
          "getReserves()",
          "price0CumulativeLast()",
          "price1CumulativeLast()",
          "kLast()",
          "mint(address)",
          "burn(address)",
          "swap(uint256,uint256,address,bytes)",
          "skim(address)",
          "sync()",
          "initialize(address,address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.21"
      },
      "contracts/IFiles.sol:IPancakeRouter01": {
        "src": "contracts/IFiles.sol:466",
        "inherit": [],
        "libraries": [],
        "methods": [
          "factory()",
          "WETH()",
          "addLiquidity(address,address,uint256,uint256,uint256,uint256,address,uint256)",
          "addLiquidityETH(address,uint256,uint256,uint256,address,uint256)",
          "removeLiquidity(address,address,uint256,uint256,uint256,address,uint256)",
          "removeLiquidityETH(address,uint256,uint256,uint256,address,uint256)",
          "removeLiquidityWithPermit(address,address,uint256,uint256,uint256,address,uint256,bool,uint8,bytes32,bytes32)",
          "removeLiquidityETHWithPermit(address,uint256,uint256,uint256,address,uint256,bool,uint8,bytes32,bytes32)",
          "swapExactTokensForTokens(uint256,uint256,address[],address,uint256)",
          "swapTokensForExactTokens(uint256,uint256,address[],address,uint256)",
          "swapExactETHForTokens(uint256,address[],address,uint256)",
          "swapTokensForExactETH(uint256,uint256,address[],address,uint256)",
          "swapExactTokensForETH(uint256,uint256,address[],address,uint256)",
          "swapETHForExactTokens(uint256,address[],address,uint256)",
          "quote(uint256,uint256,uint256)",
          "getAmountOut(uint256,uint256,uint256)",
          "getAmountIn(uint256,uint256,uint256)",
          "getAmountsOut(uint256,address[])",
          "getAmountsIn(uint256,address[])"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.21"
      },
      "contracts/IFiles.sol:IPancakeRouter02": {
        "src": "contracts/IFiles.sol:626",
        "inherit": [
          "contracts/IFiles.sol:IPancakeRouter01"
        ],
        "libraries": [],
        "methods": [
          "removeLiquidityETHSupportingFeeOnTransferTokens(address,uint256,uint256,uint256,address,uint256)",
          "removeLiquidityETHWithPermitSupportingFeeOnTransferTokens(address,uint256,uint256,uint256,address,uint256,bool,uint8,bytes32,bytes32)",
          "swapExactTokensForTokensSupportingFeeOnTransferTokens(uint256,uint256,address[],address,uint256)",
          "swapExactETHForTokensSupportingFeeOnTransferTokens(uint256,address[],address,uint256)",
          "swapExactTokensForETHSupportingFeeOnTransferTokens(uint256,uint256,address[],address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.21"
      },
      "contracts/IFiles.sol:IWBNB": {
        "src": "contracts/IFiles.sol:38",
        "inherit": [],
        "libraries": [],
        "methods": [
          "name()",
          "symbol()",
          "decimals()",
          "balanceOf(address)",
          "allowance(address,address)",
          "()",
          "deposit()",
          "withdraw(uint256)",
          "totalSupply()",
          "approve(address,uint256)",
          "transfer(address,uint256)",
          "transferFrom(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.21"
      },
      "contracts/IFiles.sol:Initializable": {
        "src": "contracts/IFiles.sol:249",
        "version": {
          "withMetadata": "ba793f874980ba8826e0f77e588821b7a373c942b97ebcd7e4e42f378e00e824",
          "withoutMetadata": "ac0db523ddc3e330f735df7b3b0b24460531c71290a891170e840f8f67d5ff6b",
          "linkedWithoutMetadata": "ac0db523ddc3e330f735df7b3b0b24460531c71290a891170e840f8f67d5ff6b"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "contracts/IFiles.sol:251"
            },
            {
              "label": "initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "contracts/IFiles.sol:252"
            },
            {
              "label": "______gap",
              "offset": 0,
              "slot": "1",
              "type": "t_array(t_uint256)50_storage",
              "contract": "Initializable",
              "src": "contracts/IFiles.sol:283"
            }
          ],
          "types": {
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]",
              "numberOfBytes": "1600"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.21"
      },
      "contracts/IFiles.sol:Ownable": {
        "src": "contracts/IFiles.sol:286",
        "version": {
          "withMetadata": "9b6e83ec071c913ea8078938bf6c8e47f6ce697f181f2ebf31dc4937807eb386",
          "withoutMetadata": "a3dd09084d5d3377afaa5e637593b425fb1172db63a48c2f62428555638775f8",
          "linkedWithoutMetadata": "a3dd09084d5d3377afaa5e637593b425fb1172db63a48c2f62428555638775f8"
        },
        "inherit": [
          "contracts/IFiles.sol:Initializable",
          "contracts/IFiles.sol:Context"
        ],
        "libraries": [],
        "methods": [
          "()",
          "initOwner(address)",
          "owner()",
          "renounceOwnership()",
          "transferOwnership(address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "contracts/IFiles.sol:251"
            },
            {
              "label": "initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "contracts/IFiles.sol:252"
            },
            {
              "label": "______gap",
              "offset": 0,
              "slot": "1",
              "type": "t_array(t_uint256)50_storage",
              "contract": "Initializable",
              "src": "contracts/IFiles.sol:283"
            },
            {
              "label": "_owner",
              "offset": 0,
              "slot": "51",
              "type": "t_address",
              "contract": "Ownable",
              "src": "contracts/IFiles.sol:287"
            },
            {
              "label": "_previousOwner",
              "offset": 0,
              "slot": "52",
              "type": "t_address",
              "contract": "Ownable",
              "src": "contracts/IFiles.sol:288"
            },
            {
              "label": "_lockTime",
              "offset": 0,
              "slot": "53",
              "type": "t_uint256",
              "contract": "Ownable",
              "src": "contracts/IFiles.sol:289"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]",
              "numberOfBytes": "1600"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.21"
      },
      "contracts/IFiles.sol:SafeMath": {
        "src": "contracts/IFiles.sol:68",
        "version": {
          "withMetadata": "6a5db877229c78c84b33e85a297bea1121c6a6195aa310f30cbe69888293c5ae",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.21"
      },
      "contracts/ReentrancyGuard.sol:ReentrancyGuard": {
        "src": "contracts/ReentrancyGuard.sol:5",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ReentrancyGuard",
            "src": "contracts/ReentrancyGuard.sol:12"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_status",
              "offset": 0,
              "slot": "0",
              "type": "t_uint256",
              "contract": "ReentrancyGuard",
              "src": "contracts/ReentrancyGuard.sol:10"
            }
          ],
          "types": {
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.21"
      },
      "contracts/Utils.sol:PancakeLibrary": {
        "src": "contracts/Utils.sol:219",
        "version": {
          "withMetadata": "668337a75717822cd6d73bbd1c50526e84e4af10cd45125b1756676395a2f30c",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [
          "contracts/IFiles.sol:SafeMath"
        ],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.21"
      },
      "contracts/Utils.sol:Utils": {
        "src": "contracts/Utils.sol:6",
        "version": {
          "withMetadata": "a5775bd7ff330a5dfa7ddaef645bcc8fbccdcd3c38fbc9fc1755e3e3a9a09d47",
          "withoutMetadata": "8ca6da6b824cadf2e1f9c600b5f1381080c8b8d75dddf5423f35e25222daaeda",
          "linkedWithoutMetadata": "8ca6da6b824cadf2e1f9c600b5f1381080c8b8d75dddf5423f35e25222daaeda"
        },
        "inherit": [],
        "libraries": [
          "contracts/IFiles.sol:SafeMath"
        ],
        "methods": [
          "calculateBNBReward(uint256,uint256,uint256,uint256)",
          "calculateTopUpClaim(uint256,uint256,uint256,uint256)",
          "swapTokensForEth(address,uint256)",
          "swapETHForTokens(address,address,uint256)",
          "swapTokensForTokens(address,address,uint256)",
          "getAmountsout(uint256,address)",
          "addLiquidity(address,address,uint256,uint256)",
          "getAntiFlipTaxNo(uint256)",
          "calcReward(uint256,uint256,uint256,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.21"
      }
    },
    {
      "contracts/Logic.sol:Logic": {
        "src": "contracts/Logic.sol:9",
        "version": {
          "withMetadata": "087c86b163578853fb1cba09b22843df8f815c95bf2568200ddd8e1dbf167fea",
          "withoutMetadata": "a9feffbc7087e9529577fb0b368171b85b94d25918f43b5d410eb0f186274034",
          "linkedWithoutMetadata": "a9feffbc7087e9529577fb0b368171b85b94d25918f43b5d410eb0f186274034"
        },
        "inherit": [],
        "libraries": [],
        "methods": [
          "increment()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "state-variable-assignment",
            "name": "x",
            "src": "contracts/Logic.sol:13"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "implementation",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Logic",
              "src": "contracts/Logic.sol:9"
            },
            {
              "label": "x",
              "offset": 0,
              "slot": "1",
              "type": "t_uint256",
              "contract": "Logic",
              "src": "contracts/Logic.sol:13"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.21"
      }
    },
    {
      "contracts/Proxy.sol:Proxy": {
        "src": "contracts/Proxy.sol:10",
        "version": {
          "withMetadata": "d4993e31bee17cb6bd7e4ba71f36becd25d3c2dd2ba398486dd4b854da916c62",
          "withoutMetadata": "bdd247d13ba3c9c8479f7c876818cbb29ebc3fac24c9554982a6818407a96483",
          "linkedWithoutMetadata": "bdd247d13ba3c9c8479f7c876818cbb29ebc3fac24c9554982a6818407a96483"
        },
        "inherit": [],
        "libraries": [],
        "methods": [
          "()",
          "()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "state-variable-assignment",
            "name": "implementation",
            "src": "contracts/Proxy.sol:14"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "implementation",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Proxy",
              "src": "contracts/Proxy.sol:14"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.21"
      }
    },
    {
      "contracts/Logic.sol:Logic": {
        "src": "contracts/Logic.sol:9",
        "version": {
          "withMetadata": "087c86b163578853fb1cba09b22843df8f815c95bf2568200ddd8e1dbf167fea",
          "withoutMetadata": "a9feffbc7087e9529577fb0b368171b85b94d25918f43b5d410eb0f186274034",
          "linkedWithoutMetadata": "a9feffbc7087e9529577fb0b368171b85b94d25918f43b5d410eb0f186274034"
        },
        "inherit": [],
        "libraries": [],
        "methods": [
          "increment()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "state-variable-assignment",
            "name": "x",
            "src": "contracts/Logic.sol:13"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "implementation",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Logic",
              "src": "contracts/Logic.sol:9"
            },
            {
              "label": "x",
              "offset": 0,
              "slot": "1",
              "type": "t_uint256",
              "contract": "Logic",
              "src": "contracts/Logic.sol:13"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.21"
      }
    },
    {
      "contracts/Proxy.sol:Proxy": {
        "src": "contracts/Proxy.sol:10",
        "version": {
          "withMetadata": "d4993e31bee17cb6bd7e4ba71f36becd25d3c2dd2ba398486dd4b854da916c62",
          "withoutMetadata": "bdd247d13ba3c9c8479f7c876818cbb29ebc3fac24c9554982a6818407a96483",
          "linkedWithoutMetadata": "bdd247d13ba3c9c8479f7c876818cbb29ebc3fac24c9554982a6818407a96483"
        },
        "inherit": [],
        "libraries": [],
        "methods": [
          "()",
          "()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "state-variable-assignment",
            "name": "implementation",
            "src": "contracts/Proxy.sol:14"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "implementation",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Proxy",
              "src": "contracts/Proxy.sol:14"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.21"
      }
    },
    {
      "contracts/Proxy.sol:Proxy": {
        "src": "contracts/Proxy.sol:10",
        "version": {
          "withMetadata": "8a544f590213155ee2b8a479d00bc8c632a3cec80b2d9d85f9c464573abc2a34",
          "withoutMetadata": "67d721eb5863332ddbb063b51eb0b68c60762479d319811d266a069e641e1c9c",
          "linkedWithoutMetadata": "67d721eb5863332ddbb063b51eb0b68c60762479d319811d266a069e641e1c9c"
        },
        "inherit": [],
        "libraries": [],
        "methods": [
          "()",
          "()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "state-variable-assignment",
            "name": "implementation",
            "src": "contracts/Proxy.sol:14"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "implementation",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Proxy",
              "src": "contracts/Proxy.sol:14"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.21"
      }
    },
    {
      "contracts/Proxy.sol:Caller": {
        "src": "contracts/Proxy.sol:80",
        "version": {
          "withMetadata": "8a43f4805f6ec5dd7b7379a87ef3fa89b1f2cd8e86292442058e51e90f40e31d",
          "withoutMetadata": "d6211a178c252503f87d41bbcceffa66551bde0c0c4b0cc3c5a44a4f489e2c7f",
          "linkedWithoutMetadata": "d6211a178c252503f87d41bbcceffa66551bde0c0c4b0cc3c5a44a4f489e2c7f"
        },
        "inherit": [],
        "libraries": [],
        "methods": [
          "(address)",
          "increase()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Caller",
            "src": "contracts/Proxy.sol:80"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "proxy",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Caller",
              "src": "contracts/Proxy.sol:80"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.21"
      },
      "contracts/Proxy.sol:Proxy": {
        "src": "contracts/Proxy.sol:10",
        "version": {
          "withMetadata": "3a655b5f054f4310d279144652e269b840bf308c06f48e08f2d407ee1381c2c1",
          "withoutMetadata": "bc7fcd1c64d2f798926ae830c3e369a33c770ea294cd9047d184a8c885a96818",
          "linkedWithoutMetadata": "bc7fcd1c64d2f798926ae830c3e369a33c770ea294cd9047d184a8c885a96818"
        },
        "inherit": [],
        "libraries": [],
        "methods": [
          "(address)",
          "()",
          "()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Proxy",
            "src": "contracts/Proxy.sol:22"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "implementation",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Proxy",
              "src": "contracts/Proxy.sol:13"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.21"
      }
    },
    {
      "contracts/Proxy.sol:Caller": {
        "src": "contracts/Proxy.sol:80",
        "version": {
          "withMetadata": "8a43f4805f6ec5dd7b7379a87ef3fa89b1f2cd8e86292442058e51e90f40e31d",
          "withoutMetadata": "d6211a178c252503f87d41bbcceffa66551bde0c0c4b0cc3c5a44a4f489e2c7f",
          "linkedWithoutMetadata": "d6211a178c252503f87d41bbcceffa66551bde0c0c4b0cc3c5a44a4f489e2c7f"
        },
        "inherit": [],
        "libraries": [],
        "methods": [
          "(address)",
          "increase()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Caller",
            "src": "contracts/Proxy.sol:80"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "proxy",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Caller",
              "src": "contracts/Proxy.sol:80"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.21"
      },
      "contracts/Proxy.sol:Proxy": {
        "src": "contracts/Proxy.sol:10",
        "version": {
          "withMetadata": "3a655b5f054f4310d279144652e269b840bf308c06f48e08f2d407ee1381c2c1",
          "withoutMetadata": "bc7fcd1c64d2f798926ae830c3e369a33c770ea294cd9047d184a8c885a96818",
          "linkedWithoutMetadata": "bc7fcd1c64d2f798926ae830c3e369a33c770ea294cd9047d184a8c885a96818"
        },
        "inherit": [],
        "libraries": [],
        "methods": [
          "(address)",
          "()",
          "()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Proxy",
            "src": "contracts/Proxy.sol:22"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "implementation",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Proxy",
              "src": "contracts/Proxy.sol:13"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.21"
      }
    },
    {
      "contracts/Proxy.sol:Caller": {
        "src": "contracts/Proxy.sol:80",
        "version": {
          "withMetadata": "8a43f4805f6ec5dd7b7379a87ef3fa89b1f2cd8e86292442058e51e90f40e31d",
          "withoutMetadata": "d6211a178c252503f87d41bbcceffa66551bde0c0c4b0cc3c5a44a4f489e2c7f",
          "linkedWithoutMetadata": "d6211a178c252503f87d41bbcceffa66551bde0c0c4b0cc3c5a44a4f489e2c7f"
        },
        "inherit": [],
        "libraries": [],
        "methods": [
          "(address)",
          "increase()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Caller",
            "src": "contracts/Proxy.sol:80"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "proxy",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Caller",
              "src": "contracts/Proxy.sol:80"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.21"
      },
      "contracts/Proxy.sol:Proxy": {
        "src": "contracts/Proxy.sol:10",
        "version": {
          "withMetadata": "3a655b5f054f4310d279144652e269b840bf308c06f48e08f2d407ee1381c2c1",
          "withoutMetadata": "bc7fcd1c64d2f798926ae830c3e369a33c770ea294cd9047d184a8c885a96818",
          "linkedWithoutMetadata": "bc7fcd1c64d2f798926ae830c3e369a33c770ea294cd9047d184a8c885a96818"
        },
        "inherit": [],
        "libraries": [],
        "methods": [
          "(address)",
          "()",
          "()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Proxy",
            "src": "contracts/Proxy.sol:22"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "implementation",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Proxy",
              "src": "contracts/Proxy.sol:13"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.21"
      }
    },
    {
      "contracts/Proxy.sol:Caller": {
        "src": "contracts/Proxy.sol:80",
        "version": {
          "withMetadata": "8a43f4805f6ec5dd7b7379a87ef3fa89b1f2cd8e86292442058e51e90f40e31d",
          "withoutMetadata": "d6211a178c252503f87d41bbcceffa66551bde0c0c4b0cc3c5a44a4f489e2c7f",
          "linkedWithoutMetadata": "d6211a178c252503f87d41bbcceffa66551bde0c0c4b0cc3c5a44a4f489e2c7f"
        },
        "inherit": [],
        "libraries": [],
        "methods": [
          "(address)",
          "increase()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Caller",
            "src": "contracts/Proxy.sol:80"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "proxy",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Caller",
              "src": "contracts/Proxy.sol:80"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.21"
      },
      "contracts/Proxy.sol:Proxy": {
        "src": "contracts/Proxy.sol:10",
        "version": {
          "withMetadata": "3a655b5f054f4310d279144652e269b840bf308c06f48e08f2d407ee1381c2c1",
          "withoutMetadata": "bc7fcd1c64d2f798926ae830c3e369a33c770ea294cd9047d184a8c885a96818",
          "linkedWithoutMetadata": "bc7fcd1c64d2f798926ae830c3e369a33c770ea294cd9047d184a8c885a96818"
        },
        "inherit": [],
        "libraries": [],
        "methods": [
          "(address)",
          "()",
          "()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Proxy",
            "src": "contracts/Proxy.sol:22"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "implementation",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Proxy",
              "src": "contracts/Proxy.sol:13"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.21"
      }
    },
    {
      "contracts/Proxy.sol:Caller": {
        "src": "contracts/Proxy.sol:80",
        "version": {
          "withMetadata": "8a43f4805f6ec5dd7b7379a87ef3fa89b1f2cd8e86292442058e51e90f40e31d",
          "withoutMetadata": "d6211a178c252503f87d41bbcceffa66551bde0c0c4b0cc3c5a44a4f489e2c7f",
          "linkedWithoutMetadata": "d6211a178c252503f87d41bbcceffa66551bde0c0c4b0cc3c5a44a4f489e2c7f"
        },
        "inherit": [],
        "libraries": [],
        "methods": [
          "(address)",
          "increase()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Caller",
            "src": "contracts/Proxy.sol:80"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "proxy",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Caller",
              "src": "contracts/Proxy.sol:80"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.21"
      },
      "contracts/Proxy.sol:Proxy": {
        "src": "contracts/Proxy.sol:10",
        "version": {
          "withMetadata": "3a655b5f054f4310d279144652e269b840bf308c06f48e08f2d407ee1381c2c1",
          "withoutMetadata": "bc7fcd1c64d2f798926ae830c3e369a33c770ea294cd9047d184a8c885a96818",
          "linkedWithoutMetadata": "bc7fcd1c64d2f798926ae830c3e369a33c770ea294cd9047d184a8c885a96818"
        },
        "inherit": [],
        "libraries": [],
        "methods": [
          "(address)",
          "()",
          "()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Proxy",
            "src": "contracts/Proxy.sol:22"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "implementation",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Proxy",
              "src": "contracts/Proxy.sol:13"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.21"
      }
    },
    {
      "contracts/Proxy.sol:Caller": {
        "src": "contracts/Proxy.sol:80",
        "version": {
          "withMetadata": "8a43f4805f6ec5dd7b7379a87ef3fa89b1f2cd8e86292442058e51e90f40e31d",
          "withoutMetadata": "d6211a178c252503f87d41bbcceffa66551bde0c0c4b0cc3c5a44a4f489e2c7f",
          "linkedWithoutMetadata": "d6211a178c252503f87d41bbcceffa66551bde0c0c4b0cc3c5a44a4f489e2c7f"
        },
        "inherit": [],
        "libraries": [],
        "methods": [
          "(address)",
          "increase()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Caller",
            "src": "contracts/Proxy.sol:80"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "proxy",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Caller",
              "src": "contracts/Proxy.sol:80"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.21"
      },
      "contracts/Proxy.sol:Proxy": {
        "src": "contracts/Proxy.sol:10",
        "version": {
          "withMetadata": "3a655b5f054f4310d279144652e269b840bf308c06f48e08f2d407ee1381c2c1",
          "withoutMetadata": "bc7fcd1c64d2f798926ae830c3e369a33c770ea294cd9047d184a8c885a96818",
          "linkedWithoutMetadata": "bc7fcd1c64d2f798926ae830c3e369a33c770ea294cd9047d184a8c885a96818"
        },
        "inherit": [],
        "libraries": [],
        "methods": [
          "(address)",
          "()",
          "()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Proxy",
            "src": "contracts/Proxy.sol:22"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "implementation",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Proxy",
              "src": "contracts/Proxy.sol:13"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.21"
      }
    },
    {
      "contracts/Proxy.sol:Caller": {
        "src": "contracts/Proxy.sol:80",
        "version": {
          "withMetadata": "8a43f4805f6ec5dd7b7379a87ef3fa89b1f2cd8e86292442058e51e90f40e31d",
          "withoutMetadata": "d6211a178c252503f87d41bbcceffa66551bde0c0c4b0cc3c5a44a4f489e2c7f",
          "linkedWithoutMetadata": "d6211a178c252503f87d41bbcceffa66551bde0c0c4b0cc3c5a44a4f489e2c7f"
        },
        "inherit": [],
        "libraries": [],
        "methods": [
          "(address)",
          "increase()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Caller",
            "src": "contracts/Proxy.sol:80"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "proxy",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Caller",
              "src": "contracts/Proxy.sol:80"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.21"
      },
      "contracts/Proxy.sol:Proxy": {
        "src": "contracts/Proxy.sol:10",
        "version": {
          "withMetadata": "3a655b5f054f4310d279144652e269b840bf308c06f48e08f2d407ee1381c2c1",
          "withoutMetadata": "bc7fcd1c64d2f798926ae830c3e369a33c770ea294cd9047d184a8c885a96818",
          "linkedWithoutMetadata": "bc7fcd1c64d2f798926ae830c3e369a33c770ea294cd9047d184a8c885a96818"
        },
        "inherit": [],
        "libraries": [],
        "methods": [
          "(address)",
          "()",
          "()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Proxy",
            "src": "contracts/Proxy.sol:22"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "implementation",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Proxy",
              "src": "contracts/Proxy.sol:13"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.21"
      }
    },
    {
      "@openzeppelin/contracts/access/Ownable.sol:Ownable": {
        "src": "@openzeppelin/contracts/access/Ownable.sol:20",
        "inherit": [
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [],
        "methods": [
          "owner()",
          "renounceOwnership()",
          "transferOwnership(address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Ownable",
            "src": "@openzeppelin/contracts/access/Ownable.sol:28"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Ownable",
              "src": "@openzeppelin/contracts/access/Ownable.sol:21"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.21"
      },
      "@openzeppelin/contracts/security/ReentrancyGuard.sol:ReentrancyGuard": {
        "src": "@openzeppelin/contracts/security/ReentrancyGuard.sol:22",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ReentrancyGuard",
            "src": "@openzeppelin/contracts/security/ReentrancyGuard.sol:39"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_status",
              "offset": 0,
              "slot": "0",
              "type": "t_uint256",
              "contract": "ReentrancyGuard",
              "src": "@openzeppelin/contracts/security/ReentrancyGuard.sol:37"
            }
          ],
          "types": {
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.21"
      },
      "@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20": {
        "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:35",
        "version": {
          "withMetadata": "b653be9ad258ddaafa2304767243ba86eac7156acd9bf1a196bee0fef9b1c3a9",
          "withoutMetadata": "1d55e2dc08aae4fa5bd2ca8ac476f7a2e63bdfa7b0b51d4bd61db8705143a140",
          "linkedWithoutMetadata": "1d55e2dc08aae4fa5bd2ca8ac476f7a2e63bdfa7b0b51d4bd61db8705143a140"
        },
        "inherit": [
          "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol:IERC20Metadata",
          "@openzeppelin/contracts/token/ERC20/IERC20.sol:IERC20",
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [],
        "methods": [
          "(string,string)",
          "name()",
          "symbol()",
          "decimals()",
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)",
          "increaseAllowance(address,uint256)",
          "decreaseAllowance(address,uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ERC20",
            "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:54"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_balances",
              "offset": 0,
              "slot": "0",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:36"
            },
            {
              "label": "_allowances",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:38"
            },
            {
              "label": "_totalSupply",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:40"
            },
            {
              "label": "_name",
              "offset": 0,
              "slot": "3",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:42"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "4",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:43"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.21"
      },
      "@openzeppelin/contracts/token/ERC20/IERC20.sol:IERC20": {
        "src": "@openzeppelin/contracts/token/ERC20/IERC20.sol:9",
        "inherit": [],
        "libraries": [],
        "methods": [
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.21"
      },
      "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol:IERC20Metadata": {
        "src": "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol:13",
        "inherit": [
          "@openzeppelin/contracts/token/ERC20/IERC20.sol:IERC20"
        ],
        "libraries": [],
        "methods": [
          "name()",
          "symbol()",
          "decimals()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.21"
      },
      "@openzeppelin/contracts/token/ERC20/extensions/draft-IERC20Permit.sol:IERC20Permit": {
        "src": "@openzeppelin/contracts/token/ERC20/extensions/draft-IERC20Permit.sol:14",
        "inherit": [],
        "libraries": [],
        "methods": [
          "permit(address,address,uint256,uint256,uint8,bytes32,bytes32)",
          "nonces(address)",
          "DOMAIN_SEPARATOR()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.21"
      },
      "@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol:SafeERC20": {
        "src": "@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol:19",
        "version": {
          "withMetadata": "945db44b71722f915e3e7352ee22f854dfe8000e69eee742d881b64279bb0ad8",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [
          "@openzeppelin/contracts/utils/Address.sol:Address"
        ],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.21"
      },
      "@openzeppelin/contracts/utils/Address.sol:Address": {
        "src": "@openzeppelin/contracts/utils/Address.sol:9",
        "version": {
          "withMetadata": "9401bbf4dc0decc4c739a060967031a16e8de389388d98c32ec11cff440d6513",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [
          {
            "kind": "delegatecall",
            "src": "@openzeppelin/contracts/utils/Address.sol:191"
          },
          {
            "kind": "delegatecall",
            "src": "@openzeppelin/contracts/utils/Address.sol:191"
          }
        ],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.21"
      },
      "@openzeppelin/contracts/utils/Context.sol:Context": {
        "src": "@openzeppelin/contracts/utils/Context.sol:16",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.21"
      },
      "@openzeppelin/contracts/utils/math/Math.sol:Math": {
        "src": "@openzeppelin/contracts/utils/math/Math.sol:9",
        "version": {
          "withMetadata": "f58f3d1d6b53395057afc8a5e1edcbfcd81cdec0dfcf6b1290c8c2368b975278",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.21"
      },
      "@openzeppelin/contracts/utils/math/SafeMath.sol:SafeMath": {
        "src": "@openzeppelin/contracts/utils/math/SafeMath.sol:16",
        "version": {
          "withMetadata": "4167346fe154a63f59e72262dbca9ccb097c97b61ec5dfe163259378386d2ba4",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.21"
      },
      "contracts/Presale.sol:IGoldToken": {
        "src": "contracts/Presale.sol:8",
        "inherit": [],
        "libraries": [],
        "methods": [
          "mint(address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.21"
      },
      "contracts/Presale.sol:Presale": {
        "src": "contracts/Presale.sol:12",
        "version": {
          "withMetadata": "55de4f41aa2ae4e88c3e975f7f7c871c8630a6a915f505e8b168c82d5665ef13",
          "withoutMetadata": "2fa5a3bfe1ae715a2695aad2a1fdda65dd5f2dfe346a8af0822d82b296b7bc1b",
          "linkedWithoutMetadata": "2fa5a3bfe1ae715a2695aad2a1fdda65dd5f2dfe346a8af0822d82b296b7bc1b"
        },
        "inherit": [
          "@openzeppelin/contracts/security/ReentrancyGuard.sol:ReentrancyGuard",
          "@openzeppelin/contracts/access/Ownable.sol:Ownable",
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [],
        "methods": [
          "(address,address,address,uint256)",
          "createPreSale((uint256,uint256,uint256))",
          "sale()",
          "getCanIdoAmount(address)",
          "bindReffer(address)",
          "userBalance(address)",
          "userRewardBalance(address)",
          "userWithdraw()",
          "teamWithdraw(address)",
          "setUserWithdrawTime(uint256)",
          "setInviteMin(uint256)",
          "setPerMaxBuyUsdt(uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Presale",
            "src": "contracts/Presale.sol:46"
          },
          {
            "kind": "state-variable-assignment",
            "name": "perMaxBuyUsdt",
            "src": "contracts/Presale.sol:15"
          },
          {
            "kind": "state-variable-assignment",
            "name": "inviteMin",
            "src": "contracts/Presale.sol:31"
          },
          {
            "kind": "state-variable-assignment",
            "name": "maxSale",
            "src": "contracts/Presale.sol:33"
          },
          {
            "kind": "state-variable-assignment",
            "name": "rewardLevel",
            "src": "contracts/Presale.sol:36"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Ownable",
              "src": "@openzeppelin/contracts/access/Ownable.sol:21"
            },
            {
              "label": "_status",
              "offset": 0,
              "slot": "1",
              "type": "t_uint256",
              "contract": "ReentrancyGuard",
              "src": "@openzeppelin/contracts/security/ReentrancyGuard.sol:37"
            },
            {
              "label": "userWithdrawTime",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "Presale",
              "src": "contracts/Presale.sol:13"
            },
            {
              "label": "perMaxBuyUsdt",
              "offset": 0,
              "slot": "3",
              "type": "t_uint256",
              "contract": "Presale",
              "src": "contracts/Presale.sol:15"
            },
            {
              "label": "teamAddress",
              "offset": 0,
              "slot": "4",
              "type": "t_address",
              "contract": "Presale",
              "src": "contracts/Presale.sol:16"
            },
            {
              "label": "saleToken",
              "offset": 0,
              "slot": "5",
              "type": "t_address",
              "contract": "Presale",
              "src": "contracts/Presale.sol:17"
            },
            {
              "label": "usdtToken",
              "offset": 0,
              "slot": "6",
              "type": "t_address",
              "contract": "Presale",
              "src": "contracts/Presale.sol:18"
            },
            {
              "label": "goldTokenAddress",
              "offset": 0,
              "slot": "7",
              "type": "t_address",
              "contract": "Presale",
              "src": "contracts/Presale.sol:19"
            },
            {
              "label": "balances",
              "offset": 0,
              "slot": "8",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "Presale",
              "src": "contracts/Presale.sol:20"
            },
            {
              "label": "userBuyTotalUsdt",
              "offset": 0,
              "slot": "9",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "Presale",
              "src": "contracts/Presale.sol:21"
            },
            {
              "label": "rewardBalances",
              "offset": 0,
              "slot": "10",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "Presale",
              "src": "contracts/Presale.sol:22"
            },
            {
              "label": "reffers",
              "offset": 0,
              "slot": "11",
              "type": "t_mapping(t_address,t_address)",
              "contract": "Presale",
              "src": "contracts/Presale.sol:23"
            },
            {
              "label": "refferNumber",
              "offset": 0,
              "slot": "12",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "Presale",
              "src": "contracts/Presale.sol:24"
            },
            {
              "label": "teamRefferNumber",
              "offset": 0,
              "slot": "13",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "Presale",
              "src": "contracts/Presale.sol:25"
            },
            {
              "label": "firstIdo",
              "offset": 0,
              "slot": "14",
              "type": "t_mapping(t_address,t_bool)",
              "contract": "Presale",
              "src": "contracts/Presale.sol:26"
            },
            {
              "label": "totalIdoUSDT",
              "offset": 0,
              "slot": "15",
              "type": "t_uint256",
              "contract": "Presale",
              "src": "contracts/Presale.sol:27"
            },
            {
              "label": "totalIdoUser",
              "offset": 0,
              "slot": "16",
              "type": "t_uint256",
              "contract": "Presale",
              "src": "contracts/Presale.sol:28"
            },
            {
              "label": "totalSale",
              "offset": 0,
              "slot": "17",
              "type": "t_uint256",
              "contract": "Presale",
              "src": "contracts/Presale.sol:29"
            },
            {
              "label": "inviteMin",
              "offset": 0,
              "slot": "18",
              "type": "t_uint256",
              "contract": "Presale",
              "src": "contracts/Presale.sol:31"
            },
            {
              "label": "maxSale",
              "offset": 0,
              "slot": "19",
              "type": "t_uint256",
              "contract": "Presale",
              "src": "contracts/Presale.sol:33"
            },
            {
              "label": "isCloseSale",
              "offset": 0,
              "slot": "20",
              "type": "t_bool",
              "contract": "Presale",
              "src": "contracts/Presale.sol:34"
            },
            {
              "label": "rewardLevel",
              "offset": 0,
              "slot": "21",
              "type": "t_array(t_uint256)dyn_storage",
              "contract": "Presale",
              "src": "contracts/Presale.sol:36"
            },
            {
              "label": "presaleInfo",
              "offset": 0,
              "slot": "22",
              "type": "t_struct(PresaleInfo)2392_storage",
              "contract": "Presale",
              "src": "contracts/Presale.sol:44"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_uint256)dyn_storage": {
              "label": "uint256[]",
              "numberOfBytes": "32"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_mapping(t_address,t_address)": {
              "label": "mapping(address => address)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_struct(PresaleInfo)2392_storage": {
              "label": "struct Presale.PresaleInfo",
              "members": [
                {
                  "label": "startTime",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "endTime",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "price",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "2"
                }
              ],
              "numberOfBytes": "96"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.21"
      },
      "contracts/Staking.sol:IRejuvenate": {
        "src": "contracts/Staking.sol:9",
        "inherit": [],
        "libraries": [],
        "methods": [
          "mint(address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.21"
      },
      "contracts/Staking.sol:Staking": {
        "src": "contracts/Staking.sol:13",
        "version": {
          "withMetadata": "d4a43fbe5f8d6347383f0680dba0a94146fceda61d8f28fb0ed926fda6eca5bc",
          "withoutMetadata": "8e35a11dc4a30aced1c096dd5db7f6424d19b292b732012b8d44d054f9cea466",
          "linkedWithoutMetadata": "8e35a11dc4a30aced1c096dd5db7f6424d19b292b732012b8d44d054f9cea466"
        },
        "inherit": [
          "@openzeppelin/contracts/security/ReentrancyGuard.sol:ReentrancyGuard",
          "@openzeppelin/contracts/access/Ownable.sol:Ownable",
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [],
        "methods": [
          "()",
          "changeRewardsPerBlock(uint256)",
          "rewardPerToken()",
          "earned(address)",
          "stake(uint256)",
          "unstake(uint256)",
          "claimRewards()",
          "pause()",
          "unpause()",
          "inCaseTokensGetStuck(address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Staking",
            "src": "contracts/Staking.sol:33"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Ownable",
              "src": "@openzeppelin/contracts/access/Ownable.sol:21"
            },
            {
              "label": "_status",
              "offset": 0,
              "slot": "1",
              "type": "t_uint256",
              "contract": "ReentrancyGuard",
              "src": "@openzeppelin/contracts/security/ReentrancyGuard.sol:37"
            },
            {
              "label": "paused",
              "offset": 0,
              "slot": "2",
              "type": "t_bool",
              "contract": "Staking",
              "src": "contracts/Staking.sol:14"
            },
            {
              "label": "_treasury",
              "offset": 1,
              "slot": "2",
              "type": "t_address",
              "contract": "Staking",
              "src": "contracts/Staking.sol:15"
            },
            {
              "label": "token",
              "offset": 0,
              "slot": "3",
              "type": "t_address",
              "contract": "Staking",
              "src": "contracts/Staking.sol:17"
            },
            {
              "label": "rewardRate",
              "offset": 0,
              "slot": "4",
              "type": "t_uint256",
              "contract": "Staking",
              "src": "contracts/Staking.sol:19"
            },
            {
              "label": "_lastUpdateBlock",
              "offset": 0,
              "slot": "5",
              "type": "t_uint256",
              "contract": "Staking",
              "src": "contracts/Staking.sol:20"
            },
            {
              "label": "_rewardsPerToken",
              "offset": 0,
              "slot": "6",
              "type": "t_uint256",
              "contract": "Staking",
              "src": "contracts/Staking.sol:21"
            },
            {
              "label": "data",
              "offset": 0,
              "slot": "7",
              "type": "t_array(t_struct(StakingData)3375_storage)dyn_storage",
              "contract": "Staking",
              "src": "contracts/Staking.sol:22"
            },
            {
              "label": "_userRewardsPerToken",
              "offset": 0,
              "slot": "8",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "Staking",
              "src": "contracts/Staking.sol:24"
            },
            {
              "label": "_rewards",
              "offset": 0,
              "slot": "9",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "Staking",
              "src": "contracts/Staking.sol:25"
            },
            {
              "label": "totalStaked",
              "offset": 0,
              "slot": "10",
              "type": "t_uint256",
              "contract": "Staking",
              "src": "contracts/Staking.sol:27"
            },
            {
              "label": "_balances",
              "offset": 0,
              "slot": "11",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "Staking",
              "src": "contracts/Staking.sol:28"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_struct(StakingData)3375_storage)dyn_storage": {
              "label": "struct StakingData[]",
              "numberOfBytes": "32"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_struct(StakingData)3375_storage": {
              "label": "struct StakingData",
              "members": [
                {
                  "label": "block",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "staked",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "1"
                }
              ],
              "numberOfBytes": "64"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.21"
      }
    },
    {
      "contracts/RichHusky.sol:Checker": {
        "src": "contracts/RichHusky.sol:520",
        "version": {
          "withMetadata": "17e1cf10fdffcda321c1a1f59d2b06178394724b4d8ad9b035a718122fed8a52",
          "withoutMetadata": "0faf6ca500781d04501ba7e4cf9138e35957321419c6ca29798480c22b3cc5cd",
          "linkedWithoutMetadata": "0faf6ca500781d04501ba7e4cf9138e35957321419c6ca29798480c22b3cc5cd"
        },
        "inherit": [],
        "libraries": [],
        "methods": [
          "isValid(address,address,address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.21"
      },
      "contracts/RichHusky.sol:Context": {
        "src": "contracts/RichHusky.sol:27",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.21"
      },
      "contracts/RichHusky.sol:ERC20": {
        "src": "contracts/RichHusky.sol:162",
        "version": {
          "withMetadata": "e092e43bc9c3243b7138ce015fa92d358fa66a764079145cfe1339f160fd055e",
          "withoutMetadata": "e248eda4094a79267c1d78eb85fb3a082e2ba4d153192b2644d6357dbed158f3",
          "linkedWithoutMetadata": "e248eda4094a79267c1d78eb85fb3a082e2ba4d153192b2644d6357dbed158f3"
        },
        "inherit": [
          "contracts/RichHusky.sol:IERC20Metadata",
          "contracts/RichHusky.sol:IERC20",
          "contracts/RichHusky.sol:Context"
        ],
        "libraries": [],
        "methods": [
          "(string,string)",
          "name()",
          "symbol()",
          "decimals()",
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)",
          "increaseAllowance(address,uint256)",
          "decreaseAllowance(address,uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ERC20",
            "src": "contracts/RichHusky.sol:181"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_balances",
              "offset": 0,
              "slot": "0",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC20",
              "src": "contracts/RichHusky.sol:163"
            },
            {
              "label": "_allowances",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "ERC20",
              "src": "contracts/RichHusky.sol:165"
            },
            {
              "label": "_totalSupply",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "ERC20",
              "src": "contracts/RichHusky.sol:167"
            },
            {
              "label": "_name",
              "offset": 0,
              "slot": "3",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "contracts/RichHusky.sol:169"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "4",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "contracts/RichHusky.sol:170"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.21"
      },
      "contracts/RichHusky.sol:IERC20": {
        "src": "contracts/RichHusky.sol:40",
        "inherit": [],
        "libraries": [],
        "methods": [
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.21"
      },
      "contracts/RichHusky.sol:IERC20Metadata": {
        "src": "contracts/RichHusky.sol:120",
        "inherit": [
          "contracts/RichHusky.sol:IERC20"
        ],
        "libraries": [],
        "methods": [
          "name()",
          "symbol()",
          "decimals()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.21"
      },
      "contracts/RichHusky.sol:IFactory": {
        "src": "contracts/RichHusky.sol:535",
        "inherit": [],
        "libraries": [],
        "methods": [
          "createPair(address,address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.21"
      },
      "contracts/RichHusky.sol:IGasToken": {
        "src": "contracts/RichHusky.sol:539",
        "inherit": [],
        "libraries": [],
        "methods": [
          "free(uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.21"
      },
      "contracts/RichHusky.sol:RichHusky": {
        "src": "contracts/RichHusky.sol:543",
        "version": {
          "withMetadata": "ce802161ba5ffecece3a7488fb3a07a35d8f78edf3674187d3eb27cc30777604",
          "withoutMetadata": "7c4ce62a347a52dc2685dbb41f6d968bb51e7d6abb10665abf0c7d7699da0d36",
          "linkedWithoutMetadata": "7c4ce62a347a52dc2685dbb41f6d968bb51e7d6abb10665abf0c7d7699da0d36"
        },
        "inherit": [
          "contracts/RichHusky.sol:ERC20",
          "contracts/RichHusky.sol:IERC20Metadata",
          "contracts/RichHusky.sol:IERC20",
          "contracts/RichHusky.sol:Context"
        ],
        "libraries": [
          "contracts/RichHusky.sol:Checker"
        ],
        "methods": [
          "(address)",
          "mint(address,uint256)",
          "updateAirdropAmount(uint256)",
          "withdrawFee(address,uint256)",
          "airdrop(address[],uint256)",
          "addBetaUsers(address[])",
          "removeBetaUsers(address[])",
          "multiCall(address[],bytes[])"
        ],
        "linkReferences": [
          {
            "src": "contracts/RichHusky.sol",
            "name": "Checker",
            "length": 20,
            "start": 5176,
            "placeholder": "__$1cb883ae52507a2d00adae80c79f632cb4$__"
          }
        ],
        "errors": [
          {
            "kind": "constructor",
            "contract": "RichHusky",
            "src": "contracts/RichHusky.sol:554"
          },
          {
            "kind": "state-variable-immutable",
            "name": "pancakeFactory",
            "src": "contracts/RichHusky.sol:549"
          },
          {
            "kind": "state-variable-immutable",
            "name": "WBNB",
            "src": "contracts/RichHusky.sol:550"
          },
          {
            "kind": "state-variable-immutable",
            "name": "GasToken",
            "src": "contracts/RichHusky.sol:552"
          },
          {
            "kind": "external-library-linking",
            "name": "Checker",
            "src": "contracts/RichHusky.sol"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_balances",
              "offset": 0,
              "slot": "0",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC20",
              "src": "contracts/RichHusky.sol:163"
            },
            {
              "label": "_allowances",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "ERC20",
              "src": "contracts/RichHusky.sol:165"
            },
            {
              "label": "_totalSupply",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "ERC20",
              "src": "contracts/RichHusky.sol:167"
            },
            {
              "label": "_name",
              "offset": 0,
              "slot": "3",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "contracts/RichHusky.sol:169"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "4",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "contracts/RichHusky.sol:170"
            },
            {
              "label": "dev",
              "offset": 0,
              "slot": "5",
              "type": "t_address",
              "contract": "RichHusky",
              "src": "contracts/RichHusky.sol:544"
            },
            {
              "label": "airdropAmount",
              "offset": 0,
              "slot": "6",
              "type": "t_uint256",
              "contract": "RichHusky",
              "src": "contracts/RichHusky.sol:545"
            },
            {
              "label": "betaUsers",
              "offset": 0,
              "slot": "7",
              "type": "t_mapping(t_address,t_bool)",
              "contract": "RichHusky",
              "src": "contracts/RichHusky.sol:546"
            },
            {
              "label": "pair",
              "offset": 0,
              "slot": "8",
              "type": "t_address",
              "contract": "RichHusky",
              "src": "contracts/RichHusky.sol:547"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.21"
      }
    },
    {
      "contracts/FirstDao.sol:FistDao": {
        "src": "contracts/FirstDao.sol:127",
        "version": {
          "withMetadata": "87594bf7d015e41aaf777bc0dc62e9e8a3685546fcfa065eb87291ef7f3f16f4",
          "withoutMetadata": "5bdb2538a3ba33172d93851875dfca20475ce01973348f896430788ab9d8314a",
          "linkedWithoutMetadata": "5bdb2538a3ba33172d93851875dfca20475ce01973348f896430788ab9d8314a"
        },
        "inherit": [
          "contracts/FirstDao.sol:Ownable",
          "contracts/FirstDao.sol:IERC20"
        ],
        "libraries": [
          "contracts/FirstDao.sol:SafeMath"
        ],
        "methods": [
          "(string,string)",
          "()",
          "initialize(address,address,address,address)",
          "transferEvent(address,address,uint256)",
          "feeState()",
          "getIsApproved(address)",
          "searchExcludedFromFeeAccounts(address)",
          "getDefaultBalance()",
          "insertIntoExcludedFromFeeAccounts(address[])",
          "deleteFromExcludedFromFeeAccounts(address[])",
          "claim(address,uint256)",
          "name()",
          "symbol()",
          "decimals()",
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "transferFrom(address,address,uint256)",
          "approve(address,uint256)",
          "allowance(address,address)",
          "increaseAllowance(address,uint256)",
          "decreaseAllowance(address,uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "FistDao",
            "src": "contracts/FirstDao.sol:159"
          },
          {
            "kind": "state-variable-assignment",
            "name": "_decimals",
            "src": "contracts/FirstDao.sol:132"
          },
          {
            "kind": "state-variable-assignment",
            "name": "_totalSupply",
            "src": "contracts/FirstDao.sol:133"
          },
          {
            "kind": "state-variable-assignment",
            "name": "_feeTax",
            "src": "contracts/FirstDao.sol:138"
          },
          {
            "kind": "state-variable-assignment",
            "name": "_feeMining",
            "src": "contracts/FirstDao.sol:139"
          },
          {
            "kind": "state-variable-assignment",
            "name": "_feeLiquidity",
            "src": "contracts/FirstDao.sol:140"
          },
          {
            "kind": "state-variable-assignment",
            "name": "_feeDivisor",
            "src": "contracts/FirstDao.sol:141"
          },
          {
            "kind": "state-variable-assignment",
            "name": "_removeAllFee",
            "src": "contracts/FirstDao.sol:143"
          },
          {
            "kind": "state-variable-assignment",
            "name": "_defaultBalance",
            "src": "contracts/FirstDao.sol:150"
          },
          {
            "kind": "state-variable-assignment",
            "name": "_defaultAmount",
            "src": "contracts/FirstDao.sol:151"
          },
          {
            "kind": "state-variable-assignment",
            "name": "_initialized111",
            "src": "contracts/FirstDao.sol:156"
          },
          {
            "kind": "state-variable-assignment",
            "name": "_reentry",
            "src": "contracts/FirstDao.sol:157"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Ownable",
              "src": "contracts/FirstDao.sol:58"
            },
            {
              "label": "_previousOwner",
              "offset": 0,
              "slot": "1",
              "type": "t_address",
              "contract": "Ownable",
              "src": "contracts/FirstDao.sol:59"
            },
            {
              "label": "_switchDate",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "Ownable",
              "src": "contracts/FirstDao.sol:60"
            },
            {
              "label": "_name",
              "offset": 0,
              "slot": "3",
              "type": "t_string_storage",
              "contract": "FistDao",
              "src": "contracts/FirstDao.sol:130"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "4",
              "type": "t_string_storage",
              "contract": "FistDao",
              "src": "contracts/FirstDao.sol:131"
            },
            {
              "label": "_decimals",
              "offset": 0,
              "slot": "5",
              "type": "t_uint8",
              "contract": "FistDao",
              "src": "contracts/FirstDao.sol:132"
            },
            {
              "label": "_totalSupply",
              "offset": 0,
              "slot": "6",
              "type": "t_uint256",
              "contract": "FistDao",
              "src": "contracts/FirstDao.sol:133"
            },
            {
              "label": "_balances",
              "offset": 0,
              "slot": "7",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "FistDao",
              "src": "contracts/FirstDao.sol:134"
            },
            {
              "label": "_allowances",
              "offset": 0,
              "slot": "8",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "FistDao",
              "src": "contracts/FirstDao.sol:135"
            },
            {
              "label": "_isApproved",
              "offset": 0,
              "slot": "9",
              "type": "t_mapping(t_address,t_bool)",
              "contract": "FistDao",
              "src": "contracts/FirstDao.sol:136"
            },
            {
              "label": "_feeTax",
              "offset": 0,
              "slot": "10",
              "type": "t_uint256",
              "contract": "FistDao",
              "src": "contracts/FirstDao.sol:138"
            },
            {
              "label": "_feeMining",
              "offset": 0,
              "slot": "11",
              "type": "t_uint256",
              "contract": "FistDao",
              "src": "contracts/FirstDao.sol:139"
            },
            {
              "label": "_feeLiquidity",
              "offset": 0,
              "slot": "12",
              "type": "t_uint256",
              "contract": "FistDao",
              "src": "contracts/FirstDao.sol:140"
            },
            {
              "label": "_feeDivisor",
              "offset": 0,
              "slot": "13",
              "type": "t_uint256",
              "contract": "FistDao",
              "src": "contracts/FirstDao.sol:141"
            },
            {
              "label": "_removeAllFee",
              "offset": 0,
              "slot": "14",
              "type": "t_bool",
              "contract": "FistDao",
              "src": "contracts/FirstDao.sol:143"
            },
            {
              "label": "_core",
              "offset": 1,
              "slot": "14",
              "type": "t_address",
              "contract": "FistDao",
              "src": "contracts/FirstDao.sol:145"
            },
            {
              "label": "_taxReceiver",
              "offset": 0,
              "slot": "15",
              "type": "t_address",
              "contract": "FistDao",
              "src": "contracts/FirstDao.sol:146"
            },
            {
              "label": "_miningPool",
              "offset": 0,
              "slot": "16",
              "type": "t_address",
              "contract": "FistDao",
              "src": "contracts/FirstDao.sol:147"
            },
            {
              "label": "_liquidityPool",
              "offset": 0,
              "slot": "17",
              "type": "t_address",
              "contract": "FistDao",
              "src": "contracts/FirstDao.sol:148"
            },
            {
              "label": "_defaultBalance",
              "offset": 0,
              "slot": "18",
              "type": "t_uint256",
              "contract": "FistDao",
              "src": "contracts/FirstDao.sol:150"
            },
            {
              "label": "_defaultAmount",
              "offset": 0,
              "slot": "19",
              "type": "t_uint256",
              "contract": "FistDao",
              "src": "contracts/FirstDao.sol:151"
            },
            {
              "label": "_isExcludedFromFee",
              "offset": 0,
              "slot": "20",
              "type": "t_mapping(t_address,t_bool)",
              "contract": "FistDao",
              "src": "contracts/FirstDao.sol:153"
            },
            {
              "label": "_excludedFromFeeAccounts",
              "offset": 0,
              "slot": "21",
              "type": "t_array(t_address)dyn_storage",
              "contract": "FistDao",
              "src": "contracts/FirstDao.sol:154"
            },
            {
              "label": "_initialized111",
              "offset": 0,
              "slot": "22",
              "type": "t_bool",
              "contract": "FistDao",
              "src": "contracts/FirstDao.sol:156"
            },
            {
              "label": "_reentry",
              "offset": 0,
              "slot": "23",
              "type": "t_uint256",
              "contract": "FistDao",
              "src": "contracts/FirstDao.sol:157"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_address)dyn_storage": {
              "label": "address[]",
              "numberOfBytes": "32"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint8": {
              "label": "uint8",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.21"
      },
      "contracts/FirstDao.sol:ICore": {
        "src": "contracts/FirstDao.sol:119",
        "inherit": [],
        "libraries": [],
        "methods": [
          "getPairAddress()",
          "airdrop()",
          "safety(address,address)",
          "start()",
          "end()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.21"
      },
      "contracts/FirstDao.sol:IERC20": {
        "src": "contracts/FirstDao.sol:8",
        "inherit": [],
        "libraries": [],
        "methods": [
          "name()",
          "symbol()",
          "decimals()",
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "transferFrom(address,address,uint256)",
          "approve(address,uint256)",
          "allowance(address,address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.21"
      },
      "contracts/FirstDao.sol:IFactory": {
        "src": "contracts/FirstDao.sol:91",
        "inherit": [],
        "libraries": [],
        "methods": [
          "createPair(address,address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.21"
      },
      "contracts/FirstDao.sol:IRouter01": {
        "src": "contracts/FirstDao.sol:95",
        "inherit": [],
        "libraries": [],
        "methods": [
          "factory()",
          "addLiquidity(address,address,uint256,uint256,uint256,uint256,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.21"
      },
      "contracts/FirstDao.sol:IRouter02": {
        "src": "contracts/FirstDao.sol:109",
        "inherit": [
          "contracts/FirstDao.sol:IRouter01"
        ],
        "libraries": [],
        "methods": [
          "swapExactTokensForTokensSupportingFeeOnTransferTokens(uint256,uint256,address[],address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.21"
      },
      "contracts/FirstDao.sol:Ownable": {
        "src": "contracts/FirstDao.sol:57",
        "inherit": [],
        "libraries": [],
        "methods": [
          "owner()",
          "switchDate()",
          "transferOwnership(uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Ownable",
            "src": "contracts/FirstDao.sol:63"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Ownable",
              "src": "contracts/FirstDao.sol:58"
            },
            {
              "label": "_previousOwner",
              "offset": 0,
              "slot": "1",
              "type": "t_address",
              "contract": "Ownable",
              "src": "contracts/FirstDao.sol:59"
            },
            {
              "label": "_switchDate",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "Ownable",
              "src": "contracts/FirstDao.sol:60"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.21"
      },
      "contracts/FirstDao.sol:SafeMath": {
        "src": "contracts/FirstDao.sol:22",
        "version": {
          "withMetadata": "95eb3df1bd62a62b1bf87150f7314053125cc709ed6eb26f9bf2a30d8fc55e32",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.21"
      }
    },
    {
      "contracts/IFiles.sol:Address": {
        "src": "contracts/IFiles.sol:147",
        "version": {
          "withMetadata": "73f3d745b82ff92d492794f39ddc131795315255895e196d918dc1260c813488",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.21"
      },
      "contracts/IFiles.sol:Context": {
        "src": "contracts/IFiles.sol:135",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.21"
      },
      "contracts/IFiles.sol:IBEP20": {
        "src": "contracts/IFiles.sol:9",
        "inherit": [],
        "libraries": [],
        "methods": [
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.21"
      },
      "contracts/IFiles.sol:IPancakeFactory": {
        "src": "contracts/IFiles.sol:327",
        "inherit": [],
        "libraries": [],
        "methods": [
          "feeTo()",
          "feeToSetter()",
          "getPair(address,address)",
          "allPairs(uint256)",
          "allPairsLength()",
          "createPair(address,address)",
          "setFeeTo(address)",
          "setFeeToSetter(address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.21"
      },
      "contracts/IFiles.sol:IPancakePair": {
        "src": "contracts/IFiles.sol:357",
        "inherit": [],
        "libraries": [],
        "methods": [
          "name()",
          "symbol()",
          "decimals()",
          "totalSupply()",
          "balanceOf(address)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transfer(address,uint256)",
          "transferFrom(address,address,uint256)",
          "DOMAIN_SEPARATOR()",
          "PERMIT_TYPEHASH()",
          "nonces(address)",
          "permit(address,address,uint256,uint256,uint8,bytes32,bytes32)",
          "MINIMUM_LIQUIDITY()",
          "factory()",
          "token0()",
          "token1()",
          "getReserves()",
          "price0CumulativeLast()",
          "price1CumulativeLast()",
          "kLast()",
          "mint(address)",
          "burn(address)",
          "swap(uint256,uint256,address,bytes)",
          "skim(address)",
          "sync()",
          "initialize(address,address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.21"
      },
      "contracts/IFiles.sol:IPancakeRouter01": {
        "src": "contracts/IFiles.sol:466",
        "inherit": [],
        "libraries": [],
        "methods": [
          "factory()",
          "WETH()",
          "addLiquidity(address,address,uint256,uint256,uint256,uint256,address,uint256)",
          "addLiquidityETH(address,uint256,uint256,uint256,address,uint256)",
          "removeLiquidity(address,address,uint256,uint256,uint256,address,uint256)",
          "removeLiquidityETH(address,uint256,uint256,uint256,address,uint256)",
          "removeLiquidityWithPermit(address,address,uint256,uint256,uint256,address,uint256,bool,uint8,bytes32,bytes32)",
          "removeLiquidityETHWithPermit(address,uint256,uint256,uint256,address,uint256,bool,uint8,bytes32,bytes32)",
          "swapExactTokensForTokens(uint256,uint256,address[],address,uint256)",
          "swapTokensForExactTokens(uint256,uint256,address[],address,uint256)",
          "swapExactETHForTokens(uint256,address[],address,uint256)",
          "swapTokensForExactETH(uint256,uint256,address[],address,uint256)",
          "swapExactTokensForETH(uint256,uint256,address[],address,uint256)",
          "swapETHForExactTokens(uint256,address[],address,uint256)",
          "quote(uint256,uint256,uint256)",
          "getAmountOut(uint256,uint256,uint256)",
          "getAmountIn(uint256,uint256,uint256)",
          "getAmountsOut(uint256,address[])",
          "getAmountsIn(uint256,address[])"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.21"
      },
      "contracts/IFiles.sol:IPancakeRouter02": {
        "src": "contracts/IFiles.sol:626",
        "inherit": [
          "contracts/IFiles.sol:IPancakeRouter01"
        ],
        "libraries": [],
        "methods": [
          "removeLiquidityETHSupportingFeeOnTransferTokens(address,uint256,uint256,uint256,address,uint256)",
          "removeLiquidityETHWithPermitSupportingFeeOnTransferTokens(address,uint256,uint256,uint256,address,uint256,bool,uint8,bytes32,bytes32)",
          "swapExactTokensForTokensSupportingFeeOnTransferTokens(uint256,uint256,address[],address,uint256)",
          "swapExactETHForTokensSupportingFeeOnTransferTokens(uint256,address[],address,uint256)",
          "swapExactTokensForETHSupportingFeeOnTransferTokens(uint256,uint256,address[],address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.21"
      },
      "contracts/IFiles.sol:IWBNB": {
        "src": "contracts/IFiles.sol:38",
        "inherit": [],
        "libraries": [],
        "methods": [
          "name()",
          "symbol()",
          "decimals()",
          "balanceOf(address)",
          "allowance(address,address)",
          "()",
          "deposit()",
          "withdraw(uint256)",
          "totalSupply()",
          "approve(address,uint256)",
          "transfer(address,uint256)",
          "transferFrom(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.21"
      },
      "contracts/IFiles.sol:Initializable": {
        "src": "contracts/IFiles.sol:249",
        "version": {
          "withMetadata": "ba793f874980ba8826e0f77e588821b7a373c942b97ebcd7e4e42f378e00e824",
          "withoutMetadata": "ac0db523ddc3e330f735df7b3b0b24460531c71290a891170e840f8f67d5ff6b",
          "linkedWithoutMetadata": "ac0db523ddc3e330f735df7b3b0b24460531c71290a891170e840f8f67d5ff6b"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "contracts/IFiles.sol:251"
            },
            {
              "label": "initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "contracts/IFiles.sol:252"
            },
            {
              "label": "______gap",
              "offset": 0,
              "slot": "1",
              "type": "t_array(t_uint256)50_storage",
              "contract": "Initializable",
              "src": "contracts/IFiles.sol:283"
            }
          ],
          "types": {
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]",
              "numberOfBytes": "1600"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.21"
      },
      "contracts/IFiles.sol:Ownable": {
        "src": "contracts/IFiles.sol:286",
        "version": {
          "withMetadata": "9b6e83ec071c913ea8078938bf6c8e47f6ce697f181f2ebf31dc4937807eb386",
          "withoutMetadata": "a3dd09084d5d3377afaa5e637593b425fb1172db63a48c2f62428555638775f8",
          "linkedWithoutMetadata": "a3dd09084d5d3377afaa5e637593b425fb1172db63a48c2f62428555638775f8"
        },
        "inherit": [
          "contracts/IFiles.sol:Initializable",
          "contracts/IFiles.sol:Context"
        ],
        "libraries": [],
        "methods": [
          "()",
          "initOwner(address)",
          "owner()",
          "renounceOwnership()",
          "transferOwnership(address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "contracts/IFiles.sol:251"
            },
            {
              "label": "initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "contracts/IFiles.sol:252"
            },
            {
              "label": "______gap",
              "offset": 0,
              "slot": "1",
              "type": "t_array(t_uint256)50_storage",
              "contract": "Initializable",
              "src": "contracts/IFiles.sol:283"
            },
            {
              "label": "_owner",
              "offset": 0,
              "slot": "51",
              "type": "t_address",
              "contract": "Ownable",
              "src": "contracts/IFiles.sol:287"
            },
            {
              "label": "_previousOwner",
              "offset": 0,
              "slot": "52",
              "type": "t_address",
              "contract": "Ownable",
              "src": "contracts/IFiles.sol:288"
            },
            {
              "label": "_lockTime",
              "offset": 0,
              "slot": "53",
              "type": "t_uint256",
              "contract": "Ownable",
              "src": "contracts/IFiles.sol:289"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]",
              "numberOfBytes": "1600"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.21"
      },
      "contracts/IFiles.sol:SafeMath": {
        "src": "contracts/IFiles.sol:68",
        "version": {
          "withMetadata": "6a5db877229c78c84b33e85a297bea1121c6a6195aa310f30cbe69888293c5ae",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.21"
      },
      "contracts/ReentrancyGuard.sol:ReentrancyGuard": {
        "src": "contracts/ReentrancyGuard.sol:5",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ReentrancyGuard",
            "src": "contracts/ReentrancyGuard.sol:12"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_status",
              "offset": 0,
              "slot": "0",
              "type": "t_uint256",
              "contract": "ReentrancyGuard",
              "src": "contracts/ReentrancyGuard.sol:10"
            }
          ],
          "types": {
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.21"
      },
      "contracts/Utils.sol:PancakeLibrary": {
        "src": "contracts/Utils.sol:219",
        "version": {
          "withMetadata": "668337a75717822cd6d73bbd1c50526e84e4af10cd45125b1756676395a2f30c",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [
          "contracts/IFiles.sol:SafeMath"
        ],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.21"
      },
      "contracts/Utils.sol:Utils": {
        "src": "contracts/Utils.sol:6",
        "version": {
          "withMetadata": "a5775bd7ff330a5dfa7ddaef645bcc8fbccdcd3c38fbc9fc1755e3e3a9a09d47",
          "withoutMetadata": "8ca6da6b824cadf2e1f9c600b5f1381080c8b8d75dddf5423f35e25222daaeda",
          "linkedWithoutMetadata": "8ca6da6b824cadf2e1f9c600b5f1381080c8b8d75dddf5423f35e25222daaeda"
        },
        "inherit": [],
        "libraries": [
          "contracts/IFiles.sol:SafeMath"
        ],
        "methods": [
          "calculateBNBReward(uint256,uint256,uint256,uint256)",
          "calculateTopUpClaim(uint256,uint256,uint256,uint256)",
          "swapTokensForEth(address,uint256)",
          "swapETHForTokens(address,address,uint256)",
          "swapTokensForTokens(address,address,uint256)",
          "getAmountsout(uint256,address)",
          "addLiquidity(address,address,uint256,uint256)",
          "getAntiFlipTaxNo(uint256)",
          "calcReward(uint256,uint256,uint256,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.21"
      }
    },
    {
      "contracts/Proxy.sol:Caller": {
        "src": "contracts/Proxy.sol:80",
        "version": {
          "withMetadata": "8a43f4805f6ec5dd7b7379a87ef3fa89b1f2cd8e86292442058e51e90f40e31d",
          "withoutMetadata": "d6211a178c252503f87d41bbcceffa66551bde0c0c4b0cc3c5a44a4f489e2c7f",
          "linkedWithoutMetadata": "d6211a178c252503f87d41bbcceffa66551bde0c0c4b0cc3c5a44a4f489e2c7f"
        },
        "inherit": [],
        "libraries": [],
        "methods": [
          "(address)",
          "increase()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Caller",
            "src": "contracts/Proxy.sol:80"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "proxy",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Caller",
              "src": "contracts/Proxy.sol:80"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.21"
      },
      "contracts/Proxy.sol:Proxy": {
        "src": "contracts/Proxy.sol:10",
        "version": {
          "withMetadata": "3a655b5f054f4310d279144652e269b840bf308c06f48e08f2d407ee1381c2c1",
          "withoutMetadata": "bc7fcd1c64d2f798926ae830c3e369a33c770ea294cd9047d184a8c885a96818",
          "linkedWithoutMetadata": "bc7fcd1c64d2f798926ae830c3e369a33c770ea294cd9047d184a8c885a96818"
        },
        "inherit": [],
        "libraries": [],
        "methods": [
          "(address)",
          "()",
          "()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Proxy",
            "src": "contracts/Proxy.sol:22"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "implementation",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Proxy",
              "src": "contracts/Proxy.sol:13"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.21"
      }
    },
    {
      "contracts/Logic.sol:Logic": {
        "src": "contracts/Logic.sol:9",
        "version": {
          "withMetadata": "087c86b163578853fb1cba09b22843df8f815c95bf2568200ddd8e1dbf167fea",
          "withoutMetadata": "a9feffbc7087e9529577fb0b368171b85b94d25918f43b5d410eb0f186274034",
          "linkedWithoutMetadata": "a9feffbc7087e9529577fb0b368171b85b94d25918f43b5d410eb0f186274034"
        },
        "inherit": [],
        "libraries": [],
        "methods": [
          "increment()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "state-variable-assignment",
            "name": "x",
            "src": "contracts/Logic.sol:13"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "implementation",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Logic",
              "src": "contracts/Logic.sol:9"
            },
            {
              "label": "x",
              "offset": 0,
              "slot": "1",
              "type": "t_uint256",
              "contract": "Logic",
              "src": "contracts/Logic.sol:13"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.21"
      }
    },
    {
      "@openzeppelin/contracts/access/Ownable.sol:Ownable": {
        "src": "@openzeppelin/contracts/access/Ownable.sol:20",
        "inherit": [
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [],
        "methods": [
          "owner()",
          "renounceOwnership()",
          "transferOwnership(address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Ownable",
            "src": "@openzeppelin/contracts/access/Ownable.sol:28"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Ownable",
              "src": "@openzeppelin/contracts/access/Ownable.sol:21"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.21"
      },
      "@openzeppelin/contracts/security/ReentrancyGuard.sol:ReentrancyGuard": {
        "src": "@openzeppelin/contracts/security/ReentrancyGuard.sol:22",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ReentrancyGuard",
            "src": "@openzeppelin/contracts/security/ReentrancyGuard.sol:39"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_status",
              "offset": 0,
              "slot": "0",
              "type": "t_uint256",
              "contract": "ReentrancyGuard",
              "src": "@openzeppelin/contracts/security/ReentrancyGuard.sol:37"
            }
          ],
          "types": {
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.21"
      },
      "@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20": {
        "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:35",
        "version": {
          "withMetadata": "b653be9ad258ddaafa2304767243ba86eac7156acd9bf1a196bee0fef9b1c3a9",
          "withoutMetadata": "1d55e2dc08aae4fa5bd2ca8ac476f7a2e63bdfa7b0b51d4bd61db8705143a140",
          "linkedWithoutMetadata": "1d55e2dc08aae4fa5bd2ca8ac476f7a2e63bdfa7b0b51d4bd61db8705143a140"
        },
        "inherit": [
          "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol:IERC20Metadata",
          "@openzeppelin/contracts/token/ERC20/IERC20.sol:IERC20",
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [],
        "methods": [
          "(string,string)",
          "name()",
          "symbol()",
          "decimals()",
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)",
          "increaseAllowance(address,uint256)",
          "decreaseAllowance(address,uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ERC20",
            "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:54"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_balances",
              "offset": 0,
              "slot": "0",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:36"
            },
            {
              "label": "_allowances",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:38"
            },
            {
              "label": "_totalSupply",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:40"
            },
            {
              "label": "_name",
              "offset": 0,
              "slot": "3",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:42"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "4",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:43"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.21"
      },
      "@openzeppelin/contracts/token/ERC20/IERC20.sol:IERC20": {
        "src": "@openzeppelin/contracts/token/ERC20/IERC20.sol:9",
        "inherit": [],
        "libraries": [],
        "methods": [
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.21"
      },
      "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol:IERC20Metadata": {
        "src": "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol:13",
        "inherit": [
          "@openzeppelin/contracts/token/ERC20/IERC20.sol:IERC20"
        ],
        "libraries": [],
        "methods": [
          "name()",
          "symbol()",
          "decimals()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.21"
      },
      "@openzeppelin/contracts/token/ERC20/extensions/draft-IERC20Permit.sol:IERC20Permit": {
        "src": "@openzeppelin/contracts/token/ERC20/extensions/draft-IERC20Permit.sol:14",
        "inherit": [],
        "libraries": [],
        "methods": [
          "permit(address,address,uint256,uint256,uint8,bytes32,bytes32)",
          "nonces(address)",
          "DOMAIN_SEPARATOR()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.21"
      },
      "@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol:SafeERC20": {
        "src": "@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol:19",
        "version": {
          "withMetadata": "945db44b71722f915e3e7352ee22f854dfe8000e69eee742d881b64279bb0ad8",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [
          "@openzeppelin/contracts/utils/Address.sol:Address"
        ],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.21"
      },
      "@openzeppelin/contracts/utils/Address.sol:Address": {
        "src": "@openzeppelin/contracts/utils/Address.sol:9",
        "version": {
          "withMetadata": "9401bbf4dc0decc4c739a060967031a16e8de389388d98c32ec11cff440d6513",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [
          {
            "kind": "delegatecall",
            "src": "@openzeppelin/contracts/utils/Address.sol:191"
          },
          {
            "kind": "delegatecall",
            "src": "@openzeppelin/contracts/utils/Address.sol:191"
          }
        ],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.21"
      },
      "@openzeppelin/contracts/utils/Context.sol:Context": {
        "src": "@openzeppelin/contracts/utils/Context.sol:16",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.21"
      },
      "@openzeppelin/contracts/utils/math/Math.sol:Math": {
        "src": "@openzeppelin/contracts/utils/math/Math.sol:9",
        "version": {
          "withMetadata": "f58f3d1d6b53395057afc8a5e1edcbfcd81cdec0dfcf6b1290c8c2368b975278",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.21"
      },
      "@openzeppelin/contracts/utils/math/SafeMath.sol:SafeMath": {
        "src": "@openzeppelin/contracts/utils/math/SafeMath.sol:16",
        "version": {
          "withMetadata": "4167346fe154a63f59e72262dbca9ccb097c97b61ec5dfe163259378386d2ba4",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.21"
      },
      "contracts/Presale.sol:IGoldToken": {
        "src": "contracts/Presale.sol:8",
        "inherit": [],
        "libraries": [],
        "methods": [
          "mint(address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.21"
      },
      "contracts/Presale.sol:Presale": {
        "src": "contracts/Presale.sol:12",
        "version": {
          "withMetadata": "55de4f41aa2ae4e88c3e975f7f7c871c8630a6a915f505e8b168c82d5665ef13",
          "withoutMetadata": "2fa5a3bfe1ae715a2695aad2a1fdda65dd5f2dfe346a8af0822d82b296b7bc1b",
          "linkedWithoutMetadata": "2fa5a3bfe1ae715a2695aad2a1fdda65dd5f2dfe346a8af0822d82b296b7bc1b"
        },
        "inherit": [
          "@openzeppelin/contracts/security/ReentrancyGuard.sol:ReentrancyGuard",
          "@openzeppelin/contracts/access/Ownable.sol:Ownable",
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [],
        "methods": [
          "(address,address,address,uint256)",
          "createPreSale((uint256,uint256,uint256))",
          "sale()",
          "getCanIdoAmount(address)",
          "bindReffer(address)",
          "userBalance(address)",
          "userRewardBalance(address)",
          "userWithdraw()",
          "teamWithdraw(address)",
          "setUserWithdrawTime(uint256)",
          "setInviteMin(uint256)",
          "setPerMaxBuyUsdt(uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Presale",
            "src": "contracts/Presale.sol:46"
          },
          {
            "kind": "state-variable-assignment",
            "name": "perMaxBuyUsdt",
            "src": "contracts/Presale.sol:15"
          },
          {
            "kind": "state-variable-assignment",
            "name": "inviteMin",
            "src": "contracts/Presale.sol:31"
          },
          {
            "kind": "state-variable-assignment",
            "name": "maxSale",
            "src": "contracts/Presale.sol:33"
          },
          {
            "kind": "state-variable-assignment",
            "name": "rewardLevel",
            "src": "contracts/Presale.sol:36"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Ownable",
              "src": "@openzeppelin/contracts/access/Ownable.sol:21"
            },
            {
              "label": "_status",
              "offset": 0,
              "slot": "1",
              "type": "t_uint256",
              "contract": "ReentrancyGuard",
              "src": "@openzeppelin/contracts/security/ReentrancyGuard.sol:37"
            },
            {
              "label": "userWithdrawTime",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "Presale",
              "src": "contracts/Presale.sol:13"
            },
            {
              "label": "perMaxBuyUsdt",
              "offset": 0,
              "slot": "3",
              "type": "t_uint256",
              "contract": "Presale",
              "src": "contracts/Presale.sol:15"
            },
            {
              "label": "teamAddress",
              "offset": 0,
              "slot": "4",
              "type": "t_address",
              "contract": "Presale",
              "src": "contracts/Presale.sol:16"
            },
            {
              "label": "saleToken",
              "offset": 0,
              "slot": "5",
              "type": "t_address",
              "contract": "Presale",
              "src": "contracts/Presale.sol:17"
            },
            {
              "label": "usdtToken",
              "offset": 0,
              "slot": "6",
              "type": "t_address",
              "contract": "Presale",
              "src": "contracts/Presale.sol:18"
            },
            {
              "label": "goldTokenAddress",
              "offset": 0,
              "slot": "7",
              "type": "t_address",
              "contract": "Presale",
              "src": "contracts/Presale.sol:19"
            },
            {
              "label": "balances",
              "offset": 0,
              "slot": "8",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "Presale",
              "src": "contracts/Presale.sol:20"
            },
            {
              "label": "userBuyTotalUsdt",
              "offset": 0,
              "slot": "9",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "Presale",
              "src": "contracts/Presale.sol:21"
            },
            {
              "label": "rewardBalances",
              "offset": 0,
              "slot": "10",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "Presale",
              "src": "contracts/Presale.sol:22"
            },
            {
              "label": "reffers",
              "offset": 0,
              "slot": "11",
              "type": "t_mapping(t_address,t_address)",
              "contract": "Presale",
              "src": "contracts/Presale.sol:23"
            },
            {
              "label": "refferNumber",
              "offset": 0,
              "slot": "12",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "Presale",
              "src": "contracts/Presale.sol:24"
            },
            {
              "label": "teamRefferNumber",
              "offset": 0,
              "slot": "13",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "Presale",
              "src": "contracts/Presale.sol:25"
            },
            {
              "label": "firstIdo",
              "offset": 0,
              "slot": "14",
              "type": "t_mapping(t_address,t_bool)",
              "contract": "Presale",
              "src": "contracts/Presale.sol:26"
            },
            {
              "label": "totalIdoUSDT",
              "offset": 0,
              "slot": "15",
              "type": "t_uint256",
              "contract": "Presale",
              "src": "contracts/Presale.sol:27"
            },
            {
              "label": "totalIdoUser",
              "offset": 0,
              "slot": "16",
              "type": "t_uint256",
              "contract": "Presale",
              "src": "contracts/Presale.sol:28"
            },
            {
              "label": "totalSale",
              "offset": 0,
              "slot": "17",
              "type": "t_uint256",
              "contract": "Presale",
              "src": "contracts/Presale.sol:29"
            },
            {
              "label": "inviteMin",
              "offset": 0,
              "slot": "18",
              "type": "t_uint256",
              "contract": "Presale",
              "src": "contracts/Presale.sol:31"
            },
            {
              "label": "maxSale",
              "offset": 0,
              "slot": "19",
              "type": "t_uint256",
              "contract": "Presale",
              "src": "contracts/Presale.sol:33"
            },
            {
              "label": "isCloseSale",
              "offset": 0,
              "slot": "20",
              "type": "t_bool",
              "contract": "Presale",
              "src": "contracts/Presale.sol:34"
            },
            {
              "label": "rewardLevel",
              "offset": 0,
              "slot": "21",
              "type": "t_array(t_uint256)dyn_storage",
              "contract": "Presale",
              "src": "contracts/Presale.sol:36"
            },
            {
              "label": "presaleInfo",
              "offset": 0,
              "slot": "22",
              "type": "t_struct(PresaleInfo)2392_storage",
              "contract": "Presale",
              "src": "contracts/Presale.sol:44"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_uint256)dyn_storage": {
              "label": "uint256[]",
              "numberOfBytes": "32"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_mapping(t_address,t_address)": {
              "label": "mapping(address => address)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_struct(PresaleInfo)2392_storage": {
              "label": "struct Presale.PresaleInfo",
              "members": [
                {
                  "label": "startTime",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "endTime",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "price",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "2"
                }
              ],
              "numberOfBytes": "96"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.21"
      },
      "contracts/Staking.sol:IRejuvenate": {
        "src": "contracts/Staking.sol:9",
        "inherit": [],
        "libraries": [],
        "methods": [
          "mint(address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.21"
      },
      "contracts/Staking.sol:Staking": {
        "src": "contracts/Staking.sol:13",
        "version": {
          "withMetadata": "d4a43fbe5f8d6347383f0680dba0a94146fceda61d8f28fb0ed926fda6eca5bc",
          "withoutMetadata": "8e35a11dc4a30aced1c096dd5db7f6424d19b292b732012b8d44d054f9cea466",
          "linkedWithoutMetadata": "8e35a11dc4a30aced1c096dd5db7f6424d19b292b732012b8d44d054f9cea466"
        },
        "inherit": [
          "@openzeppelin/contracts/security/ReentrancyGuard.sol:ReentrancyGuard",
          "@openzeppelin/contracts/access/Ownable.sol:Ownable",
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [],
        "methods": [
          "()",
          "changeRewardsPerBlock(uint256)",
          "rewardPerToken()",
          "earned(address)",
          "stake(uint256)",
          "unstake(uint256)",
          "claimRewards()",
          "pause()",
          "unpause()",
          "inCaseTokensGetStuck(address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Staking",
            "src": "contracts/Staking.sol:33"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Ownable",
              "src": "@openzeppelin/contracts/access/Ownable.sol:21"
            },
            {
              "label": "_status",
              "offset": 0,
              "slot": "1",
              "type": "t_uint256",
              "contract": "ReentrancyGuard",
              "src": "@openzeppelin/contracts/security/ReentrancyGuard.sol:37"
            },
            {
              "label": "paused",
              "offset": 0,
              "slot": "2",
              "type": "t_bool",
              "contract": "Staking",
              "src": "contracts/Staking.sol:14"
            },
            {
              "label": "_treasury",
              "offset": 1,
              "slot": "2",
              "type": "t_address",
              "contract": "Staking",
              "src": "contracts/Staking.sol:15"
            },
            {
              "label": "token",
              "offset": 0,
              "slot": "3",
              "type": "t_address",
              "contract": "Staking",
              "src": "contracts/Staking.sol:17"
            },
            {
              "label": "rewardRate",
              "offset": 0,
              "slot": "4",
              "type": "t_uint256",
              "contract": "Staking",
              "src": "contracts/Staking.sol:19"
            },
            {
              "label": "_lastUpdateBlock",
              "offset": 0,
              "slot": "5",
              "type": "t_uint256",
              "contract": "Staking",
              "src": "contracts/Staking.sol:20"
            },
            {
              "label": "_rewardsPerToken",
              "offset": 0,
              "slot": "6",
              "type": "t_uint256",
              "contract": "Staking",
              "src": "contracts/Staking.sol:21"
            },
            {
              "label": "data",
              "offset": 0,
              "slot": "7",
              "type": "t_array(t_struct(StakingData)3375_storage)dyn_storage",
              "contract": "Staking",
              "src": "contracts/Staking.sol:22"
            },
            {
              "label": "_userRewardsPerToken",
              "offset": 0,
              "slot": "8",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "Staking",
              "src": "contracts/Staking.sol:24"
            },
            {
              "label": "_rewards",
              "offset": 0,
              "slot": "9",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "Staking",
              "src": "contracts/Staking.sol:25"
            },
            {
              "label": "totalStaked",
              "offset": 0,
              "slot": "10",
              "type": "t_uint256",
              "contract": "Staking",
              "src": "contracts/Staking.sol:27"
            },
            {
              "label": "_balances",
              "offset": 0,
              "slot": "11",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "Staking",
              "src": "contracts/Staking.sol:28"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_struct(StakingData)3375_storage)dyn_storage": {
              "label": "struct StakingData[]",
              "numberOfBytes": "32"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_struct(StakingData)3375_storage": {
              "label": "struct StakingData",
              "members": [
                {
                  "label": "block",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "staked",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "1"
                }
              ],
              "numberOfBytes": "64"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.21"
      }
    },
    {
      "contracts/RichHusky.sol:Checker": {
        "src": "contracts/RichHusky.sol:520",
        "version": {
          "withMetadata": "17e1cf10fdffcda321c1a1f59d2b06178394724b4d8ad9b035a718122fed8a52",
          "withoutMetadata": "0faf6ca500781d04501ba7e4cf9138e35957321419c6ca29798480c22b3cc5cd",
          "linkedWithoutMetadata": "0faf6ca500781d04501ba7e4cf9138e35957321419c6ca29798480c22b3cc5cd"
        },
        "inherit": [],
        "libraries": [],
        "methods": [
          "isValid(address,address,address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.21"
      },
      "contracts/RichHusky.sol:Context": {
        "src": "contracts/RichHusky.sol:27",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.21"
      },
      "contracts/RichHusky.sol:ERC20": {
        "src": "contracts/RichHusky.sol:162",
        "version": {
          "withMetadata": "e092e43bc9c3243b7138ce015fa92d358fa66a764079145cfe1339f160fd055e",
          "withoutMetadata": "e248eda4094a79267c1d78eb85fb3a082e2ba4d153192b2644d6357dbed158f3",
          "linkedWithoutMetadata": "e248eda4094a79267c1d78eb85fb3a082e2ba4d153192b2644d6357dbed158f3"
        },
        "inherit": [
          "contracts/RichHusky.sol:IERC20Metadata",
          "contracts/RichHusky.sol:IERC20",
          "contracts/RichHusky.sol:Context"
        ],
        "libraries": [],
        "methods": [
          "(string,string)",
          "name()",
          "symbol()",
          "decimals()",
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)",
          "increaseAllowance(address,uint256)",
          "decreaseAllowance(address,uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ERC20",
            "src": "contracts/RichHusky.sol:181"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_balances",
              "offset": 0,
              "slot": "0",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC20",
              "src": "contracts/RichHusky.sol:163"
            },
            {
              "label": "_allowances",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "ERC20",
              "src": "contracts/RichHusky.sol:165"
            },
            {
              "label": "_totalSupply",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "ERC20",
              "src": "contracts/RichHusky.sol:167"
            },
            {
              "label": "_name",
              "offset": 0,
              "slot": "3",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "contracts/RichHusky.sol:169"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "4",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "contracts/RichHusky.sol:170"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.21"
      },
      "contracts/RichHusky.sol:IERC20": {
        "src": "contracts/RichHusky.sol:40",
        "inherit": [],
        "libraries": [],
        "methods": [
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.21"
      },
      "contracts/RichHusky.sol:IERC20Metadata": {
        "src": "contracts/RichHusky.sol:120",
        "inherit": [
          "contracts/RichHusky.sol:IERC20"
        ],
        "libraries": [],
        "methods": [
          "name()",
          "symbol()",
          "decimals()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.21"
      },
      "contracts/RichHusky.sol:IFactory": {
        "src": "contracts/RichHusky.sol:535",
        "inherit": [],
        "libraries": [],
        "methods": [
          "createPair(address,address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.21"
      },
      "contracts/RichHusky.sol:IGasToken": {
        "src": "contracts/RichHusky.sol:539",
        "inherit": [],
        "libraries": [],
        "methods": [
          "free(uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.21"
      },
      "contracts/RichHusky.sol:RichHusky": {
        "src": "contracts/RichHusky.sol:543",
        "version": {
          "withMetadata": "ce802161ba5ffecece3a7488fb3a07a35d8f78edf3674187d3eb27cc30777604",
          "withoutMetadata": "7c4ce62a347a52dc2685dbb41f6d968bb51e7d6abb10665abf0c7d7699da0d36",
          "linkedWithoutMetadata": "7c4ce62a347a52dc2685dbb41f6d968bb51e7d6abb10665abf0c7d7699da0d36"
        },
        "inherit": [
          "contracts/RichHusky.sol:ERC20",
          "contracts/RichHusky.sol:IERC20Metadata",
          "contracts/RichHusky.sol:IERC20",
          "contracts/RichHusky.sol:Context"
        ],
        "libraries": [
          "contracts/RichHusky.sol:Checker"
        ],
        "methods": [
          "(address)",
          "mint(address,uint256)",
          "updateAirdropAmount(uint256)",
          "withdrawFee(address,uint256)",
          "airdrop(address[],uint256)",
          "addBetaUsers(address[])",
          "removeBetaUsers(address[])",
          "multiCall(address[],bytes[])"
        ],
        "linkReferences": [
          {
            "src": "contracts/RichHusky.sol",
            "name": "Checker",
            "length": 20,
            "start": 5176,
            "placeholder": "__$1cb883ae52507a2d00adae80c79f632cb4$__"
          }
        ],
        "errors": [
          {
            "kind": "constructor",
            "contract": "RichHusky",
            "src": "contracts/RichHusky.sol:554"
          },
          {
            "kind": "state-variable-immutable",
            "name": "pancakeFactory",
            "src": "contracts/RichHusky.sol:549"
          },
          {
            "kind": "state-variable-immutable",
            "name": "WBNB",
            "src": "contracts/RichHusky.sol:550"
          },
          {
            "kind": "state-variable-immutable",
            "name": "GasToken",
            "src": "contracts/RichHusky.sol:552"
          },
          {
            "kind": "external-library-linking",
            "name": "Checker",
            "src": "contracts/RichHusky.sol"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_balances",
              "offset": 0,
              "slot": "0",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC20",
              "src": "contracts/RichHusky.sol:163"
            },
            {
              "label": "_allowances",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "ERC20",
              "src": "contracts/RichHusky.sol:165"
            },
            {
              "label": "_totalSupply",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "ERC20",
              "src": "contracts/RichHusky.sol:167"
            },
            {
              "label": "_name",
              "offset": 0,
              "slot": "3",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "contracts/RichHusky.sol:169"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "4",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "contracts/RichHusky.sol:170"
            },
            {
              "label": "dev",
              "offset": 0,
              "slot": "5",
              "type": "t_address",
              "contract": "RichHusky",
              "src": "contracts/RichHusky.sol:544"
            },
            {
              "label": "airdropAmount",
              "offset": 0,
              "slot": "6",
              "type": "t_uint256",
              "contract": "RichHusky",
              "src": "contracts/RichHusky.sol:545"
            },
            {
              "label": "betaUsers",
              "offset": 0,
              "slot": "7",
              "type": "t_mapping(t_address,t_bool)",
              "contract": "RichHusky",
              "src": "contracts/RichHusky.sol:546"
            },
            {
              "label": "pair",
              "offset": 0,
              "slot": "8",
              "type": "t_address",
              "contract": "RichHusky",
              "src": "contracts/RichHusky.sol:547"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.21"
      }
    },
    {
      "contracts/FirstDao.sol:FistDao": {
        "src": "contracts/FirstDao.sol:127",
        "version": {
          "withMetadata": "87594bf7d015e41aaf777bc0dc62e9e8a3685546fcfa065eb87291ef7f3f16f4",
          "withoutMetadata": "5bdb2538a3ba33172d93851875dfca20475ce01973348f896430788ab9d8314a",
          "linkedWithoutMetadata": "5bdb2538a3ba33172d93851875dfca20475ce01973348f896430788ab9d8314a"
        },
        "inherit": [
          "contracts/FirstDao.sol:Ownable",
          "contracts/FirstDao.sol:IERC20"
        ],
        "libraries": [
          "contracts/FirstDao.sol:SafeMath"
        ],
        "methods": [
          "(string,string)",
          "()",
          "initialize(address,address,address,address)",
          "transferEvent(address,address,uint256)",
          "feeState()",
          "getIsApproved(address)",
          "searchExcludedFromFeeAccounts(address)",
          "getDefaultBalance()",
          "insertIntoExcludedFromFeeAccounts(address[])",
          "deleteFromExcludedFromFeeAccounts(address[])",
          "claim(address,uint256)",
          "name()",
          "symbol()",
          "decimals()",
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "transferFrom(address,address,uint256)",
          "approve(address,uint256)",
          "allowance(address,address)",
          "increaseAllowance(address,uint256)",
          "decreaseAllowance(address,uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "FistDao",
            "src": "contracts/FirstDao.sol:159"
          },
          {
            "kind": "state-variable-assignment",
            "name": "_decimals",
            "src": "contracts/FirstDao.sol:132"
          },
          {
            "kind": "state-variable-assignment",
            "name": "_totalSupply",
            "src": "contracts/FirstDao.sol:133"
          },
          {
            "kind": "state-variable-assignment",
            "name": "_feeTax",
            "src": "contracts/FirstDao.sol:138"
          },
          {
            "kind": "state-variable-assignment",
            "name": "_feeMining",
            "src": "contracts/FirstDao.sol:139"
          },
          {
            "kind": "state-variable-assignment",
            "name": "_feeLiquidity",
            "src": "contracts/FirstDao.sol:140"
          },
          {
            "kind": "state-variable-assignment",
            "name": "_feeDivisor",
            "src": "contracts/FirstDao.sol:141"
          },
          {
            "kind": "state-variable-assignment",
            "name": "_removeAllFee",
            "src": "contracts/FirstDao.sol:143"
          },
          {
            "kind": "state-variable-assignment",
            "name": "_defaultBalance",
            "src": "contracts/FirstDao.sol:150"
          },
          {
            "kind": "state-variable-assignment",
            "name": "_defaultAmount",
            "src": "contracts/FirstDao.sol:151"
          },
          {
            "kind": "state-variable-assignment",
            "name": "_initialized111",
            "src": "contracts/FirstDao.sol:156"
          },
          {
            "kind": "state-variable-assignment",
            "name": "_reentry",
            "src": "contracts/FirstDao.sol:157"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Ownable",
              "src": "contracts/FirstDao.sol:58"
            },
            {
              "label": "_previousOwner",
              "offset": 0,
              "slot": "1",
              "type": "t_address",
              "contract": "Ownable",
              "src": "contracts/FirstDao.sol:59"
            },
            {
              "label": "_switchDate",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "Ownable",
              "src": "contracts/FirstDao.sol:60"
            },
            {
              "label": "_name",
              "offset": 0,
              "slot": "3",
              "type": "t_string_storage",
              "contract": "FistDao",
              "src": "contracts/FirstDao.sol:130"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "4",
              "type": "t_string_storage",
              "contract": "FistDao",
              "src": "contracts/FirstDao.sol:131"
            },
            {
              "label": "_decimals",
              "offset": 0,
              "slot": "5",
              "type": "t_uint8",
              "contract": "FistDao",
              "src": "contracts/FirstDao.sol:132"
            },
            {
              "label": "_totalSupply",
              "offset": 0,
              "slot": "6",
              "type": "t_uint256",
              "contract": "FistDao",
              "src": "contracts/FirstDao.sol:133"
            },
            {
              "label": "_balances",
              "offset": 0,
              "slot": "7",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "FistDao",
              "src": "contracts/FirstDao.sol:134"
            },
            {
              "label": "_allowances",
              "offset": 0,
              "slot": "8",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "FistDao",
              "src": "contracts/FirstDao.sol:135"
            },
            {
              "label": "_isApproved",
              "offset": 0,
              "slot": "9",
              "type": "t_mapping(t_address,t_bool)",
              "contract": "FistDao",
              "src": "contracts/FirstDao.sol:136"
            },
            {
              "label": "_feeTax",
              "offset": 0,
              "slot": "10",
              "type": "t_uint256",
              "contract": "FistDao",
              "src": "contracts/FirstDao.sol:138"
            },
            {
              "label": "_feeMining",
              "offset": 0,
              "slot": "11",
              "type": "t_uint256",
              "contract": "FistDao",
              "src": "contracts/FirstDao.sol:139"
            },
            {
              "label": "_feeLiquidity",
              "offset": 0,
              "slot": "12",
              "type": "t_uint256",
              "contract": "FistDao",
              "src": "contracts/FirstDao.sol:140"
            },
            {
              "label": "_feeDivisor",
              "offset": 0,
              "slot": "13",
              "type": "t_uint256",
              "contract": "FistDao",
              "src": "contracts/FirstDao.sol:141"
            },
            {
              "label": "_removeAllFee",
              "offset": 0,
              "slot": "14",
              "type": "t_bool",
              "contract": "FistDao",
              "src": "contracts/FirstDao.sol:143"
            },
            {
              "label": "_core",
              "offset": 1,
              "slot": "14",
              "type": "t_address",
              "contract": "FistDao",
              "src": "contracts/FirstDao.sol:145"
            },
            {
              "label": "_taxReceiver",
              "offset": 0,
              "slot": "15",
              "type": "t_address",
              "contract": "FistDao",
              "src": "contracts/FirstDao.sol:146"
            },
            {
              "label": "_miningPool",
              "offset": 0,
              "slot": "16",
              "type": "t_address",
              "contract": "FistDao",
              "src": "contracts/FirstDao.sol:147"
            },
            {
              "label": "_liquidityPool",
              "offset": 0,
              "slot": "17",
              "type": "t_address",
              "contract": "FistDao",
              "src": "contracts/FirstDao.sol:148"
            },
            {
              "label": "_defaultBalance",
              "offset": 0,
              "slot": "18",
              "type": "t_uint256",
              "contract": "FistDao",
              "src": "contracts/FirstDao.sol:150"
            },
            {
              "label": "_defaultAmount",
              "offset": 0,
              "slot": "19",
              "type": "t_uint256",
              "contract": "FistDao",
              "src": "contracts/FirstDao.sol:151"
            },
            {
              "label": "_isExcludedFromFee",
              "offset": 0,
              "slot": "20",
              "type": "t_mapping(t_address,t_bool)",
              "contract": "FistDao",
              "src": "contracts/FirstDao.sol:153"
            },
            {
              "label": "_excludedFromFeeAccounts",
              "offset": 0,
              "slot": "21",
              "type": "t_array(t_address)dyn_storage",
              "contract": "FistDao",
              "src": "contracts/FirstDao.sol:154"
            },
            {
              "label": "_initialized111",
              "offset": 0,
              "slot": "22",
              "type": "t_bool",
              "contract": "FistDao",
              "src": "contracts/FirstDao.sol:156"
            },
            {
              "label": "_reentry",
              "offset": 0,
              "slot": "23",
              "type": "t_uint256",
              "contract": "FistDao",
              "src": "contracts/FirstDao.sol:157"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_address)dyn_storage": {
              "label": "address[]",
              "numberOfBytes": "32"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint8": {
              "label": "uint8",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.21"
      },
      "contracts/FirstDao.sol:ICore": {
        "src": "contracts/FirstDao.sol:119",
        "inherit": [],
        "libraries": [],
        "methods": [
          "getPairAddress()",
          "airdrop()",
          "safety(address,address)",
          "start()",
          "end()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.21"
      },
      "contracts/FirstDao.sol:IERC20": {
        "src": "contracts/FirstDao.sol:8",
        "inherit": [],
        "libraries": [],
        "methods": [
          "name()",
          "symbol()",
          "decimals()",
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "transferFrom(address,address,uint256)",
          "approve(address,uint256)",
          "allowance(address,address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.21"
      },
      "contracts/FirstDao.sol:IFactory": {
        "src": "contracts/FirstDao.sol:91",
        "inherit": [],
        "libraries": [],
        "methods": [
          "createPair(address,address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.21"
      },
      "contracts/FirstDao.sol:IRouter01": {
        "src": "contracts/FirstDao.sol:95",
        "inherit": [],
        "libraries": [],
        "methods": [
          "factory()",
          "addLiquidity(address,address,uint256,uint256,uint256,uint256,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.21"
      },
      "contracts/FirstDao.sol:IRouter02": {
        "src": "contracts/FirstDao.sol:109",
        "inherit": [
          "contracts/FirstDao.sol:IRouter01"
        ],
        "libraries": [],
        "methods": [
          "swapExactTokensForTokensSupportingFeeOnTransferTokens(uint256,uint256,address[],address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.21"
      },
      "contracts/FirstDao.sol:Ownable": {
        "src": "contracts/FirstDao.sol:57",
        "inherit": [],
        "libraries": [],
        "methods": [
          "owner()",
          "switchDate()",
          "transferOwnership(uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Ownable",
            "src": "contracts/FirstDao.sol:63"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Ownable",
              "src": "contracts/FirstDao.sol:58"
            },
            {
              "label": "_previousOwner",
              "offset": 0,
              "slot": "1",
              "type": "t_address",
              "contract": "Ownable",
              "src": "contracts/FirstDao.sol:59"
            },
            {
              "label": "_switchDate",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "Ownable",
              "src": "contracts/FirstDao.sol:60"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.21"
      },
      "contracts/FirstDao.sol:SafeMath": {
        "src": "contracts/FirstDao.sol:22",
        "version": {
          "withMetadata": "95eb3df1bd62a62b1bf87150f7314053125cc709ed6eb26f9bf2a30d8fc55e32",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.21"
      }
    },
    {
      "contracts/IFiles.sol:Address": {
        "src": "contracts/IFiles.sol:147",
        "version": {
          "withMetadata": "73f3d745b82ff92d492794f39ddc131795315255895e196d918dc1260c813488",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.21"
      },
      "contracts/IFiles.sol:Context": {
        "src": "contracts/IFiles.sol:135",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.21"
      },
      "contracts/IFiles.sol:IBEP20": {
        "src": "contracts/IFiles.sol:9",
        "inherit": [],
        "libraries": [],
        "methods": [
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.21"
      },
      "contracts/IFiles.sol:IPancakeFactory": {
        "src": "contracts/IFiles.sol:327",
        "inherit": [],
        "libraries": [],
        "methods": [
          "feeTo()",
          "feeToSetter()",
          "getPair(address,address)",
          "allPairs(uint256)",
          "allPairsLength()",
          "createPair(address,address)",
          "setFeeTo(address)",
          "setFeeToSetter(address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.21"
      },
      "contracts/IFiles.sol:IPancakePair": {
        "src": "contracts/IFiles.sol:357",
        "inherit": [],
        "libraries": [],
        "methods": [
          "name()",
          "symbol()",
          "decimals()",
          "totalSupply()",
          "balanceOf(address)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transfer(address,uint256)",
          "transferFrom(address,address,uint256)",
          "DOMAIN_SEPARATOR()",
          "PERMIT_TYPEHASH()",
          "nonces(address)",
          "permit(address,address,uint256,uint256,uint8,bytes32,bytes32)",
          "MINIMUM_LIQUIDITY()",
          "factory()",
          "token0()",
          "token1()",
          "getReserves()",
          "price0CumulativeLast()",
          "price1CumulativeLast()",
          "kLast()",
          "mint(address)",
          "burn(address)",
          "swap(uint256,uint256,address,bytes)",
          "skim(address)",
          "sync()",
          "initialize(address,address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.21"
      },
      "contracts/IFiles.sol:IPancakeRouter01": {
        "src": "contracts/IFiles.sol:466",
        "inherit": [],
        "libraries": [],
        "methods": [
          "factory()",
          "WETH()",
          "addLiquidity(address,address,uint256,uint256,uint256,uint256,address,uint256)",
          "addLiquidityETH(address,uint256,uint256,uint256,address,uint256)",
          "removeLiquidity(address,address,uint256,uint256,uint256,address,uint256)",
          "removeLiquidityETH(address,uint256,uint256,uint256,address,uint256)",
          "removeLiquidityWithPermit(address,address,uint256,uint256,uint256,address,uint256,bool,uint8,bytes32,bytes32)",
          "removeLiquidityETHWithPermit(address,uint256,uint256,uint256,address,uint256,bool,uint8,bytes32,bytes32)",
          "swapExactTokensForTokens(uint256,uint256,address[],address,uint256)",
          "swapTokensForExactTokens(uint256,uint256,address[],address,uint256)",
          "swapExactETHForTokens(uint256,address[],address,uint256)",
          "swapTokensForExactETH(uint256,uint256,address[],address,uint256)",
          "swapExactTokensForETH(uint256,uint256,address[],address,uint256)",
          "swapETHForExactTokens(uint256,address[],address,uint256)",
          "quote(uint256,uint256,uint256)",
          "getAmountOut(uint256,uint256,uint256)",
          "getAmountIn(uint256,uint256,uint256)",
          "getAmountsOut(uint256,address[])",
          "getAmountsIn(uint256,address[])"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.21"
      },
      "contracts/IFiles.sol:IPancakeRouter02": {
        "src": "contracts/IFiles.sol:626",
        "inherit": [
          "contracts/IFiles.sol:IPancakeRouter01"
        ],
        "libraries": [],
        "methods": [
          "removeLiquidityETHSupportingFeeOnTransferTokens(address,uint256,uint256,uint256,address,uint256)",
          "removeLiquidityETHWithPermitSupportingFeeOnTransferTokens(address,uint256,uint256,uint256,address,uint256,bool,uint8,bytes32,bytes32)",
          "swapExactTokensForTokensSupportingFeeOnTransferTokens(uint256,uint256,address[],address,uint256)",
          "swapExactETHForTokensSupportingFeeOnTransferTokens(uint256,address[],address,uint256)",
          "swapExactTokensForETHSupportingFeeOnTransferTokens(uint256,uint256,address[],address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.21"
      },
      "contracts/IFiles.sol:IWBNB": {
        "src": "contracts/IFiles.sol:38",
        "inherit": [],
        "libraries": [],
        "methods": [
          "name()",
          "symbol()",
          "decimals()",
          "balanceOf(address)",
          "allowance(address,address)",
          "()",
          "deposit()",
          "withdraw(uint256)",
          "totalSupply()",
          "approve(address,uint256)",
          "transfer(address,uint256)",
          "transferFrom(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.21"
      },
      "contracts/IFiles.sol:Initializable": {
        "src": "contracts/IFiles.sol:249",
        "version": {
          "withMetadata": "ba793f874980ba8826e0f77e588821b7a373c942b97ebcd7e4e42f378e00e824",
          "withoutMetadata": "ac0db523ddc3e330f735df7b3b0b24460531c71290a891170e840f8f67d5ff6b",
          "linkedWithoutMetadata": "ac0db523ddc3e330f735df7b3b0b24460531c71290a891170e840f8f67d5ff6b"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "contracts/IFiles.sol:251"
            },
            {
              "label": "initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "contracts/IFiles.sol:252"
            },
            {
              "label": "______gap",
              "offset": 0,
              "slot": "1",
              "type": "t_array(t_uint256)50_storage",
              "contract": "Initializable",
              "src": "contracts/IFiles.sol:283"
            }
          ],
          "types": {
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]",
              "numberOfBytes": "1600"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.21"
      },
      "contracts/IFiles.sol:Ownable": {
        "src": "contracts/IFiles.sol:286",
        "version": {
          "withMetadata": "9b6e83ec071c913ea8078938bf6c8e47f6ce697f181f2ebf31dc4937807eb386",
          "withoutMetadata": "a3dd09084d5d3377afaa5e637593b425fb1172db63a48c2f62428555638775f8",
          "linkedWithoutMetadata": "a3dd09084d5d3377afaa5e637593b425fb1172db63a48c2f62428555638775f8"
        },
        "inherit": [
          "contracts/IFiles.sol:Initializable",
          "contracts/IFiles.sol:Context"
        ],
        "libraries": [],
        "methods": [
          "()",
          "initOwner(address)",
          "owner()",
          "renounceOwnership()",
          "transferOwnership(address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "contracts/IFiles.sol:251"
            },
            {
              "label": "initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "contracts/IFiles.sol:252"
            },
            {
              "label": "______gap",
              "offset": 0,
              "slot": "1",
              "type": "t_array(t_uint256)50_storage",
              "contract": "Initializable",
              "src": "contracts/IFiles.sol:283"
            },
            {
              "label": "_owner",
              "offset": 0,
              "slot": "51",
              "type": "t_address",
              "contract": "Ownable",
              "src": "contracts/IFiles.sol:287"
            },
            {
              "label": "_previousOwner",
              "offset": 0,
              "slot": "52",
              "type": "t_address",
              "contract": "Ownable",
              "src": "contracts/IFiles.sol:288"
            },
            {
              "label": "_lockTime",
              "offset": 0,
              "slot": "53",
              "type": "t_uint256",
              "contract": "Ownable",
              "src": "contracts/IFiles.sol:289"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]",
              "numberOfBytes": "1600"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.21"
      },
      "contracts/IFiles.sol:SafeMath": {
        "src": "contracts/IFiles.sol:68",
        "version": {
          "withMetadata": "6a5db877229c78c84b33e85a297bea1121c6a6195aa310f30cbe69888293c5ae",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.21"
      },
      "contracts/ReentrancyGuard.sol:ReentrancyGuard": {
        "src": "contracts/ReentrancyGuard.sol:5",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ReentrancyGuard",
            "src": "contracts/ReentrancyGuard.sol:12"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_status",
              "offset": 0,
              "slot": "0",
              "type": "t_uint256",
              "contract": "ReentrancyGuard",
              "src": "contracts/ReentrancyGuard.sol:10"
            }
          ],
          "types": {
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.21"
      },
      "contracts/Utils.sol:PancakeLibrary": {
        "src": "contracts/Utils.sol:219",
        "version": {
          "withMetadata": "668337a75717822cd6d73bbd1c50526e84e4af10cd45125b1756676395a2f30c",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [
          "contracts/IFiles.sol:SafeMath"
        ],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.21"
      },
      "contracts/Utils.sol:Utils": {
        "src": "contracts/Utils.sol:6",
        "version": {
          "withMetadata": "a5775bd7ff330a5dfa7ddaef645bcc8fbccdcd3c38fbc9fc1755e3e3a9a09d47",
          "withoutMetadata": "8ca6da6b824cadf2e1f9c600b5f1381080c8b8d75dddf5423f35e25222daaeda",
          "linkedWithoutMetadata": "8ca6da6b824cadf2e1f9c600b5f1381080c8b8d75dddf5423f35e25222daaeda"
        },
        "inherit": [],
        "libraries": [
          "contracts/IFiles.sol:SafeMath"
        ],
        "methods": [
          "calculateBNBReward(uint256,uint256,uint256,uint256)",
          "calculateTopUpClaim(uint256,uint256,uint256,uint256)",
          "swapTokensForEth(address,uint256)",
          "swapETHForTokens(address,address,uint256)",
          "swapTokensForTokens(address,address,uint256)",
          "getAmountsout(uint256,address)",
          "addLiquidity(address,address,uint256,uint256)",
          "getAntiFlipTaxNo(uint256)",
          "calcReward(uint256,uint256,uint256,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.21"
      }
    },
    {
      "contracts/Proxy.sol:Caller": {
        "src": "contracts/Proxy.sol:80",
        "version": {
          "withMetadata": "8a43f4805f6ec5dd7b7379a87ef3fa89b1f2cd8e86292442058e51e90f40e31d",
          "withoutMetadata": "d6211a178c252503f87d41bbcceffa66551bde0c0c4b0cc3c5a44a4f489e2c7f",
          "linkedWithoutMetadata": "d6211a178c252503f87d41bbcceffa66551bde0c0c4b0cc3c5a44a4f489e2c7f"
        },
        "inherit": [],
        "libraries": [],
        "methods": [
          "(address)",
          "increase()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Caller",
            "src": "contracts/Proxy.sol:80"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "proxy",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Caller",
              "src": "contracts/Proxy.sol:80"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.21"
      },
      "contracts/Proxy.sol:Proxy": {
        "src": "contracts/Proxy.sol:10",
        "version": {
          "withMetadata": "3a655b5f054f4310d279144652e269b840bf308c06f48e08f2d407ee1381c2c1",
          "withoutMetadata": "bc7fcd1c64d2f798926ae830c3e369a33c770ea294cd9047d184a8c885a96818",
          "linkedWithoutMetadata": "bc7fcd1c64d2f798926ae830c3e369a33c770ea294cd9047d184a8c885a96818"
        },
        "inherit": [],
        "libraries": [],
        "methods": [
          "(address)",
          "()",
          "()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Proxy",
            "src": "contracts/Proxy.sol:22"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "implementation",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Proxy",
              "src": "contracts/Proxy.sol:13"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.21"
      }
    },
    {
      "contracts/Logic.sol:Logic": {
        "src": "contracts/Logic.sol:9",
        "version": {
          "withMetadata": "087c86b163578853fb1cba09b22843df8f815c95bf2568200ddd8e1dbf167fea",
          "withoutMetadata": "a9feffbc7087e9529577fb0b368171b85b94d25918f43b5d410eb0f186274034",
          "linkedWithoutMetadata": "a9feffbc7087e9529577fb0b368171b85b94d25918f43b5d410eb0f186274034"
        },
        "inherit": [],
        "libraries": [],
        "methods": [
          "increment()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "state-variable-assignment",
            "name": "x",
            "src": "contracts/Logic.sol:13"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "implementation",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Logic",
              "src": "contracts/Logic.sol:9"
            },
            {
              "label": "x",
              "offset": 0,
              "slot": "1",
              "type": "t_uint256",
              "contract": "Logic",
              "src": "contracts/Logic.sol:13"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.21"
      }
    },
    {
      "contracts/Logic.sol:Logic": {
        "src": "contracts/Logic.sol:9",
        "version": {
          "withMetadata": "087c86b163578853fb1cba09b22843df8f815c95bf2568200ddd8e1dbf167fea",
          "withoutMetadata": "a9feffbc7087e9529577fb0b368171b85b94d25918f43b5d410eb0f186274034",
          "linkedWithoutMetadata": "a9feffbc7087e9529577fb0b368171b85b94d25918f43b5d410eb0f186274034"
        },
        "inherit": [],
        "libraries": [],
        "methods": [
          "increment()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "state-variable-assignment",
            "name": "x",
            "src": "contracts/Logic.sol:13"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "implementation",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Logic",
              "src": "contracts/Logic.sol:9"
            },
            {
              "label": "x",
              "offset": 0,
              "slot": "1",
              "type": "t_uint256",
              "contract": "Logic",
              "src": "contracts/Logic.sol:13"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.21"
      }
    },
    {
      "@openzeppelin/contracts/access/Ownable.sol:Ownable": {
        "src": "@openzeppelin/contracts/access/Ownable.sol:20",
        "inherit": [
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [],
        "methods": [
          "owner()",
          "renounceOwnership()",
          "transferOwnership(address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Ownable",
            "src": "@openzeppelin/contracts/access/Ownable.sol:28"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Ownable",
              "src": "@openzeppelin/contracts/access/Ownable.sol:21"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.21"
      },
      "@openzeppelin/contracts/security/ReentrancyGuard.sol:ReentrancyGuard": {
        "src": "@openzeppelin/contracts/security/ReentrancyGuard.sol:22",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ReentrancyGuard",
            "src": "@openzeppelin/contracts/security/ReentrancyGuard.sol:39"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_status",
              "offset": 0,
              "slot": "0",
              "type": "t_uint256",
              "contract": "ReentrancyGuard",
              "src": "@openzeppelin/contracts/security/ReentrancyGuard.sol:37"
            }
          ],
          "types": {
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.21"
      },
      "@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20": {
        "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:35",
        "version": {
          "withMetadata": "b653be9ad258ddaafa2304767243ba86eac7156acd9bf1a196bee0fef9b1c3a9",
          "withoutMetadata": "1d55e2dc08aae4fa5bd2ca8ac476f7a2e63bdfa7b0b51d4bd61db8705143a140",
          "linkedWithoutMetadata": "1d55e2dc08aae4fa5bd2ca8ac476f7a2e63bdfa7b0b51d4bd61db8705143a140"
        },
        "inherit": [
          "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol:IERC20Metadata",
          "@openzeppelin/contracts/token/ERC20/IERC20.sol:IERC20",
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [],
        "methods": [
          "(string,string)",
          "name()",
          "symbol()",
          "decimals()",
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)",
          "increaseAllowance(address,uint256)",
          "decreaseAllowance(address,uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ERC20",
            "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:54"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_balances",
              "offset": 0,
              "slot": "0",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:36"
            },
            {
              "label": "_allowances",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:38"
            },
            {
              "label": "_totalSupply",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:40"
            },
            {
              "label": "_name",
              "offset": 0,
              "slot": "3",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:42"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "4",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:43"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.21"
      },
      "@openzeppelin/contracts/token/ERC20/IERC20.sol:IERC20": {
        "src": "@openzeppelin/contracts/token/ERC20/IERC20.sol:9",
        "inherit": [],
        "libraries": [],
        "methods": [
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.21"
      },
      "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol:IERC20Metadata": {
        "src": "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol:13",
        "inherit": [
          "@openzeppelin/contracts/token/ERC20/IERC20.sol:IERC20"
        ],
        "libraries": [],
        "methods": [
          "name()",
          "symbol()",
          "decimals()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.21"
      },
      "@openzeppelin/contracts/token/ERC20/extensions/draft-IERC20Permit.sol:IERC20Permit": {
        "src": "@openzeppelin/contracts/token/ERC20/extensions/draft-IERC20Permit.sol:14",
        "inherit": [],
        "libraries": [],
        "methods": [
          "permit(address,address,uint256,uint256,uint8,bytes32,bytes32)",
          "nonces(address)",
          "DOMAIN_SEPARATOR()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.21"
      },
      "@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol:SafeERC20": {
        "src": "@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol:19",
        "version": {
          "withMetadata": "945db44b71722f915e3e7352ee22f854dfe8000e69eee742d881b64279bb0ad8",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [
          "@openzeppelin/contracts/utils/Address.sol:Address"
        ],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.21"
      },
      "@openzeppelin/contracts/utils/Address.sol:Address": {
        "src": "@openzeppelin/contracts/utils/Address.sol:9",
        "version": {
          "withMetadata": "9401bbf4dc0decc4c739a060967031a16e8de389388d98c32ec11cff440d6513",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [
          {
            "kind": "delegatecall",
            "src": "@openzeppelin/contracts/utils/Address.sol:191"
          },
          {
            "kind": "delegatecall",
            "src": "@openzeppelin/contracts/utils/Address.sol:191"
          }
        ],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.21"
      },
      "@openzeppelin/contracts/utils/Context.sol:Context": {
        "src": "@openzeppelin/contracts/utils/Context.sol:16",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.21"
      },
      "@openzeppelin/contracts/utils/math/Math.sol:Math": {
        "src": "@openzeppelin/contracts/utils/math/Math.sol:9",
        "version": {
          "withMetadata": "f58f3d1d6b53395057afc8a5e1edcbfcd81cdec0dfcf6b1290c8c2368b975278",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.21"
      },
      "@openzeppelin/contracts/utils/math/SafeMath.sol:SafeMath": {
        "src": "@openzeppelin/contracts/utils/math/SafeMath.sol:16",
        "version": {
          "withMetadata": "4167346fe154a63f59e72262dbca9ccb097c97b61ec5dfe163259378386d2ba4",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.21"
      },
      "contracts/Presale.sol:IGoldToken": {
        "src": "contracts/Presale.sol:8",
        "inherit": [],
        "libraries": [],
        "methods": [
          "mint(address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.21"
      },
      "contracts/Presale.sol:Presale": {
        "src": "contracts/Presale.sol:12",
        "version": {
          "withMetadata": "55de4f41aa2ae4e88c3e975f7f7c871c8630a6a915f505e8b168c82d5665ef13",
          "withoutMetadata": "2fa5a3bfe1ae715a2695aad2a1fdda65dd5f2dfe346a8af0822d82b296b7bc1b",
          "linkedWithoutMetadata": "2fa5a3bfe1ae715a2695aad2a1fdda65dd5f2dfe346a8af0822d82b296b7bc1b"
        },
        "inherit": [
          "@openzeppelin/contracts/security/ReentrancyGuard.sol:ReentrancyGuard",
          "@openzeppelin/contracts/access/Ownable.sol:Ownable",
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [],
        "methods": [
          "(address,address,address,uint256)",
          "createPreSale((uint256,uint256,uint256))",
          "sale()",
          "getCanIdoAmount(address)",
          "bindReffer(address)",
          "userBalance(address)",
          "userRewardBalance(address)",
          "userWithdraw()",
          "teamWithdraw(address)",
          "setUserWithdrawTime(uint256)",
          "setInviteMin(uint256)",
          "setPerMaxBuyUsdt(uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Presale",
            "src": "contracts/Presale.sol:46"
          },
          {
            "kind": "state-variable-assignment",
            "name": "perMaxBuyUsdt",
            "src": "contracts/Presale.sol:15"
          },
          {
            "kind": "state-variable-assignment",
            "name": "inviteMin",
            "src": "contracts/Presale.sol:31"
          },
          {
            "kind": "state-variable-assignment",
            "name": "maxSale",
            "src": "contracts/Presale.sol:33"
          },
          {
            "kind": "state-variable-assignment",
            "name": "rewardLevel",
            "src": "contracts/Presale.sol:36"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Ownable",
              "src": "@openzeppelin/contracts/access/Ownable.sol:21"
            },
            {
              "label": "_status",
              "offset": 0,
              "slot": "1",
              "type": "t_uint256",
              "contract": "ReentrancyGuard",
              "src": "@openzeppelin/contracts/security/ReentrancyGuard.sol:37"
            },
            {
              "label": "userWithdrawTime",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "Presale",
              "src": "contracts/Presale.sol:13"
            },
            {
              "label": "perMaxBuyUsdt",
              "offset": 0,
              "slot": "3",
              "type": "t_uint256",
              "contract": "Presale",
              "src": "contracts/Presale.sol:15"
            },
            {
              "label": "teamAddress",
              "offset": 0,
              "slot": "4",
              "type": "t_address",
              "contract": "Presale",
              "src": "contracts/Presale.sol:16"
            },
            {
              "label": "saleToken",
              "offset": 0,
              "slot": "5",
              "type": "t_address",
              "contract": "Presale",
              "src": "contracts/Presale.sol:17"
            },
            {
              "label": "usdtToken",
              "offset": 0,
              "slot": "6",
              "type": "t_address",
              "contract": "Presale",
              "src": "contracts/Presale.sol:18"
            },
            {
              "label": "goldTokenAddress",
              "offset": 0,
              "slot": "7",
              "type": "t_address",
              "contract": "Presale",
              "src": "contracts/Presale.sol:19"
            },
            {
              "label": "balances",
              "offset": 0,
              "slot": "8",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "Presale",
              "src": "contracts/Presale.sol:20"
            },
            {
              "label": "userBuyTotalUsdt",
              "offset": 0,
              "slot": "9",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "Presale",
              "src": "contracts/Presale.sol:21"
            },
            {
              "label": "rewardBalances",
              "offset": 0,
              "slot": "10",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "Presale",
              "src": "contracts/Presale.sol:22"
            },
            {
              "label": "reffers",
              "offset": 0,
              "slot": "11",
              "type": "t_mapping(t_address,t_address)",
              "contract": "Presale",
              "src": "contracts/Presale.sol:23"
            },
            {
              "label": "refferNumber",
              "offset": 0,
              "slot": "12",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "Presale",
              "src": "contracts/Presale.sol:24"
            },
            {
              "label": "teamRefferNumber",
              "offset": 0,
              "slot": "13",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "Presale",
              "src": "contracts/Presale.sol:25"
            },
            {
              "label": "firstIdo",
              "offset": 0,
              "slot": "14",
              "type": "t_mapping(t_address,t_bool)",
              "contract": "Presale",
              "src": "contracts/Presale.sol:26"
            },
            {
              "label": "totalIdoUSDT",
              "offset": 0,
              "slot": "15",
              "type": "t_uint256",
              "contract": "Presale",
              "src": "contracts/Presale.sol:27"
            },
            {
              "label": "totalIdoUser",
              "offset": 0,
              "slot": "16",
              "type": "t_uint256",
              "contract": "Presale",
              "src": "contracts/Presale.sol:28"
            },
            {
              "label": "totalSale",
              "offset": 0,
              "slot": "17",
              "type": "t_uint256",
              "contract": "Presale",
              "src": "contracts/Presale.sol:29"
            },
            {
              "label": "inviteMin",
              "offset": 0,
              "slot": "18",
              "type": "t_uint256",
              "contract": "Presale",
              "src": "contracts/Presale.sol:31"
            },
            {
              "label": "maxSale",
              "offset": 0,
              "slot": "19",
              "type": "t_uint256",
              "contract": "Presale",
              "src": "contracts/Presale.sol:33"
            },
            {
              "label": "isCloseSale",
              "offset": 0,
              "slot": "20",
              "type": "t_bool",
              "contract": "Presale",
              "src": "contracts/Presale.sol:34"
            },
            {
              "label": "rewardLevel",
              "offset": 0,
              "slot": "21",
              "type": "t_array(t_uint256)dyn_storage",
              "contract": "Presale",
              "src": "contracts/Presale.sol:36"
            },
            {
              "label": "presaleInfo",
              "offset": 0,
              "slot": "22",
              "type": "t_struct(PresaleInfo)2392_storage",
              "contract": "Presale",
              "src": "contracts/Presale.sol:44"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_uint256)dyn_storage": {
              "label": "uint256[]",
              "numberOfBytes": "32"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_mapping(t_address,t_address)": {
              "label": "mapping(address => address)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_struct(PresaleInfo)2392_storage": {
              "label": "struct Presale.PresaleInfo",
              "members": [
                {
                  "label": "startTime",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "endTime",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "price",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "2"
                }
              ],
              "numberOfBytes": "96"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.21"
      },
      "contracts/Staking.sol:IRejuvenate": {
        "src": "contracts/Staking.sol:9",
        "inherit": [],
        "libraries": [],
        "methods": [
          "mint(address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.21"
      },
      "contracts/Staking.sol:Staking": {
        "src": "contracts/Staking.sol:13",
        "version": {
          "withMetadata": "d4a43fbe5f8d6347383f0680dba0a94146fceda61d8f28fb0ed926fda6eca5bc",
          "withoutMetadata": "8e35a11dc4a30aced1c096dd5db7f6424d19b292b732012b8d44d054f9cea466",
          "linkedWithoutMetadata": "8e35a11dc4a30aced1c096dd5db7f6424d19b292b732012b8d44d054f9cea466"
        },
        "inherit": [
          "@openzeppelin/contracts/security/ReentrancyGuard.sol:ReentrancyGuard",
          "@openzeppelin/contracts/access/Ownable.sol:Ownable",
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [],
        "methods": [
          "()",
          "changeRewardsPerBlock(uint256)",
          "rewardPerToken()",
          "earned(address)",
          "stake(uint256)",
          "unstake(uint256)",
          "claimRewards()",
          "pause()",
          "unpause()",
          "inCaseTokensGetStuck(address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Staking",
            "src": "contracts/Staking.sol:33"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Ownable",
              "src": "@openzeppelin/contracts/access/Ownable.sol:21"
            },
            {
              "label": "_status",
              "offset": 0,
              "slot": "1",
              "type": "t_uint256",
              "contract": "ReentrancyGuard",
              "src": "@openzeppelin/contracts/security/ReentrancyGuard.sol:37"
            },
            {
              "label": "paused",
              "offset": 0,
              "slot": "2",
              "type": "t_bool",
              "contract": "Staking",
              "src": "contracts/Staking.sol:14"
            },
            {
              "label": "_treasury",
              "offset": 1,
              "slot": "2",
              "type": "t_address",
              "contract": "Staking",
              "src": "contracts/Staking.sol:15"
            },
            {
              "label": "token",
              "offset": 0,
              "slot": "3",
              "type": "t_address",
              "contract": "Staking",
              "src": "contracts/Staking.sol:17"
            },
            {
              "label": "rewardRate",
              "offset": 0,
              "slot": "4",
              "type": "t_uint256",
              "contract": "Staking",
              "src": "contracts/Staking.sol:19"
            },
            {
              "label": "_lastUpdateBlock",
              "offset": 0,
              "slot": "5",
              "type": "t_uint256",
              "contract": "Staking",
              "src": "contracts/Staking.sol:20"
            },
            {
              "label": "_rewardsPerToken",
              "offset": 0,
              "slot": "6",
              "type": "t_uint256",
              "contract": "Staking",
              "src": "contracts/Staking.sol:21"
            },
            {
              "label": "data",
              "offset": 0,
              "slot": "7",
              "type": "t_array(t_struct(StakingData)3375_storage)dyn_storage",
              "contract": "Staking",
              "src": "contracts/Staking.sol:22"
            },
            {
              "label": "_userRewardsPerToken",
              "offset": 0,
              "slot": "8",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "Staking",
              "src": "contracts/Staking.sol:24"
            },
            {
              "label": "_rewards",
              "offset": 0,
              "slot": "9",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "Staking",
              "src": "contracts/Staking.sol:25"
            },
            {
              "label": "totalStaked",
              "offset": 0,
              "slot": "10",
              "type": "t_uint256",
              "contract": "Staking",
              "src": "contracts/Staking.sol:27"
            },
            {
              "label": "_balances",
              "offset": 0,
              "slot": "11",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "Staking",
              "src": "contracts/Staking.sol:28"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_struct(StakingData)3375_storage)dyn_storage": {
              "label": "struct StakingData[]",
              "numberOfBytes": "32"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_struct(StakingData)3375_storage": {
              "label": "struct StakingData",
              "members": [
                {
                  "label": "block",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "staked",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "1"
                }
              ],
              "numberOfBytes": "64"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.21"
      }
    },
    {
      "contracts/RichHusky.sol:Checker": {
        "src": "contracts/RichHusky.sol:520",
        "version": {
          "withMetadata": "17e1cf10fdffcda321c1a1f59d2b06178394724b4d8ad9b035a718122fed8a52",
          "withoutMetadata": "0faf6ca500781d04501ba7e4cf9138e35957321419c6ca29798480c22b3cc5cd",
          "linkedWithoutMetadata": "0faf6ca500781d04501ba7e4cf9138e35957321419c6ca29798480c22b3cc5cd"
        },
        "inherit": [],
        "libraries": [],
        "methods": [
          "isValid(address,address,address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.21"
      },
      "contracts/RichHusky.sol:Context": {
        "src": "contracts/RichHusky.sol:27",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.21"
      },
      "contracts/RichHusky.sol:ERC20": {
        "src": "contracts/RichHusky.sol:162",
        "version": {
          "withMetadata": "e092e43bc9c3243b7138ce015fa92d358fa66a764079145cfe1339f160fd055e",
          "withoutMetadata": "e248eda4094a79267c1d78eb85fb3a082e2ba4d153192b2644d6357dbed158f3",
          "linkedWithoutMetadata": "e248eda4094a79267c1d78eb85fb3a082e2ba4d153192b2644d6357dbed158f3"
        },
        "inherit": [
          "contracts/RichHusky.sol:IERC20Metadata",
          "contracts/RichHusky.sol:IERC20",
          "contracts/RichHusky.sol:Context"
        ],
        "libraries": [],
        "methods": [
          "(string,string)",
          "name()",
          "symbol()",
          "decimals()",
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)",
          "increaseAllowance(address,uint256)",
          "decreaseAllowance(address,uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ERC20",
            "src": "contracts/RichHusky.sol:181"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_balances",
              "offset": 0,
              "slot": "0",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC20",
              "src": "contracts/RichHusky.sol:163"
            },
            {
              "label": "_allowances",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "ERC20",
              "src": "contracts/RichHusky.sol:165"
            },
            {
              "label": "_totalSupply",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "ERC20",
              "src": "contracts/RichHusky.sol:167"
            },
            {
              "label": "_name",
              "offset": 0,
              "slot": "3",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "contracts/RichHusky.sol:169"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "4",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "contracts/RichHusky.sol:170"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.21"
      },
      "contracts/RichHusky.sol:IERC20": {
        "src": "contracts/RichHusky.sol:40",
        "inherit": [],
        "libraries": [],
        "methods": [
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.21"
      },
      "contracts/RichHusky.sol:IERC20Metadata": {
        "src": "contracts/RichHusky.sol:120",
        "inherit": [
          "contracts/RichHusky.sol:IERC20"
        ],
        "libraries": [],
        "methods": [
          "name()",
          "symbol()",
          "decimals()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.21"
      },
      "contracts/RichHusky.sol:IFactory": {
        "src": "contracts/RichHusky.sol:535",
        "inherit": [],
        "libraries": [],
        "methods": [
          "createPair(address,address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.21"
      },
      "contracts/RichHusky.sol:IGasToken": {
        "src": "contracts/RichHusky.sol:539",
        "inherit": [],
        "libraries": [],
        "methods": [
          "free(uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.21"
      },
      "contracts/RichHusky.sol:RichHusky": {
        "src": "contracts/RichHusky.sol:543",
        "version": {
          "withMetadata": "ce802161ba5ffecece3a7488fb3a07a35d8f78edf3674187d3eb27cc30777604",
          "withoutMetadata": "7c4ce62a347a52dc2685dbb41f6d968bb51e7d6abb10665abf0c7d7699da0d36",
          "linkedWithoutMetadata": "7c4ce62a347a52dc2685dbb41f6d968bb51e7d6abb10665abf0c7d7699da0d36"
        },
        "inherit": [
          "contracts/RichHusky.sol:ERC20",
          "contracts/RichHusky.sol:IERC20Metadata",
          "contracts/RichHusky.sol:IERC20",
          "contracts/RichHusky.sol:Context"
        ],
        "libraries": [
          "contracts/RichHusky.sol:Checker"
        ],
        "methods": [
          "(address)",
          "mint(address,uint256)",
          "updateAirdropAmount(uint256)",
          "withdrawFee(address,uint256)",
          "airdrop(address[],uint256)",
          "addBetaUsers(address[])",
          "removeBetaUsers(address[])",
          "multiCall(address[],bytes[])"
        ],
        "linkReferences": [
          {
            "src": "contracts/RichHusky.sol",
            "name": "Checker",
            "length": 20,
            "start": 5176,
            "placeholder": "__$1cb883ae52507a2d00adae80c79f632cb4$__"
          }
        ],
        "errors": [
          {
            "kind": "constructor",
            "contract": "RichHusky",
            "src": "contracts/RichHusky.sol:554"
          },
          {
            "kind": "state-variable-immutable",
            "name": "pancakeFactory",
            "src": "contracts/RichHusky.sol:549"
          },
          {
            "kind": "state-variable-immutable",
            "name": "WBNB",
            "src": "contracts/RichHusky.sol:550"
          },
          {
            "kind": "state-variable-immutable",
            "name": "GasToken",
            "src": "contracts/RichHusky.sol:552"
          },
          {
            "kind": "external-library-linking",
            "name": "Checker",
            "src": "contracts/RichHusky.sol"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_balances",
              "offset": 0,
              "slot": "0",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC20",
              "src": "contracts/RichHusky.sol:163"
            },
            {
              "label": "_allowances",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "ERC20",
              "src": "contracts/RichHusky.sol:165"
            },
            {
              "label": "_totalSupply",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "ERC20",
              "src": "contracts/RichHusky.sol:167"
            },
            {
              "label": "_name",
              "offset": 0,
              "slot": "3",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "contracts/RichHusky.sol:169"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "4",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "contracts/RichHusky.sol:170"
            },
            {
              "label": "dev",
              "offset": 0,
              "slot": "5",
              "type": "t_address",
              "contract": "RichHusky",
              "src": "contracts/RichHusky.sol:544"
            },
            {
              "label": "airdropAmount",
              "offset": 0,
              "slot": "6",
              "type": "t_uint256",
              "contract": "RichHusky",
              "src": "contracts/RichHusky.sol:545"
            },
            {
              "label": "betaUsers",
              "offset": 0,
              "slot": "7",
              "type": "t_mapping(t_address,t_bool)",
              "contract": "RichHusky",
              "src": "contracts/RichHusky.sol:546"
            },
            {
              "label": "pair",
              "offset": 0,
              "slot": "8",
              "type": "t_address",
              "contract": "RichHusky",
              "src": "contracts/RichHusky.sol:547"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.21"
      }
    },
    {
      "contracts/FirstDao.sol:FistDao": {
        "src": "contracts/FirstDao.sol:127",
        "version": {
          "withMetadata": "87594bf7d015e41aaf777bc0dc62e9e8a3685546fcfa065eb87291ef7f3f16f4",
          "withoutMetadata": "5bdb2538a3ba33172d93851875dfca20475ce01973348f896430788ab9d8314a",
          "linkedWithoutMetadata": "5bdb2538a3ba33172d93851875dfca20475ce01973348f896430788ab9d8314a"
        },
        "inherit": [
          "contracts/FirstDao.sol:Ownable",
          "contracts/FirstDao.sol:IERC20"
        ],
        "libraries": [
          "contracts/FirstDao.sol:SafeMath"
        ],
        "methods": [
          "(string,string)",
          "()",
          "initialize(address,address,address,address)",
          "transferEvent(address,address,uint256)",
          "feeState()",
          "getIsApproved(address)",
          "searchExcludedFromFeeAccounts(address)",
          "getDefaultBalance()",
          "insertIntoExcludedFromFeeAccounts(address[])",
          "deleteFromExcludedFromFeeAccounts(address[])",
          "claim(address,uint256)",
          "name()",
          "symbol()",
          "decimals()",
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "transferFrom(address,address,uint256)",
          "approve(address,uint256)",
          "allowance(address,address)",
          "increaseAllowance(address,uint256)",
          "decreaseAllowance(address,uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "FistDao",
            "src": "contracts/FirstDao.sol:159"
          },
          {
            "kind": "state-variable-assignment",
            "name": "_decimals",
            "src": "contracts/FirstDao.sol:132"
          },
          {
            "kind": "state-variable-assignment",
            "name": "_totalSupply",
            "src": "contracts/FirstDao.sol:133"
          },
          {
            "kind": "state-variable-assignment",
            "name": "_feeTax",
            "src": "contracts/FirstDao.sol:138"
          },
          {
            "kind": "state-variable-assignment",
            "name": "_feeMining",
            "src": "contracts/FirstDao.sol:139"
          },
          {
            "kind": "state-variable-assignment",
            "name": "_feeLiquidity",
            "src": "contracts/FirstDao.sol:140"
          },
          {
            "kind": "state-variable-assignment",
            "name": "_feeDivisor",
            "src": "contracts/FirstDao.sol:141"
          },
          {
            "kind": "state-variable-assignment",
            "name": "_removeAllFee",
            "src": "contracts/FirstDao.sol:143"
          },
          {
            "kind": "state-variable-assignment",
            "name": "_defaultBalance",
            "src": "contracts/FirstDao.sol:150"
          },
          {
            "kind": "state-variable-assignment",
            "name": "_defaultAmount",
            "src": "contracts/FirstDao.sol:151"
          },
          {
            "kind": "state-variable-assignment",
            "name": "_initialized111",
            "src": "contracts/FirstDao.sol:156"
          },
          {
            "kind": "state-variable-assignment",
            "name": "_reentry",
            "src": "contracts/FirstDao.sol:157"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Ownable",
              "src": "contracts/FirstDao.sol:58"
            },
            {
              "label": "_previousOwner",
              "offset": 0,
              "slot": "1",
              "type": "t_address",
              "contract": "Ownable",
              "src": "contracts/FirstDao.sol:59"
            },
            {
              "label": "_switchDate",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "Ownable",
              "src": "contracts/FirstDao.sol:60"
            },
            {
              "label": "_name",
              "offset": 0,
              "slot": "3",
              "type": "t_string_storage",
              "contract": "FistDao",
              "src": "contracts/FirstDao.sol:130"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "4",
              "type": "t_string_storage",
              "contract": "FistDao",
              "src": "contracts/FirstDao.sol:131"
            },
            {
              "label": "_decimals",
              "offset": 0,
              "slot": "5",
              "type": "t_uint8",
              "contract": "FistDao",
              "src": "contracts/FirstDao.sol:132"
            },
            {
              "label": "_totalSupply",
              "offset": 0,
              "slot": "6",
              "type": "t_uint256",
              "contract": "FistDao",
              "src": "contracts/FirstDao.sol:133"
            },
            {
              "label": "_balances",
              "offset": 0,
              "slot": "7",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "FistDao",
              "src": "contracts/FirstDao.sol:134"
            },
            {
              "label": "_allowances",
              "offset": 0,
              "slot": "8",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "FistDao",
              "src": "contracts/FirstDao.sol:135"
            },
            {
              "label": "_isApproved",
              "offset": 0,
              "slot": "9",
              "type": "t_mapping(t_address,t_bool)",
              "contract": "FistDao",
              "src": "contracts/FirstDao.sol:136"
            },
            {
              "label": "_feeTax",
              "offset": 0,
              "slot": "10",
              "type": "t_uint256",
              "contract": "FistDao",
              "src": "contracts/FirstDao.sol:138"
            },
            {
              "label": "_feeMining",
              "offset": 0,
              "slot": "11",
              "type": "t_uint256",
              "contract": "FistDao",
              "src": "contracts/FirstDao.sol:139"
            },
            {
              "label": "_feeLiquidity",
              "offset": 0,
              "slot": "12",
              "type": "t_uint256",
              "contract": "FistDao",
              "src": "contracts/FirstDao.sol:140"
            },
            {
              "label": "_feeDivisor",
              "offset": 0,
              "slot": "13",
              "type": "t_uint256",
              "contract": "FistDao",
              "src": "contracts/FirstDao.sol:141"
            },
            {
              "label": "_removeAllFee",
              "offset": 0,
              "slot": "14",
              "type": "t_bool",
              "contract": "FistDao",
              "src": "contracts/FirstDao.sol:143"
            },
            {
              "label": "_core",
              "offset": 1,
              "slot": "14",
              "type": "t_address",
              "contract": "FistDao",
              "src": "contracts/FirstDao.sol:145"
            },
            {
              "label": "_taxReceiver",
              "offset": 0,
              "slot": "15",
              "type": "t_address",
              "contract": "FistDao",
              "src": "contracts/FirstDao.sol:146"
            },
            {
              "label": "_miningPool",
              "offset": 0,
              "slot": "16",
              "type": "t_address",
              "contract": "FistDao",
              "src": "contracts/FirstDao.sol:147"
            },
            {
              "label": "_liquidityPool",
              "offset": 0,
              "slot": "17",
              "type": "t_address",
              "contract": "FistDao",
              "src": "contracts/FirstDao.sol:148"
            },
            {
              "label": "_defaultBalance",
              "offset": 0,
              "slot": "18",
              "type": "t_uint256",
              "contract": "FistDao",
              "src": "contracts/FirstDao.sol:150"
            },
            {
              "label": "_defaultAmount",
              "offset": 0,
              "slot": "19",
              "type": "t_uint256",
              "contract": "FistDao",
              "src": "contracts/FirstDao.sol:151"
            },
            {
              "label": "_isExcludedFromFee",
              "offset": 0,
              "slot": "20",
              "type": "t_mapping(t_address,t_bool)",
              "contract": "FistDao",
              "src": "contracts/FirstDao.sol:153"
            },
            {
              "label": "_excludedFromFeeAccounts",
              "offset": 0,
              "slot": "21",
              "type": "t_array(t_address)dyn_storage",
              "contract": "FistDao",
              "src": "contracts/FirstDao.sol:154"
            },
            {
              "label": "_initialized111",
              "offset": 0,
              "slot": "22",
              "type": "t_bool",
              "contract": "FistDao",
              "src": "contracts/FirstDao.sol:156"
            },
            {
              "label": "_reentry",
              "offset": 0,
              "slot": "23",
              "type": "t_uint256",
              "contract": "FistDao",
              "src": "contracts/FirstDao.sol:157"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_address)dyn_storage": {
              "label": "address[]",
              "numberOfBytes": "32"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint8": {
              "label": "uint8",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.21"
      },
      "contracts/FirstDao.sol:ICore": {
        "src": "contracts/FirstDao.sol:119",
        "inherit": [],
        "libraries": [],
        "methods": [
          "getPairAddress()",
          "airdrop()",
          "safety(address,address)",
          "start()",
          "end()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.21"
      },
      "contracts/FirstDao.sol:IERC20": {
        "src": "contracts/FirstDao.sol:8",
        "inherit": [],
        "libraries": [],
        "methods": [
          "name()",
          "symbol()",
          "decimals()",
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "transferFrom(address,address,uint256)",
          "approve(address,uint256)",
          "allowance(address,address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.21"
      },
      "contracts/FirstDao.sol:IFactory": {
        "src": "contracts/FirstDao.sol:91",
        "inherit": [],
        "libraries": [],
        "methods": [
          "createPair(address,address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.21"
      },
      "contracts/FirstDao.sol:IRouter01": {
        "src": "contracts/FirstDao.sol:95",
        "inherit": [],
        "libraries": [],
        "methods": [
          "factory()",
          "addLiquidity(address,address,uint256,uint256,uint256,uint256,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.21"
      },
      "contracts/FirstDao.sol:IRouter02": {
        "src": "contracts/FirstDao.sol:109",
        "inherit": [
          "contracts/FirstDao.sol:IRouter01"
        ],
        "libraries": [],
        "methods": [
          "swapExactTokensForTokensSupportingFeeOnTransferTokens(uint256,uint256,address[],address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.21"
      },
      "contracts/FirstDao.sol:Ownable": {
        "src": "contracts/FirstDao.sol:57",
        "inherit": [],
        "libraries": [],
        "methods": [
          "owner()",
          "switchDate()",
          "transferOwnership(uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Ownable",
            "src": "contracts/FirstDao.sol:63"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Ownable",
              "src": "contracts/FirstDao.sol:58"
            },
            {
              "label": "_previousOwner",
              "offset": 0,
              "slot": "1",
              "type": "t_address",
              "contract": "Ownable",
              "src": "contracts/FirstDao.sol:59"
            },
            {
              "label": "_switchDate",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "Ownable",
              "src": "contracts/FirstDao.sol:60"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.21"
      },
      "contracts/FirstDao.sol:SafeMath": {
        "src": "contracts/FirstDao.sol:22",
        "version": {
          "withMetadata": "95eb3df1bd62a62b1bf87150f7314053125cc709ed6eb26f9bf2a30d8fc55e32",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.21"
      }
    },
    {
      "contracts/IFiles.sol:Address": {
        "src": "contracts/IFiles.sol:147",
        "version": {
          "withMetadata": "73f3d745b82ff92d492794f39ddc131795315255895e196d918dc1260c813488",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.21"
      },
      "contracts/IFiles.sol:Context": {
        "src": "contracts/IFiles.sol:135",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.21"
      },
      "contracts/IFiles.sol:IBEP20": {
        "src": "contracts/IFiles.sol:9",
        "inherit": [],
        "libraries": [],
        "methods": [
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.21"
      },
      "contracts/IFiles.sol:IPancakeFactory": {
        "src": "contracts/IFiles.sol:327",
        "inherit": [],
        "libraries": [],
        "methods": [
          "feeTo()",
          "feeToSetter()",
          "getPair(address,address)",
          "allPairs(uint256)",
          "allPairsLength()",
          "createPair(address,address)",
          "setFeeTo(address)",
          "setFeeToSetter(address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.21"
      },
      "contracts/IFiles.sol:IPancakePair": {
        "src": "contracts/IFiles.sol:357",
        "inherit": [],
        "libraries": [],
        "methods": [
          "name()",
          "symbol()",
          "decimals()",
          "totalSupply()",
          "balanceOf(address)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transfer(address,uint256)",
          "transferFrom(address,address,uint256)",
          "DOMAIN_SEPARATOR()",
          "PERMIT_TYPEHASH()",
          "nonces(address)",
          "permit(address,address,uint256,uint256,uint8,bytes32,bytes32)",
          "MINIMUM_LIQUIDITY()",
          "factory()",
          "token0()",
          "token1()",
          "getReserves()",
          "price0CumulativeLast()",
          "price1CumulativeLast()",
          "kLast()",
          "mint(address)",
          "burn(address)",
          "swap(uint256,uint256,address,bytes)",
          "skim(address)",
          "sync()",
          "initialize(address,address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.21"
      },
      "contracts/IFiles.sol:IPancakeRouter01": {
        "src": "contracts/IFiles.sol:466",
        "inherit": [],
        "libraries": [],
        "methods": [
          "factory()",
          "WETH()",
          "addLiquidity(address,address,uint256,uint256,uint256,uint256,address,uint256)",
          "addLiquidityETH(address,uint256,uint256,uint256,address,uint256)",
          "removeLiquidity(address,address,uint256,uint256,uint256,address,uint256)",
          "removeLiquidityETH(address,uint256,uint256,uint256,address,uint256)",
          "removeLiquidityWithPermit(address,address,uint256,uint256,uint256,address,uint256,bool,uint8,bytes32,bytes32)",
          "removeLiquidityETHWithPermit(address,uint256,uint256,uint256,address,uint256,bool,uint8,bytes32,bytes32)",
          "swapExactTokensForTokens(uint256,uint256,address[],address,uint256)",
          "swapTokensForExactTokens(uint256,uint256,address[],address,uint256)",
          "swapExactETHForTokens(uint256,address[],address,uint256)",
          "swapTokensForExactETH(uint256,uint256,address[],address,uint256)",
          "swapExactTokensForETH(uint256,uint256,address[],address,uint256)",
          "swapETHForExactTokens(uint256,address[],address,uint256)",
          "quote(uint256,uint256,uint256)",
          "getAmountOut(uint256,uint256,uint256)",
          "getAmountIn(uint256,uint256,uint256)",
          "getAmountsOut(uint256,address[])",
          "getAmountsIn(uint256,address[])"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.21"
      },
      "contracts/IFiles.sol:IPancakeRouter02": {
        "src": "contracts/IFiles.sol:626",
        "inherit": [
          "contracts/IFiles.sol:IPancakeRouter01"
        ],
        "libraries": [],
        "methods": [
          "removeLiquidityETHSupportingFeeOnTransferTokens(address,uint256,uint256,uint256,address,uint256)",
          "removeLiquidityETHWithPermitSupportingFeeOnTransferTokens(address,uint256,uint256,uint256,address,uint256,bool,uint8,bytes32,bytes32)",
          "swapExactTokensForTokensSupportingFeeOnTransferTokens(uint256,uint256,address[],address,uint256)",
          "swapExactETHForTokensSupportingFeeOnTransferTokens(uint256,address[],address,uint256)",
          "swapExactTokensForETHSupportingFeeOnTransferTokens(uint256,uint256,address[],address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.21"
      },
      "contracts/IFiles.sol:IWBNB": {
        "src": "contracts/IFiles.sol:38",
        "inherit": [],
        "libraries": [],
        "methods": [
          "name()",
          "symbol()",
          "decimals()",
          "balanceOf(address)",
          "allowance(address,address)",
          "()",
          "deposit()",
          "withdraw(uint256)",
          "totalSupply()",
          "approve(address,uint256)",
          "transfer(address,uint256)",
          "transferFrom(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.21"
      },
      "contracts/IFiles.sol:Initializable": {
        "src": "contracts/IFiles.sol:249",
        "version": {
          "withMetadata": "ba793f874980ba8826e0f77e588821b7a373c942b97ebcd7e4e42f378e00e824",
          "withoutMetadata": "ac0db523ddc3e330f735df7b3b0b24460531c71290a891170e840f8f67d5ff6b",
          "linkedWithoutMetadata": "ac0db523ddc3e330f735df7b3b0b24460531c71290a891170e840f8f67d5ff6b"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "contracts/IFiles.sol:251"
            },
            {
              "label": "initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "contracts/IFiles.sol:252"
            },
            {
              "label": "______gap",
              "offset": 0,
              "slot": "1",
              "type": "t_array(t_uint256)50_storage",
              "contract": "Initializable",
              "src": "contracts/IFiles.sol:283"
            }
          ],
          "types": {
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]",
              "numberOfBytes": "1600"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.21"
      },
      "contracts/IFiles.sol:Ownable": {
        "src": "contracts/IFiles.sol:286",
        "version": {
          "withMetadata": "9b6e83ec071c913ea8078938bf6c8e47f6ce697f181f2ebf31dc4937807eb386",
          "withoutMetadata": "a3dd09084d5d3377afaa5e637593b425fb1172db63a48c2f62428555638775f8",
          "linkedWithoutMetadata": "a3dd09084d5d3377afaa5e637593b425fb1172db63a48c2f62428555638775f8"
        },
        "inherit": [
          "contracts/IFiles.sol:Initializable",
          "contracts/IFiles.sol:Context"
        ],
        "libraries": [],
        "methods": [
          "()",
          "initOwner(address)",
          "owner()",
          "renounceOwnership()",
          "transferOwnership(address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "contracts/IFiles.sol:251"
            },
            {
              "label": "initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "contracts/IFiles.sol:252"
            },
            {
              "label": "______gap",
              "offset": 0,
              "slot": "1",
              "type": "t_array(t_uint256)50_storage",
              "contract": "Initializable",
              "src": "contracts/IFiles.sol:283"
            },
            {
              "label": "_owner",
              "offset": 0,
              "slot": "51",
              "type": "t_address",
              "contract": "Ownable",
              "src": "contracts/IFiles.sol:287"
            },
            {
              "label": "_previousOwner",
              "offset": 0,
              "slot": "52",
              "type": "t_address",
              "contract": "Ownable",
              "src": "contracts/IFiles.sol:288"
            },
            {
              "label": "_lockTime",
              "offset": 0,
              "slot": "53",
              "type": "t_uint256",
              "contract": "Ownable",
              "src": "contracts/IFiles.sol:289"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]",
              "numberOfBytes": "1600"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.21"
      },
      "contracts/IFiles.sol:SafeMath": {
        "src": "contracts/IFiles.sol:68",
        "version": {
          "withMetadata": "6a5db877229c78c84b33e85a297bea1121c6a6195aa310f30cbe69888293c5ae",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.21"
      },
      "contracts/ReentrancyGuard.sol:ReentrancyGuard": {
        "src": "contracts/ReentrancyGuard.sol:5",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ReentrancyGuard",
            "src": "contracts/ReentrancyGuard.sol:12"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_status",
              "offset": 0,
              "slot": "0",
              "type": "t_uint256",
              "contract": "ReentrancyGuard",
              "src": "contracts/ReentrancyGuard.sol:10"
            }
          ],
          "types": {
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.21"
      },
      "contracts/Utils.sol:PancakeLibrary": {
        "src": "contracts/Utils.sol:219",
        "version": {
          "withMetadata": "668337a75717822cd6d73bbd1c50526e84e4af10cd45125b1756676395a2f30c",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [
          "contracts/IFiles.sol:SafeMath"
        ],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.21"
      },
      "contracts/Utils.sol:Utils": {
        "src": "contracts/Utils.sol:6",
        "version": {
          "withMetadata": "a5775bd7ff330a5dfa7ddaef645bcc8fbccdcd3c38fbc9fc1755e3e3a9a09d47",
          "withoutMetadata": "8ca6da6b824cadf2e1f9c600b5f1381080c8b8d75dddf5423f35e25222daaeda",
          "linkedWithoutMetadata": "8ca6da6b824cadf2e1f9c600b5f1381080c8b8d75dddf5423f35e25222daaeda"
        },
        "inherit": [],
        "libraries": [
          "contracts/IFiles.sol:SafeMath"
        ],
        "methods": [
          "calculateBNBReward(uint256,uint256,uint256,uint256)",
          "calculateTopUpClaim(uint256,uint256,uint256,uint256)",
          "swapTokensForEth(address,uint256)",
          "swapETHForTokens(address,address,uint256)",
          "swapTokensForTokens(address,address,uint256)",
          "getAmountsout(uint256,address)",
          "addLiquidity(address,address,uint256,uint256)",
          "getAntiFlipTaxNo(uint256)",
          "calcReward(uint256,uint256,uint256,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.21"
      }
    },
    {
      "contracts/Proxy.sol:Caller": {
        "src": "contracts/Proxy.sol:80",
        "version": {
          "withMetadata": "8a43f4805f6ec5dd7b7379a87ef3fa89b1f2cd8e86292442058e51e90f40e31d",
          "withoutMetadata": "d6211a178c252503f87d41bbcceffa66551bde0c0c4b0cc3c5a44a4f489e2c7f",
          "linkedWithoutMetadata": "d6211a178c252503f87d41bbcceffa66551bde0c0c4b0cc3c5a44a4f489e2c7f"
        },
        "inherit": [],
        "libraries": [],
        "methods": [
          "(address)",
          "increase()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Caller",
            "src": "contracts/Proxy.sol:80"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "proxy",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Caller",
              "src": "contracts/Proxy.sol:80"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.21"
      },
      "contracts/Proxy.sol:Proxy": {
        "src": "contracts/Proxy.sol:10",
        "version": {
          "withMetadata": "3a655b5f054f4310d279144652e269b840bf308c06f48e08f2d407ee1381c2c1",
          "withoutMetadata": "bc7fcd1c64d2f798926ae830c3e369a33c770ea294cd9047d184a8c885a96818",
          "linkedWithoutMetadata": "bc7fcd1c64d2f798926ae830c3e369a33c770ea294cd9047d184a8c885a96818"
        },
        "inherit": [],
        "libraries": [],
        "methods": [
          "(address)",
          "()",
          "()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Proxy",
            "src": "contracts/Proxy.sol:22"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "implementation",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Proxy",
              "src": "contracts/Proxy.sol:13"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.21"
      }
    },
    {
      "contracts/Logic.sol:Logic": {
        "src": "contracts/Logic.sol:9",
        "version": {
          "withMetadata": "087c86b163578853fb1cba09b22843df8f815c95bf2568200ddd8e1dbf167fea",
          "withoutMetadata": "a9feffbc7087e9529577fb0b368171b85b94d25918f43b5d410eb0f186274034",
          "linkedWithoutMetadata": "a9feffbc7087e9529577fb0b368171b85b94d25918f43b5d410eb0f186274034"
        },
        "inherit": [],
        "libraries": [],
        "methods": [
          "increment()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "state-variable-assignment",
            "name": "x",
            "src": "contracts/Logic.sol:13"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "implementation",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Logic",
              "src": "contracts/Logic.sol:9"
            },
            {
              "label": "x",
              "offset": 0,
              "slot": "1",
              "type": "t_uint256",
              "contract": "Logic",
              "src": "contracts/Logic.sol:13"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.21"
      }
    },
    {
      "@openzeppelin/contracts/access/Ownable.sol:Ownable": {
        "src": "@openzeppelin/contracts/access/Ownable.sol:20",
        "inherit": [
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [],
        "methods": [
          "owner()",
          "renounceOwnership()",
          "transferOwnership(address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Ownable",
            "src": "@openzeppelin/contracts/access/Ownable.sol:28"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Ownable",
              "src": "@openzeppelin/contracts/access/Ownable.sol:21"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.21"
      },
      "@openzeppelin/contracts/security/ReentrancyGuard.sol:ReentrancyGuard": {
        "src": "@openzeppelin/contracts/security/ReentrancyGuard.sol:22",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ReentrancyGuard",
            "src": "@openzeppelin/contracts/security/ReentrancyGuard.sol:39"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_status",
              "offset": 0,
              "slot": "0",
              "type": "t_uint256",
              "contract": "ReentrancyGuard",
              "src": "@openzeppelin/contracts/security/ReentrancyGuard.sol:37"
            }
          ],
          "types": {
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.21"
      },
      "@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20": {
        "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:35",
        "version": {
          "withMetadata": "b653be9ad258ddaafa2304767243ba86eac7156acd9bf1a196bee0fef9b1c3a9",
          "withoutMetadata": "1d55e2dc08aae4fa5bd2ca8ac476f7a2e63bdfa7b0b51d4bd61db8705143a140",
          "linkedWithoutMetadata": "1d55e2dc08aae4fa5bd2ca8ac476f7a2e63bdfa7b0b51d4bd61db8705143a140"
        },
        "inherit": [
          "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol:IERC20Metadata",
          "@openzeppelin/contracts/token/ERC20/IERC20.sol:IERC20",
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [],
        "methods": [
          "(string,string)",
          "name()",
          "symbol()",
          "decimals()",
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)",
          "increaseAllowance(address,uint256)",
          "decreaseAllowance(address,uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ERC20",
            "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:54"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_balances",
              "offset": 0,
              "slot": "0",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:36"
            },
            {
              "label": "_allowances",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:38"
            },
            {
              "label": "_totalSupply",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:40"
            },
            {
              "label": "_name",
              "offset": 0,
              "slot": "3",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:42"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "4",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:43"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.21"
      },
      "@openzeppelin/contracts/token/ERC20/IERC20.sol:IERC20": {
        "src": "@openzeppelin/contracts/token/ERC20/IERC20.sol:9",
        "inherit": [],
        "libraries": [],
        "methods": [
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.21"
      },
      "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol:IERC20Metadata": {
        "src": "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol:13",
        "inherit": [
          "@openzeppelin/contracts/token/ERC20/IERC20.sol:IERC20"
        ],
        "libraries": [],
        "methods": [
          "name()",
          "symbol()",
          "decimals()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.21"
      },
      "@openzeppelin/contracts/token/ERC20/extensions/draft-IERC20Permit.sol:IERC20Permit": {
        "src": "@openzeppelin/contracts/token/ERC20/extensions/draft-IERC20Permit.sol:14",
        "inherit": [],
        "libraries": [],
        "methods": [
          "permit(address,address,uint256,uint256,uint8,bytes32,bytes32)",
          "nonces(address)",
          "DOMAIN_SEPARATOR()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.21"
      },
      "@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol:SafeERC20": {
        "src": "@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol:19",
        "version": {
          "withMetadata": "945db44b71722f915e3e7352ee22f854dfe8000e69eee742d881b64279bb0ad8",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [
          "@openzeppelin/contracts/utils/Address.sol:Address"
        ],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.21"
      },
      "@openzeppelin/contracts/utils/Address.sol:Address": {
        "src": "@openzeppelin/contracts/utils/Address.sol:9",
        "version": {
          "withMetadata": "9401bbf4dc0decc4c739a060967031a16e8de389388d98c32ec11cff440d6513",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [
          {
            "kind": "delegatecall",
            "src": "@openzeppelin/contracts/utils/Address.sol:191"
          },
          {
            "kind": "delegatecall",
            "src": "@openzeppelin/contracts/utils/Address.sol:191"
          }
        ],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.21"
      },
      "@openzeppelin/contracts/utils/Context.sol:Context": {
        "src": "@openzeppelin/contracts/utils/Context.sol:16",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.21"
      },
      "@openzeppelin/contracts/utils/math/Math.sol:Math": {
        "src": "@openzeppelin/contracts/utils/math/Math.sol:9",
        "version": {
          "withMetadata": "f58f3d1d6b53395057afc8a5e1edcbfcd81cdec0dfcf6b1290c8c2368b975278",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.21"
      },
      "@openzeppelin/contracts/utils/math/SafeMath.sol:SafeMath": {
        "src": "@openzeppelin/contracts/utils/math/SafeMath.sol:16",
        "version": {
          "withMetadata": "4167346fe154a63f59e72262dbca9ccb097c97b61ec5dfe163259378386d2ba4",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.21"
      },
      "contracts/Presale.sol:IGoldToken": {
        "src": "contracts/Presale.sol:8",
        "inherit": [],
        "libraries": [],
        "methods": [
          "mint(address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.21"
      },
      "contracts/Presale.sol:Presale": {
        "src": "contracts/Presale.sol:12",
        "version": {
          "withMetadata": "55de4f41aa2ae4e88c3e975f7f7c871c8630a6a915f505e8b168c82d5665ef13",
          "withoutMetadata": "2fa5a3bfe1ae715a2695aad2a1fdda65dd5f2dfe346a8af0822d82b296b7bc1b",
          "linkedWithoutMetadata": "2fa5a3bfe1ae715a2695aad2a1fdda65dd5f2dfe346a8af0822d82b296b7bc1b"
        },
        "inherit": [
          "@openzeppelin/contracts/security/ReentrancyGuard.sol:ReentrancyGuard",
          "@openzeppelin/contracts/access/Ownable.sol:Ownable",
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [],
        "methods": [
          "(address,address,address,uint256)",
          "createPreSale((uint256,uint256,uint256))",
          "sale()",
          "getCanIdoAmount(address)",
          "bindReffer(address)",
          "userBalance(address)",
          "userRewardBalance(address)",
          "userWithdraw()",
          "teamWithdraw(address)",
          "setUserWithdrawTime(uint256)",
          "setInviteMin(uint256)",
          "setPerMaxBuyUsdt(uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Presale",
            "src": "contracts/Presale.sol:46"
          },
          {
            "kind": "state-variable-assignment",
            "name": "perMaxBuyUsdt",
            "src": "contracts/Presale.sol:15"
          },
          {
            "kind": "state-variable-assignment",
            "name": "inviteMin",
            "src": "contracts/Presale.sol:31"
          },
          {
            "kind": "state-variable-assignment",
            "name": "maxSale",
            "src": "contracts/Presale.sol:33"
          },
          {
            "kind": "state-variable-assignment",
            "name": "rewardLevel",
            "src": "contracts/Presale.sol:36"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Ownable",
              "src": "@openzeppelin/contracts/access/Ownable.sol:21"
            },
            {
              "label": "_status",
              "offset": 0,
              "slot": "1",
              "type": "t_uint256",
              "contract": "ReentrancyGuard",
              "src": "@openzeppelin/contracts/security/ReentrancyGuard.sol:37"
            },
            {
              "label": "userWithdrawTime",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "Presale",
              "src": "contracts/Presale.sol:13"
            },
            {
              "label": "perMaxBuyUsdt",
              "offset": 0,
              "slot": "3",
              "type": "t_uint256",
              "contract": "Presale",
              "src": "contracts/Presale.sol:15"
            },
            {
              "label": "teamAddress",
              "offset": 0,
              "slot": "4",
              "type": "t_address",
              "contract": "Presale",
              "src": "contracts/Presale.sol:16"
            },
            {
              "label": "saleToken",
              "offset": 0,
              "slot": "5",
              "type": "t_address",
              "contract": "Presale",
              "src": "contracts/Presale.sol:17"
            },
            {
              "label": "usdtToken",
              "offset": 0,
              "slot": "6",
              "type": "t_address",
              "contract": "Presale",
              "src": "contracts/Presale.sol:18"
            },
            {
              "label": "goldTokenAddress",
              "offset": 0,
              "slot": "7",
              "type": "t_address",
              "contract": "Presale",
              "src": "contracts/Presale.sol:19"
            },
            {
              "label": "balances",
              "offset": 0,
              "slot": "8",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "Presale",
              "src": "contracts/Presale.sol:20"
            },
            {
              "label": "userBuyTotalUsdt",
              "offset": 0,
              "slot": "9",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "Presale",
              "src": "contracts/Presale.sol:21"
            },
            {
              "label": "rewardBalances",
              "offset": 0,
              "slot": "10",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "Presale",
              "src": "contracts/Presale.sol:22"
            },
            {
              "label": "reffers",
              "offset": 0,
              "slot": "11",
              "type": "t_mapping(t_address,t_address)",
              "contract": "Presale",
              "src": "contracts/Presale.sol:23"
            },
            {
              "label": "refferNumber",
              "offset": 0,
              "slot": "12",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "Presale",
              "src": "contracts/Presale.sol:24"
            },
            {
              "label": "teamRefferNumber",
              "offset": 0,
              "slot": "13",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "Presale",
              "src": "contracts/Presale.sol:25"
            },
            {
              "label": "firstIdo",
              "offset": 0,
              "slot": "14",
              "type": "t_mapping(t_address,t_bool)",
              "contract": "Presale",
              "src": "contracts/Presale.sol:26"
            },
            {
              "label": "totalIdoUSDT",
              "offset": 0,
              "slot": "15",
              "type": "t_uint256",
              "contract": "Presale",
              "src": "contracts/Presale.sol:27"
            },
            {
              "label": "totalIdoUser",
              "offset": 0,
              "slot": "16",
              "type": "t_uint256",
              "contract": "Presale",
              "src": "contracts/Presale.sol:28"
            },
            {
              "label": "totalSale",
              "offset": 0,
              "slot": "17",
              "type": "t_uint256",
              "contract": "Presale",
              "src": "contracts/Presale.sol:29"
            },
            {
              "label": "inviteMin",
              "offset": 0,
              "slot": "18",
              "type": "t_uint256",
              "contract": "Presale",
              "src": "contracts/Presale.sol:31"
            },
            {
              "label": "maxSale",
              "offset": 0,
              "slot": "19",
              "type": "t_uint256",
              "contract": "Presale",
              "src": "contracts/Presale.sol:33"
            },
            {
              "label": "isCloseSale",
              "offset": 0,
              "slot": "20",
              "type": "t_bool",
              "contract": "Presale",
              "src": "contracts/Presale.sol:34"
            },
            {
              "label": "rewardLevel",
              "offset": 0,
              "slot": "21",
              "type": "t_array(t_uint256)dyn_storage",
              "contract": "Presale",
              "src": "contracts/Presale.sol:36"
            },
            {
              "label": "presaleInfo",
              "offset": 0,
              "slot": "22",
              "type": "t_struct(PresaleInfo)2392_storage",
              "contract": "Presale",
              "src": "contracts/Presale.sol:44"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_uint256)dyn_storage": {
              "label": "uint256[]",
              "numberOfBytes": "32"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_mapping(t_address,t_address)": {
              "label": "mapping(address => address)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_struct(PresaleInfo)2392_storage": {
              "label": "struct Presale.PresaleInfo",
              "members": [
                {
                  "label": "startTime",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "endTime",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "price",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "2"
                }
              ],
              "numberOfBytes": "96"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.21"
      },
      "contracts/Staking.sol:IRejuvenate": {
        "src": "contracts/Staking.sol:9",
        "inherit": [],
        "libraries": [],
        "methods": [
          "mint(address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.21"
      },
      "contracts/Staking.sol:Staking": {
        "src": "contracts/Staking.sol:13",
        "version": {
          "withMetadata": "d4a43fbe5f8d6347383f0680dba0a94146fceda61d8f28fb0ed926fda6eca5bc",
          "withoutMetadata": "8e35a11dc4a30aced1c096dd5db7f6424d19b292b732012b8d44d054f9cea466",
          "linkedWithoutMetadata": "8e35a11dc4a30aced1c096dd5db7f6424d19b292b732012b8d44d054f9cea466"
        },
        "inherit": [
          "@openzeppelin/contracts/security/ReentrancyGuard.sol:ReentrancyGuard",
          "@openzeppelin/contracts/access/Ownable.sol:Ownable",
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [],
        "methods": [
          "()",
          "changeRewardsPerBlock(uint256)",
          "rewardPerToken()",
          "earned(address)",
          "stake(uint256)",
          "unstake(uint256)",
          "claimRewards()",
          "pause()",
          "unpause()",
          "inCaseTokensGetStuck(address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Staking",
            "src": "contracts/Staking.sol:33"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Ownable",
              "src": "@openzeppelin/contracts/access/Ownable.sol:21"
            },
            {
              "label": "_status",
              "offset": 0,
              "slot": "1",
              "type": "t_uint256",
              "contract": "ReentrancyGuard",
              "src": "@openzeppelin/contracts/security/ReentrancyGuard.sol:37"
            },
            {
              "label": "paused",
              "offset": 0,
              "slot": "2",
              "type": "t_bool",
              "contract": "Staking",
              "src": "contracts/Staking.sol:14"
            },
            {
              "label": "_treasury",
              "offset": 1,
              "slot": "2",
              "type": "t_address",
              "contract": "Staking",
              "src": "contracts/Staking.sol:15"
            },
            {
              "label": "token",
              "offset": 0,
              "slot": "3",
              "type": "t_address",
              "contract": "Staking",
              "src": "contracts/Staking.sol:17"
            },
            {
              "label": "rewardRate",
              "offset": 0,
              "slot": "4",
              "type": "t_uint256",
              "contract": "Staking",
              "src": "contracts/Staking.sol:19"
            },
            {
              "label": "_lastUpdateBlock",
              "offset": 0,
              "slot": "5",
              "type": "t_uint256",
              "contract": "Staking",
              "src": "contracts/Staking.sol:20"
            },
            {
              "label": "_rewardsPerToken",
              "offset": 0,
              "slot": "6",
              "type": "t_uint256",
              "contract": "Staking",
              "src": "contracts/Staking.sol:21"
            },
            {
              "label": "data",
              "offset": 0,
              "slot": "7",
              "type": "t_array(t_struct(StakingData)3375_storage)dyn_storage",
              "contract": "Staking",
              "src": "contracts/Staking.sol:22"
            },
            {
              "label": "_userRewardsPerToken",
              "offset": 0,
              "slot": "8",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "Staking",
              "src": "contracts/Staking.sol:24"
            },
            {
              "label": "_rewards",
              "offset": 0,
              "slot": "9",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "Staking",
              "src": "contracts/Staking.sol:25"
            },
            {
              "label": "totalStaked",
              "offset": 0,
              "slot": "10",
              "type": "t_uint256",
              "contract": "Staking",
              "src": "contracts/Staking.sol:27"
            },
            {
              "label": "_balances",
              "offset": 0,
              "slot": "11",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "Staking",
              "src": "contracts/Staking.sol:28"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_struct(StakingData)3375_storage)dyn_storage": {
              "label": "struct StakingData[]",
              "numberOfBytes": "32"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_struct(StakingData)3375_storage": {
              "label": "struct StakingData",
              "members": [
                {
                  "label": "block",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "staked",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "1"
                }
              ],
              "numberOfBytes": "64"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.21"
      }
    },
    {
      "contracts/RichHusky.sol:Checker": {
        "src": "contracts/RichHusky.sol:520",
        "version": {
          "withMetadata": "17e1cf10fdffcda321c1a1f59d2b06178394724b4d8ad9b035a718122fed8a52",
          "withoutMetadata": "0faf6ca500781d04501ba7e4cf9138e35957321419c6ca29798480c22b3cc5cd",
          "linkedWithoutMetadata": "0faf6ca500781d04501ba7e4cf9138e35957321419c6ca29798480c22b3cc5cd"
        },
        "inherit": [],
        "libraries": [],
        "methods": [
          "isValid(address,address,address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.21"
      },
      "contracts/RichHusky.sol:Context": {
        "src": "contracts/RichHusky.sol:27",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.21"
      },
      "contracts/RichHusky.sol:ERC20": {
        "src": "contracts/RichHusky.sol:162",
        "version": {
          "withMetadata": "e092e43bc9c3243b7138ce015fa92d358fa66a764079145cfe1339f160fd055e",
          "withoutMetadata": "e248eda4094a79267c1d78eb85fb3a082e2ba4d153192b2644d6357dbed158f3",
          "linkedWithoutMetadata": "e248eda4094a79267c1d78eb85fb3a082e2ba4d153192b2644d6357dbed158f3"
        },
        "inherit": [
          "contracts/RichHusky.sol:IERC20Metadata",
          "contracts/RichHusky.sol:IERC20",
          "contracts/RichHusky.sol:Context"
        ],
        "libraries": [],
        "methods": [
          "(string,string)",
          "name()",
          "symbol()",
          "decimals()",
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)",
          "increaseAllowance(address,uint256)",
          "decreaseAllowance(address,uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ERC20",
            "src": "contracts/RichHusky.sol:181"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_balances",
              "offset": 0,
              "slot": "0",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC20",
              "src": "contracts/RichHusky.sol:163"
            },
            {
              "label": "_allowances",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "ERC20",
              "src": "contracts/RichHusky.sol:165"
            },
            {
              "label": "_totalSupply",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "ERC20",
              "src": "contracts/RichHusky.sol:167"
            },
            {
              "label": "_name",
              "offset": 0,
              "slot": "3",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "contracts/RichHusky.sol:169"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "4",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "contracts/RichHusky.sol:170"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.21"
      },
      "contracts/RichHusky.sol:IERC20": {
        "src": "contracts/RichHusky.sol:40",
        "inherit": [],
        "libraries": [],
        "methods": [
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.21"
      },
      "contracts/RichHusky.sol:IERC20Metadata": {
        "src": "contracts/RichHusky.sol:120",
        "inherit": [
          "contracts/RichHusky.sol:IERC20"
        ],
        "libraries": [],
        "methods": [
          "name()",
          "symbol()",
          "decimals()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.21"
      },
      "contracts/RichHusky.sol:IFactory": {
        "src": "contracts/RichHusky.sol:535",
        "inherit": [],
        "libraries": [],
        "methods": [
          "createPair(address,address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.21"
      },
      "contracts/RichHusky.sol:IGasToken": {
        "src": "contracts/RichHusky.sol:539",
        "inherit": [],
        "libraries": [],
        "methods": [
          "free(uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.21"
      },
      "contracts/RichHusky.sol:RichHusky": {
        "src": "contracts/RichHusky.sol:543",
        "version": {
          "withMetadata": "ce802161ba5ffecece3a7488fb3a07a35d8f78edf3674187d3eb27cc30777604",
          "withoutMetadata": "7c4ce62a347a52dc2685dbb41f6d968bb51e7d6abb10665abf0c7d7699da0d36",
          "linkedWithoutMetadata": "7c4ce62a347a52dc2685dbb41f6d968bb51e7d6abb10665abf0c7d7699da0d36"
        },
        "inherit": [
          "contracts/RichHusky.sol:ERC20",
          "contracts/RichHusky.sol:IERC20Metadata",
          "contracts/RichHusky.sol:IERC20",
          "contracts/RichHusky.sol:Context"
        ],
        "libraries": [
          "contracts/RichHusky.sol:Checker"
        ],
        "methods": [
          "(address)",
          "mint(address,uint256)",
          "updateAirdropAmount(uint256)",
          "withdrawFee(address,uint256)",
          "airdrop(address[],uint256)",
          "addBetaUsers(address[])",
          "removeBetaUsers(address[])",
          "multiCall(address[],bytes[])"
        ],
        "linkReferences": [
          {
            "src": "contracts/RichHusky.sol",
            "name": "Checker",
            "length": 20,
            "start": 5176,
            "placeholder": "__$1cb883ae52507a2d00adae80c79f632cb4$__"
          }
        ],
        "errors": [
          {
            "kind": "constructor",
            "contract": "RichHusky",
            "src": "contracts/RichHusky.sol:554"
          },
          {
            "kind": "state-variable-immutable",
            "name": "pancakeFactory",
            "src": "contracts/RichHusky.sol:549"
          },
          {
            "kind": "state-variable-immutable",
            "name": "WBNB",
            "src": "contracts/RichHusky.sol:550"
          },
          {
            "kind": "state-variable-immutable",
            "name": "GasToken",
            "src": "contracts/RichHusky.sol:552"
          },
          {
            "kind": "external-library-linking",
            "name": "Checker",
            "src": "contracts/RichHusky.sol"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_balances",
              "offset": 0,
              "slot": "0",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC20",
              "src": "contracts/RichHusky.sol:163"
            },
            {
              "label": "_allowances",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "ERC20",
              "src": "contracts/RichHusky.sol:165"
            },
            {
              "label": "_totalSupply",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "ERC20",
              "src": "contracts/RichHusky.sol:167"
            },
            {
              "label": "_name",
              "offset": 0,
              "slot": "3",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "contracts/RichHusky.sol:169"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "4",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "contracts/RichHusky.sol:170"
            },
            {
              "label": "dev",
              "offset": 0,
              "slot": "5",
              "type": "t_address",
              "contract": "RichHusky",
              "src": "contracts/RichHusky.sol:544"
            },
            {
              "label": "airdropAmount",
              "offset": 0,
              "slot": "6",
              "type": "t_uint256",
              "contract": "RichHusky",
              "src": "contracts/RichHusky.sol:545"
            },
            {
              "label": "betaUsers",
              "offset": 0,
              "slot": "7",
              "type": "t_mapping(t_address,t_bool)",
              "contract": "RichHusky",
              "src": "contracts/RichHusky.sol:546"
            },
            {
              "label": "pair",
              "offset": 0,
              "slot": "8",
              "type": "t_address",
              "contract": "RichHusky",
              "src": "contracts/RichHusky.sol:547"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.21"
      }
    },
    {
      "contracts/FirstDao.sol:FistDao": {
        "src": "contracts/FirstDao.sol:127",
        "version": {
          "withMetadata": "87594bf7d015e41aaf777bc0dc62e9e8a3685546fcfa065eb87291ef7f3f16f4",
          "withoutMetadata": "5bdb2538a3ba33172d93851875dfca20475ce01973348f896430788ab9d8314a",
          "linkedWithoutMetadata": "5bdb2538a3ba33172d93851875dfca20475ce01973348f896430788ab9d8314a"
        },
        "inherit": [
          "contracts/FirstDao.sol:Ownable",
          "contracts/FirstDao.sol:IERC20"
        ],
        "libraries": [
          "contracts/FirstDao.sol:SafeMath"
        ],
        "methods": [
          "(string,string)",
          "()",
          "initialize(address,address,address,address)",
          "transferEvent(address,address,uint256)",
          "feeState()",
          "getIsApproved(address)",
          "searchExcludedFromFeeAccounts(address)",
          "getDefaultBalance()",
          "insertIntoExcludedFromFeeAccounts(address[])",
          "deleteFromExcludedFromFeeAccounts(address[])",
          "claim(address,uint256)",
          "name()",
          "symbol()",
          "decimals()",
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "transferFrom(address,address,uint256)",
          "approve(address,uint256)",
          "allowance(address,address)",
          "increaseAllowance(address,uint256)",
          "decreaseAllowance(address,uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "FistDao",
            "src": "contracts/FirstDao.sol:159"
          },
          {
            "kind": "state-variable-assignment",
            "name": "_decimals",
            "src": "contracts/FirstDao.sol:132"
          },
          {
            "kind": "state-variable-assignment",
            "name": "_totalSupply",
            "src": "contracts/FirstDao.sol:133"
          },
          {
            "kind": "state-variable-assignment",
            "name": "_feeTax",
            "src": "contracts/FirstDao.sol:138"
          },
          {
            "kind": "state-variable-assignment",
            "name": "_feeMining",
            "src": "contracts/FirstDao.sol:139"
          },
          {
            "kind": "state-variable-assignment",
            "name": "_feeLiquidity",
            "src": "contracts/FirstDao.sol:140"
          },
          {
            "kind": "state-variable-assignment",
            "name": "_feeDivisor",
            "src": "contracts/FirstDao.sol:141"
          },
          {
            "kind": "state-variable-assignment",
            "name": "_removeAllFee",
            "src": "contracts/FirstDao.sol:143"
          },
          {
            "kind": "state-variable-assignment",
            "name": "_defaultBalance",
            "src": "contracts/FirstDao.sol:150"
          },
          {
            "kind": "state-variable-assignment",
            "name": "_defaultAmount",
            "src": "contracts/FirstDao.sol:151"
          },
          {
            "kind": "state-variable-assignment",
            "name": "_initialized111",
            "src": "contracts/FirstDao.sol:156"
          },
          {
            "kind": "state-variable-assignment",
            "name": "_reentry",
            "src": "contracts/FirstDao.sol:157"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Ownable",
              "src": "contracts/FirstDao.sol:58"
            },
            {
              "label": "_previousOwner",
              "offset": 0,
              "slot": "1",
              "type": "t_address",
              "contract": "Ownable",
              "src": "contracts/FirstDao.sol:59"
            },
            {
              "label": "_switchDate",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "Ownable",
              "src": "contracts/FirstDao.sol:60"
            },
            {
              "label": "_name",
              "offset": 0,
              "slot": "3",
              "type": "t_string_storage",
              "contract": "FistDao",
              "src": "contracts/FirstDao.sol:130"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "4",
              "type": "t_string_storage",
              "contract": "FistDao",
              "src": "contracts/FirstDao.sol:131"
            },
            {
              "label": "_decimals",
              "offset": 0,
              "slot": "5",
              "type": "t_uint8",
              "contract": "FistDao",
              "src": "contracts/FirstDao.sol:132"
            },
            {
              "label": "_totalSupply",
              "offset": 0,
              "slot": "6",
              "type": "t_uint256",
              "contract": "FistDao",
              "src": "contracts/FirstDao.sol:133"
            },
            {
              "label": "_balances",
              "offset": 0,
              "slot": "7",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "FistDao",
              "src": "contracts/FirstDao.sol:134"
            },
            {
              "label": "_allowances",
              "offset": 0,
              "slot": "8",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "FistDao",
              "src": "contracts/FirstDao.sol:135"
            },
            {
              "label": "_isApproved",
              "offset": 0,
              "slot": "9",
              "type": "t_mapping(t_address,t_bool)",
              "contract": "FistDao",
              "src": "contracts/FirstDao.sol:136"
            },
            {
              "label": "_feeTax",
              "offset": 0,
              "slot": "10",
              "type": "t_uint256",
              "contract": "FistDao",
              "src": "contracts/FirstDao.sol:138"
            },
            {
              "label": "_feeMining",
              "offset": 0,
              "slot": "11",
              "type": "t_uint256",
              "contract": "FistDao",
              "src": "contracts/FirstDao.sol:139"
            },
            {
              "label": "_feeLiquidity",
              "offset": 0,
              "slot": "12",
              "type": "t_uint256",
              "contract": "FistDao",
              "src": "contracts/FirstDao.sol:140"
            },
            {
              "label": "_feeDivisor",
              "offset": 0,
              "slot": "13",
              "type": "t_uint256",
              "contract": "FistDao",
              "src": "contracts/FirstDao.sol:141"
            },
            {
              "label": "_removeAllFee",
              "offset": 0,
              "slot": "14",
              "type": "t_bool",
              "contract": "FistDao",
              "src": "contracts/FirstDao.sol:143"
            },
            {
              "label": "_core",
              "offset": 1,
              "slot": "14",
              "type": "t_address",
              "contract": "FistDao",
              "src": "contracts/FirstDao.sol:145"
            },
            {
              "label": "_taxReceiver",
              "offset": 0,
              "slot": "15",
              "type": "t_address",
              "contract": "FistDao",
              "src": "contracts/FirstDao.sol:146"
            },
            {
              "label": "_miningPool",
              "offset": 0,
              "slot": "16",
              "type": "t_address",
              "contract": "FistDao",
              "src": "contracts/FirstDao.sol:147"
            },
            {
              "label": "_liquidityPool",
              "offset": 0,
              "slot": "17",
              "type": "t_address",
              "contract": "FistDao",
              "src": "contracts/FirstDao.sol:148"
            },
            {
              "label": "_defaultBalance",
              "offset": 0,
              "slot": "18",
              "type": "t_uint256",
              "contract": "FistDao",
              "src": "contracts/FirstDao.sol:150"
            },
            {
              "label": "_defaultAmount",
              "offset": 0,
              "slot": "19",
              "type": "t_uint256",
              "contract": "FistDao",
              "src": "contracts/FirstDao.sol:151"
            },
            {
              "label": "_isExcludedFromFee",
              "offset": 0,
              "slot": "20",
              "type": "t_mapping(t_address,t_bool)",
              "contract": "FistDao",
              "src": "contracts/FirstDao.sol:153"
            },
            {
              "label": "_excludedFromFeeAccounts",
              "offset": 0,
              "slot": "21",
              "type": "t_array(t_address)dyn_storage",
              "contract": "FistDao",
              "src": "contracts/FirstDao.sol:154"
            },
            {
              "label": "_initialized111",
              "offset": 0,
              "slot": "22",
              "type": "t_bool",
              "contract": "FistDao",
              "src": "contracts/FirstDao.sol:156"
            },
            {
              "label": "_reentry",
              "offset": 0,
              "slot": "23",
              "type": "t_uint256",
              "contract": "FistDao",
              "src": "contracts/FirstDao.sol:157"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_address)dyn_storage": {
              "label": "address[]",
              "numberOfBytes": "32"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint8": {
              "label": "uint8",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.21"
      },
      "contracts/FirstDao.sol:ICore": {
        "src": "contracts/FirstDao.sol:119",
        "inherit": [],
        "libraries": [],
        "methods": [
          "getPairAddress()",
          "airdrop()",
          "safety(address,address)",
          "start()",
          "end()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.21"
      },
      "contracts/FirstDao.sol:IERC20": {
        "src": "contracts/FirstDao.sol:8",
        "inherit": [],
        "libraries": [],
        "methods": [
          "name()",
          "symbol()",
          "decimals()",
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "transferFrom(address,address,uint256)",
          "approve(address,uint256)",
          "allowance(address,address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.21"
      },
      "contracts/FirstDao.sol:IFactory": {
        "src": "contracts/FirstDao.sol:91",
        "inherit": [],
        "libraries": [],
        "methods": [
          "createPair(address,address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.21"
      },
      "contracts/FirstDao.sol:IRouter01": {
        "src": "contracts/FirstDao.sol:95",
        "inherit": [],
        "libraries": [],
        "methods": [
          "factory()",
          "addLiquidity(address,address,uint256,uint256,uint256,uint256,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.21"
      },
      "contracts/FirstDao.sol:IRouter02": {
        "src": "contracts/FirstDao.sol:109",
        "inherit": [
          "contracts/FirstDao.sol:IRouter01"
        ],
        "libraries": [],
        "methods": [
          "swapExactTokensForTokensSupportingFeeOnTransferTokens(uint256,uint256,address[],address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.21"
      },
      "contracts/FirstDao.sol:Ownable": {
        "src": "contracts/FirstDao.sol:57",
        "inherit": [],
        "libraries": [],
        "methods": [
          "owner()",
          "switchDate()",
          "transferOwnership(uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Ownable",
            "src": "contracts/FirstDao.sol:63"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Ownable",
              "src": "contracts/FirstDao.sol:58"
            },
            {
              "label": "_previousOwner",
              "offset": 0,
              "slot": "1",
              "type": "t_address",
              "contract": "Ownable",
              "src": "contracts/FirstDao.sol:59"
            },
            {
              "label": "_switchDate",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "Ownable",
              "src": "contracts/FirstDao.sol:60"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.21"
      },
      "contracts/FirstDao.sol:SafeMath": {
        "src": "contracts/FirstDao.sol:22",
        "version": {
          "withMetadata": "95eb3df1bd62a62b1bf87150f7314053125cc709ed6eb26f9bf2a30d8fc55e32",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.21"
      }
    },
    {
      "contracts/IFiles.sol:Address": {
        "src": "contracts/IFiles.sol:147",
        "version": {
          "withMetadata": "73f3d745b82ff92d492794f39ddc131795315255895e196d918dc1260c813488",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.21"
      },
      "contracts/IFiles.sol:Context": {
        "src": "contracts/IFiles.sol:135",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.21"
      },
      "contracts/IFiles.sol:IBEP20": {
        "src": "contracts/IFiles.sol:9",
        "inherit": [],
        "libraries": [],
        "methods": [
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.21"
      },
      "contracts/IFiles.sol:IPancakeFactory": {
        "src": "contracts/IFiles.sol:327",
        "inherit": [],
        "libraries": [],
        "methods": [
          "feeTo()",
          "feeToSetter()",
          "getPair(address,address)",
          "allPairs(uint256)",
          "allPairsLength()",
          "createPair(address,address)",
          "setFeeTo(address)",
          "setFeeToSetter(address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.21"
      },
      "contracts/IFiles.sol:IPancakePair": {
        "src": "contracts/IFiles.sol:357",
        "inherit": [],
        "libraries": [],
        "methods": [
          "name()",
          "symbol()",
          "decimals()",
          "totalSupply()",
          "balanceOf(address)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transfer(address,uint256)",
          "transferFrom(address,address,uint256)",
          "DOMAIN_SEPARATOR()",
          "PERMIT_TYPEHASH()",
          "nonces(address)",
          "permit(address,address,uint256,uint256,uint8,bytes32,bytes32)",
          "MINIMUM_LIQUIDITY()",
          "factory()",
          "token0()",
          "token1()",
          "getReserves()",
          "price0CumulativeLast()",
          "price1CumulativeLast()",
          "kLast()",
          "mint(address)",
          "burn(address)",
          "swap(uint256,uint256,address,bytes)",
          "skim(address)",
          "sync()",
          "initialize(address,address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.21"
      },
      "contracts/IFiles.sol:IPancakeRouter01": {
        "src": "contracts/IFiles.sol:466",
        "inherit": [],
        "libraries": [],
        "methods": [
          "factory()",
          "WETH()",
          "addLiquidity(address,address,uint256,uint256,uint256,uint256,address,uint256)",
          "addLiquidityETH(address,uint256,uint256,uint256,address,uint256)",
          "removeLiquidity(address,address,uint256,uint256,uint256,address,uint256)",
          "removeLiquidityETH(address,uint256,uint256,uint256,address,uint256)",
          "removeLiquidityWithPermit(address,address,uint256,uint256,uint256,address,uint256,bool,uint8,bytes32,bytes32)",
          "removeLiquidityETHWithPermit(address,uint256,uint256,uint256,address,uint256,bool,uint8,bytes32,bytes32)",
          "swapExactTokensForTokens(uint256,uint256,address[],address,uint256)",
          "swapTokensForExactTokens(uint256,uint256,address[],address,uint256)",
          "swapExactETHForTokens(uint256,address[],address,uint256)",
          "swapTokensForExactETH(uint256,uint256,address[],address,uint256)",
          "swapExactTokensForETH(uint256,uint256,address[],address,uint256)",
          "swapETHForExactTokens(uint256,address[],address,uint256)",
          "quote(uint256,uint256,uint256)",
          "getAmountOut(uint256,uint256,uint256)",
          "getAmountIn(uint256,uint256,uint256)",
          "getAmountsOut(uint256,address[])",
          "getAmountsIn(uint256,address[])"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.21"
      },
      "contracts/IFiles.sol:IPancakeRouter02": {
        "src": "contracts/IFiles.sol:626",
        "inherit": [
          "contracts/IFiles.sol:IPancakeRouter01"
        ],
        "libraries": [],
        "methods": [
          "removeLiquidityETHSupportingFeeOnTransferTokens(address,uint256,uint256,uint256,address,uint256)",
          "removeLiquidityETHWithPermitSupportingFeeOnTransferTokens(address,uint256,uint256,uint256,address,uint256,bool,uint8,bytes32,bytes32)",
          "swapExactTokensForTokensSupportingFeeOnTransferTokens(uint256,uint256,address[],address,uint256)",
          "swapExactETHForTokensSupportingFeeOnTransferTokens(uint256,address[],address,uint256)",
          "swapExactTokensForETHSupportingFeeOnTransferTokens(uint256,uint256,address[],address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.21"
      },
      "contracts/IFiles.sol:IWBNB": {
        "src": "contracts/IFiles.sol:38",
        "inherit": [],
        "libraries": [],
        "methods": [
          "name()",
          "symbol()",
          "decimals()",
          "balanceOf(address)",
          "allowance(address,address)",
          "()",
          "deposit()",
          "withdraw(uint256)",
          "totalSupply()",
          "approve(address,uint256)",
          "transfer(address,uint256)",
          "transferFrom(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.21"
      },
      "contracts/IFiles.sol:Initializable": {
        "src": "contracts/IFiles.sol:249",
        "version": {
          "withMetadata": "ba793f874980ba8826e0f77e588821b7a373c942b97ebcd7e4e42f378e00e824",
          "withoutMetadata": "ac0db523ddc3e330f735df7b3b0b24460531c71290a891170e840f8f67d5ff6b",
          "linkedWithoutMetadata": "ac0db523ddc3e330f735df7b3b0b24460531c71290a891170e840f8f67d5ff6b"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "contracts/IFiles.sol:251"
            },
            {
              "label": "initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "contracts/IFiles.sol:252"
            },
            {
              "label": "______gap",
              "offset": 0,
              "slot": "1",
              "type": "t_array(t_uint256)50_storage",
              "contract": "Initializable",
              "src": "contracts/IFiles.sol:283"
            }
          ],
          "types": {
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]",
              "numberOfBytes": "1600"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.21"
      },
      "contracts/IFiles.sol:Ownable": {
        "src": "contracts/IFiles.sol:286",
        "version": {
          "withMetadata": "9b6e83ec071c913ea8078938bf6c8e47f6ce697f181f2ebf31dc4937807eb386",
          "withoutMetadata": "a3dd09084d5d3377afaa5e637593b425fb1172db63a48c2f62428555638775f8",
          "linkedWithoutMetadata": "a3dd09084d5d3377afaa5e637593b425fb1172db63a48c2f62428555638775f8"
        },
        "inherit": [
          "contracts/IFiles.sol:Initializable",
          "contracts/IFiles.sol:Context"
        ],
        "libraries": [],
        "methods": [
          "()",
          "initOwner(address)",
          "owner()",
          "renounceOwnership()",
          "transferOwnership(address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "contracts/IFiles.sol:251"
            },
            {
              "label": "initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "contracts/IFiles.sol:252"
            },
            {
              "label": "______gap",
              "offset": 0,
              "slot": "1",
              "type": "t_array(t_uint256)50_storage",
              "contract": "Initializable",
              "src": "contracts/IFiles.sol:283"
            },
            {
              "label": "_owner",
              "offset": 0,
              "slot": "51",
              "type": "t_address",
              "contract": "Ownable",
              "src": "contracts/IFiles.sol:287"
            },
            {
              "label": "_previousOwner",
              "offset": 0,
              "slot": "52",
              "type": "t_address",
              "contract": "Ownable",
              "src": "contracts/IFiles.sol:288"
            },
            {
              "label": "_lockTime",
              "offset": 0,
              "slot": "53",
              "type": "t_uint256",
              "contract": "Ownable",
              "src": "contracts/IFiles.sol:289"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]",
              "numberOfBytes": "1600"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.21"
      },
      "contracts/IFiles.sol:SafeMath": {
        "src": "contracts/IFiles.sol:68",
        "version": {
          "withMetadata": "6a5db877229c78c84b33e85a297bea1121c6a6195aa310f30cbe69888293c5ae",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.21"
      },
      "contracts/ReentrancyGuard.sol:ReentrancyGuard": {
        "src": "contracts/ReentrancyGuard.sol:5",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ReentrancyGuard",
            "src": "contracts/ReentrancyGuard.sol:12"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_status",
              "offset": 0,
              "slot": "0",
              "type": "t_uint256",
              "contract": "ReentrancyGuard",
              "src": "contracts/ReentrancyGuard.sol:10"
            }
          ],
          "types": {
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.21"
      },
      "contracts/Utils.sol:PancakeLibrary": {
        "src": "contracts/Utils.sol:219",
        "version": {
          "withMetadata": "668337a75717822cd6d73bbd1c50526e84e4af10cd45125b1756676395a2f30c",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [
          "contracts/IFiles.sol:SafeMath"
        ],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.21"
      },
      "contracts/Utils.sol:Utils": {
        "src": "contracts/Utils.sol:6",
        "version": {
          "withMetadata": "a5775bd7ff330a5dfa7ddaef645bcc8fbccdcd3c38fbc9fc1755e3e3a9a09d47",
          "withoutMetadata": "8ca6da6b824cadf2e1f9c600b5f1381080c8b8d75dddf5423f35e25222daaeda",
          "linkedWithoutMetadata": "8ca6da6b824cadf2e1f9c600b5f1381080c8b8d75dddf5423f35e25222daaeda"
        },
        "inherit": [],
        "libraries": [
          "contracts/IFiles.sol:SafeMath"
        ],
        "methods": [
          "calculateBNBReward(uint256,uint256,uint256,uint256)",
          "calculateTopUpClaim(uint256,uint256,uint256,uint256)",
          "swapTokensForEth(address,uint256)",
          "swapETHForTokens(address,address,uint256)",
          "swapTokensForTokens(address,address,uint256)",
          "getAmountsout(uint256,address)",
          "addLiquidity(address,address,uint256,uint256)",
          "getAntiFlipTaxNo(uint256)",
          "calcReward(uint256,uint256,uint256,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.21"
      }
    },
    {
      "contracts/Proxy.sol:Caller": {
        "src": "contracts/Proxy.sol:80",
        "version": {
          "withMetadata": "8a43f4805f6ec5dd7b7379a87ef3fa89b1f2cd8e86292442058e51e90f40e31d",
          "withoutMetadata": "d6211a178c252503f87d41bbcceffa66551bde0c0c4b0cc3c5a44a4f489e2c7f",
          "linkedWithoutMetadata": "d6211a178c252503f87d41bbcceffa66551bde0c0c4b0cc3c5a44a4f489e2c7f"
        },
        "inherit": [],
        "libraries": [],
        "methods": [
          "(address)",
          "increase()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Caller",
            "src": "contracts/Proxy.sol:80"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "proxy",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Caller",
              "src": "contracts/Proxy.sol:80"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.21"
      },
      "contracts/Proxy.sol:Proxy": {
        "src": "contracts/Proxy.sol:10",
        "version": {
          "withMetadata": "3a655b5f054f4310d279144652e269b840bf308c06f48e08f2d407ee1381c2c1",
          "withoutMetadata": "bc7fcd1c64d2f798926ae830c3e369a33c770ea294cd9047d184a8c885a96818",
          "linkedWithoutMetadata": "bc7fcd1c64d2f798926ae830c3e369a33c770ea294cd9047d184a8c885a96818"
        },
        "inherit": [],
        "libraries": [],
        "methods": [
          "(address)",
          "()",
          "()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Proxy",
            "src": "contracts/Proxy.sol:22"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "implementation",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Proxy",
              "src": "contracts/Proxy.sol:13"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.21"
      }
    },
    {
      "contracts/Logic.sol:Logic": {
        "src": "contracts/Logic.sol:9",
        "version": {
          "withMetadata": "087c86b163578853fb1cba09b22843df8f815c95bf2568200ddd8e1dbf167fea",
          "withoutMetadata": "a9feffbc7087e9529577fb0b368171b85b94d25918f43b5d410eb0f186274034",
          "linkedWithoutMetadata": "a9feffbc7087e9529577fb0b368171b85b94d25918f43b5d410eb0f186274034"
        },
        "inherit": [],
        "libraries": [],
        "methods": [
          "increment()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "state-variable-assignment",
            "name": "x",
            "src": "contracts/Logic.sol:13"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "implementation",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Logic",
              "src": "contracts/Logic.sol:9"
            },
            {
              "label": "x",
              "offset": 0,
              "slot": "1",
              "type": "t_uint256",
              "contract": "Logic",
              "src": "contracts/Logic.sol:13"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.21"
      }
    },
    {
      "contracts/Logic.sol:Logic": {
        "src": "contracts/Logic.sol:9",
        "version": {
          "withMetadata": "087c86b163578853fb1cba09b22843df8f815c95bf2568200ddd8e1dbf167fea",
          "withoutMetadata": "a9feffbc7087e9529577fb0b368171b85b94d25918f43b5d410eb0f186274034",
          "linkedWithoutMetadata": "a9feffbc7087e9529577fb0b368171b85b94d25918f43b5d410eb0f186274034"
        },
        "inherit": [],
        "libraries": [],
        "methods": [
          "increment()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "state-variable-assignment",
            "name": "x",
            "src": "contracts/Logic.sol:13"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "implementation",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Logic",
              "src": "contracts/Logic.sol:9"
            },
            {
              "label": "x",
              "offset": 0,
              "slot": "1",
              "type": "t_uint256",
              "contract": "Logic",
              "src": "contracts/Logic.sol:13"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.21"
      }
    },
    {
      "contracts/Logic.sol:Logic": {
        "src": "contracts/Logic.sol:9",
        "version": {
          "withMetadata": "087c86b163578853fb1cba09b22843df8f815c95bf2568200ddd8e1dbf167fea",
          "withoutMetadata": "a9feffbc7087e9529577fb0b368171b85b94d25918f43b5d410eb0f186274034",
          "linkedWithoutMetadata": "a9feffbc7087e9529577fb0b368171b85b94d25918f43b5d410eb0f186274034"
        },
        "inherit": [],
        "libraries": [],
        "methods": [
          "increment()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "state-variable-assignment",
            "name": "x",
            "src": "contracts/Logic.sol:13"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "implementation",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Logic",
              "src": "contracts/Logic.sol:9"
            },
            {
              "label": "x",
              "offset": 0,
              "slot": "1",
              "type": "t_uint256",
              "contract": "Logic",
              "src": "contracts/Logic.sol:13"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.21"
      }
    },
    {
      "@openzeppelin/contracts/access/Ownable.sol:Ownable": {
        "src": "@openzeppelin/contracts/access/Ownable.sol:20",
        "inherit": [
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [],
        "methods": [
          "owner()",
          "renounceOwnership()",
          "transferOwnership(address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Ownable",
            "src": "@openzeppelin/contracts/access/Ownable.sol:28"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Ownable",
              "src": "@openzeppelin/contracts/access/Ownable.sol:21"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.21"
      },
      "@openzeppelin/contracts/security/ReentrancyGuard.sol:ReentrancyGuard": {
        "src": "@openzeppelin/contracts/security/ReentrancyGuard.sol:22",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ReentrancyGuard",
            "src": "@openzeppelin/contracts/security/ReentrancyGuard.sol:39"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_status",
              "offset": 0,
              "slot": "0",
              "type": "t_uint256",
              "contract": "ReentrancyGuard",
              "src": "@openzeppelin/contracts/security/ReentrancyGuard.sol:37"
            }
          ],
          "types": {
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.21"
      },
      "@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20": {
        "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:35",
        "version": {
          "withMetadata": "b653be9ad258ddaafa2304767243ba86eac7156acd9bf1a196bee0fef9b1c3a9",
          "withoutMetadata": "1d55e2dc08aae4fa5bd2ca8ac476f7a2e63bdfa7b0b51d4bd61db8705143a140",
          "linkedWithoutMetadata": "1d55e2dc08aae4fa5bd2ca8ac476f7a2e63bdfa7b0b51d4bd61db8705143a140"
        },
        "inherit": [
          "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol:IERC20Metadata",
          "@openzeppelin/contracts/token/ERC20/IERC20.sol:IERC20",
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [],
        "methods": [
          "(string,string)",
          "name()",
          "symbol()",
          "decimals()",
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)",
          "increaseAllowance(address,uint256)",
          "decreaseAllowance(address,uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ERC20",
            "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:54"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_balances",
              "offset": 0,
              "slot": "0",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:36"
            },
            {
              "label": "_allowances",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:38"
            },
            {
              "label": "_totalSupply",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:40"
            },
            {
              "label": "_name",
              "offset": 0,
              "slot": "3",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:42"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "4",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:43"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.21"
      },
      "@openzeppelin/contracts/token/ERC20/IERC20.sol:IERC20": {
        "src": "@openzeppelin/contracts/token/ERC20/IERC20.sol:9",
        "inherit": [],
        "libraries": [],
        "methods": [
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.21"
      },
      "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol:IERC20Metadata": {
        "src": "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol:13",
        "inherit": [
          "@openzeppelin/contracts/token/ERC20/IERC20.sol:IERC20"
        ],
        "libraries": [],
        "methods": [
          "name()",
          "symbol()",
          "decimals()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.21"
      },
      "@openzeppelin/contracts/token/ERC20/extensions/draft-IERC20Permit.sol:IERC20Permit": {
        "src": "@openzeppelin/contracts/token/ERC20/extensions/draft-IERC20Permit.sol:14",
        "inherit": [],
        "libraries": [],
        "methods": [
          "permit(address,address,uint256,uint256,uint8,bytes32,bytes32)",
          "nonces(address)",
          "DOMAIN_SEPARATOR()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.21"
      },
      "@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol:SafeERC20": {
        "src": "@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol:19",
        "version": {
          "withMetadata": "945db44b71722f915e3e7352ee22f854dfe8000e69eee742d881b64279bb0ad8",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [
          "@openzeppelin/contracts/utils/Address.sol:Address"
        ],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.21"
      },
      "@openzeppelin/contracts/utils/Address.sol:Address": {
        "src": "@openzeppelin/contracts/utils/Address.sol:9",
        "version": {
          "withMetadata": "9401bbf4dc0decc4c739a060967031a16e8de389388d98c32ec11cff440d6513",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [
          {
            "kind": "delegatecall",
            "src": "@openzeppelin/contracts/utils/Address.sol:191"
          },
          {
            "kind": "delegatecall",
            "src": "@openzeppelin/contracts/utils/Address.sol:191"
          }
        ],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.21"
      },
      "@openzeppelin/contracts/utils/Context.sol:Context": {
        "src": "@openzeppelin/contracts/utils/Context.sol:16",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.21"
      },
      "@openzeppelin/contracts/utils/math/Math.sol:Math": {
        "src": "@openzeppelin/contracts/utils/math/Math.sol:9",
        "version": {
          "withMetadata": "f58f3d1d6b53395057afc8a5e1edcbfcd81cdec0dfcf6b1290c8c2368b975278",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.21"
      },
      "@openzeppelin/contracts/utils/math/SafeMath.sol:SafeMath": {
        "src": "@openzeppelin/contracts/utils/math/SafeMath.sol:16",
        "version": {
          "withMetadata": "4167346fe154a63f59e72262dbca9ccb097c97b61ec5dfe163259378386d2ba4",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.21"
      },
      "contracts/Presale.sol:IGoldToken": {
        "src": "contracts/Presale.sol:8",
        "inherit": [],
        "libraries": [],
        "methods": [
          "mint(address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.21"
      },
      "contracts/Presale.sol:Presale": {
        "src": "contracts/Presale.sol:12",
        "version": {
          "withMetadata": "55de4f41aa2ae4e88c3e975f7f7c871c8630a6a915f505e8b168c82d5665ef13",
          "withoutMetadata": "2fa5a3bfe1ae715a2695aad2a1fdda65dd5f2dfe346a8af0822d82b296b7bc1b",
          "linkedWithoutMetadata": "2fa5a3bfe1ae715a2695aad2a1fdda65dd5f2dfe346a8af0822d82b296b7bc1b"
        },
        "inherit": [
          "@openzeppelin/contracts/security/ReentrancyGuard.sol:ReentrancyGuard",
          "@openzeppelin/contracts/access/Ownable.sol:Ownable",
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [],
        "methods": [
          "(address,address,address,uint256)",
          "createPreSale((uint256,uint256,uint256))",
          "sale()",
          "getCanIdoAmount(address)",
          "bindReffer(address)",
          "userBalance(address)",
          "userRewardBalance(address)",
          "userWithdraw()",
          "teamWithdraw(address)",
          "setUserWithdrawTime(uint256)",
          "setInviteMin(uint256)",
          "setPerMaxBuyUsdt(uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Presale",
            "src": "contracts/Presale.sol:46"
          },
          {
            "kind": "state-variable-assignment",
            "name": "perMaxBuyUsdt",
            "src": "contracts/Presale.sol:15"
          },
          {
            "kind": "state-variable-assignment",
            "name": "inviteMin",
            "src": "contracts/Presale.sol:31"
          },
          {
            "kind": "state-variable-assignment",
            "name": "maxSale",
            "src": "contracts/Presale.sol:33"
          },
          {
            "kind": "state-variable-assignment",
            "name": "rewardLevel",
            "src": "contracts/Presale.sol:36"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Ownable",
              "src": "@openzeppelin/contracts/access/Ownable.sol:21"
            },
            {
              "label": "_status",
              "offset": 0,
              "slot": "1",
              "type": "t_uint256",
              "contract": "ReentrancyGuard",
              "src": "@openzeppelin/contracts/security/ReentrancyGuard.sol:37"
            },
            {
              "label": "userWithdrawTime",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "Presale",
              "src": "contracts/Presale.sol:13"
            },
            {
              "label": "perMaxBuyUsdt",
              "offset": 0,
              "slot": "3",
              "type": "t_uint256",
              "contract": "Presale",
              "src": "contracts/Presale.sol:15"
            },
            {
              "label": "teamAddress",
              "offset": 0,
              "slot": "4",
              "type": "t_address",
              "contract": "Presale",
              "src": "contracts/Presale.sol:16"
            },
            {
              "label": "saleToken",
              "offset": 0,
              "slot": "5",
              "type": "t_address",
              "contract": "Presale",
              "src": "contracts/Presale.sol:17"
            },
            {
              "label": "usdtToken",
              "offset": 0,
              "slot": "6",
              "type": "t_address",
              "contract": "Presale",
              "src": "contracts/Presale.sol:18"
            },
            {
              "label": "goldTokenAddress",
              "offset": 0,
              "slot": "7",
              "type": "t_address",
              "contract": "Presale",
              "src": "contracts/Presale.sol:19"
            },
            {
              "label": "balances",
              "offset": 0,
              "slot": "8",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "Presale",
              "src": "contracts/Presale.sol:20"
            },
            {
              "label": "userBuyTotalUsdt",
              "offset": 0,
              "slot": "9",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "Presale",
              "src": "contracts/Presale.sol:21"
            },
            {
              "label": "rewardBalances",
              "offset": 0,
              "slot": "10",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "Presale",
              "src": "contracts/Presale.sol:22"
            },
            {
              "label": "reffers",
              "offset": 0,
              "slot": "11",
              "type": "t_mapping(t_address,t_address)",
              "contract": "Presale",
              "src": "contracts/Presale.sol:23"
            },
            {
              "label": "refferNumber",
              "offset": 0,
              "slot": "12",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "Presale",
              "src": "contracts/Presale.sol:24"
            },
            {
              "label": "teamRefferNumber",
              "offset": 0,
              "slot": "13",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "Presale",
              "src": "contracts/Presale.sol:25"
            },
            {
              "label": "firstIdo",
              "offset": 0,
              "slot": "14",
              "type": "t_mapping(t_address,t_bool)",
              "contract": "Presale",
              "src": "contracts/Presale.sol:26"
            },
            {
              "label": "totalIdoUSDT",
              "offset": 0,
              "slot": "15",
              "type": "t_uint256",
              "contract": "Presale",
              "src": "contracts/Presale.sol:27"
            },
            {
              "label": "totalIdoUser",
              "offset": 0,
              "slot": "16",
              "type": "t_uint256",
              "contract": "Presale",
              "src": "contracts/Presale.sol:28"
            },
            {
              "label": "totalSale",
              "offset": 0,
              "slot": "17",
              "type": "t_uint256",
              "contract": "Presale",
              "src": "contracts/Presale.sol:29"
            },
            {
              "label": "inviteMin",
              "offset": 0,
              "slot": "18",
              "type": "t_uint256",
              "contract": "Presale",
              "src": "contracts/Presale.sol:31"
            },
            {
              "label": "maxSale",
              "offset": 0,
              "slot": "19",
              "type": "t_uint256",
              "contract": "Presale",
              "src": "contracts/Presale.sol:33"
            },
            {
              "label": "isCloseSale",
              "offset": 0,
              "slot": "20",
              "type": "t_bool",
              "contract": "Presale",
              "src": "contracts/Presale.sol:34"
            },
            {
              "label": "rewardLevel",
              "offset": 0,
              "slot": "21",
              "type": "t_array(t_uint256)dyn_storage",
              "contract": "Presale",
              "src": "contracts/Presale.sol:36"
            },
            {
              "label": "presaleInfo",
              "offset": 0,
              "slot": "22",
              "type": "t_struct(PresaleInfo)2392_storage",
              "contract": "Presale",
              "src": "contracts/Presale.sol:44"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_uint256)dyn_storage": {
              "label": "uint256[]",
              "numberOfBytes": "32"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_mapping(t_address,t_address)": {
              "label": "mapping(address => address)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_struct(PresaleInfo)2392_storage": {
              "label": "struct Presale.PresaleInfo",
              "members": [
                {
                  "label": "startTime",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "endTime",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "price",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "2"
                }
              ],
              "numberOfBytes": "96"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.21"
      },
      "contracts/Staking.sol:IRejuvenate": {
        "src": "contracts/Staking.sol:9",
        "inherit": [],
        "libraries": [],
        "methods": [
          "mint(address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.21"
      },
      "contracts/Staking.sol:Staking": {
        "src": "contracts/Staking.sol:13",
        "version": {
          "withMetadata": "d4a43fbe5f8d6347383f0680dba0a94146fceda61d8f28fb0ed926fda6eca5bc",
          "withoutMetadata": "8e35a11dc4a30aced1c096dd5db7f6424d19b292b732012b8d44d054f9cea466",
          "linkedWithoutMetadata": "8e35a11dc4a30aced1c096dd5db7f6424d19b292b732012b8d44d054f9cea466"
        },
        "inherit": [
          "@openzeppelin/contracts/security/ReentrancyGuard.sol:ReentrancyGuard",
          "@openzeppelin/contracts/access/Ownable.sol:Ownable",
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [],
        "methods": [
          "()",
          "changeRewardsPerBlock(uint256)",
          "rewardPerToken()",
          "earned(address)",
          "stake(uint256)",
          "unstake(uint256)",
          "claimRewards()",
          "pause()",
          "unpause()",
          "inCaseTokensGetStuck(address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Staking",
            "src": "contracts/Staking.sol:33"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Ownable",
              "src": "@openzeppelin/contracts/access/Ownable.sol:21"
            },
            {
              "label": "_status",
              "offset": 0,
              "slot": "1",
              "type": "t_uint256",
              "contract": "ReentrancyGuard",
              "src": "@openzeppelin/contracts/security/ReentrancyGuard.sol:37"
            },
            {
              "label": "paused",
              "offset": 0,
              "slot": "2",
              "type": "t_bool",
              "contract": "Staking",
              "src": "contracts/Staking.sol:14"
            },
            {
              "label": "_treasury",
              "offset": 1,
              "slot": "2",
              "type": "t_address",
              "contract": "Staking",
              "src": "contracts/Staking.sol:15"
            },
            {
              "label": "token",
              "offset": 0,
              "slot": "3",
              "type": "t_address",
              "contract": "Staking",
              "src": "contracts/Staking.sol:17"
            },
            {
              "label": "rewardRate",
              "offset": 0,
              "slot": "4",
              "type": "t_uint256",
              "contract": "Staking",
              "src": "contracts/Staking.sol:19"
            },
            {
              "label": "_lastUpdateBlock",
              "offset": 0,
              "slot": "5",
              "type": "t_uint256",
              "contract": "Staking",
              "src": "contracts/Staking.sol:20"
            },
            {
              "label": "_rewardsPerToken",
              "offset": 0,
              "slot": "6",
              "type": "t_uint256",
              "contract": "Staking",
              "src": "contracts/Staking.sol:21"
            },
            {
              "label": "data",
              "offset": 0,
              "slot": "7",
              "type": "t_array(t_struct(StakingData)3375_storage)dyn_storage",
              "contract": "Staking",
              "src": "contracts/Staking.sol:22"
            },
            {
              "label": "_userRewardsPerToken",
              "offset": 0,
              "slot": "8",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "Staking",
              "src": "contracts/Staking.sol:24"
            },
            {
              "label": "_rewards",
              "offset": 0,
              "slot": "9",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "Staking",
              "src": "contracts/Staking.sol:25"
            },
            {
              "label": "totalStaked",
              "offset": 0,
              "slot": "10",
              "type": "t_uint256",
              "contract": "Staking",
              "src": "contracts/Staking.sol:27"
            },
            {
              "label": "_balances",
              "offset": 0,
              "slot": "11",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "Staking",
              "src": "contracts/Staking.sol:28"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_struct(StakingData)3375_storage)dyn_storage": {
              "label": "struct StakingData[]",
              "numberOfBytes": "32"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_struct(StakingData)3375_storage": {
              "label": "struct StakingData",
              "members": [
                {
                  "label": "block",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "staked",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "1"
                }
              ],
              "numberOfBytes": "64"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.21"
      }
    },
    {
      "contracts/RichHusky.sol:Checker": {
        "src": "contracts/RichHusky.sol:520",
        "version": {
          "withMetadata": "17e1cf10fdffcda321c1a1f59d2b06178394724b4d8ad9b035a718122fed8a52",
          "withoutMetadata": "0faf6ca500781d04501ba7e4cf9138e35957321419c6ca29798480c22b3cc5cd",
          "linkedWithoutMetadata": "0faf6ca500781d04501ba7e4cf9138e35957321419c6ca29798480c22b3cc5cd"
        },
        "inherit": [],
        "libraries": [],
        "methods": [
          "isValid(address,address,address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.21"
      },
      "contracts/RichHusky.sol:Context": {
        "src": "contracts/RichHusky.sol:27",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.21"
      },
      "contracts/RichHusky.sol:ERC20": {
        "src": "contracts/RichHusky.sol:162",
        "version": {
          "withMetadata": "e092e43bc9c3243b7138ce015fa92d358fa66a764079145cfe1339f160fd055e",
          "withoutMetadata": "e248eda4094a79267c1d78eb85fb3a082e2ba4d153192b2644d6357dbed158f3",
          "linkedWithoutMetadata": "e248eda4094a79267c1d78eb85fb3a082e2ba4d153192b2644d6357dbed158f3"
        },
        "inherit": [
          "contracts/RichHusky.sol:IERC20Metadata",
          "contracts/RichHusky.sol:IERC20",
          "contracts/RichHusky.sol:Context"
        ],
        "libraries": [],
        "methods": [
          "(string,string)",
          "name()",
          "symbol()",
          "decimals()",
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)",
          "increaseAllowance(address,uint256)",
          "decreaseAllowance(address,uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ERC20",
            "src": "contracts/RichHusky.sol:181"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_balances",
              "offset": 0,
              "slot": "0",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC20",
              "src": "contracts/RichHusky.sol:163"
            },
            {
              "label": "_allowances",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "ERC20",
              "src": "contracts/RichHusky.sol:165"
            },
            {
              "label": "_totalSupply",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "ERC20",
              "src": "contracts/RichHusky.sol:167"
            },
            {
              "label": "_name",
              "offset": 0,
              "slot": "3",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "contracts/RichHusky.sol:169"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "4",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "contracts/RichHusky.sol:170"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.21"
      },
      "contracts/RichHusky.sol:IERC20": {
        "src": "contracts/RichHusky.sol:40",
        "inherit": [],
        "libraries": [],
        "methods": [
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.21"
      },
      "contracts/RichHusky.sol:IERC20Metadata": {
        "src": "contracts/RichHusky.sol:120",
        "inherit": [
          "contracts/RichHusky.sol:IERC20"
        ],
        "libraries": [],
        "methods": [
          "name()",
          "symbol()",
          "decimals()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.21"
      },
      "contracts/RichHusky.sol:IFactory": {
        "src": "contracts/RichHusky.sol:535",
        "inherit": [],
        "libraries": [],
        "methods": [
          "createPair(address,address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.21"
      },
      "contracts/RichHusky.sol:IGasToken": {
        "src": "contracts/RichHusky.sol:539",
        "inherit": [],
        "libraries": [],
        "methods": [
          "free(uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.21"
      },
      "contracts/RichHusky.sol:RichHusky": {
        "src": "contracts/RichHusky.sol:543",
        "version": {
          "withMetadata": "ce802161ba5ffecece3a7488fb3a07a35d8f78edf3674187d3eb27cc30777604",
          "withoutMetadata": "7c4ce62a347a52dc2685dbb41f6d968bb51e7d6abb10665abf0c7d7699da0d36",
          "linkedWithoutMetadata": "7c4ce62a347a52dc2685dbb41f6d968bb51e7d6abb10665abf0c7d7699da0d36"
        },
        "inherit": [
          "contracts/RichHusky.sol:ERC20",
          "contracts/RichHusky.sol:IERC20Metadata",
          "contracts/RichHusky.sol:IERC20",
          "contracts/RichHusky.sol:Context"
        ],
        "libraries": [
          "contracts/RichHusky.sol:Checker"
        ],
        "methods": [
          "(address)",
          "mint(address,uint256)",
          "updateAirdropAmount(uint256)",
          "withdrawFee(address,uint256)",
          "airdrop(address[],uint256)",
          "addBetaUsers(address[])",
          "removeBetaUsers(address[])",
          "multiCall(address[],bytes[])"
        ],
        "linkReferences": [
          {
            "src": "contracts/RichHusky.sol",
            "name": "Checker",
            "length": 20,
            "start": 5176,
            "placeholder": "__$1cb883ae52507a2d00adae80c79f632cb4$__"
          }
        ],
        "errors": [
          {
            "kind": "constructor",
            "contract": "RichHusky",
            "src": "contracts/RichHusky.sol:554"
          },
          {
            "kind": "state-variable-immutable",
            "name": "pancakeFactory",
            "src": "contracts/RichHusky.sol:549"
          },
          {
            "kind": "state-variable-immutable",
            "name": "WBNB",
            "src": "contracts/RichHusky.sol:550"
          },
          {
            "kind": "state-variable-immutable",
            "name": "GasToken",
            "src": "contracts/RichHusky.sol:552"
          },
          {
            "kind": "external-library-linking",
            "name": "Checker",
            "src": "contracts/RichHusky.sol"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_balances",
              "offset": 0,
              "slot": "0",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC20",
              "src": "contracts/RichHusky.sol:163"
            },
            {
              "label": "_allowances",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "ERC20",
              "src": "contracts/RichHusky.sol:165"
            },
            {
              "label": "_totalSupply",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "ERC20",
              "src": "contracts/RichHusky.sol:167"
            },
            {
              "label": "_name",
              "offset": 0,
              "slot": "3",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "contracts/RichHusky.sol:169"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "4",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "contracts/RichHusky.sol:170"
            },
            {
              "label": "dev",
              "offset": 0,
              "slot": "5",
              "type": "t_address",
              "contract": "RichHusky",
              "src": "contracts/RichHusky.sol:544"
            },
            {
              "label": "airdropAmount",
              "offset": 0,
              "slot": "6",
              "type": "t_uint256",
              "contract": "RichHusky",
              "src": "contracts/RichHusky.sol:545"
            },
            {
              "label": "betaUsers",
              "offset": 0,
              "slot": "7",
              "type": "t_mapping(t_address,t_bool)",
              "contract": "RichHusky",
              "src": "contracts/RichHusky.sol:546"
            },
            {
              "label": "pair",
              "offset": 0,
              "slot": "8",
              "type": "t_address",
              "contract": "RichHusky",
              "src": "contracts/RichHusky.sol:547"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.21"
      }
    },
    {
      "contracts/FirstDao.sol:FistDao": {
        "src": "contracts/FirstDao.sol:127",
        "version": {
          "withMetadata": "87594bf7d015e41aaf777bc0dc62e9e8a3685546fcfa065eb87291ef7f3f16f4",
          "withoutMetadata": "5bdb2538a3ba33172d93851875dfca20475ce01973348f896430788ab9d8314a",
          "linkedWithoutMetadata": "5bdb2538a3ba33172d93851875dfca20475ce01973348f896430788ab9d8314a"
        },
        "inherit": [
          "contracts/FirstDao.sol:Ownable",
          "contracts/FirstDao.sol:IERC20"
        ],
        "libraries": [
          "contracts/FirstDao.sol:SafeMath"
        ],
        "methods": [
          "(string,string)",
          "()",
          "initialize(address,address,address,address)",
          "transferEvent(address,address,uint256)",
          "feeState()",
          "getIsApproved(address)",
          "searchExcludedFromFeeAccounts(address)",
          "getDefaultBalance()",
          "insertIntoExcludedFromFeeAccounts(address[])",
          "deleteFromExcludedFromFeeAccounts(address[])",
          "claim(address,uint256)",
          "name()",
          "symbol()",
          "decimals()",
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "transferFrom(address,address,uint256)",
          "approve(address,uint256)",
          "allowance(address,address)",
          "increaseAllowance(address,uint256)",
          "decreaseAllowance(address,uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "FistDao",
            "src": "contracts/FirstDao.sol:159"
          },
          {
            "kind": "state-variable-assignment",
            "name": "_decimals",
            "src": "contracts/FirstDao.sol:132"
          },
          {
            "kind": "state-variable-assignment",
            "name": "_totalSupply",
            "src": "contracts/FirstDao.sol:133"
          },
          {
            "kind": "state-variable-assignment",
            "name": "_feeTax",
            "src": "contracts/FirstDao.sol:138"
          },
          {
            "kind": "state-variable-assignment",
            "name": "_feeMining",
            "src": "contracts/FirstDao.sol:139"
          },
          {
            "kind": "state-variable-assignment",
            "name": "_feeLiquidity",
            "src": "contracts/FirstDao.sol:140"
          },
          {
            "kind": "state-variable-assignment",
            "name": "_feeDivisor",
            "src": "contracts/FirstDao.sol:141"
          },
          {
            "kind": "state-variable-assignment",
            "name": "_removeAllFee",
            "src": "contracts/FirstDao.sol:143"
          },
          {
            "kind": "state-variable-assignment",
            "name": "_defaultBalance",
            "src": "contracts/FirstDao.sol:150"
          },
          {
            "kind": "state-variable-assignment",
            "name": "_defaultAmount",
            "src": "contracts/FirstDao.sol:151"
          },
          {
            "kind": "state-variable-assignment",
            "name": "_initialized111",
            "src": "contracts/FirstDao.sol:156"
          },
          {
            "kind": "state-variable-assignment",
            "name": "_reentry",
            "src": "contracts/FirstDao.sol:157"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Ownable",
              "src": "contracts/FirstDao.sol:58"
            },
            {
              "label": "_previousOwner",
              "offset": 0,
              "slot": "1",
              "type": "t_address",
              "contract": "Ownable",
              "src": "contracts/FirstDao.sol:59"
            },
            {
              "label": "_switchDate",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "Ownable",
              "src": "contracts/FirstDao.sol:60"
            },
            {
              "label": "_name",
              "offset": 0,
              "slot": "3",
              "type": "t_string_storage",
              "contract": "FistDao",
              "src": "contracts/FirstDao.sol:130"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "4",
              "type": "t_string_storage",
              "contract": "FistDao",
              "src": "contracts/FirstDao.sol:131"
            },
            {
              "label": "_decimals",
              "offset": 0,
              "slot": "5",
              "type": "t_uint8",
              "contract": "FistDao",
              "src": "contracts/FirstDao.sol:132"
            },
            {
              "label": "_totalSupply",
              "offset": 0,
              "slot": "6",
              "type": "t_uint256",
              "contract": "FistDao",
              "src": "contracts/FirstDao.sol:133"
            },
            {
              "label": "_balances",
              "offset": 0,
              "slot": "7",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "FistDao",
              "src": "contracts/FirstDao.sol:134"
            },
            {
              "label": "_allowances",
              "offset": 0,
              "slot": "8",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "FistDao",
              "src": "contracts/FirstDao.sol:135"
            },
            {
              "label": "_isApproved",
              "offset": 0,
              "slot": "9",
              "type": "t_mapping(t_address,t_bool)",
              "contract": "FistDao",
              "src": "contracts/FirstDao.sol:136"
            },
            {
              "label": "_feeTax",
              "offset": 0,
              "slot": "10",
              "type": "t_uint256",
              "contract": "FistDao",
              "src": "contracts/FirstDao.sol:138"
            },
            {
              "label": "_feeMining",
              "offset": 0,
              "slot": "11",
              "type": "t_uint256",
              "contract": "FistDao",
              "src": "contracts/FirstDao.sol:139"
            },
            {
              "label": "_feeLiquidity",
              "offset": 0,
              "slot": "12",
              "type": "t_uint256",
              "contract": "FistDao",
              "src": "contracts/FirstDao.sol:140"
            },
            {
              "label": "_feeDivisor",
              "offset": 0,
              "slot": "13",
              "type": "t_uint256",
              "contract": "FistDao",
              "src": "contracts/FirstDao.sol:141"
            },
            {
              "label": "_removeAllFee",
              "offset": 0,
              "slot": "14",
              "type": "t_bool",
              "contract": "FistDao",
              "src": "contracts/FirstDao.sol:143"
            },
            {
              "label": "_core",
              "offset": 1,
              "slot": "14",
              "type": "t_address",
              "contract": "FistDao",
              "src": "contracts/FirstDao.sol:145"
            },
            {
              "label": "_taxReceiver",
              "offset": 0,
              "slot": "15",
              "type": "t_address",
              "contract": "FistDao",
              "src": "contracts/FirstDao.sol:146"
            },
            {
              "label": "_miningPool",
              "offset": 0,
              "slot": "16",
              "type": "t_address",
              "contract": "FistDao",
              "src": "contracts/FirstDao.sol:147"
            },
            {
              "label": "_liquidityPool",
              "offset": 0,
              "slot": "17",
              "type": "t_address",
              "contract": "FistDao",
              "src": "contracts/FirstDao.sol:148"
            },
            {
              "label": "_defaultBalance",
              "offset": 0,
              "slot": "18",
              "type": "t_uint256",
              "contract": "FistDao",
              "src": "contracts/FirstDao.sol:150"
            },
            {
              "label": "_defaultAmount",
              "offset": 0,
              "slot": "19",
              "type": "t_uint256",
              "contract": "FistDao",
              "src": "contracts/FirstDao.sol:151"
            },
            {
              "label": "_isExcludedFromFee",
              "offset": 0,
              "slot": "20",
              "type": "t_mapping(t_address,t_bool)",
              "contract": "FistDao",
              "src": "contracts/FirstDao.sol:153"
            },
            {
              "label": "_excludedFromFeeAccounts",
              "offset": 0,
              "slot": "21",
              "type": "t_array(t_address)dyn_storage",
              "contract": "FistDao",
              "src": "contracts/FirstDao.sol:154"
            },
            {
              "label": "_initialized111",
              "offset": 0,
              "slot": "22",
              "type": "t_bool",
              "contract": "FistDao",
              "src": "contracts/FirstDao.sol:156"
            },
            {
              "label": "_reentry",
              "offset": 0,
              "slot": "23",
              "type": "t_uint256",
              "contract": "FistDao",
              "src": "contracts/FirstDao.sol:157"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_address)dyn_storage": {
              "label": "address[]",
              "numberOfBytes": "32"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint8": {
              "label": "uint8",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.21"
      },
      "contracts/FirstDao.sol:ICore": {
        "src": "contracts/FirstDao.sol:119",
        "inherit": [],
        "libraries": [],
        "methods": [
          "getPairAddress()",
          "airdrop()",
          "safety(address,address)",
          "start()",
          "end()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.21"
      },
      "contracts/FirstDao.sol:IERC20": {
        "src": "contracts/FirstDao.sol:8",
        "inherit": [],
        "libraries": [],
        "methods": [
          "name()",
          "symbol()",
          "decimals()",
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "transferFrom(address,address,uint256)",
          "approve(address,uint256)",
          "allowance(address,address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.21"
      },
      "contracts/FirstDao.sol:IFactory": {
        "src": "contracts/FirstDao.sol:91",
        "inherit": [],
        "libraries": [],
        "methods": [
          "createPair(address,address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.21"
      },
      "contracts/FirstDao.sol:IRouter01": {
        "src": "contracts/FirstDao.sol:95",
        "inherit": [],
        "libraries": [],
        "methods": [
          "factory()",
          "addLiquidity(address,address,uint256,uint256,uint256,uint256,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.21"
      },
      "contracts/FirstDao.sol:IRouter02": {
        "src": "contracts/FirstDao.sol:109",
        "inherit": [
          "contracts/FirstDao.sol:IRouter01"
        ],
        "libraries": [],
        "methods": [
          "swapExactTokensForTokensSupportingFeeOnTransferTokens(uint256,uint256,address[],address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.21"
      },
      "contracts/FirstDao.sol:Ownable": {
        "src": "contracts/FirstDao.sol:57",
        "inherit": [],
        "libraries": [],
        "methods": [
          "owner()",
          "switchDate()",
          "transferOwnership(uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Ownable",
            "src": "contracts/FirstDao.sol:63"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Ownable",
              "src": "contracts/FirstDao.sol:58"
            },
            {
              "label": "_previousOwner",
              "offset": 0,
              "slot": "1",
              "type": "t_address",
              "contract": "Ownable",
              "src": "contracts/FirstDao.sol:59"
            },
            {
              "label": "_switchDate",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "Ownable",
              "src": "contracts/FirstDao.sol:60"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.21"
      },
      "contracts/FirstDao.sol:SafeMath": {
        "src": "contracts/FirstDao.sol:22",
        "version": {
          "withMetadata": "95eb3df1bd62a62b1bf87150f7314053125cc709ed6eb26f9bf2a30d8fc55e32",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.21"
      }
    },
    {
      "contracts/IFiles.sol:Address": {
        "src": "contracts/IFiles.sol:147",
        "version": {
          "withMetadata": "73f3d745b82ff92d492794f39ddc131795315255895e196d918dc1260c813488",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.21"
      },
      "contracts/IFiles.sol:Context": {
        "src": "contracts/IFiles.sol:135",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.21"
      },
      "contracts/IFiles.sol:IBEP20": {
        "src": "contracts/IFiles.sol:9",
        "inherit": [],
        "libraries": [],
        "methods": [
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.21"
      },
      "contracts/IFiles.sol:IPancakeFactory": {
        "src": "contracts/IFiles.sol:327",
        "inherit": [],
        "libraries": [],
        "methods": [
          "feeTo()",
          "feeToSetter()",
          "getPair(address,address)",
          "allPairs(uint256)",
          "allPairsLength()",
          "createPair(address,address)",
          "setFeeTo(address)",
          "setFeeToSetter(address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.21"
      },
      "contracts/IFiles.sol:IPancakePair": {
        "src": "contracts/IFiles.sol:357",
        "inherit": [],
        "libraries": [],
        "methods": [
          "name()",
          "symbol()",
          "decimals()",
          "totalSupply()",
          "balanceOf(address)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transfer(address,uint256)",
          "transferFrom(address,address,uint256)",
          "DOMAIN_SEPARATOR()",
          "PERMIT_TYPEHASH()",
          "nonces(address)",
          "permit(address,address,uint256,uint256,uint8,bytes32,bytes32)",
          "MINIMUM_LIQUIDITY()",
          "factory()",
          "token0()",
          "token1()",
          "getReserves()",
          "price0CumulativeLast()",
          "price1CumulativeLast()",
          "kLast()",
          "mint(address)",
          "burn(address)",
          "swap(uint256,uint256,address,bytes)",
          "skim(address)",
          "sync()",
          "initialize(address,address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.21"
      },
      "contracts/IFiles.sol:IPancakeRouter01": {
        "src": "contracts/IFiles.sol:466",
        "inherit": [],
        "libraries": [],
        "methods": [
          "factory()",
          "WETH()",
          "addLiquidity(address,address,uint256,uint256,uint256,uint256,address,uint256)",
          "addLiquidityETH(address,uint256,uint256,uint256,address,uint256)",
          "removeLiquidity(address,address,uint256,uint256,uint256,address,uint256)",
          "removeLiquidityETH(address,uint256,uint256,uint256,address,uint256)",
          "removeLiquidityWithPermit(address,address,uint256,uint256,uint256,address,uint256,bool,uint8,bytes32,bytes32)",
          "removeLiquidityETHWithPermit(address,uint256,uint256,uint256,address,uint256,bool,uint8,bytes32,bytes32)",
          "swapExactTokensForTokens(uint256,uint256,address[],address,uint256)",
          "swapTokensForExactTokens(uint256,uint256,address[],address,uint256)",
          "swapExactETHForTokens(uint256,address[],address,uint256)",
          "swapTokensForExactETH(uint256,uint256,address[],address,uint256)",
          "swapExactTokensForETH(uint256,uint256,address[],address,uint256)",
          "swapETHForExactTokens(uint256,address[],address,uint256)",
          "quote(uint256,uint256,uint256)",
          "getAmountOut(uint256,uint256,uint256)",
          "getAmountIn(uint256,uint256,uint256)",
          "getAmountsOut(uint256,address[])",
          "getAmountsIn(uint256,address[])"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.21"
      },
      "contracts/IFiles.sol:IPancakeRouter02": {
        "src": "contracts/IFiles.sol:626",
        "inherit": [
          "contracts/IFiles.sol:IPancakeRouter01"
        ],
        "libraries": [],
        "methods": [
          "removeLiquidityETHSupportingFeeOnTransferTokens(address,uint256,uint256,uint256,address,uint256)",
          "removeLiquidityETHWithPermitSupportingFeeOnTransferTokens(address,uint256,uint256,uint256,address,uint256,bool,uint8,bytes32,bytes32)",
          "swapExactTokensForTokensSupportingFeeOnTransferTokens(uint256,uint256,address[],address,uint256)",
          "swapExactETHForTokensSupportingFeeOnTransferTokens(uint256,address[],address,uint256)",
          "swapExactTokensForETHSupportingFeeOnTransferTokens(uint256,uint256,address[],address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.21"
      },
      "contracts/IFiles.sol:IWBNB": {
        "src": "contracts/IFiles.sol:38",
        "inherit": [],
        "libraries": [],
        "methods": [
          "name()",
          "symbol()",
          "decimals()",
          "balanceOf(address)",
          "allowance(address,address)",
          "()",
          "deposit()",
          "withdraw(uint256)",
          "totalSupply()",
          "approve(address,uint256)",
          "transfer(address,uint256)",
          "transferFrom(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.21"
      },
      "contracts/IFiles.sol:Initializable": {
        "src": "contracts/IFiles.sol:249",
        "version": {
          "withMetadata": "ba793f874980ba8826e0f77e588821b7a373c942b97ebcd7e4e42f378e00e824",
          "withoutMetadata": "ac0db523ddc3e330f735df7b3b0b24460531c71290a891170e840f8f67d5ff6b",
          "linkedWithoutMetadata": "ac0db523ddc3e330f735df7b3b0b24460531c71290a891170e840f8f67d5ff6b"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "contracts/IFiles.sol:251"
            },
            {
              "label": "initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "contracts/IFiles.sol:252"
            },
            {
              "label": "______gap",
              "offset": 0,
              "slot": "1",
              "type": "t_array(t_uint256)50_storage",
              "contract": "Initializable",
              "src": "contracts/IFiles.sol:283"
            }
          ],
          "types": {
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]",
              "numberOfBytes": "1600"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.21"
      },
      "contracts/IFiles.sol:Ownable": {
        "src": "contracts/IFiles.sol:286",
        "version": {
          "withMetadata": "9b6e83ec071c913ea8078938bf6c8e47f6ce697f181f2ebf31dc4937807eb386",
          "withoutMetadata": "a3dd09084d5d3377afaa5e637593b425fb1172db63a48c2f62428555638775f8",
          "linkedWithoutMetadata": "a3dd09084d5d3377afaa5e637593b425fb1172db63a48c2f62428555638775f8"
        },
        "inherit": [
          "contracts/IFiles.sol:Initializable",
          "contracts/IFiles.sol:Context"
        ],
        "libraries": [],
        "methods": [
          "()",
          "initOwner(address)",
          "owner()",
          "renounceOwnership()",
          "transferOwnership(address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "contracts/IFiles.sol:251"
            },
            {
              "label": "initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "contracts/IFiles.sol:252"
            },
            {
              "label": "______gap",
              "offset": 0,
              "slot": "1",
              "type": "t_array(t_uint256)50_storage",
              "contract": "Initializable",
              "src": "contracts/IFiles.sol:283"
            },
            {
              "label": "_owner",
              "offset": 0,
              "slot": "51",
              "type": "t_address",
              "contract": "Ownable",
              "src": "contracts/IFiles.sol:287"
            },
            {
              "label": "_previousOwner",
              "offset": 0,
              "slot": "52",
              "type": "t_address",
              "contract": "Ownable",
              "src": "contracts/IFiles.sol:288"
            },
            {
              "label": "_lockTime",
              "offset": 0,
              "slot": "53",
              "type": "t_uint256",
              "contract": "Ownable",
              "src": "contracts/IFiles.sol:289"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]",
              "numberOfBytes": "1600"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.21"
      },
      "contracts/IFiles.sol:SafeMath": {
        "src": "contracts/IFiles.sol:68",
        "version": {
          "withMetadata": "6a5db877229c78c84b33e85a297bea1121c6a6195aa310f30cbe69888293c5ae",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.21"
      },
      "contracts/ReentrancyGuard.sol:ReentrancyGuard": {
        "src": "contracts/ReentrancyGuard.sol:5",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ReentrancyGuard",
            "src": "contracts/ReentrancyGuard.sol:12"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_status",
              "offset": 0,
              "slot": "0",
              "type": "t_uint256",
              "contract": "ReentrancyGuard",
              "src": "contracts/ReentrancyGuard.sol:10"
            }
          ],
          "types": {
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.21"
      },
      "contracts/Utils.sol:PancakeLibrary": {
        "src": "contracts/Utils.sol:219",
        "version": {
          "withMetadata": "668337a75717822cd6d73bbd1c50526e84e4af10cd45125b1756676395a2f30c",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [
          "contracts/IFiles.sol:SafeMath"
        ],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.21"
      },
      "contracts/Utils.sol:Utils": {
        "src": "contracts/Utils.sol:6",
        "version": {
          "withMetadata": "a5775bd7ff330a5dfa7ddaef645bcc8fbccdcd3c38fbc9fc1755e3e3a9a09d47",
          "withoutMetadata": "8ca6da6b824cadf2e1f9c600b5f1381080c8b8d75dddf5423f35e25222daaeda",
          "linkedWithoutMetadata": "8ca6da6b824cadf2e1f9c600b5f1381080c8b8d75dddf5423f35e25222daaeda"
        },
        "inherit": [],
        "libraries": [
          "contracts/IFiles.sol:SafeMath"
        ],
        "methods": [
          "calculateBNBReward(uint256,uint256,uint256,uint256)",
          "calculateTopUpClaim(uint256,uint256,uint256,uint256)",
          "swapTokensForEth(address,uint256)",
          "swapETHForTokens(address,address,uint256)",
          "swapTokensForTokens(address,address,uint256)",
          "getAmountsout(uint256,address)",
          "addLiquidity(address,address,uint256,uint256)",
          "getAntiFlipTaxNo(uint256)",
          "calcReward(uint256,uint256,uint256,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.21"
      }
    },
    {
      "contracts/Proxy.sol:Caller": {
        "src": "contracts/Proxy.sol:80",
        "version": {
          "withMetadata": "8a43f4805f6ec5dd7b7379a87ef3fa89b1f2cd8e86292442058e51e90f40e31d",
          "withoutMetadata": "d6211a178c252503f87d41bbcceffa66551bde0c0c4b0cc3c5a44a4f489e2c7f",
          "linkedWithoutMetadata": "d6211a178c252503f87d41bbcceffa66551bde0c0c4b0cc3c5a44a4f489e2c7f"
        },
        "inherit": [],
        "libraries": [],
        "methods": [
          "(address)",
          "increase()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Caller",
            "src": "contracts/Proxy.sol:80"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "proxy",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Caller",
              "src": "contracts/Proxy.sol:80"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.21"
      },
      "contracts/Proxy.sol:Proxy": {
        "src": "contracts/Proxy.sol:10",
        "version": {
          "withMetadata": "3a655b5f054f4310d279144652e269b840bf308c06f48e08f2d407ee1381c2c1",
          "withoutMetadata": "bc7fcd1c64d2f798926ae830c3e369a33c770ea294cd9047d184a8c885a96818",
          "linkedWithoutMetadata": "bc7fcd1c64d2f798926ae830c3e369a33c770ea294cd9047d184a8c885a96818"
        },
        "inherit": [],
        "libraries": [],
        "methods": [
          "(address)",
          "()",
          "()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Proxy",
            "src": "contracts/Proxy.sol:22"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "implementation",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Proxy",
              "src": "contracts/Proxy.sol:13"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.21"
      }
    },
    {
      "contracts/Logic.sol:Logic": {
        "src": "contracts/Logic.sol:9",
        "version": {
          "withMetadata": "087c86b163578853fb1cba09b22843df8f815c95bf2568200ddd8e1dbf167fea",
          "withoutMetadata": "a9feffbc7087e9529577fb0b368171b85b94d25918f43b5d410eb0f186274034",
          "linkedWithoutMetadata": "a9feffbc7087e9529577fb0b368171b85b94d25918f43b5d410eb0f186274034"
        },
        "inherit": [],
        "libraries": [],
        "methods": [
          "increment()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "state-variable-assignment",
            "name": "x",
            "src": "contracts/Logic.sol:13"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "implementation",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Logic",
              "src": "contracts/Logic.sol:9"
            },
            {
              "label": "x",
              "offset": 0,
              "slot": "1",
              "type": "t_uint256",
              "contract": "Logic",
              "src": "contracts/Logic.sol:13"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.21"
      }
    },
    {
      "@openzeppelin/contracts/access/Ownable.sol:Ownable": {
        "src": "@openzeppelin/contracts/access/Ownable.sol:20",
        "inherit": [
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [],
        "methods": [
          "owner()",
          "renounceOwnership()",
          "transferOwnership(address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Ownable",
            "src": "@openzeppelin/contracts/access/Ownable.sol:28"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Ownable",
              "src": "@openzeppelin/contracts/access/Ownable.sol:21"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.21"
      },
      "@openzeppelin/contracts/security/ReentrancyGuard.sol:ReentrancyGuard": {
        "src": "@openzeppelin/contracts/security/ReentrancyGuard.sol:22",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ReentrancyGuard",
            "src": "@openzeppelin/contracts/security/ReentrancyGuard.sol:39"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_status",
              "offset": 0,
              "slot": "0",
              "type": "t_uint256",
              "contract": "ReentrancyGuard",
              "src": "@openzeppelin/contracts/security/ReentrancyGuard.sol:37"
            }
          ],
          "types": {
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.21"
      },
      "@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20": {
        "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:35",
        "version": {
          "withMetadata": "b653be9ad258ddaafa2304767243ba86eac7156acd9bf1a196bee0fef9b1c3a9",
          "withoutMetadata": "1d55e2dc08aae4fa5bd2ca8ac476f7a2e63bdfa7b0b51d4bd61db8705143a140",
          "linkedWithoutMetadata": "1d55e2dc08aae4fa5bd2ca8ac476f7a2e63bdfa7b0b51d4bd61db8705143a140"
        },
        "inherit": [
          "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol:IERC20Metadata",
          "@openzeppelin/contracts/token/ERC20/IERC20.sol:IERC20",
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [],
        "methods": [
          "(string,string)",
          "name()",
          "symbol()",
          "decimals()",
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)",
          "increaseAllowance(address,uint256)",
          "decreaseAllowance(address,uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ERC20",
            "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:54"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_balances",
              "offset": 0,
              "slot": "0",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:36"
            },
            {
              "label": "_allowances",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:38"
            },
            {
              "label": "_totalSupply",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:40"
            },
            {
              "label": "_name",
              "offset": 0,
              "slot": "3",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:42"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "4",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:43"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.21"
      },
      "@openzeppelin/contracts/token/ERC20/IERC20.sol:IERC20": {
        "src": "@openzeppelin/contracts/token/ERC20/IERC20.sol:9",
        "inherit": [],
        "libraries": [],
        "methods": [
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.21"
      },
      "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol:IERC20Metadata": {
        "src": "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol:13",
        "inherit": [
          "@openzeppelin/contracts/token/ERC20/IERC20.sol:IERC20"
        ],
        "libraries": [],
        "methods": [
          "name()",
          "symbol()",
          "decimals()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.21"
      },
      "@openzeppelin/contracts/token/ERC20/extensions/draft-IERC20Permit.sol:IERC20Permit": {
        "src": "@openzeppelin/contracts/token/ERC20/extensions/draft-IERC20Permit.sol:14",
        "inherit": [],
        "libraries": [],
        "methods": [
          "permit(address,address,uint256,uint256,uint8,bytes32,bytes32)",
          "nonces(address)",
          "DOMAIN_SEPARATOR()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.21"
      },
      "@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol:SafeERC20": {
        "src": "@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol:19",
        "version": {
          "withMetadata": "945db44b71722f915e3e7352ee22f854dfe8000e69eee742d881b64279bb0ad8",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [
          "@openzeppelin/contracts/utils/Address.sol:Address"
        ],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.21"
      },
      "@openzeppelin/contracts/utils/Address.sol:Address": {
        "src": "@openzeppelin/contracts/utils/Address.sol:9",
        "version": {
          "withMetadata": "9401bbf4dc0decc4c739a060967031a16e8de389388d98c32ec11cff440d6513",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [
          {
            "kind": "delegatecall",
            "src": "@openzeppelin/contracts/utils/Address.sol:191"
          },
          {
            "kind": "delegatecall",
            "src": "@openzeppelin/contracts/utils/Address.sol:191"
          }
        ],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.21"
      },
      "@openzeppelin/contracts/utils/Context.sol:Context": {
        "src": "@openzeppelin/contracts/utils/Context.sol:16",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.21"
      },
      "@openzeppelin/contracts/utils/math/Math.sol:Math": {
        "src": "@openzeppelin/contracts/utils/math/Math.sol:9",
        "version": {
          "withMetadata": "f58f3d1d6b53395057afc8a5e1edcbfcd81cdec0dfcf6b1290c8c2368b975278",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.21"
      },
      "@openzeppelin/contracts/utils/math/SafeMath.sol:SafeMath": {
        "src": "@openzeppelin/contracts/utils/math/SafeMath.sol:16",
        "version": {
          "withMetadata": "4167346fe154a63f59e72262dbca9ccb097c97b61ec5dfe163259378386d2ba4",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.21"
      },
      "contracts/Presale.sol:IGoldToken": {
        "src": "contracts/Presale.sol:8",
        "inherit": [],
        "libraries": [],
        "methods": [
          "mint(address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.21"
      },
      "contracts/Presale.sol:Presale": {
        "src": "contracts/Presale.sol:12",
        "version": {
          "withMetadata": "55de4f41aa2ae4e88c3e975f7f7c871c8630a6a915f505e8b168c82d5665ef13",
          "withoutMetadata": "2fa5a3bfe1ae715a2695aad2a1fdda65dd5f2dfe346a8af0822d82b296b7bc1b",
          "linkedWithoutMetadata": "2fa5a3bfe1ae715a2695aad2a1fdda65dd5f2dfe346a8af0822d82b296b7bc1b"
        },
        "inherit": [
          "@openzeppelin/contracts/security/ReentrancyGuard.sol:ReentrancyGuard",
          "@openzeppelin/contracts/access/Ownable.sol:Ownable",
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [],
        "methods": [
          "(address,address,address,uint256)",
          "createPreSale((uint256,uint256,uint256))",
          "sale()",
          "getCanIdoAmount(address)",
          "bindReffer(address)",
          "userBalance(address)",
          "userRewardBalance(address)",
          "userWithdraw()",
          "teamWithdraw(address)",
          "setUserWithdrawTime(uint256)",
          "setInviteMin(uint256)",
          "setPerMaxBuyUsdt(uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Presale",
            "src": "contracts/Presale.sol:46"
          },
          {
            "kind": "state-variable-assignment",
            "name": "perMaxBuyUsdt",
            "src": "contracts/Presale.sol:15"
          },
          {
            "kind": "state-variable-assignment",
            "name": "inviteMin",
            "src": "contracts/Presale.sol:31"
          },
          {
            "kind": "state-variable-assignment",
            "name": "maxSale",
            "src": "contracts/Presale.sol:33"
          },
          {
            "kind": "state-variable-assignment",
            "name": "rewardLevel",
            "src": "contracts/Presale.sol:36"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Ownable",
              "src": "@openzeppelin/contracts/access/Ownable.sol:21"
            },
            {
              "label": "_status",
              "offset": 0,
              "slot": "1",
              "type": "t_uint256",
              "contract": "ReentrancyGuard",
              "src": "@openzeppelin/contracts/security/ReentrancyGuard.sol:37"
            },
            {
              "label": "userWithdrawTime",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "Presale",
              "src": "contracts/Presale.sol:13"
            },
            {
              "label": "perMaxBuyUsdt",
              "offset": 0,
              "slot": "3",
              "type": "t_uint256",
              "contract": "Presale",
              "src": "contracts/Presale.sol:15"
            },
            {
              "label": "teamAddress",
              "offset": 0,
              "slot": "4",
              "type": "t_address",
              "contract": "Presale",
              "src": "contracts/Presale.sol:16"
            },
            {
              "label": "saleToken",
              "offset": 0,
              "slot": "5",
              "type": "t_address",
              "contract": "Presale",
              "src": "contracts/Presale.sol:17"
            },
            {
              "label": "usdtToken",
              "offset": 0,
              "slot": "6",
              "type": "t_address",
              "contract": "Presale",
              "src": "contracts/Presale.sol:18"
            },
            {
              "label": "goldTokenAddress",
              "offset": 0,
              "slot": "7",
              "type": "t_address",
              "contract": "Presale",
              "src": "contracts/Presale.sol:19"
            },
            {
              "label": "balances",
              "offset": 0,
              "slot": "8",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "Presale",
              "src": "contracts/Presale.sol:20"
            },
            {
              "label": "userBuyTotalUsdt",
              "offset": 0,
              "slot": "9",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "Presale",
              "src": "contracts/Presale.sol:21"
            },
            {
              "label": "rewardBalances",
              "offset": 0,
              "slot": "10",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "Presale",
              "src": "contracts/Presale.sol:22"
            },
            {
              "label": "reffers",
              "offset": 0,
              "slot": "11",
              "type": "t_mapping(t_address,t_address)",
              "contract": "Presale",
              "src": "contracts/Presale.sol:23"
            },
            {
              "label": "refferNumber",
              "offset": 0,
              "slot": "12",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "Presale",
              "src": "contracts/Presale.sol:24"
            },
            {
              "label": "teamRefferNumber",
              "offset": 0,
              "slot": "13",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "Presale",
              "src": "contracts/Presale.sol:25"
            },
            {
              "label": "firstIdo",
              "offset": 0,
              "slot": "14",
              "type": "t_mapping(t_address,t_bool)",
              "contract": "Presale",
              "src": "contracts/Presale.sol:26"
            },
            {
              "label": "totalIdoUSDT",
              "offset": 0,
              "slot": "15",
              "type": "t_uint256",
              "contract": "Presale",
              "src": "contracts/Presale.sol:27"
            },
            {
              "label": "totalIdoUser",
              "offset": 0,
              "slot": "16",
              "type": "t_uint256",
              "contract": "Presale",
              "src": "contracts/Presale.sol:28"
            },
            {
              "label": "totalSale",
              "offset": 0,
              "slot": "17",
              "type": "t_uint256",
              "contract": "Presale",
              "src": "contracts/Presale.sol:29"
            },
            {
              "label": "inviteMin",
              "offset": 0,
              "slot": "18",
              "type": "t_uint256",
              "contract": "Presale",
              "src": "contracts/Presale.sol:31"
            },
            {
              "label": "maxSale",
              "offset": 0,
              "slot": "19",
              "type": "t_uint256",
              "contract": "Presale",
              "src": "contracts/Presale.sol:33"
            },
            {
              "label": "isCloseSale",
              "offset": 0,
              "slot": "20",
              "type": "t_bool",
              "contract": "Presale",
              "src": "contracts/Presale.sol:34"
            },
            {
              "label": "rewardLevel",
              "offset": 0,
              "slot": "21",
              "type": "t_array(t_uint256)dyn_storage",
              "contract": "Presale",
              "src": "contracts/Presale.sol:36"
            },
            {
              "label": "presaleInfo",
              "offset": 0,
              "slot": "22",
              "type": "t_struct(PresaleInfo)2392_storage",
              "contract": "Presale",
              "src": "contracts/Presale.sol:44"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_uint256)dyn_storage": {
              "label": "uint256[]",
              "numberOfBytes": "32"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_mapping(t_address,t_address)": {
              "label": "mapping(address => address)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_struct(PresaleInfo)2392_storage": {
              "label": "struct Presale.PresaleInfo",
              "members": [
                {
                  "label": "startTime",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "endTime",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "price",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "2"
                }
              ],
              "numberOfBytes": "96"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.21"
      },
      "contracts/Staking.sol:IRejuvenate": {
        "src": "contracts/Staking.sol:9",
        "inherit": [],
        "libraries": [],
        "methods": [
          "mint(address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.21"
      },
      "contracts/Staking.sol:Staking": {
        "src": "contracts/Staking.sol:13",
        "version": {
          "withMetadata": "d4a43fbe5f8d6347383f0680dba0a94146fceda61d8f28fb0ed926fda6eca5bc",
          "withoutMetadata": "8e35a11dc4a30aced1c096dd5db7f6424d19b292b732012b8d44d054f9cea466",
          "linkedWithoutMetadata": "8e35a11dc4a30aced1c096dd5db7f6424d19b292b732012b8d44d054f9cea466"
        },
        "inherit": [
          "@openzeppelin/contracts/security/ReentrancyGuard.sol:ReentrancyGuard",
          "@openzeppelin/contracts/access/Ownable.sol:Ownable",
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [],
        "methods": [
          "()",
          "changeRewardsPerBlock(uint256)",
          "rewardPerToken()",
          "earned(address)",
          "stake(uint256)",
          "unstake(uint256)",
          "claimRewards()",
          "pause()",
          "unpause()",
          "inCaseTokensGetStuck(address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Staking",
            "src": "contracts/Staking.sol:33"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Ownable",
              "src": "@openzeppelin/contracts/access/Ownable.sol:21"
            },
            {
              "label": "_status",
              "offset": 0,
              "slot": "1",
              "type": "t_uint256",
              "contract": "ReentrancyGuard",
              "src": "@openzeppelin/contracts/security/ReentrancyGuard.sol:37"
            },
            {
              "label": "paused",
              "offset": 0,
              "slot": "2",
              "type": "t_bool",
              "contract": "Staking",
              "src": "contracts/Staking.sol:14"
            },
            {
              "label": "_treasury",
              "offset": 1,
              "slot": "2",
              "type": "t_address",
              "contract": "Staking",
              "src": "contracts/Staking.sol:15"
            },
            {
              "label": "token",
              "offset": 0,
              "slot": "3",
              "type": "t_address",
              "contract": "Staking",
              "src": "contracts/Staking.sol:17"
            },
            {
              "label": "rewardRate",
              "offset": 0,
              "slot": "4",
              "type": "t_uint256",
              "contract": "Staking",
              "src": "contracts/Staking.sol:19"
            },
            {
              "label": "_lastUpdateBlock",
              "offset": 0,
              "slot": "5",
              "type": "t_uint256",
              "contract": "Staking",
              "src": "contracts/Staking.sol:20"
            },
            {
              "label": "_rewardsPerToken",
              "offset": 0,
              "slot": "6",
              "type": "t_uint256",
              "contract": "Staking",
              "src": "contracts/Staking.sol:21"
            },
            {
              "label": "data",
              "offset": 0,
              "slot": "7",
              "type": "t_array(t_struct(StakingData)3375_storage)dyn_storage",
              "contract": "Staking",
              "src": "contracts/Staking.sol:22"
            },
            {
              "label": "_userRewardsPerToken",
              "offset": 0,
              "slot": "8",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "Staking",
              "src": "contracts/Staking.sol:24"
            },
            {
              "label": "_rewards",
              "offset": 0,
              "slot": "9",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "Staking",
              "src": "contracts/Staking.sol:25"
            },
            {
              "label": "totalStaked",
              "offset": 0,
              "slot": "10",
              "type": "t_uint256",
              "contract": "Staking",
              "src": "contracts/Staking.sol:27"
            },
            {
              "label": "_balances",
              "offset": 0,
              "slot": "11",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "Staking",
              "src": "contracts/Staking.sol:28"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_struct(StakingData)3375_storage)dyn_storage": {
              "label": "struct StakingData[]",
              "numberOfBytes": "32"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_struct(StakingData)3375_storage": {
              "label": "struct StakingData",
              "members": [
                {
                  "label": "block",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "staked",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "1"
                }
              ],
              "numberOfBytes": "64"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.21"
      }
    },
    {
      "contracts/RichHusky.sol:Checker": {
        "src": "contracts/RichHusky.sol:520",
        "version": {
          "withMetadata": "17e1cf10fdffcda321c1a1f59d2b06178394724b4d8ad9b035a718122fed8a52",
          "withoutMetadata": "0faf6ca500781d04501ba7e4cf9138e35957321419c6ca29798480c22b3cc5cd",
          "linkedWithoutMetadata": "0faf6ca500781d04501ba7e4cf9138e35957321419c6ca29798480c22b3cc5cd"
        },
        "inherit": [],
        "libraries": [],
        "methods": [
          "isValid(address,address,address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.21"
      },
      "contracts/RichHusky.sol:Context": {
        "src": "contracts/RichHusky.sol:27",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.21"
      },
      "contracts/RichHusky.sol:ERC20": {
        "src": "contracts/RichHusky.sol:162",
        "version": {
          "withMetadata": "e092e43bc9c3243b7138ce015fa92d358fa66a764079145cfe1339f160fd055e",
          "withoutMetadata": "e248eda4094a79267c1d78eb85fb3a082e2ba4d153192b2644d6357dbed158f3",
          "linkedWithoutMetadata": "e248eda4094a79267c1d78eb85fb3a082e2ba4d153192b2644d6357dbed158f3"
        },
        "inherit": [
          "contracts/RichHusky.sol:IERC20Metadata",
          "contracts/RichHusky.sol:IERC20",
          "contracts/RichHusky.sol:Context"
        ],
        "libraries": [],
        "methods": [
          "(string,string)",
          "name()",
          "symbol()",
          "decimals()",
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)",
          "increaseAllowance(address,uint256)",
          "decreaseAllowance(address,uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ERC20",
            "src": "contracts/RichHusky.sol:181"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_balances",
              "offset": 0,
              "slot": "0",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC20",
              "src": "contracts/RichHusky.sol:163"
            },
            {
              "label": "_allowances",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "ERC20",
              "src": "contracts/RichHusky.sol:165"
            },
            {
              "label": "_totalSupply",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "ERC20",
              "src": "contracts/RichHusky.sol:167"
            },
            {
              "label": "_name",
              "offset": 0,
              "slot": "3",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "contracts/RichHusky.sol:169"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "4",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "contracts/RichHusky.sol:170"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.21"
      },
      "contracts/RichHusky.sol:IERC20": {
        "src": "contracts/RichHusky.sol:40",
        "inherit": [],
        "libraries": [],
        "methods": [
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.21"
      },
      "contracts/RichHusky.sol:IERC20Metadata": {
        "src": "contracts/RichHusky.sol:120",
        "inherit": [
          "contracts/RichHusky.sol:IERC20"
        ],
        "libraries": [],
        "methods": [
          "name()",
          "symbol()",
          "decimals()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.21"
      },
      "contracts/RichHusky.sol:IFactory": {
        "src": "contracts/RichHusky.sol:535",
        "inherit": [],
        "libraries": [],
        "methods": [
          "createPair(address,address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.21"
      },
      "contracts/RichHusky.sol:IGasToken": {
        "src": "contracts/RichHusky.sol:539",
        "inherit": [],
        "libraries": [],
        "methods": [
          "free(uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.21"
      },
      "contracts/RichHusky.sol:RichHusky": {
        "src": "contracts/RichHusky.sol:543",
        "version": {
          "withMetadata": "ce802161ba5ffecece3a7488fb3a07a35d8f78edf3674187d3eb27cc30777604",
          "withoutMetadata": "7c4ce62a347a52dc2685dbb41f6d968bb51e7d6abb10665abf0c7d7699da0d36",
          "linkedWithoutMetadata": "7c4ce62a347a52dc2685dbb41f6d968bb51e7d6abb10665abf0c7d7699da0d36"
        },
        "inherit": [
          "contracts/RichHusky.sol:ERC20",
          "contracts/RichHusky.sol:IERC20Metadata",
          "contracts/RichHusky.sol:IERC20",
          "contracts/RichHusky.sol:Context"
        ],
        "libraries": [
          "contracts/RichHusky.sol:Checker"
        ],
        "methods": [
          "(address)",
          "mint(address,uint256)",
          "updateAirdropAmount(uint256)",
          "withdrawFee(address,uint256)",
          "airdrop(address[],uint256)",
          "addBetaUsers(address[])",
          "removeBetaUsers(address[])",
          "multiCall(address[],bytes[])"
        ],
        "linkReferences": [
          {
            "src": "contracts/RichHusky.sol",
            "name": "Checker",
            "length": 20,
            "start": 5176,
            "placeholder": "__$1cb883ae52507a2d00adae80c79f632cb4$__"
          }
        ],
        "errors": [
          {
            "kind": "constructor",
            "contract": "RichHusky",
            "src": "contracts/RichHusky.sol:554"
          },
          {
            "kind": "state-variable-immutable",
            "name": "pancakeFactory",
            "src": "contracts/RichHusky.sol:549"
          },
          {
            "kind": "state-variable-immutable",
            "name": "WBNB",
            "src": "contracts/RichHusky.sol:550"
          },
          {
            "kind": "state-variable-immutable",
            "name": "GasToken",
            "src": "contracts/RichHusky.sol:552"
          },
          {
            "kind": "external-library-linking",
            "name": "Checker",
            "src": "contracts/RichHusky.sol"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_balances",
              "offset": 0,
              "slot": "0",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC20",
              "src": "contracts/RichHusky.sol:163"
            },
            {
              "label": "_allowances",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "ERC20",
              "src": "contracts/RichHusky.sol:165"
            },
            {
              "label": "_totalSupply",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "ERC20",
              "src": "contracts/RichHusky.sol:167"
            },
            {
              "label": "_name",
              "offset": 0,
              "slot": "3",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "contracts/RichHusky.sol:169"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "4",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "contracts/RichHusky.sol:170"
            },
            {
              "label": "dev",
              "offset": 0,
              "slot": "5",
              "type": "t_address",
              "contract": "RichHusky",
              "src": "contracts/RichHusky.sol:544"
            },
            {
              "label": "airdropAmount",
              "offset": 0,
              "slot": "6",
              "type": "t_uint256",
              "contract": "RichHusky",
              "src": "contracts/RichHusky.sol:545"
            },
            {
              "label": "betaUsers",
              "offset": 0,
              "slot": "7",
              "type": "t_mapping(t_address,t_bool)",
              "contract": "RichHusky",
              "src": "contracts/RichHusky.sol:546"
            },
            {
              "label": "pair",
              "offset": 0,
              "slot": "8",
              "type": "t_address",
              "contract": "RichHusky",
              "src": "contracts/RichHusky.sol:547"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.21"
      }
    },
    {
      "contracts/FirstDao.sol:FistDao": {
        "src": "contracts/FirstDao.sol:127",
        "version": {
          "withMetadata": "87594bf7d015e41aaf777bc0dc62e9e8a3685546fcfa065eb87291ef7f3f16f4",
          "withoutMetadata": "5bdb2538a3ba33172d93851875dfca20475ce01973348f896430788ab9d8314a",
          "linkedWithoutMetadata": "5bdb2538a3ba33172d93851875dfca20475ce01973348f896430788ab9d8314a"
        },
        "inherit": [
          "contracts/FirstDao.sol:Ownable",
          "contracts/FirstDao.sol:IERC20"
        ],
        "libraries": [
          "contracts/FirstDao.sol:SafeMath"
        ],
        "methods": [
          "(string,string)",
          "()",
          "initialize(address,address,address,address)",
          "transferEvent(address,address,uint256)",
          "feeState()",
          "getIsApproved(address)",
          "searchExcludedFromFeeAccounts(address)",
          "getDefaultBalance()",
          "insertIntoExcludedFromFeeAccounts(address[])",
          "deleteFromExcludedFromFeeAccounts(address[])",
          "claim(address,uint256)",
          "name()",
          "symbol()",
          "decimals()",
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "transferFrom(address,address,uint256)",
          "approve(address,uint256)",
          "allowance(address,address)",
          "increaseAllowance(address,uint256)",
          "decreaseAllowance(address,uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "FistDao",
            "src": "contracts/FirstDao.sol:159"
          },
          {
            "kind": "state-variable-assignment",
            "name": "_decimals",
            "src": "contracts/FirstDao.sol:132"
          },
          {
            "kind": "state-variable-assignment",
            "name": "_totalSupply",
            "src": "contracts/FirstDao.sol:133"
          },
          {
            "kind": "state-variable-assignment",
            "name": "_feeTax",
            "src": "contracts/FirstDao.sol:138"
          },
          {
            "kind": "state-variable-assignment",
            "name": "_feeMining",
            "src": "contracts/FirstDao.sol:139"
          },
          {
            "kind": "state-variable-assignment",
            "name": "_feeLiquidity",
            "src": "contracts/FirstDao.sol:140"
          },
          {
            "kind": "state-variable-assignment",
            "name": "_feeDivisor",
            "src": "contracts/FirstDao.sol:141"
          },
          {
            "kind": "state-variable-assignment",
            "name": "_removeAllFee",
            "src": "contracts/FirstDao.sol:143"
          },
          {
            "kind": "state-variable-assignment",
            "name": "_defaultBalance",
            "src": "contracts/FirstDao.sol:150"
          },
          {
            "kind": "state-variable-assignment",
            "name": "_defaultAmount",
            "src": "contracts/FirstDao.sol:151"
          },
          {
            "kind": "state-variable-assignment",
            "name": "_initialized111",
            "src": "contracts/FirstDao.sol:156"
          },
          {
            "kind": "state-variable-assignment",
            "name": "_reentry",
            "src": "contracts/FirstDao.sol:157"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Ownable",
              "src": "contracts/FirstDao.sol:58"
            },
            {
              "label": "_previousOwner",
              "offset": 0,
              "slot": "1",
              "type": "t_address",
              "contract": "Ownable",
              "src": "contracts/FirstDao.sol:59"
            },
            {
              "label": "_switchDate",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "Ownable",
              "src": "contracts/FirstDao.sol:60"
            },
            {
              "label": "_name",
              "offset": 0,
              "slot": "3",
              "type": "t_string_storage",
              "contract": "FistDao",
              "src": "contracts/FirstDao.sol:130"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "4",
              "type": "t_string_storage",
              "contract": "FistDao",
              "src": "contracts/FirstDao.sol:131"
            },
            {
              "label": "_decimals",
              "offset": 0,
              "slot": "5",
              "type": "t_uint8",
              "contract": "FistDao",
              "src": "contracts/FirstDao.sol:132"
            },
            {
              "label": "_totalSupply",
              "offset": 0,
              "slot": "6",
              "type": "t_uint256",
              "contract": "FistDao",
              "src": "contracts/FirstDao.sol:133"
            },
            {
              "label": "_balances",
              "offset": 0,
              "slot": "7",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "FistDao",
              "src": "contracts/FirstDao.sol:134"
            },
            {
              "label": "_allowances",
              "offset": 0,
              "slot": "8",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "FistDao",
              "src": "contracts/FirstDao.sol:135"
            },
            {
              "label": "_isApproved",
              "offset": 0,
              "slot": "9",
              "type": "t_mapping(t_address,t_bool)",
              "contract": "FistDao",
              "src": "contracts/FirstDao.sol:136"
            },
            {
              "label": "_feeTax",
              "offset": 0,
              "slot": "10",
              "type": "t_uint256",
              "contract": "FistDao",
              "src": "contracts/FirstDao.sol:138"
            },
            {
              "label": "_feeMining",
              "offset": 0,
              "slot": "11",
              "type": "t_uint256",
              "contract": "FistDao",
              "src": "contracts/FirstDao.sol:139"
            },
            {
              "label": "_feeLiquidity",
              "offset": 0,
              "slot": "12",
              "type": "t_uint256",
              "contract": "FistDao",
              "src": "contracts/FirstDao.sol:140"
            },
            {
              "label": "_feeDivisor",
              "offset": 0,
              "slot": "13",
              "type": "t_uint256",
              "contract": "FistDao",
              "src": "contracts/FirstDao.sol:141"
            },
            {
              "label": "_removeAllFee",
              "offset": 0,
              "slot": "14",
              "type": "t_bool",
              "contract": "FistDao",
              "src": "contracts/FirstDao.sol:143"
            },
            {
              "label": "_core",
              "offset": 1,
              "slot": "14",
              "type": "t_address",
              "contract": "FistDao",
              "src": "contracts/FirstDao.sol:145"
            },
            {
              "label": "_taxReceiver",
              "offset": 0,
              "slot": "15",
              "type": "t_address",
              "contract": "FistDao",
              "src": "contracts/FirstDao.sol:146"
            },
            {
              "label": "_miningPool",
              "offset": 0,
              "slot": "16",
              "type": "t_address",
              "contract": "FistDao",
              "src": "contracts/FirstDao.sol:147"
            },
            {
              "label": "_liquidityPool",
              "offset": 0,
              "slot": "17",
              "type": "t_address",
              "contract": "FistDao",
              "src": "contracts/FirstDao.sol:148"
            },
            {
              "label": "_defaultBalance",
              "offset": 0,
              "slot": "18",
              "type": "t_uint256",
              "contract": "FistDao",
              "src": "contracts/FirstDao.sol:150"
            },
            {
              "label": "_defaultAmount",
              "offset": 0,
              "slot": "19",
              "type": "t_uint256",
              "contract": "FistDao",
              "src": "contracts/FirstDao.sol:151"
            },
            {
              "label": "_isExcludedFromFee",
              "offset": 0,
              "slot": "20",
              "type": "t_mapping(t_address,t_bool)",
              "contract": "FistDao",
              "src": "contracts/FirstDao.sol:153"
            },
            {
              "label": "_excludedFromFeeAccounts",
              "offset": 0,
              "slot": "21",
              "type": "t_array(t_address)dyn_storage",
              "contract": "FistDao",
              "src": "contracts/FirstDao.sol:154"
            },
            {
              "label": "_initialized111",
              "offset": 0,
              "slot": "22",
              "type": "t_bool",
              "contract": "FistDao",
              "src": "contracts/FirstDao.sol:156"
            },
            {
              "label": "_reentry",
              "offset": 0,
              "slot": "23",
              "type": "t_uint256",
              "contract": "FistDao",
              "src": "contracts/FirstDao.sol:157"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_address)dyn_storage": {
              "label": "address[]",
              "numberOfBytes": "32"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint8": {
              "label": "uint8",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.21"
      },
      "contracts/FirstDao.sol:ICore": {
        "src": "contracts/FirstDao.sol:119",
        "inherit": [],
        "libraries": [],
        "methods": [
          "getPairAddress()",
          "airdrop()",
          "safety(address,address)",
          "start()",
          "end()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.21"
      },
      "contracts/FirstDao.sol:IERC20": {
        "src": "contracts/FirstDao.sol:8",
        "inherit": [],
        "libraries": [],
        "methods": [
          "name()",
          "symbol()",
          "decimals()",
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "transferFrom(address,address,uint256)",
          "approve(address,uint256)",
          "allowance(address,address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.21"
      },
      "contracts/FirstDao.sol:IFactory": {
        "src": "contracts/FirstDao.sol:91",
        "inherit": [],
        "libraries": [],
        "methods": [
          "createPair(address,address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.21"
      },
      "contracts/FirstDao.sol:IRouter01": {
        "src": "contracts/FirstDao.sol:95",
        "inherit": [],
        "libraries": [],
        "methods": [
          "factory()",
          "addLiquidity(address,address,uint256,uint256,uint256,uint256,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.21"
      },
      "contracts/FirstDao.sol:IRouter02": {
        "src": "contracts/FirstDao.sol:109",
        "inherit": [
          "contracts/FirstDao.sol:IRouter01"
        ],
        "libraries": [],
        "methods": [
          "swapExactTokensForTokensSupportingFeeOnTransferTokens(uint256,uint256,address[],address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.21"
      },
      "contracts/FirstDao.sol:Ownable": {
        "src": "contracts/FirstDao.sol:57",
        "inherit": [],
        "libraries": [],
        "methods": [
          "owner()",
          "switchDate()",
          "transferOwnership(uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Ownable",
            "src": "contracts/FirstDao.sol:63"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Ownable",
              "src": "contracts/FirstDao.sol:58"
            },
            {
              "label": "_previousOwner",
              "offset": 0,
              "slot": "1",
              "type": "t_address",
              "contract": "Ownable",
              "src": "contracts/FirstDao.sol:59"
            },
            {
              "label": "_switchDate",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "Ownable",
              "src": "contracts/FirstDao.sol:60"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.21"
      },
      "contracts/FirstDao.sol:SafeMath": {
        "src": "contracts/FirstDao.sol:22",
        "version": {
          "withMetadata": "95eb3df1bd62a62b1bf87150f7314053125cc709ed6eb26f9bf2a30d8fc55e32",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.21"
      }
    },
    {
      "contracts/IFiles.sol:Address": {
        "src": "contracts/IFiles.sol:147",
        "version": {
          "withMetadata": "73f3d745b82ff92d492794f39ddc131795315255895e196d918dc1260c813488",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.21"
      },
      "contracts/IFiles.sol:Context": {
        "src": "contracts/IFiles.sol:135",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.21"
      },
      "contracts/IFiles.sol:IBEP20": {
        "src": "contracts/IFiles.sol:9",
        "inherit": [],
        "libraries": [],
        "methods": [
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.21"
      },
      "contracts/IFiles.sol:IPancakeFactory": {
        "src": "contracts/IFiles.sol:327",
        "inherit": [],
        "libraries": [],
        "methods": [
          "feeTo()",
          "feeToSetter()",
          "getPair(address,address)",
          "allPairs(uint256)",
          "allPairsLength()",
          "createPair(address,address)",
          "setFeeTo(address)",
          "setFeeToSetter(address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.21"
      },
      "contracts/IFiles.sol:IPancakePair": {
        "src": "contracts/IFiles.sol:357",
        "inherit": [],
        "libraries": [],
        "methods": [
          "name()",
          "symbol()",
          "decimals()",
          "totalSupply()",
          "balanceOf(address)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transfer(address,uint256)",
          "transferFrom(address,address,uint256)",
          "DOMAIN_SEPARATOR()",
          "PERMIT_TYPEHASH()",
          "nonces(address)",
          "permit(address,address,uint256,uint256,uint8,bytes32,bytes32)",
          "MINIMUM_LIQUIDITY()",
          "factory()",
          "token0()",
          "token1()",
          "getReserves()",
          "price0CumulativeLast()",
          "price1CumulativeLast()",
          "kLast()",
          "mint(address)",
          "burn(address)",
          "swap(uint256,uint256,address,bytes)",
          "skim(address)",
          "sync()",
          "initialize(address,address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.21"
      },
      "contracts/IFiles.sol:IPancakeRouter01": {
        "src": "contracts/IFiles.sol:466",
        "inherit": [],
        "libraries": [],
        "methods": [
          "factory()",
          "WETH()",
          "addLiquidity(address,address,uint256,uint256,uint256,uint256,address,uint256)",
          "addLiquidityETH(address,uint256,uint256,uint256,address,uint256)",
          "removeLiquidity(address,address,uint256,uint256,uint256,address,uint256)",
          "removeLiquidityETH(address,uint256,uint256,uint256,address,uint256)",
          "removeLiquidityWithPermit(address,address,uint256,uint256,uint256,address,uint256,bool,uint8,bytes32,bytes32)",
          "removeLiquidityETHWithPermit(address,uint256,uint256,uint256,address,uint256,bool,uint8,bytes32,bytes32)",
          "swapExactTokensForTokens(uint256,uint256,address[],address,uint256)",
          "swapTokensForExactTokens(uint256,uint256,address[],address,uint256)",
          "swapExactETHForTokens(uint256,address[],address,uint256)",
          "swapTokensForExactETH(uint256,uint256,address[],address,uint256)",
          "swapExactTokensForETH(uint256,uint256,address[],address,uint256)",
          "swapETHForExactTokens(uint256,address[],address,uint256)",
          "quote(uint256,uint256,uint256)",
          "getAmountOut(uint256,uint256,uint256)",
          "getAmountIn(uint256,uint256,uint256)",
          "getAmountsOut(uint256,address[])",
          "getAmountsIn(uint256,address[])"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.21"
      },
      "contracts/IFiles.sol:IPancakeRouter02": {
        "src": "contracts/IFiles.sol:626",
        "inherit": [
          "contracts/IFiles.sol:IPancakeRouter01"
        ],
        "libraries": [],
        "methods": [
          "removeLiquidityETHSupportingFeeOnTransferTokens(address,uint256,uint256,uint256,address,uint256)",
          "removeLiquidityETHWithPermitSupportingFeeOnTransferTokens(address,uint256,uint256,uint256,address,uint256,bool,uint8,bytes32,bytes32)",
          "swapExactTokensForTokensSupportingFeeOnTransferTokens(uint256,uint256,address[],address,uint256)",
          "swapExactETHForTokensSupportingFeeOnTransferTokens(uint256,address[],address,uint256)",
          "swapExactTokensForETHSupportingFeeOnTransferTokens(uint256,uint256,address[],address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.21"
      },
      "contracts/IFiles.sol:IWBNB": {
        "src": "contracts/IFiles.sol:38",
        "inherit": [],
        "libraries": [],
        "methods": [
          "name()",
          "symbol()",
          "decimals()",
          "balanceOf(address)",
          "allowance(address,address)",
          "()",
          "deposit()",
          "withdraw(uint256)",
          "totalSupply()",
          "approve(address,uint256)",
          "transfer(address,uint256)",
          "transferFrom(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.21"
      },
      "contracts/IFiles.sol:Initializable": {
        "src": "contracts/IFiles.sol:249",
        "version": {
          "withMetadata": "ba793f874980ba8826e0f77e588821b7a373c942b97ebcd7e4e42f378e00e824",
          "withoutMetadata": "ac0db523ddc3e330f735df7b3b0b24460531c71290a891170e840f8f67d5ff6b",
          "linkedWithoutMetadata": "ac0db523ddc3e330f735df7b3b0b24460531c71290a891170e840f8f67d5ff6b"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "contracts/IFiles.sol:251"
            },
            {
              "label": "initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "contracts/IFiles.sol:252"
            },
            {
              "label": "______gap",
              "offset": 0,
              "slot": "1",
              "type": "t_array(t_uint256)50_storage",
              "contract": "Initializable",
              "src": "contracts/IFiles.sol:283"
            }
          ],
          "types": {
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]",
              "numberOfBytes": "1600"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.21"
      },
      "contracts/IFiles.sol:Ownable": {
        "src": "contracts/IFiles.sol:286",
        "version": {
          "withMetadata": "9b6e83ec071c913ea8078938bf6c8e47f6ce697f181f2ebf31dc4937807eb386",
          "withoutMetadata": "a3dd09084d5d3377afaa5e637593b425fb1172db63a48c2f62428555638775f8",
          "linkedWithoutMetadata": "a3dd09084d5d3377afaa5e637593b425fb1172db63a48c2f62428555638775f8"
        },
        "inherit": [
          "contracts/IFiles.sol:Initializable",
          "contracts/IFiles.sol:Context"
        ],
        "libraries": [],
        "methods": [
          "()",
          "initOwner(address)",
          "owner()",
          "renounceOwnership()",
          "transferOwnership(address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "contracts/IFiles.sol:251"
            },
            {
              "label": "initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "contracts/IFiles.sol:252"
            },
            {
              "label": "______gap",
              "offset": 0,
              "slot": "1",
              "type": "t_array(t_uint256)50_storage",
              "contract": "Initializable",
              "src": "contracts/IFiles.sol:283"
            },
            {
              "label": "_owner",
              "offset": 0,
              "slot": "51",
              "type": "t_address",
              "contract": "Ownable",
              "src": "contracts/IFiles.sol:287"
            },
            {
              "label": "_previousOwner",
              "offset": 0,
              "slot": "52",
              "type": "t_address",
              "contract": "Ownable",
              "src": "contracts/IFiles.sol:288"
            },
            {
              "label": "_lockTime",
              "offset": 0,
              "slot": "53",
              "type": "t_uint256",
              "contract": "Ownable",
              "src": "contracts/IFiles.sol:289"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]",
              "numberOfBytes": "1600"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.21"
      },
      "contracts/IFiles.sol:SafeMath": {
        "src": "contracts/IFiles.sol:68",
        "version": {
          "withMetadata": "6a5db877229c78c84b33e85a297bea1121c6a6195aa310f30cbe69888293c5ae",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.21"
      },
      "contracts/ReentrancyGuard.sol:ReentrancyGuard": {
        "src": "contracts/ReentrancyGuard.sol:5",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ReentrancyGuard",
            "src": "contracts/ReentrancyGuard.sol:12"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_status",
              "offset": 0,
              "slot": "0",
              "type": "t_uint256",
              "contract": "ReentrancyGuard",
              "src": "contracts/ReentrancyGuard.sol:10"
            }
          ],
          "types": {
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.21"
      },
      "contracts/Utils.sol:PancakeLibrary": {
        "src": "contracts/Utils.sol:219",
        "version": {
          "withMetadata": "668337a75717822cd6d73bbd1c50526e84e4af10cd45125b1756676395a2f30c",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [
          "contracts/IFiles.sol:SafeMath"
        ],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.21"
      },
      "contracts/Utils.sol:Utils": {
        "src": "contracts/Utils.sol:6",
        "version": {
          "withMetadata": "a5775bd7ff330a5dfa7ddaef645bcc8fbccdcd3c38fbc9fc1755e3e3a9a09d47",
          "withoutMetadata": "8ca6da6b824cadf2e1f9c600b5f1381080c8b8d75dddf5423f35e25222daaeda",
          "linkedWithoutMetadata": "8ca6da6b824cadf2e1f9c600b5f1381080c8b8d75dddf5423f35e25222daaeda"
        },
        "inherit": [],
        "libraries": [
          "contracts/IFiles.sol:SafeMath"
        ],
        "methods": [
          "calculateBNBReward(uint256,uint256,uint256,uint256)",
          "calculateTopUpClaim(uint256,uint256,uint256,uint256)",
          "swapTokensForEth(address,uint256)",
          "swapETHForTokens(address,address,uint256)",
          "swapTokensForTokens(address,address,uint256)",
          "getAmountsout(uint256,address)",
          "addLiquidity(address,address,uint256,uint256)",
          "getAntiFlipTaxNo(uint256)",
          "calcReward(uint256,uint256,uint256,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.21"
      }
    },
    {
      "contracts/Proxy.sol:Caller": {
        "src": "contracts/Proxy.sol:80",
        "version": {
          "withMetadata": "8a43f4805f6ec5dd7b7379a87ef3fa89b1f2cd8e86292442058e51e90f40e31d",
          "withoutMetadata": "d6211a178c252503f87d41bbcceffa66551bde0c0c4b0cc3c5a44a4f489e2c7f",
          "linkedWithoutMetadata": "d6211a178c252503f87d41bbcceffa66551bde0c0c4b0cc3c5a44a4f489e2c7f"
        },
        "inherit": [],
        "libraries": [],
        "methods": [
          "(address)",
          "increase()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Caller",
            "src": "contracts/Proxy.sol:80"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "proxy",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Caller",
              "src": "contracts/Proxy.sol:80"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.21"
      },
      "contracts/Proxy.sol:Proxy": {
        "src": "contracts/Proxy.sol:10",
        "version": {
          "withMetadata": "3a655b5f054f4310d279144652e269b840bf308c06f48e08f2d407ee1381c2c1",
          "withoutMetadata": "bc7fcd1c64d2f798926ae830c3e369a33c770ea294cd9047d184a8c885a96818",
          "linkedWithoutMetadata": "bc7fcd1c64d2f798926ae830c3e369a33c770ea294cd9047d184a8c885a96818"
        },
        "inherit": [],
        "libraries": [],
        "methods": [
          "(address)",
          "()",
          "()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Proxy",
            "src": "contracts/Proxy.sol:22"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "implementation",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Proxy",
              "src": "contracts/Proxy.sol:13"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.21"
      }
    },
    {
      "contracts/Logic.sol:Logic": {
        "src": "contracts/Logic.sol:9",
        "version": {
          "withMetadata": "087c86b163578853fb1cba09b22843df8f815c95bf2568200ddd8e1dbf167fea",
          "withoutMetadata": "a9feffbc7087e9529577fb0b368171b85b94d25918f43b5d410eb0f186274034",
          "linkedWithoutMetadata": "a9feffbc7087e9529577fb0b368171b85b94d25918f43b5d410eb0f186274034"
        },
        "inherit": [],
        "libraries": [],
        "methods": [
          "increment()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "state-variable-assignment",
            "name": "x",
            "src": "contracts/Logic.sol:13"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "implementation",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Logic",
              "src": "contracts/Logic.sol:9"
            },
            {
              "label": "x",
              "offset": 0,
              "slot": "1",
              "type": "t_uint256",
              "contract": "Logic",
              "src": "contracts/Logic.sol:13"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.21"
      }
    },
    {
      "contracts/Logic.sol:Logic": {
        "src": "contracts/Logic.sol:9",
        "version": {
          "withMetadata": "087c86b163578853fb1cba09b22843df8f815c95bf2568200ddd8e1dbf167fea",
          "withoutMetadata": "a9feffbc7087e9529577fb0b368171b85b94d25918f43b5d410eb0f186274034",
          "linkedWithoutMetadata": "a9feffbc7087e9529577fb0b368171b85b94d25918f43b5d410eb0f186274034"
        },
        "inherit": [],
        "libraries": [],
        "methods": [
          "increment()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "state-variable-assignment",
            "name": "x",
            "src": "contracts/Logic.sol:13"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "implementation",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Logic",
              "src": "contracts/Logic.sol:9"
            },
            {
              "label": "x",
              "offset": 0,
              "slot": "1",
              "type": "t_uint256",
              "contract": "Logic",
              "src": "contracts/Logic.sol:13"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.21"
      }
    },
    {
      "contracts/Logic.sol:Logic": {
        "src": "contracts/Logic.sol:9",
        "version": {
          "withMetadata": "087c86b163578853fb1cba09b22843df8f815c95bf2568200ddd8e1dbf167fea",
          "withoutMetadata": "a9feffbc7087e9529577fb0b368171b85b94d25918f43b5d410eb0f186274034",
          "linkedWithoutMetadata": "a9feffbc7087e9529577fb0b368171b85b94d25918f43b5d410eb0f186274034"
        },
        "inherit": [],
        "libraries": [],
        "methods": [
          "increment()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "state-variable-assignment",
            "name": "x",
            "src": "contracts/Logic.sol:13"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "implementation",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Logic",
              "src": "contracts/Logic.sol:9"
            },
            {
              "label": "x",
              "offset": 0,
              "slot": "1",
              "type": "t_uint256",
              "contract": "Logic",
              "src": "contracts/Logic.sol:13"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.21"
      }
    },
    {
      "contracts/Logic.sol:Logic": {
        "src": "contracts/Logic.sol:9",
        "version": {
          "withMetadata": "087c86b163578853fb1cba09b22843df8f815c95bf2568200ddd8e1dbf167fea",
          "withoutMetadata": "a9feffbc7087e9529577fb0b368171b85b94d25918f43b5d410eb0f186274034",
          "linkedWithoutMetadata": "a9feffbc7087e9529577fb0b368171b85b94d25918f43b5d410eb0f186274034"
        },
        "inherit": [],
        "libraries": [],
        "methods": [
          "increment()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "state-variable-assignment",
            "name": "x",
            "src": "contracts/Logic.sol:13"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "implementation",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Logic",
              "src": "contracts/Logic.sol:9"
            },
            {
              "label": "x",
              "offset": 0,
              "slot": "1",
              "type": "t_uint256",
              "contract": "Logic",
              "src": "contracts/Logic.sol:13"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.21"
      }
    },
    {
      "contracts/Logic.sol:Logic": {
        "src": "contracts/Logic.sol:9",
        "version": {
          "withMetadata": "087c86b163578853fb1cba09b22843df8f815c95bf2568200ddd8e1dbf167fea",
          "withoutMetadata": "a9feffbc7087e9529577fb0b368171b85b94d25918f43b5d410eb0f186274034",
          "linkedWithoutMetadata": "a9feffbc7087e9529577fb0b368171b85b94d25918f43b5d410eb0f186274034"
        },
        "inherit": [],
        "libraries": [],
        "methods": [
          "increment()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "state-variable-assignment",
            "name": "x",
            "src": "contracts/Logic.sol:13"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "implementation",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Logic",
              "src": "contracts/Logic.sol:9"
            },
            {
              "label": "x",
              "offset": 0,
              "slot": "1",
              "type": "t_uint256",
              "contract": "Logic",
              "src": "contracts/Logic.sol:13"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.21"
      }
    },
    {
      "contracts/Logic.sol:Logic": {
        "src": "contracts/Logic.sol:9",
        "version": {
          "withMetadata": "087c86b163578853fb1cba09b22843df8f815c95bf2568200ddd8e1dbf167fea",
          "withoutMetadata": "a9feffbc7087e9529577fb0b368171b85b94d25918f43b5d410eb0f186274034",
          "linkedWithoutMetadata": "a9feffbc7087e9529577fb0b368171b85b94d25918f43b5d410eb0f186274034"
        },
        "inherit": [],
        "libraries": [],
        "methods": [
          "increment()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "state-variable-assignment",
            "name": "x",
            "src": "contracts/Logic.sol:13"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "implementation",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Logic",
              "src": "contracts/Logic.sol:9"
            },
            {
              "label": "x",
              "offset": 0,
              "slot": "1",
              "type": "t_uint256",
              "contract": "Logic",
              "src": "contracts/Logic.sol:13"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.21"
      }
    },
    {
      "@openzeppelin/contracts/access/Ownable.sol:Ownable": {
        "src": "@openzeppelin/contracts/access/Ownable.sol:20",
        "inherit": [
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [],
        "methods": [
          "owner()",
          "renounceOwnership()",
          "transferOwnership(address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Ownable",
            "src": "@openzeppelin/contracts/access/Ownable.sol:28"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Ownable",
              "src": "@openzeppelin/contracts/access/Ownable.sol:21"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.21"
      },
      "@openzeppelin/contracts/security/ReentrancyGuard.sol:ReentrancyGuard": {
        "src": "@openzeppelin/contracts/security/ReentrancyGuard.sol:22",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ReentrancyGuard",
            "src": "@openzeppelin/contracts/security/ReentrancyGuard.sol:39"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_status",
              "offset": 0,
              "slot": "0",
              "type": "t_uint256",
              "contract": "ReentrancyGuard",
              "src": "@openzeppelin/contracts/security/ReentrancyGuard.sol:37"
            }
          ],
          "types": {
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.21"
      },
      "@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20": {
        "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:35",
        "version": {
          "withMetadata": "b653be9ad258ddaafa2304767243ba86eac7156acd9bf1a196bee0fef9b1c3a9",
          "withoutMetadata": "1d55e2dc08aae4fa5bd2ca8ac476f7a2e63bdfa7b0b51d4bd61db8705143a140",
          "linkedWithoutMetadata": "1d55e2dc08aae4fa5bd2ca8ac476f7a2e63bdfa7b0b51d4bd61db8705143a140"
        },
        "inherit": [
          "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol:IERC20Metadata",
          "@openzeppelin/contracts/token/ERC20/IERC20.sol:IERC20",
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [],
        "methods": [
          "(string,string)",
          "name()",
          "symbol()",
          "decimals()",
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)",
          "increaseAllowance(address,uint256)",
          "decreaseAllowance(address,uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ERC20",
            "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:54"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_balances",
              "offset": 0,
              "slot": "0",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:36"
            },
            {
              "label": "_allowances",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:38"
            },
            {
              "label": "_totalSupply",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:40"
            },
            {
              "label": "_name",
              "offset": 0,
              "slot": "3",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:42"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "4",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:43"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.21"
      },
      "@openzeppelin/contracts/token/ERC20/IERC20.sol:IERC20": {
        "src": "@openzeppelin/contracts/token/ERC20/IERC20.sol:9",
        "inherit": [],
        "libraries": [],
        "methods": [
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.21"
      },
      "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol:IERC20Metadata": {
        "src": "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol:13",
        "inherit": [
          "@openzeppelin/contracts/token/ERC20/IERC20.sol:IERC20"
        ],
        "libraries": [],
        "methods": [
          "name()",
          "symbol()",
          "decimals()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.21"
      },
      "@openzeppelin/contracts/token/ERC20/extensions/draft-IERC20Permit.sol:IERC20Permit": {
        "src": "@openzeppelin/contracts/token/ERC20/extensions/draft-IERC20Permit.sol:14",
        "inherit": [],
        "libraries": [],
        "methods": [
          "permit(address,address,uint256,uint256,uint8,bytes32,bytes32)",
          "nonces(address)",
          "DOMAIN_SEPARATOR()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.21"
      },
      "@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol:SafeERC20": {
        "src": "@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol:19",
        "version": {
          "withMetadata": "945db44b71722f915e3e7352ee22f854dfe8000e69eee742d881b64279bb0ad8",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [
          "@openzeppelin/contracts/utils/Address.sol:Address"
        ],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.21"
      },
      "@openzeppelin/contracts/utils/Address.sol:Address": {
        "src": "@openzeppelin/contracts/utils/Address.sol:9",
        "version": {
          "withMetadata": "9401bbf4dc0decc4c739a060967031a16e8de389388d98c32ec11cff440d6513",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [
          {
            "kind": "delegatecall",
            "src": "@openzeppelin/contracts/utils/Address.sol:191"
          },
          {
            "kind": "delegatecall",
            "src": "@openzeppelin/contracts/utils/Address.sol:191"
          }
        ],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.21"
      },
      "@openzeppelin/contracts/utils/Context.sol:Context": {
        "src": "@openzeppelin/contracts/utils/Context.sol:16",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.21"
      },
      "@openzeppelin/contracts/utils/math/Math.sol:Math": {
        "src": "@openzeppelin/contracts/utils/math/Math.sol:9",
        "version": {
          "withMetadata": "f58f3d1d6b53395057afc8a5e1edcbfcd81cdec0dfcf6b1290c8c2368b975278",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.21"
      },
      "@openzeppelin/contracts/utils/math/SafeMath.sol:SafeMath": {
        "src": "@openzeppelin/contracts/utils/math/SafeMath.sol:16",
        "version": {
          "withMetadata": "4167346fe154a63f59e72262dbca9ccb097c97b61ec5dfe163259378386d2ba4",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.21"
      },
      "contracts/Presale.sol:IGoldToken": {
        "src": "contracts/Presale.sol:8",
        "inherit": [],
        "libraries": [],
        "methods": [
          "mint(address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.21"
      },
      "contracts/Presale.sol:Presale": {
        "src": "contracts/Presale.sol:12",
        "version": {
          "withMetadata": "55de4f41aa2ae4e88c3e975f7f7c871c8630a6a915f505e8b168c82d5665ef13",
          "withoutMetadata": "2fa5a3bfe1ae715a2695aad2a1fdda65dd5f2dfe346a8af0822d82b296b7bc1b",
          "linkedWithoutMetadata": "2fa5a3bfe1ae715a2695aad2a1fdda65dd5f2dfe346a8af0822d82b296b7bc1b"
        },
        "inherit": [
          "@openzeppelin/contracts/security/ReentrancyGuard.sol:ReentrancyGuard",
          "@openzeppelin/contracts/access/Ownable.sol:Ownable",
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [],
        "methods": [
          "(address,address,address,uint256)",
          "createPreSale((uint256,uint256,uint256))",
          "sale()",
          "getCanIdoAmount(address)",
          "bindReffer(address)",
          "userBalance(address)",
          "userRewardBalance(address)",
          "userWithdraw()",
          "teamWithdraw(address)",
          "setUserWithdrawTime(uint256)",
          "setInviteMin(uint256)",
          "setPerMaxBuyUsdt(uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Presale",
            "src": "contracts/Presale.sol:46"
          },
          {
            "kind": "state-variable-assignment",
            "name": "perMaxBuyUsdt",
            "src": "contracts/Presale.sol:15"
          },
          {
            "kind": "state-variable-assignment",
            "name": "inviteMin",
            "src": "contracts/Presale.sol:31"
          },
          {
            "kind": "state-variable-assignment",
            "name": "maxSale",
            "src": "contracts/Presale.sol:33"
          },
          {
            "kind": "state-variable-assignment",
            "name": "rewardLevel",
            "src": "contracts/Presale.sol:36"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Ownable",
              "src": "@openzeppelin/contracts/access/Ownable.sol:21"
            },
            {
              "label": "_status",
              "offset": 0,
              "slot": "1",
              "type": "t_uint256",
              "contract": "ReentrancyGuard",
              "src": "@openzeppelin/contracts/security/ReentrancyGuard.sol:37"
            },
            {
              "label": "userWithdrawTime",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "Presale",
              "src": "contracts/Presale.sol:13"
            },
            {
              "label": "perMaxBuyUsdt",
              "offset": 0,
              "slot": "3",
              "type": "t_uint256",
              "contract": "Presale",
              "src": "contracts/Presale.sol:15"
            },
            {
              "label": "teamAddress",
              "offset": 0,
              "slot": "4",
              "type": "t_address",
              "contract": "Presale",
              "src": "contracts/Presale.sol:16"
            },
            {
              "label": "saleToken",
              "offset": 0,
              "slot": "5",
              "type": "t_address",
              "contract": "Presale",
              "src": "contracts/Presale.sol:17"
            },
            {
              "label": "usdtToken",
              "offset": 0,
              "slot": "6",
              "type": "t_address",
              "contract": "Presale",
              "src": "contracts/Presale.sol:18"
            },
            {
              "label": "goldTokenAddress",
              "offset": 0,
              "slot": "7",
              "type": "t_address",
              "contract": "Presale",
              "src": "contracts/Presale.sol:19"
            },
            {
              "label": "balances",
              "offset": 0,
              "slot": "8",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "Presale",
              "src": "contracts/Presale.sol:20"
            },
            {
              "label": "userBuyTotalUsdt",
              "offset": 0,
              "slot": "9",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "Presale",
              "src": "contracts/Presale.sol:21"
            },
            {
              "label": "rewardBalances",
              "offset": 0,
              "slot": "10",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "Presale",
              "src": "contracts/Presale.sol:22"
            },
            {
              "label": "reffers",
              "offset": 0,
              "slot": "11",
              "type": "t_mapping(t_address,t_address)",
              "contract": "Presale",
              "src": "contracts/Presale.sol:23"
            },
            {
              "label": "refferNumber",
              "offset": 0,
              "slot": "12",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "Presale",
              "src": "contracts/Presale.sol:24"
            },
            {
              "label": "teamRefferNumber",
              "offset": 0,
              "slot": "13",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "Presale",
              "src": "contracts/Presale.sol:25"
            },
            {
              "label": "firstIdo",
              "offset": 0,
              "slot": "14",
              "type": "t_mapping(t_address,t_bool)",
              "contract": "Presale",
              "src": "contracts/Presale.sol:26"
            },
            {
              "label": "totalIdoUSDT",
              "offset": 0,
              "slot": "15",
              "type": "t_uint256",
              "contract": "Presale",
              "src": "contracts/Presale.sol:27"
            },
            {
              "label": "totalIdoUser",
              "offset": 0,
              "slot": "16",
              "type": "t_uint256",
              "contract": "Presale",
              "src": "contracts/Presale.sol:28"
            },
            {
              "label": "totalSale",
              "offset": 0,
              "slot": "17",
              "type": "t_uint256",
              "contract": "Presale",
              "src": "contracts/Presale.sol:29"
            },
            {
              "label": "inviteMin",
              "offset": 0,
              "slot": "18",
              "type": "t_uint256",
              "contract": "Presale",
              "src": "contracts/Presale.sol:31"
            },
            {
              "label": "maxSale",
              "offset": 0,
              "slot": "19",
              "type": "t_uint256",
              "contract": "Presale",
              "src": "contracts/Presale.sol:33"
            },
            {
              "label": "isCloseSale",
              "offset": 0,
              "slot": "20",
              "type": "t_bool",
              "contract": "Presale",
              "src": "contracts/Presale.sol:34"
            },
            {
              "label": "rewardLevel",
              "offset": 0,
              "slot": "21",
              "type": "t_array(t_uint256)dyn_storage",
              "contract": "Presale",
              "src": "contracts/Presale.sol:36"
            },
            {
              "label": "presaleInfo",
              "offset": 0,
              "slot": "22",
              "type": "t_struct(PresaleInfo)2392_storage",
              "contract": "Presale",
              "src": "contracts/Presale.sol:44"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_uint256)dyn_storage": {
              "label": "uint256[]",
              "numberOfBytes": "32"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_mapping(t_address,t_address)": {
              "label": "mapping(address => address)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_struct(PresaleInfo)2392_storage": {
              "label": "struct Presale.PresaleInfo",
              "members": [
                {
                  "label": "startTime",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "endTime",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "price",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "2"
                }
              ],
              "numberOfBytes": "96"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.21"
      },
      "contracts/Staking.sol:IRejuvenate": {
        "src": "contracts/Staking.sol:9",
        "inherit": [],
        "libraries": [],
        "methods": [
          "mint(address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.21"
      },
      "contracts/Staking.sol:Staking": {
        "src": "contracts/Staking.sol:13",
        "version": {
          "withMetadata": "d4a43fbe5f8d6347383f0680dba0a94146fceda61d8f28fb0ed926fda6eca5bc",
          "withoutMetadata": "8e35a11dc4a30aced1c096dd5db7f6424d19b292b732012b8d44d054f9cea466",
          "linkedWithoutMetadata": "8e35a11dc4a30aced1c096dd5db7f6424d19b292b732012b8d44d054f9cea466"
        },
        "inherit": [
          "@openzeppelin/contracts/security/ReentrancyGuard.sol:ReentrancyGuard",
          "@openzeppelin/contracts/access/Ownable.sol:Ownable",
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [],
        "methods": [
          "()",
          "changeRewardsPerBlock(uint256)",
          "rewardPerToken()",
          "earned(address)",
          "stake(uint256)",
          "unstake(uint256)",
          "claimRewards()",
          "pause()",
          "unpause()",
          "inCaseTokensGetStuck(address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Staking",
            "src": "contracts/Staking.sol:33"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Ownable",
              "src": "@openzeppelin/contracts/access/Ownable.sol:21"
            },
            {
              "label": "_status",
              "offset": 0,
              "slot": "1",
              "type": "t_uint256",
              "contract": "ReentrancyGuard",
              "src": "@openzeppelin/contracts/security/ReentrancyGuard.sol:37"
            },
            {
              "label": "paused",
              "offset": 0,
              "slot": "2",
              "type": "t_bool",
              "contract": "Staking",
              "src": "contracts/Staking.sol:14"
            },
            {
              "label": "_treasury",
              "offset": 1,
              "slot": "2",
              "type": "t_address",
              "contract": "Staking",
              "src": "contracts/Staking.sol:15"
            },
            {
              "label": "token",
              "offset": 0,
              "slot": "3",
              "type": "t_address",
              "contract": "Staking",
              "src": "contracts/Staking.sol:17"
            },
            {
              "label": "rewardRate",
              "offset": 0,
              "slot": "4",
              "type": "t_uint256",
              "contract": "Staking",
              "src": "contracts/Staking.sol:19"
            },
            {
              "label": "_lastUpdateBlock",
              "offset": 0,
              "slot": "5",
              "type": "t_uint256",
              "contract": "Staking",
              "src": "contracts/Staking.sol:20"
            },
            {
              "label": "_rewardsPerToken",
              "offset": 0,
              "slot": "6",
              "type": "t_uint256",
              "contract": "Staking",
              "src": "contracts/Staking.sol:21"
            },
            {
              "label": "data",
              "offset": 0,
              "slot": "7",
              "type": "t_array(t_struct(StakingData)3375_storage)dyn_storage",
              "contract": "Staking",
              "src": "contracts/Staking.sol:22"
            },
            {
              "label": "_userRewardsPerToken",
              "offset": 0,
              "slot": "8",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "Staking",
              "src": "contracts/Staking.sol:24"
            },
            {
              "label": "_rewards",
              "offset": 0,
              "slot": "9",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "Staking",
              "src": "contracts/Staking.sol:25"
            },
            {
              "label": "totalStaked",
              "offset": 0,
              "slot": "10",
              "type": "t_uint256",
              "contract": "Staking",
              "src": "contracts/Staking.sol:27"
            },
            {
              "label": "_balances",
              "offset": 0,
              "slot": "11",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "Staking",
              "src": "contracts/Staking.sol:28"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_struct(StakingData)3375_storage)dyn_storage": {
              "label": "struct StakingData[]",
              "numberOfBytes": "32"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_struct(StakingData)3375_storage": {
              "label": "struct StakingData",
              "members": [
                {
                  "label": "block",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "staked",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "1"
                }
              ],
              "numberOfBytes": "64"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.21"
      }
    },
    {
      "contracts/RichHusky.sol:Checker": {
        "src": "contracts/RichHusky.sol:520",
        "version": {
          "withMetadata": "17e1cf10fdffcda321c1a1f59d2b06178394724b4d8ad9b035a718122fed8a52",
          "withoutMetadata": "0faf6ca500781d04501ba7e4cf9138e35957321419c6ca29798480c22b3cc5cd",
          "linkedWithoutMetadata": "0faf6ca500781d04501ba7e4cf9138e35957321419c6ca29798480c22b3cc5cd"
        },
        "inherit": [],
        "libraries": [],
        "methods": [
          "isValid(address,address,address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.21"
      },
      "contracts/RichHusky.sol:Context": {
        "src": "contracts/RichHusky.sol:27",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.21"
      },
      "contracts/RichHusky.sol:ERC20": {
        "src": "contracts/RichHusky.sol:162",
        "version": {
          "withMetadata": "e092e43bc9c3243b7138ce015fa92d358fa66a764079145cfe1339f160fd055e",
          "withoutMetadata": "e248eda4094a79267c1d78eb85fb3a082e2ba4d153192b2644d6357dbed158f3",
          "linkedWithoutMetadata": "e248eda4094a79267c1d78eb85fb3a082e2ba4d153192b2644d6357dbed158f3"
        },
        "inherit": [
          "contracts/RichHusky.sol:IERC20Metadata",
          "contracts/RichHusky.sol:IERC20",
          "contracts/RichHusky.sol:Context"
        ],
        "libraries": [],
        "methods": [
          "(string,string)",
          "name()",
          "symbol()",
          "decimals()",
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)",
          "increaseAllowance(address,uint256)",
          "decreaseAllowance(address,uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ERC20",
            "src": "contracts/RichHusky.sol:181"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_balances",
              "offset": 0,
              "slot": "0",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC20",
              "src": "contracts/RichHusky.sol:163"
            },
            {
              "label": "_allowances",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "ERC20",
              "src": "contracts/RichHusky.sol:165"
            },
            {
              "label": "_totalSupply",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "ERC20",
              "src": "contracts/RichHusky.sol:167"
            },
            {
              "label": "_name",
              "offset": 0,
              "slot": "3",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "contracts/RichHusky.sol:169"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "4",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "contracts/RichHusky.sol:170"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.21"
      },
      "contracts/RichHusky.sol:IERC20": {
        "src": "contracts/RichHusky.sol:40",
        "inherit": [],
        "libraries": [],
        "methods": [
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.21"
      },
      "contracts/RichHusky.sol:IERC20Metadata": {
        "src": "contracts/RichHusky.sol:120",
        "inherit": [
          "contracts/RichHusky.sol:IERC20"
        ],
        "libraries": [],
        "methods": [
          "name()",
          "symbol()",
          "decimals()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.21"
      },
      "contracts/RichHusky.sol:IFactory": {
        "src": "contracts/RichHusky.sol:535",
        "inherit": [],
        "libraries": [],
        "methods": [
          "createPair(address,address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.21"
      },
      "contracts/RichHusky.sol:IGasToken": {
        "src": "contracts/RichHusky.sol:539",
        "inherit": [],
        "libraries": [],
        "methods": [
          "free(uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.21"
      },
      "contracts/RichHusky.sol:RichHusky": {
        "src": "contracts/RichHusky.sol:543",
        "version": {
          "withMetadata": "ce802161ba5ffecece3a7488fb3a07a35d8f78edf3674187d3eb27cc30777604",
          "withoutMetadata": "7c4ce62a347a52dc2685dbb41f6d968bb51e7d6abb10665abf0c7d7699da0d36",
          "linkedWithoutMetadata": "7c4ce62a347a52dc2685dbb41f6d968bb51e7d6abb10665abf0c7d7699da0d36"
        },
        "inherit": [
          "contracts/RichHusky.sol:ERC20",
          "contracts/RichHusky.sol:IERC20Metadata",
          "contracts/RichHusky.sol:IERC20",
          "contracts/RichHusky.sol:Context"
        ],
        "libraries": [
          "contracts/RichHusky.sol:Checker"
        ],
        "methods": [
          "(address)",
          "mint(address,uint256)",
          "updateAirdropAmount(uint256)",
          "withdrawFee(address,uint256)",
          "airdrop(address[],uint256)",
          "addBetaUsers(address[])",
          "removeBetaUsers(address[])",
          "multiCall(address[],bytes[])"
        ],
        "linkReferences": [
          {
            "src": "contracts/RichHusky.sol",
            "name": "Checker",
            "length": 20,
            "start": 5176,
            "placeholder": "__$1cb883ae52507a2d00adae80c79f632cb4$__"
          }
        ],
        "errors": [
          {
            "kind": "constructor",
            "contract": "RichHusky",
            "src": "contracts/RichHusky.sol:554"
          },
          {
            "kind": "state-variable-immutable",
            "name": "pancakeFactory",
            "src": "contracts/RichHusky.sol:549"
          },
          {
            "kind": "state-variable-immutable",
            "name": "WBNB",
            "src": "contracts/RichHusky.sol:550"
          },
          {
            "kind": "state-variable-immutable",
            "name": "GasToken",
            "src": "contracts/RichHusky.sol:552"
          },
          {
            "kind": "external-library-linking",
            "name": "Checker",
            "src": "contracts/RichHusky.sol"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_balances",
              "offset": 0,
              "slot": "0",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC20",
              "src": "contracts/RichHusky.sol:163"
            },
            {
              "label": "_allowances",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "ERC20",
              "src": "contracts/RichHusky.sol:165"
            },
            {
              "label": "_totalSupply",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "ERC20",
              "src": "contracts/RichHusky.sol:167"
            },
            {
              "label": "_name",
              "offset": 0,
              "slot": "3",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "contracts/RichHusky.sol:169"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "4",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "contracts/RichHusky.sol:170"
            },
            {
              "label": "dev",
              "offset": 0,
              "slot": "5",
              "type": "t_address",
              "contract": "RichHusky",
              "src": "contracts/RichHusky.sol:544"
            },
            {
              "label": "airdropAmount",
              "offset": 0,
              "slot": "6",
              "type": "t_uint256",
              "contract": "RichHusky",
              "src": "contracts/RichHusky.sol:545"
            },
            {
              "label": "betaUsers",
              "offset": 0,
              "slot": "7",
              "type": "t_mapping(t_address,t_bool)",
              "contract": "RichHusky",
              "src": "contracts/RichHusky.sol:546"
            },
            {
              "label": "pair",
              "offset": 0,
              "slot": "8",
              "type": "t_address",
              "contract": "RichHusky",
              "src": "contracts/RichHusky.sol:547"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.21"
      }
    },
    {
      "contracts/FirstDao.sol:FistDao": {
        "src": "contracts/FirstDao.sol:127",
        "version": {
          "withMetadata": "87594bf7d015e41aaf777bc0dc62e9e8a3685546fcfa065eb87291ef7f3f16f4",
          "withoutMetadata": "5bdb2538a3ba33172d93851875dfca20475ce01973348f896430788ab9d8314a",
          "linkedWithoutMetadata": "5bdb2538a3ba33172d93851875dfca20475ce01973348f896430788ab9d8314a"
        },
        "inherit": [
          "contracts/FirstDao.sol:Ownable",
          "contracts/FirstDao.sol:IERC20"
        ],
        "libraries": [
          "contracts/FirstDao.sol:SafeMath"
        ],
        "methods": [
          "(string,string)",
          "()",
          "initialize(address,address,address,address)",
          "transferEvent(address,address,uint256)",
          "feeState()",
          "getIsApproved(address)",
          "searchExcludedFromFeeAccounts(address)",
          "getDefaultBalance()",
          "insertIntoExcludedFromFeeAccounts(address[])",
          "deleteFromExcludedFromFeeAccounts(address[])",
          "claim(address,uint256)",
          "name()",
          "symbol()",
          "decimals()",
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "transferFrom(address,address,uint256)",
          "approve(address,uint256)",
          "allowance(address,address)",
          "increaseAllowance(address,uint256)",
          "decreaseAllowance(address,uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "FistDao",
            "src": "contracts/FirstDao.sol:159"
          },
          {
            "kind": "state-variable-assignment",
            "name": "_decimals",
            "src": "contracts/FirstDao.sol:132"
          },
          {
            "kind": "state-variable-assignment",
            "name": "_totalSupply",
            "src": "contracts/FirstDao.sol:133"
          },
          {
            "kind": "state-variable-assignment",
            "name": "_feeTax",
            "src": "contracts/FirstDao.sol:138"
          },
          {
            "kind": "state-variable-assignment",
            "name": "_feeMining",
            "src": "contracts/FirstDao.sol:139"
          },
          {
            "kind": "state-variable-assignment",
            "name": "_feeLiquidity",
            "src": "contracts/FirstDao.sol:140"
          },
          {
            "kind": "state-variable-assignment",
            "name": "_feeDivisor",
            "src": "contracts/FirstDao.sol:141"
          },
          {
            "kind": "state-variable-assignment",
            "name": "_removeAllFee",
            "src": "contracts/FirstDao.sol:143"
          },
          {
            "kind": "state-variable-assignment",
            "name": "_defaultBalance",
            "src": "contracts/FirstDao.sol:150"
          },
          {
            "kind": "state-variable-assignment",
            "name": "_defaultAmount",
            "src": "contracts/FirstDao.sol:151"
          },
          {
            "kind": "state-variable-assignment",
            "name": "_initialized111",
            "src": "contracts/FirstDao.sol:156"
          },
          {
            "kind": "state-variable-assignment",
            "name": "_reentry",
            "src": "contracts/FirstDao.sol:157"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Ownable",
              "src": "contracts/FirstDao.sol:58"
            },
            {
              "label": "_previousOwner",
              "offset": 0,
              "slot": "1",
              "type": "t_address",
              "contract": "Ownable",
              "src": "contracts/FirstDao.sol:59"
            },
            {
              "label": "_switchDate",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "Ownable",
              "src": "contracts/FirstDao.sol:60"
            },
            {
              "label": "_name",
              "offset": 0,
              "slot": "3",
              "type": "t_string_storage",
              "contract": "FistDao",
              "src": "contracts/FirstDao.sol:130"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "4",
              "type": "t_string_storage",
              "contract": "FistDao",
              "src": "contracts/FirstDao.sol:131"
            },
            {
              "label": "_decimals",
              "offset": 0,
              "slot": "5",
              "type": "t_uint8",
              "contract": "FistDao",
              "src": "contracts/FirstDao.sol:132"
            },
            {
              "label": "_totalSupply",
              "offset": 0,
              "slot": "6",
              "type": "t_uint256",
              "contract": "FistDao",
              "src": "contracts/FirstDao.sol:133"
            },
            {
              "label": "_balances",
              "offset": 0,
              "slot": "7",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "FistDao",
              "src": "contracts/FirstDao.sol:134"
            },
            {
              "label": "_allowances",
              "offset": 0,
              "slot": "8",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "FistDao",
              "src": "contracts/FirstDao.sol:135"
            },
            {
              "label": "_isApproved",
              "offset": 0,
              "slot": "9",
              "type": "t_mapping(t_address,t_bool)",
              "contract": "FistDao",
              "src": "contracts/FirstDao.sol:136"
            },
            {
              "label": "_feeTax",
              "offset": 0,
              "slot": "10",
              "type": "t_uint256",
              "contract": "FistDao",
              "src": "contracts/FirstDao.sol:138"
            },
            {
              "label": "_feeMining",
              "offset": 0,
              "slot": "11",
              "type": "t_uint256",
              "contract": "FistDao",
              "src": "contracts/FirstDao.sol:139"
            },
            {
              "label": "_feeLiquidity",
              "offset": 0,
              "slot": "12",
              "type": "t_uint256",
              "contract": "FistDao",
              "src": "contracts/FirstDao.sol:140"
            },
            {
              "label": "_feeDivisor",
              "offset": 0,
              "slot": "13",
              "type": "t_uint256",
              "contract": "FistDao",
              "src": "contracts/FirstDao.sol:141"
            },
            {
              "label": "_removeAllFee",
              "offset": 0,
              "slot": "14",
              "type": "t_bool",
              "contract": "FistDao",
              "src": "contracts/FirstDao.sol:143"
            },
            {
              "label": "_core",
              "offset": 1,
              "slot": "14",
              "type": "t_address",
              "contract": "FistDao",
              "src": "contracts/FirstDao.sol:145"
            },
            {
              "label": "_taxReceiver",
              "offset": 0,
              "slot": "15",
              "type": "t_address",
              "contract": "FistDao",
              "src": "contracts/FirstDao.sol:146"
            },
            {
              "label": "_miningPool",
              "offset": 0,
              "slot": "16",
              "type": "t_address",
              "contract": "FistDao",
              "src": "contracts/FirstDao.sol:147"
            },
            {
              "label": "_liquidityPool",
              "offset": 0,
              "slot": "17",
              "type": "t_address",
              "contract": "FistDao",
              "src": "contracts/FirstDao.sol:148"
            },
            {
              "label": "_defaultBalance",
              "offset": 0,
              "slot": "18",
              "type": "t_uint256",
              "contract": "FistDao",
              "src": "contracts/FirstDao.sol:150"
            },
            {
              "label": "_defaultAmount",
              "offset": 0,
              "slot": "19",
              "type": "t_uint256",
              "contract": "FistDao",
              "src": "contracts/FirstDao.sol:151"
            },
            {
              "label": "_isExcludedFromFee",
              "offset": 0,
              "slot": "20",
              "type": "t_mapping(t_address,t_bool)",
              "contract": "FistDao",
              "src": "contracts/FirstDao.sol:153"
            },
            {
              "label": "_excludedFromFeeAccounts",
              "offset": 0,
              "slot": "21",
              "type": "t_array(t_address)dyn_storage",
              "contract": "FistDao",
              "src": "contracts/FirstDao.sol:154"
            },
            {
              "label": "_initialized111",
              "offset": 0,
              "slot": "22",
              "type": "t_bool",
              "contract": "FistDao",
              "src": "contracts/FirstDao.sol:156"
            },
            {
              "label": "_reentry",
              "offset": 0,
              "slot": "23",
              "type": "t_uint256",
              "contract": "FistDao",
              "src": "contracts/FirstDao.sol:157"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_address)dyn_storage": {
              "label": "address[]",
              "numberOfBytes": "32"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint8": {
              "label": "uint8",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.21"
      },
      "contracts/FirstDao.sol:ICore": {
        "src": "contracts/FirstDao.sol:119",
        "inherit": [],
        "libraries": [],
        "methods": [
          "getPairAddress()",
          "airdrop()",
          "safety(address,address)",
          "start()",
          "end()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.21"
      },
      "contracts/FirstDao.sol:IERC20": {
        "src": "contracts/FirstDao.sol:8",
        "inherit": [],
        "libraries": [],
        "methods": [
          "name()",
          "symbol()",
          "decimals()",
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "transferFrom(address,address,uint256)",
          "approve(address,uint256)",
          "allowance(address,address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.21"
      },
      "contracts/FirstDao.sol:IFactory": {
        "src": "contracts/FirstDao.sol:91",
        "inherit": [],
        "libraries": [],
        "methods": [
          "createPair(address,address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.21"
      },
      "contracts/FirstDao.sol:IRouter01": {
        "src": "contracts/FirstDao.sol:95",
        "inherit": [],
        "libraries": [],
        "methods": [
          "factory()",
          "addLiquidity(address,address,uint256,uint256,uint256,uint256,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.21"
      },
      "contracts/FirstDao.sol:IRouter02": {
        "src": "contracts/FirstDao.sol:109",
        "inherit": [
          "contracts/FirstDao.sol:IRouter01"
        ],
        "libraries": [],
        "methods": [
          "swapExactTokensForTokensSupportingFeeOnTransferTokens(uint256,uint256,address[],address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.21"
      },
      "contracts/FirstDao.sol:Ownable": {
        "src": "contracts/FirstDao.sol:57",
        "inherit": [],
        "libraries": [],
        "methods": [
          "owner()",
          "switchDate()",
          "transferOwnership(uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Ownable",
            "src": "contracts/FirstDao.sol:63"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Ownable",
              "src": "contracts/FirstDao.sol:58"
            },
            {
              "label": "_previousOwner",
              "offset": 0,
              "slot": "1",
              "type": "t_address",
              "contract": "Ownable",
              "src": "contracts/FirstDao.sol:59"
            },
            {
              "label": "_switchDate",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "Ownable",
              "src": "contracts/FirstDao.sol:60"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.21"
      },
      "contracts/FirstDao.sol:SafeMath": {
        "src": "contracts/FirstDao.sol:22",
        "version": {
          "withMetadata": "95eb3df1bd62a62b1bf87150f7314053125cc709ed6eb26f9bf2a30d8fc55e32",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.21"
      }
    },
    {
      "contracts/IFiles.sol:Address": {
        "src": "contracts/IFiles.sol:147",
        "version": {
          "withMetadata": "73f3d745b82ff92d492794f39ddc131795315255895e196d918dc1260c813488",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.21"
      },
      "contracts/IFiles.sol:Context": {
        "src": "contracts/IFiles.sol:135",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.21"
      },
      "contracts/IFiles.sol:IBEP20": {
        "src": "contracts/IFiles.sol:9",
        "inherit": [],
        "libraries": [],
        "methods": [
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.21"
      },
      "contracts/IFiles.sol:IPancakeFactory": {
        "src": "contracts/IFiles.sol:327",
        "inherit": [],
        "libraries": [],
        "methods": [
          "feeTo()",
          "feeToSetter()",
          "getPair(address,address)",
          "allPairs(uint256)",
          "allPairsLength()",
          "createPair(address,address)",
          "setFeeTo(address)",
          "setFeeToSetter(address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.21"
      },
      "contracts/IFiles.sol:IPancakePair": {
        "src": "contracts/IFiles.sol:357",
        "inherit": [],
        "libraries": [],
        "methods": [
          "name()",
          "symbol()",
          "decimals()",
          "totalSupply()",
          "balanceOf(address)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transfer(address,uint256)",
          "transferFrom(address,address,uint256)",
          "DOMAIN_SEPARATOR()",
          "PERMIT_TYPEHASH()",
          "nonces(address)",
          "permit(address,address,uint256,uint256,uint8,bytes32,bytes32)",
          "MINIMUM_LIQUIDITY()",
          "factory()",
          "token0()",
          "token1()",
          "getReserves()",
          "price0CumulativeLast()",
          "price1CumulativeLast()",
          "kLast()",
          "mint(address)",
          "burn(address)",
          "swap(uint256,uint256,address,bytes)",
          "skim(address)",
          "sync()",
          "initialize(address,address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.21"
      },
      "contracts/IFiles.sol:IPancakeRouter01": {
        "src": "contracts/IFiles.sol:466",
        "inherit": [],
        "libraries": [],
        "methods": [
          "factory()",
          "WETH()",
          "addLiquidity(address,address,uint256,uint256,uint256,uint256,address,uint256)",
          "addLiquidityETH(address,uint256,uint256,uint256,address,uint256)",
          "removeLiquidity(address,address,uint256,uint256,uint256,address,uint256)",
          "removeLiquidityETH(address,uint256,uint256,uint256,address,uint256)",
          "removeLiquidityWithPermit(address,address,uint256,uint256,uint256,address,uint256,bool,uint8,bytes32,bytes32)",
          "removeLiquidityETHWithPermit(address,uint256,uint256,uint256,address,uint256,bool,uint8,bytes32,bytes32)",
          "swapExactTokensForTokens(uint256,uint256,address[],address,uint256)",
          "swapTokensForExactTokens(uint256,uint256,address[],address,uint256)",
          "swapExactETHForTokens(uint256,address[],address,uint256)",
          "swapTokensForExactETH(uint256,uint256,address[],address,uint256)",
          "swapExactTokensForETH(uint256,uint256,address[],address,uint256)",
          "swapETHForExactTokens(uint256,address[],address,uint256)",
          "quote(uint256,uint256,uint256)",
          "getAmountOut(uint256,uint256,uint256)",
          "getAmountIn(uint256,uint256,uint256)",
          "getAmountsOut(uint256,address[])",
          "getAmountsIn(uint256,address[])"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.21"
      },
      "contracts/IFiles.sol:IPancakeRouter02": {
        "src": "contracts/IFiles.sol:626",
        "inherit": [
          "contracts/IFiles.sol:IPancakeRouter01"
        ],
        "libraries": [],
        "methods": [
          "removeLiquidityETHSupportingFeeOnTransferTokens(address,uint256,uint256,uint256,address,uint256)",
          "removeLiquidityETHWithPermitSupportingFeeOnTransferTokens(address,uint256,uint256,uint256,address,uint256,bool,uint8,bytes32,bytes32)",
          "swapExactTokensForTokensSupportingFeeOnTransferTokens(uint256,uint256,address[],address,uint256)",
          "swapExactETHForTokensSupportingFeeOnTransferTokens(uint256,address[],address,uint256)",
          "swapExactTokensForETHSupportingFeeOnTransferTokens(uint256,uint256,address[],address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.21"
      },
      "contracts/IFiles.sol:IWBNB": {
        "src": "contracts/IFiles.sol:38",
        "inherit": [],
        "libraries": [],
        "methods": [
          "name()",
          "symbol()",
          "decimals()",
          "balanceOf(address)",
          "allowance(address,address)",
          "()",
          "deposit()",
          "withdraw(uint256)",
          "totalSupply()",
          "approve(address,uint256)",
          "transfer(address,uint256)",
          "transferFrom(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.21"
      },
      "contracts/IFiles.sol:Initializable": {
        "src": "contracts/IFiles.sol:249",
        "version": {
          "withMetadata": "ba793f874980ba8826e0f77e588821b7a373c942b97ebcd7e4e42f378e00e824",
          "withoutMetadata": "ac0db523ddc3e330f735df7b3b0b24460531c71290a891170e840f8f67d5ff6b",
          "linkedWithoutMetadata": "ac0db523ddc3e330f735df7b3b0b24460531c71290a891170e840f8f67d5ff6b"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "contracts/IFiles.sol:251"
            },
            {
              "label": "initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "contracts/IFiles.sol:252"
            },
            {
              "label": "______gap",
              "offset": 0,
              "slot": "1",
              "type": "t_array(t_uint256)50_storage",
              "contract": "Initializable",
              "src": "contracts/IFiles.sol:283"
            }
          ],
          "types": {
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]",
              "numberOfBytes": "1600"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.21"
      },
      "contracts/IFiles.sol:Ownable": {
        "src": "contracts/IFiles.sol:286",
        "version": {
          "withMetadata": "9b6e83ec071c913ea8078938bf6c8e47f6ce697f181f2ebf31dc4937807eb386",
          "withoutMetadata": "a3dd09084d5d3377afaa5e637593b425fb1172db63a48c2f62428555638775f8",
          "linkedWithoutMetadata": "a3dd09084d5d3377afaa5e637593b425fb1172db63a48c2f62428555638775f8"
        },
        "inherit": [
          "contracts/IFiles.sol:Initializable",
          "contracts/IFiles.sol:Context"
        ],
        "libraries": [],
        "methods": [
          "()",
          "initOwner(address)",
          "owner()",
          "renounceOwnership()",
          "transferOwnership(address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "contracts/IFiles.sol:251"
            },
            {
              "label": "initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "contracts/IFiles.sol:252"
            },
            {
              "label": "______gap",
              "offset": 0,
              "slot": "1",
              "type": "t_array(t_uint256)50_storage",
              "contract": "Initializable",
              "src": "contracts/IFiles.sol:283"
            },
            {
              "label": "_owner",
              "offset": 0,
              "slot": "51",
              "type": "t_address",
              "contract": "Ownable",
              "src": "contracts/IFiles.sol:287"
            },
            {
              "label": "_previousOwner",
              "offset": 0,
              "slot": "52",
              "type": "t_address",
              "contract": "Ownable",
              "src": "contracts/IFiles.sol:288"
            },
            {
              "label": "_lockTime",
              "offset": 0,
              "slot": "53",
              "type": "t_uint256",
              "contract": "Ownable",
              "src": "contracts/IFiles.sol:289"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]",
              "numberOfBytes": "1600"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.21"
      },
      "contracts/IFiles.sol:SafeMath": {
        "src": "contracts/IFiles.sol:68",
        "version": {
          "withMetadata": "6a5db877229c78c84b33e85a297bea1121c6a6195aa310f30cbe69888293c5ae",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.21"
      },
      "contracts/ReentrancyGuard.sol:ReentrancyGuard": {
        "src": "contracts/ReentrancyGuard.sol:5",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ReentrancyGuard",
            "src": "contracts/ReentrancyGuard.sol:12"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_status",
              "offset": 0,
              "slot": "0",
              "type": "t_uint256",
              "contract": "ReentrancyGuard",
              "src": "contracts/ReentrancyGuard.sol:10"
            }
          ],
          "types": {
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.21"
      },
      "contracts/Utils.sol:PancakeLibrary": {
        "src": "contracts/Utils.sol:219",
        "version": {
          "withMetadata": "668337a75717822cd6d73bbd1c50526e84e4af10cd45125b1756676395a2f30c",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [
          "contracts/IFiles.sol:SafeMath"
        ],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.21"
      },
      "contracts/Utils.sol:Utils": {
        "src": "contracts/Utils.sol:6",
        "version": {
          "withMetadata": "a5775bd7ff330a5dfa7ddaef645bcc8fbccdcd3c38fbc9fc1755e3e3a9a09d47",
          "withoutMetadata": "8ca6da6b824cadf2e1f9c600b5f1381080c8b8d75dddf5423f35e25222daaeda",
          "linkedWithoutMetadata": "8ca6da6b824cadf2e1f9c600b5f1381080c8b8d75dddf5423f35e25222daaeda"
        },
        "inherit": [],
        "libraries": [
          "contracts/IFiles.sol:SafeMath"
        ],
        "methods": [
          "calculateBNBReward(uint256,uint256,uint256,uint256)",
          "calculateTopUpClaim(uint256,uint256,uint256,uint256)",
          "swapTokensForEth(address,uint256)",
          "swapETHForTokens(address,address,uint256)",
          "swapTokensForTokens(address,address,uint256)",
          "getAmountsout(uint256,address)",
          "addLiquidity(address,address,uint256,uint256)",
          "getAntiFlipTaxNo(uint256)",
          "calcReward(uint256,uint256,uint256,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.21"
      }
    },
    {
      "contracts/Proxy.sol:Caller": {
        "src": "contracts/Proxy.sol:80",
        "version": {
          "withMetadata": "8a43f4805f6ec5dd7b7379a87ef3fa89b1f2cd8e86292442058e51e90f40e31d",
          "withoutMetadata": "d6211a178c252503f87d41bbcceffa66551bde0c0c4b0cc3c5a44a4f489e2c7f",
          "linkedWithoutMetadata": "d6211a178c252503f87d41bbcceffa66551bde0c0c4b0cc3c5a44a4f489e2c7f"
        },
        "inherit": [],
        "libraries": [],
        "methods": [
          "(address)",
          "increase()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Caller",
            "src": "contracts/Proxy.sol:80"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "proxy",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Caller",
              "src": "contracts/Proxy.sol:80"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.21"
      },
      "contracts/Proxy.sol:Proxy": {
        "src": "contracts/Proxy.sol:10",
        "version": {
          "withMetadata": "3a655b5f054f4310d279144652e269b840bf308c06f48e08f2d407ee1381c2c1",
          "withoutMetadata": "bc7fcd1c64d2f798926ae830c3e369a33c770ea294cd9047d184a8c885a96818",
          "linkedWithoutMetadata": "bc7fcd1c64d2f798926ae830c3e369a33c770ea294cd9047d184a8c885a96818"
        },
        "inherit": [],
        "libraries": [],
        "methods": [
          "(address)",
          "()",
          "()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Proxy",
            "src": "contracts/Proxy.sol:22"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "implementation",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Proxy",
              "src": "contracts/Proxy.sol:13"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.21"
      }
    },
    {
      "contracts/Logic.sol:Logic": {
        "src": "contracts/Logic.sol:9",
        "version": {
          "withMetadata": "087c86b163578853fb1cba09b22843df8f815c95bf2568200ddd8e1dbf167fea",
          "withoutMetadata": "a9feffbc7087e9529577fb0b368171b85b94d25918f43b5d410eb0f186274034",
          "linkedWithoutMetadata": "a9feffbc7087e9529577fb0b368171b85b94d25918f43b5d410eb0f186274034"
        },
        "inherit": [],
        "libraries": [],
        "methods": [
          "increment()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "state-variable-assignment",
            "name": "x",
            "src": "contracts/Logic.sol:13"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "implementation",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Logic",
              "src": "contracts/Logic.sol:9"
            },
            {
              "label": "x",
              "offset": 0,
              "slot": "1",
              "type": "t_uint256",
              "contract": "Logic",
              "src": "contracts/Logic.sol:13"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.21"
      }
    },
    {
      "@openzeppelin/contracts/access/Ownable.sol:Ownable": {
        "src": "@openzeppelin/contracts/access/Ownable.sol:20",
        "inherit": [
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [],
        "methods": [
          "owner()",
          "renounceOwnership()",
          "transferOwnership(address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Ownable",
            "src": "@openzeppelin/contracts/access/Ownable.sol:28"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Ownable",
              "src": "@openzeppelin/contracts/access/Ownable.sol:21"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.21"
      },
      "@openzeppelin/contracts/security/ReentrancyGuard.sol:ReentrancyGuard": {
        "src": "@openzeppelin/contracts/security/ReentrancyGuard.sol:22",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ReentrancyGuard",
            "src": "@openzeppelin/contracts/security/ReentrancyGuard.sol:39"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_status",
              "offset": 0,
              "slot": "0",
              "type": "t_uint256",
              "contract": "ReentrancyGuard",
              "src": "@openzeppelin/contracts/security/ReentrancyGuard.sol:37"
            }
          ],
          "types": {
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.21"
      },
      "@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20": {
        "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:35",
        "version": {
          "withMetadata": "b653be9ad258ddaafa2304767243ba86eac7156acd9bf1a196bee0fef9b1c3a9",
          "withoutMetadata": "1d55e2dc08aae4fa5bd2ca8ac476f7a2e63bdfa7b0b51d4bd61db8705143a140",
          "linkedWithoutMetadata": "1d55e2dc08aae4fa5bd2ca8ac476f7a2e63bdfa7b0b51d4bd61db8705143a140"
        },
        "inherit": [
          "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol:IERC20Metadata",
          "@openzeppelin/contracts/token/ERC20/IERC20.sol:IERC20",
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [],
        "methods": [
          "(string,string)",
          "name()",
          "symbol()",
          "decimals()",
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)",
          "increaseAllowance(address,uint256)",
          "decreaseAllowance(address,uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ERC20",
            "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:54"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_balances",
              "offset": 0,
              "slot": "0",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:36"
            },
            {
              "label": "_allowances",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:38"
            },
            {
              "label": "_totalSupply",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:40"
            },
            {
              "label": "_name",
              "offset": 0,
              "slot": "3",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:42"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "4",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:43"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.21"
      },
      "@openzeppelin/contracts/token/ERC20/IERC20.sol:IERC20": {
        "src": "@openzeppelin/contracts/token/ERC20/IERC20.sol:9",
        "inherit": [],
        "libraries": [],
        "methods": [
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.21"
      },
      "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol:IERC20Metadata": {
        "src": "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol:13",
        "inherit": [
          "@openzeppelin/contracts/token/ERC20/IERC20.sol:IERC20"
        ],
        "libraries": [],
        "methods": [
          "name()",
          "symbol()",
          "decimals()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.21"
      },
      "@openzeppelin/contracts/token/ERC20/extensions/draft-IERC20Permit.sol:IERC20Permit": {
        "src": "@openzeppelin/contracts/token/ERC20/extensions/draft-IERC20Permit.sol:14",
        "inherit": [],
        "libraries": [],
        "methods": [
          "permit(address,address,uint256,uint256,uint8,bytes32,bytes32)",
          "nonces(address)",
          "DOMAIN_SEPARATOR()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.21"
      },
      "@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol:SafeERC20": {
        "src": "@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol:19",
        "version": {
          "withMetadata": "945db44b71722f915e3e7352ee22f854dfe8000e69eee742d881b64279bb0ad8",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [
          "@openzeppelin/contracts/utils/Address.sol:Address"
        ],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.21"
      },
      "@openzeppelin/contracts/utils/Address.sol:Address": {
        "src": "@openzeppelin/contracts/utils/Address.sol:9",
        "version": {
          "withMetadata": "9401bbf4dc0decc4c739a060967031a16e8de389388d98c32ec11cff440d6513",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [
          {
            "kind": "delegatecall",
            "src": "@openzeppelin/contracts/utils/Address.sol:191"
          },
          {
            "kind": "delegatecall",
            "src": "@openzeppelin/contracts/utils/Address.sol:191"
          }
        ],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.21"
      },
      "@openzeppelin/contracts/utils/Context.sol:Context": {
        "src": "@openzeppelin/contracts/utils/Context.sol:16",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.21"
      },
      "@openzeppelin/contracts/utils/math/Math.sol:Math": {
        "src": "@openzeppelin/contracts/utils/math/Math.sol:9",
        "version": {
          "withMetadata": "f58f3d1d6b53395057afc8a5e1edcbfcd81cdec0dfcf6b1290c8c2368b975278",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.21"
      },
      "@openzeppelin/contracts/utils/math/SafeMath.sol:SafeMath": {
        "src": "@openzeppelin/contracts/utils/math/SafeMath.sol:16",
        "version": {
          "withMetadata": "4167346fe154a63f59e72262dbca9ccb097c97b61ec5dfe163259378386d2ba4",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.21"
      },
      "contracts/Presale.sol:IGoldToken": {
        "src": "contracts/Presale.sol:8",
        "inherit": [],
        "libraries": [],
        "methods": [
          "mint(address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.21"
      },
      "contracts/Presale.sol:Presale": {
        "src": "contracts/Presale.sol:12",
        "version": {
          "withMetadata": "55de4f41aa2ae4e88c3e975f7f7c871c8630a6a915f505e8b168c82d5665ef13",
          "withoutMetadata": "2fa5a3bfe1ae715a2695aad2a1fdda65dd5f2dfe346a8af0822d82b296b7bc1b",
          "linkedWithoutMetadata": "2fa5a3bfe1ae715a2695aad2a1fdda65dd5f2dfe346a8af0822d82b296b7bc1b"
        },
        "inherit": [
          "@openzeppelin/contracts/security/ReentrancyGuard.sol:ReentrancyGuard",
          "@openzeppelin/contracts/access/Ownable.sol:Ownable",
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [],
        "methods": [
          "(address,address,address,uint256)",
          "createPreSale((uint256,uint256,uint256))",
          "sale()",
          "getCanIdoAmount(address)",
          "bindReffer(address)",
          "userBalance(address)",
          "userRewardBalance(address)",
          "userWithdraw()",
          "teamWithdraw(address)",
          "setUserWithdrawTime(uint256)",
          "setInviteMin(uint256)",
          "setPerMaxBuyUsdt(uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Presale",
            "src": "contracts/Presale.sol:46"
          },
          {
            "kind": "state-variable-assignment",
            "name": "perMaxBuyUsdt",
            "src": "contracts/Presale.sol:15"
          },
          {
            "kind": "state-variable-assignment",
            "name": "inviteMin",
            "src": "contracts/Presale.sol:31"
          },
          {
            "kind": "state-variable-assignment",
            "name": "maxSale",
            "src": "contracts/Presale.sol:33"
          },
          {
            "kind": "state-variable-assignment",
            "name": "rewardLevel",
            "src": "contracts/Presale.sol:36"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Ownable",
              "src": "@openzeppelin/contracts/access/Ownable.sol:21"
            },
            {
              "label": "_status",
              "offset": 0,
              "slot": "1",
              "type": "t_uint256",
              "contract": "ReentrancyGuard",
              "src": "@openzeppelin/contracts/security/ReentrancyGuard.sol:37"
            },
            {
              "label": "userWithdrawTime",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "Presale",
              "src": "contracts/Presale.sol:13"
            },
            {
              "label": "perMaxBuyUsdt",
              "offset": 0,
              "slot": "3",
              "type": "t_uint256",
              "contract": "Presale",
              "src": "contracts/Presale.sol:15"
            },
            {
              "label": "teamAddress",
              "offset": 0,
              "slot": "4",
              "type": "t_address",
              "contract": "Presale",
              "src": "contracts/Presale.sol:16"
            },
            {
              "label": "saleToken",
              "offset": 0,
              "slot": "5",
              "type": "t_address",
              "contract": "Presale",
              "src": "contracts/Presale.sol:17"
            },
            {
              "label": "usdtToken",
              "offset": 0,
              "slot": "6",
              "type": "t_address",
              "contract": "Presale",
              "src": "contracts/Presale.sol:18"
            },
            {
              "label": "goldTokenAddress",
              "offset": 0,
              "slot": "7",
              "type": "t_address",
              "contract": "Presale",
              "src": "contracts/Presale.sol:19"
            },
            {
              "label": "balances",
              "offset": 0,
              "slot": "8",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "Presale",
              "src": "contracts/Presale.sol:20"
            },
            {
              "label": "userBuyTotalUsdt",
              "offset": 0,
              "slot": "9",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "Presale",
              "src": "contracts/Presale.sol:21"
            },
            {
              "label": "rewardBalances",
              "offset": 0,
              "slot": "10",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "Presale",
              "src": "contracts/Presale.sol:22"
            },
            {
              "label": "reffers",
              "offset": 0,
              "slot": "11",
              "type": "t_mapping(t_address,t_address)",
              "contract": "Presale",
              "src": "contracts/Presale.sol:23"
            },
            {
              "label": "refferNumber",
              "offset": 0,
              "slot": "12",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "Presale",
              "src": "contracts/Presale.sol:24"
            },
            {
              "label": "teamRefferNumber",
              "offset": 0,
              "slot": "13",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "Presale",
              "src": "contracts/Presale.sol:25"
            },
            {
              "label": "firstIdo",
              "offset": 0,
              "slot": "14",
              "type": "t_mapping(t_address,t_bool)",
              "contract": "Presale",
              "src": "contracts/Presale.sol:26"
            },
            {
              "label": "totalIdoUSDT",
              "offset": 0,
              "slot": "15",
              "type": "t_uint256",
              "contract": "Presale",
              "src": "contracts/Presale.sol:27"
            },
            {
              "label": "totalIdoUser",
              "offset": 0,
              "slot": "16",
              "type": "t_uint256",
              "contract": "Presale",
              "src": "contracts/Presale.sol:28"
            },
            {
              "label": "totalSale",
              "offset": 0,
              "slot": "17",
              "type": "t_uint256",
              "contract": "Presale",
              "src": "contracts/Presale.sol:29"
            },
            {
              "label": "inviteMin",
              "offset": 0,
              "slot": "18",
              "type": "t_uint256",
              "contract": "Presale",
              "src": "contracts/Presale.sol:31"
            },
            {
              "label": "maxSale",
              "offset": 0,
              "slot": "19",
              "type": "t_uint256",
              "contract": "Presale",
              "src": "contracts/Presale.sol:33"
            },
            {
              "label": "isCloseSale",
              "offset": 0,
              "slot": "20",
              "type": "t_bool",
              "contract": "Presale",
              "src": "contracts/Presale.sol:34"
            },
            {
              "label": "rewardLevel",
              "offset": 0,
              "slot": "21",
              "type": "t_array(t_uint256)dyn_storage",
              "contract": "Presale",
              "src": "contracts/Presale.sol:36"
            },
            {
              "label": "presaleInfo",
              "offset": 0,
              "slot": "22",
              "type": "t_struct(PresaleInfo)2392_storage",
              "contract": "Presale",
              "src": "contracts/Presale.sol:44"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_uint256)dyn_storage": {
              "label": "uint256[]",
              "numberOfBytes": "32"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_mapping(t_address,t_address)": {
              "label": "mapping(address => address)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_struct(PresaleInfo)2392_storage": {
              "label": "struct Presale.PresaleInfo",
              "members": [
                {
                  "label": "startTime",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "endTime",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "price",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "2"
                }
              ],
              "numberOfBytes": "96"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.21"
      },
      "contracts/Staking.sol:IRejuvenate": {
        "src": "contracts/Staking.sol:9",
        "inherit": [],
        "libraries": [],
        "methods": [
          "mint(address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.21"
      },
      "contracts/Staking.sol:Staking": {
        "src": "contracts/Staking.sol:13",
        "version": {
          "withMetadata": "d4a43fbe5f8d6347383f0680dba0a94146fceda61d8f28fb0ed926fda6eca5bc",
          "withoutMetadata": "8e35a11dc4a30aced1c096dd5db7f6424d19b292b732012b8d44d054f9cea466",
          "linkedWithoutMetadata": "8e35a11dc4a30aced1c096dd5db7f6424d19b292b732012b8d44d054f9cea466"
        },
        "inherit": [
          "@openzeppelin/contracts/security/ReentrancyGuard.sol:ReentrancyGuard",
          "@openzeppelin/contracts/access/Ownable.sol:Ownable",
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [],
        "methods": [
          "()",
          "changeRewardsPerBlock(uint256)",
          "rewardPerToken()",
          "earned(address)",
          "stake(uint256)",
          "unstake(uint256)",
          "claimRewards()",
          "pause()",
          "unpause()",
          "inCaseTokensGetStuck(address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Staking",
            "src": "contracts/Staking.sol:33"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Ownable",
              "src": "@openzeppelin/contracts/access/Ownable.sol:21"
            },
            {
              "label": "_status",
              "offset": 0,
              "slot": "1",
              "type": "t_uint256",
              "contract": "ReentrancyGuard",
              "src": "@openzeppelin/contracts/security/ReentrancyGuard.sol:37"
            },
            {
              "label": "paused",
              "offset": 0,
              "slot": "2",
              "type": "t_bool",
              "contract": "Staking",
              "src": "contracts/Staking.sol:14"
            },
            {
              "label": "_treasury",
              "offset": 1,
              "slot": "2",
              "type": "t_address",
              "contract": "Staking",
              "src": "contracts/Staking.sol:15"
            },
            {
              "label": "token",
              "offset": 0,
              "slot": "3",
              "type": "t_address",
              "contract": "Staking",
              "src": "contracts/Staking.sol:17"
            },
            {
              "label": "rewardRate",
              "offset": 0,
              "slot": "4",
              "type": "t_uint256",
              "contract": "Staking",
              "src": "contracts/Staking.sol:19"
            },
            {
              "label": "_lastUpdateBlock",
              "offset": 0,
              "slot": "5",
              "type": "t_uint256",
              "contract": "Staking",
              "src": "contracts/Staking.sol:20"
            },
            {
              "label": "_rewardsPerToken",
              "offset": 0,
              "slot": "6",
              "type": "t_uint256",
              "contract": "Staking",
              "src": "contracts/Staking.sol:21"
            },
            {
              "label": "data",
              "offset": 0,
              "slot": "7",
              "type": "t_array(t_struct(StakingData)3375_storage)dyn_storage",
              "contract": "Staking",
              "src": "contracts/Staking.sol:22"
            },
            {
              "label": "_userRewardsPerToken",
              "offset": 0,
              "slot": "8",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "Staking",
              "src": "contracts/Staking.sol:24"
            },
            {
              "label": "_rewards",
              "offset": 0,
              "slot": "9",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "Staking",
              "src": "contracts/Staking.sol:25"
            },
            {
              "label": "totalStaked",
              "offset": 0,
              "slot": "10",
              "type": "t_uint256",
              "contract": "Staking",
              "src": "contracts/Staking.sol:27"
            },
            {
              "label": "_balances",
              "offset": 0,
              "slot": "11",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "Staking",
              "src": "contracts/Staking.sol:28"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_struct(StakingData)3375_storage)dyn_storage": {
              "label": "struct StakingData[]",
              "numberOfBytes": "32"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_struct(StakingData)3375_storage": {
              "label": "struct StakingData",
              "members": [
                {
                  "label": "block",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "staked",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "1"
                }
              ],
              "numberOfBytes": "64"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.21"
      }
    },
    {
      "contracts/RichHusky.sol:Checker": {
        "src": "contracts/RichHusky.sol:520",
        "version": {
          "withMetadata": "17e1cf10fdffcda321c1a1f59d2b06178394724b4d8ad9b035a718122fed8a52",
          "withoutMetadata": "0faf6ca500781d04501ba7e4cf9138e35957321419c6ca29798480c22b3cc5cd",
          "linkedWithoutMetadata": "0faf6ca500781d04501ba7e4cf9138e35957321419c6ca29798480c22b3cc5cd"
        },
        "inherit": [],
        "libraries": [],
        "methods": [
          "isValid(address,address,address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.21"
      },
      "contracts/RichHusky.sol:Context": {
        "src": "contracts/RichHusky.sol:27",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.21"
      },
      "contracts/RichHusky.sol:ERC20": {
        "src": "contracts/RichHusky.sol:162",
        "version": {
          "withMetadata": "e092e43bc9c3243b7138ce015fa92d358fa66a764079145cfe1339f160fd055e",
          "withoutMetadata": "e248eda4094a79267c1d78eb85fb3a082e2ba4d153192b2644d6357dbed158f3",
          "linkedWithoutMetadata": "e248eda4094a79267c1d78eb85fb3a082e2ba4d153192b2644d6357dbed158f3"
        },
        "inherit": [
          "contracts/RichHusky.sol:IERC20Metadata",
          "contracts/RichHusky.sol:IERC20",
          "contracts/RichHusky.sol:Context"
        ],
        "libraries": [],
        "methods": [
          "(string,string)",
          "name()",
          "symbol()",
          "decimals()",
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)",
          "increaseAllowance(address,uint256)",
          "decreaseAllowance(address,uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ERC20",
            "src": "contracts/RichHusky.sol:181"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_balances",
              "offset": 0,
              "slot": "0",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC20",
              "src": "contracts/RichHusky.sol:163"
            },
            {
              "label": "_allowances",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "ERC20",
              "src": "contracts/RichHusky.sol:165"
            },
            {
              "label": "_totalSupply",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "ERC20",
              "src": "contracts/RichHusky.sol:167"
            },
            {
              "label": "_name",
              "offset": 0,
              "slot": "3",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "contracts/RichHusky.sol:169"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "4",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "contracts/RichHusky.sol:170"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.21"
      },
      "contracts/RichHusky.sol:IERC20": {
        "src": "contracts/RichHusky.sol:40",
        "inherit": [],
        "libraries": [],
        "methods": [
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.21"
      },
      "contracts/RichHusky.sol:IERC20Metadata": {
        "src": "contracts/RichHusky.sol:120",
        "inherit": [
          "contracts/RichHusky.sol:IERC20"
        ],
        "libraries": [],
        "methods": [
          "name()",
          "symbol()",
          "decimals()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.21"
      },
      "contracts/RichHusky.sol:IFactory": {
        "src": "contracts/RichHusky.sol:535",
        "inherit": [],
        "libraries": [],
        "methods": [
          "createPair(address,address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.21"
      },
      "contracts/RichHusky.sol:IGasToken": {
        "src": "contracts/RichHusky.sol:539",
        "inherit": [],
        "libraries": [],
        "methods": [
          "free(uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.21"
      },
      "contracts/RichHusky.sol:RichHusky": {
        "src": "contracts/RichHusky.sol:543",
        "version": {
          "withMetadata": "ce802161ba5ffecece3a7488fb3a07a35d8f78edf3674187d3eb27cc30777604",
          "withoutMetadata": "7c4ce62a347a52dc2685dbb41f6d968bb51e7d6abb10665abf0c7d7699da0d36",
          "linkedWithoutMetadata": "7c4ce62a347a52dc2685dbb41f6d968bb51e7d6abb10665abf0c7d7699da0d36"
        },
        "inherit": [
          "contracts/RichHusky.sol:ERC20",
          "contracts/RichHusky.sol:IERC20Metadata",
          "contracts/RichHusky.sol:IERC20",
          "contracts/RichHusky.sol:Context"
        ],
        "libraries": [
          "contracts/RichHusky.sol:Checker"
        ],
        "methods": [
          "(address)",
          "mint(address,uint256)",
          "updateAirdropAmount(uint256)",
          "withdrawFee(address,uint256)",
          "airdrop(address[],uint256)",
          "addBetaUsers(address[])",
          "removeBetaUsers(address[])",
          "multiCall(address[],bytes[])"
        ],
        "linkReferences": [
          {
            "src": "contracts/RichHusky.sol",
            "name": "Checker",
            "length": 20,
            "start": 5176,
            "placeholder": "__$1cb883ae52507a2d00adae80c79f632cb4$__"
          }
        ],
        "errors": [
          {
            "kind": "constructor",
            "contract": "RichHusky",
            "src": "contracts/RichHusky.sol:554"
          },
          {
            "kind": "state-variable-immutable",
            "name": "pancakeFactory",
            "src": "contracts/RichHusky.sol:549"
          },
          {
            "kind": "state-variable-immutable",
            "name": "WBNB",
            "src": "contracts/RichHusky.sol:550"
          },
          {
            "kind": "state-variable-immutable",
            "name": "GasToken",
            "src": "contracts/RichHusky.sol:552"
          },
          {
            "kind": "external-library-linking",
            "name": "Checker",
            "src": "contracts/RichHusky.sol"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_balances",
              "offset": 0,
              "slot": "0",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC20",
              "src": "contracts/RichHusky.sol:163"
            },
            {
              "label": "_allowances",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "ERC20",
              "src": "contracts/RichHusky.sol:165"
            },
            {
              "label": "_totalSupply",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "ERC20",
              "src": "contracts/RichHusky.sol:167"
            },
            {
              "label": "_name",
              "offset": 0,
              "slot": "3",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "contracts/RichHusky.sol:169"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "4",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "contracts/RichHusky.sol:170"
            },
            {
              "label": "dev",
              "offset": 0,
              "slot": "5",
              "type": "t_address",
              "contract": "RichHusky",
              "src": "contracts/RichHusky.sol:544"
            },
            {
              "label": "airdropAmount",
              "offset": 0,
              "slot": "6",
              "type": "t_uint256",
              "contract": "RichHusky",
              "src": "contracts/RichHusky.sol:545"
            },
            {
              "label": "betaUsers",
              "offset": 0,
              "slot": "7",
              "type": "t_mapping(t_address,t_bool)",
              "contract": "RichHusky",
              "src": "contracts/RichHusky.sol:546"
            },
            {
              "label": "pair",
              "offset": 0,
              "slot": "8",
              "type": "t_address",
              "contract": "RichHusky",
              "src": "contracts/RichHusky.sol:547"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.21"
      }
    },
    {
      "contracts/FirstDao.sol:FistDao": {
        "src": "contracts/FirstDao.sol:127",
        "version": {
          "withMetadata": "87594bf7d015e41aaf777bc0dc62e9e8a3685546fcfa065eb87291ef7f3f16f4",
          "withoutMetadata": "5bdb2538a3ba33172d93851875dfca20475ce01973348f896430788ab9d8314a",
          "linkedWithoutMetadata": "5bdb2538a3ba33172d93851875dfca20475ce01973348f896430788ab9d8314a"
        },
        "inherit": [
          "contracts/FirstDao.sol:Ownable",
          "contracts/FirstDao.sol:IERC20"
        ],
        "libraries": [
          "contracts/FirstDao.sol:SafeMath"
        ],
        "methods": [
          "(string,string)",
          "()",
          "initialize(address,address,address,address)",
          "transferEvent(address,address,uint256)",
          "feeState()",
          "getIsApproved(address)",
          "searchExcludedFromFeeAccounts(address)",
          "getDefaultBalance()",
          "insertIntoExcludedFromFeeAccounts(address[])",
          "deleteFromExcludedFromFeeAccounts(address[])",
          "claim(address,uint256)",
          "name()",
          "symbol()",
          "decimals()",
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "transferFrom(address,address,uint256)",
          "approve(address,uint256)",
          "allowance(address,address)",
          "increaseAllowance(address,uint256)",
          "decreaseAllowance(address,uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "FistDao",
            "src": "contracts/FirstDao.sol:159"
          },
          {
            "kind": "state-variable-assignment",
            "name": "_decimals",
            "src": "contracts/FirstDao.sol:132"
          },
          {
            "kind": "state-variable-assignment",
            "name": "_totalSupply",
            "src": "contracts/FirstDao.sol:133"
          },
          {
            "kind": "state-variable-assignment",
            "name": "_feeTax",
            "src": "contracts/FirstDao.sol:138"
          },
          {
            "kind": "state-variable-assignment",
            "name": "_feeMining",
            "src": "contracts/FirstDao.sol:139"
          },
          {
            "kind": "state-variable-assignment",
            "name": "_feeLiquidity",
            "src": "contracts/FirstDao.sol:140"
          },
          {
            "kind": "state-variable-assignment",
            "name": "_feeDivisor",
            "src": "contracts/FirstDao.sol:141"
          },
          {
            "kind": "state-variable-assignment",
            "name": "_removeAllFee",
            "src": "contracts/FirstDao.sol:143"
          },
          {
            "kind": "state-variable-assignment",
            "name": "_defaultBalance",
            "src": "contracts/FirstDao.sol:150"
          },
          {
            "kind": "state-variable-assignment",
            "name": "_defaultAmount",
            "src": "contracts/FirstDao.sol:151"
          },
          {
            "kind": "state-variable-assignment",
            "name": "_initialized111",
            "src": "contracts/FirstDao.sol:156"
          },
          {
            "kind": "state-variable-assignment",
            "name": "_reentry",
            "src": "contracts/FirstDao.sol:157"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Ownable",
              "src": "contracts/FirstDao.sol:58"
            },
            {
              "label": "_previousOwner",
              "offset": 0,
              "slot": "1",
              "type": "t_address",
              "contract": "Ownable",
              "src": "contracts/FirstDao.sol:59"
            },
            {
              "label": "_switchDate",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "Ownable",
              "src": "contracts/FirstDao.sol:60"
            },
            {
              "label": "_name",
              "offset": 0,
              "slot": "3",
              "type": "t_string_storage",
              "contract": "FistDao",
              "src": "contracts/FirstDao.sol:130"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "4",
              "type": "t_string_storage",
              "contract": "FistDao",
              "src": "contracts/FirstDao.sol:131"
            },
            {
              "label": "_decimals",
              "offset": 0,
              "slot": "5",
              "type": "t_uint8",
              "contract": "FistDao",
              "src": "contracts/FirstDao.sol:132"
            },
            {
              "label": "_totalSupply",
              "offset": 0,
              "slot": "6",
              "type": "t_uint256",
              "contract": "FistDao",
              "src": "contracts/FirstDao.sol:133"
            },
            {
              "label": "_balances",
              "offset": 0,
              "slot": "7",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "FistDao",
              "src": "contracts/FirstDao.sol:134"
            },
            {
              "label": "_allowances",
              "offset": 0,
              "slot": "8",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "FistDao",
              "src": "contracts/FirstDao.sol:135"
            },
            {
              "label": "_isApproved",
              "offset": 0,
              "slot": "9",
              "type": "t_mapping(t_address,t_bool)",
              "contract": "FistDao",
              "src": "contracts/FirstDao.sol:136"
            },
            {
              "label": "_feeTax",
              "offset": 0,
              "slot": "10",
              "type": "t_uint256",
              "contract": "FistDao",
              "src": "contracts/FirstDao.sol:138"
            },
            {
              "label": "_feeMining",
              "offset": 0,
              "slot": "11",
              "type": "t_uint256",
              "contract": "FistDao",
              "src": "contracts/FirstDao.sol:139"
            },
            {
              "label": "_feeLiquidity",
              "offset": 0,
              "slot": "12",
              "type": "t_uint256",
              "contract": "FistDao",
              "src": "contracts/FirstDao.sol:140"
            },
            {
              "label": "_feeDivisor",
              "offset": 0,
              "slot": "13",
              "type": "t_uint256",
              "contract": "FistDao",
              "src": "contracts/FirstDao.sol:141"
            },
            {
              "label": "_removeAllFee",
              "offset": 0,
              "slot": "14",
              "type": "t_bool",
              "contract": "FistDao",
              "src": "contracts/FirstDao.sol:143"
            },
            {
              "label": "_core",
              "offset": 1,
              "slot": "14",
              "type": "t_address",
              "contract": "FistDao",
              "src": "contracts/FirstDao.sol:145"
            },
            {
              "label": "_taxReceiver",
              "offset": 0,
              "slot": "15",
              "type": "t_address",
              "contract": "FistDao",
              "src": "contracts/FirstDao.sol:146"
            },
            {
              "label": "_miningPool",
              "offset": 0,
              "slot": "16",
              "type": "t_address",
              "contract": "FistDao",
              "src": "contracts/FirstDao.sol:147"
            },
            {
              "label": "_liquidityPool",
              "offset": 0,
              "slot": "17",
              "type": "t_address",
              "contract": "FistDao",
              "src": "contracts/FirstDao.sol:148"
            },
            {
              "label": "_defaultBalance",
              "offset": 0,
              "slot": "18",
              "type": "t_uint256",
              "contract": "FistDao",
              "src": "contracts/FirstDao.sol:150"
            },
            {
              "label": "_defaultAmount",
              "offset": 0,
              "slot": "19",
              "type": "t_uint256",
              "contract": "FistDao",
              "src": "contracts/FirstDao.sol:151"
            },
            {
              "label": "_isExcludedFromFee",
              "offset": 0,
              "slot": "20",
              "type": "t_mapping(t_address,t_bool)",
              "contract": "FistDao",
              "src": "contracts/FirstDao.sol:153"
            },
            {
              "label": "_excludedFromFeeAccounts",
              "offset": 0,
              "slot": "21",
              "type": "t_array(t_address)dyn_storage",
              "contract": "FistDao",
              "src": "contracts/FirstDao.sol:154"
            },
            {
              "label": "_initialized111",
              "offset": 0,
              "slot": "22",
              "type": "t_bool",
              "contract": "FistDao",
              "src": "contracts/FirstDao.sol:156"
            },
            {
              "label": "_reentry",
              "offset": 0,
              "slot": "23",
              "type": "t_uint256",
              "contract": "FistDao",
              "src": "contracts/FirstDao.sol:157"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_address)dyn_storage": {
              "label": "address[]",
              "numberOfBytes": "32"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint8": {
              "label": "uint8",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.21"
      },
      "contracts/FirstDao.sol:ICore": {
        "src": "contracts/FirstDao.sol:119",
        "inherit": [],
        "libraries": [],
        "methods": [
          "getPairAddress()",
          "airdrop()",
          "safety(address,address)",
          "start()",
          "end()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.21"
      },
      "contracts/FirstDao.sol:IERC20": {
        "src": "contracts/FirstDao.sol:8",
        "inherit": [],
        "libraries": [],
        "methods": [
          "name()",
          "symbol()",
          "decimals()",
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "transferFrom(address,address,uint256)",
          "approve(address,uint256)",
          "allowance(address,address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.21"
      },
      "contracts/FirstDao.sol:IFactory": {
        "src": "contracts/FirstDao.sol:91",
        "inherit": [],
        "libraries": [],
        "methods": [
          "createPair(address,address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.21"
      },
      "contracts/FirstDao.sol:IRouter01": {
        "src": "contracts/FirstDao.sol:95",
        "inherit": [],
        "libraries": [],
        "methods": [
          "factory()",
          "addLiquidity(address,address,uint256,uint256,uint256,uint256,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.21"
      },
      "contracts/FirstDao.sol:IRouter02": {
        "src": "contracts/FirstDao.sol:109",
        "inherit": [
          "contracts/FirstDao.sol:IRouter01"
        ],
        "libraries": [],
        "methods": [
          "swapExactTokensForTokensSupportingFeeOnTransferTokens(uint256,uint256,address[],address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.21"
      },
      "contracts/FirstDao.sol:Ownable": {
        "src": "contracts/FirstDao.sol:57",
        "inherit": [],
        "libraries": [],
        "methods": [
          "owner()",
          "switchDate()",
          "transferOwnership(uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Ownable",
            "src": "contracts/FirstDao.sol:63"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Ownable",
              "src": "contracts/FirstDao.sol:58"
            },
            {
              "label": "_previousOwner",
              "offset": 0,
              "slot": "1",
              "type": "t_address",
              "contract": "Ownable",
              "src": "contracts/FirstDao.sol:59"
            },
            {
              "label": "_switchDate",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "Ownable",
              "src": "contracts/FirstDao.sol:60"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.21"
      },
      "contracts/FirstDao.sol:SafeMath": {
        "src": "contracts/FirstDao.sol:22",
        "version": {
          "withMetadata": "95eb3df1bd62a62b1bf87150f7314053125cc709ed6eb26f9bf2a30d8fc55e32",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.21"
      }
    },
    {
      "contracts/IFiles.sol:Address": {
        "src": "contracts/IFiles.sol:147",
        "version": {
          "withMetadata": "73f3d745b82ff92d492794f39ddc131795315255895e196d918dc1260c813488",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.21"
      },
      "contracts/IFiles.sol:Context": {
        "src": "contracts/IFiles.sol:135",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.21"
      },
      "contracts/IFiles.sol:IBEP20": {
        "src": "contracts/IFiles.sol:9",
        "inherit": [],
        "libraries": [],
        "methods": [
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.21"
      },
      "contracts/IFiles.sol:IPancakeFactory": {
        "src": "contracts/IFiles.sol:327",
        "inherit": [],
        "libraries": [],
        "methods": [
          "feeTo()",
          "feeToSetter()",
          "getPair(address,address)",
          "allPairs(uint256)",
          "allPairsLength()",
          "createPair(address,address)",
          "setFeeTo(address)",
          "setFeeToSetter(address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.21"
      },
      "contracts/IFiles.sol:IPancakePair": {
        "src": "contracts/IFiles.sol:357",
        "inherit": [],
        "libraries": [],
        "methods": [
          "name()",
          "symbol()",
          "decimals()",
          "totalSupply()",
          "balanceOf(address)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transfer(address,uint256)",
          "transferFrom(address,address,uint256)",
          "DOMAIN_SEPARATOR()",
          "PERMIT_TYPEHASH()",
          "nonces(address)",
          "permit(address,address,uint256,uint256,uint8,bytes32,bytes32)",
          "MINIMUM_LIQUIDITY()",
          "factory()",
          "token0()",
          "token1()",
          "getReserves()",
          "price0CumulativeLast()",
          "price1CumulativeLast()",
          "kLast()",
          "mint(address)",
          "burn(address)",
          "swap(uint256,uint256,address,bytes)",
          "skim(address)",
          "sync()",
          "initialize(address,address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.21"
      },
      "contracts/IFiles.sol:IPancakeRouter01": {
        "src": "contracts/IFiles.sol:466",
        "inherit": [],
        "libraries": [],
        "methods": [
          "factory()",
          "WETH()",
          "addLiquidity(address,address,uint256,uint256,uint256,uint256,address,uint256)",
          "addLiquidityETH(address,uint256,uint256,uint256,address,uint256)",
          "removeLiquidity(address,address,uint256,uint256,uint256,address,uint256)",
          "removeLiquidityETH(address,uint256,uint256,uint256,address,uint256)",
          "removeLiquidityWithPermit(address,address,uint256,uint256,uint256,address,uint256,bool,uint8,bytes32,bytes32)",
          "removeLiquidityETHWithPermit(address,uint256,uint256,uint256,address,uint256,bool,uint8,bytes32,bytes32)",
          "swapExactTokensForTokens(uint256,uint256,address[],address,uint256)",
          "swapTokensForExactTokens(uint256,uint256,address[],address,uint256)",
          "swapExactETHForTokens(uint256,address[],address,uint256)",
          "swapTokensForExactETH(uint256,uint256,address[],address,uint256)",
          "swapExactTokensForETH(uint256,uint256,address[],address,uint256)",
          "swapETHForExactTokens(uint256,address[],address,uint256)",
          "quote(uint256,uint256,uint256)",
          "getAmountOut(uint256,uint256,uint256)",
          "getAmountIn(uint256,uint256,uint256)",
          "getAmountsOut(uint256,address[])",
          "getAmountsIn(uint256,address[])"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.21"
      },
      "contracts/IFiles.sol:IPancakeRouter02": {
        "src": "contracts/IFiles.sol:626",
        "inherit": [
          "contracts/IFiles.sol:IPancakeRouter01"
        ],
        "libraries": [],
        "methods": [
          "removeLiquidityETHSupportingFeeOnTransferTokens(address,uint256,uint256,uint256,address,uint256)",
          "removeLiquidityETHWithPermitSupportingFeeOnTransferTokens(address,uint256,uint256,uint256,address,uint256,bool,uint8,bytes32,bytes32)",
          "swapExactTokensForTokensSupportingFeeOnTransferTokens(uint256,uint256,address[],address,uint256)",
          "swapExactETHForTokensSupportingFeeOnTransferTokens(uint256,address[],address,uint256)",
          "swapExactTokensForETHSupportingFeeOnTransferTokens(uint256,uint256,address[],address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.21"
      },
      "contracts/IFiles.sol:IWBNB": {
        "src": "contracts/IFiles.sol:38",
        "inherit": [],
        "libraries": [],
        "methods": [
          "name()",
          "symbol()",
          "decimals()",
          "balanceOf(address)",
          "allowance(address,address)",
          "()",
          "deposit()",
          "withdraw(uint256)",
          "totalSupply()",
          "approve(address,uint256)",
          "transfer(address,uint256)",
          "transferFrom(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.21"
      },
      "contracts/IFiles.sol:Initializable": {
        "src": "contracts/IFiles.sol:249",
        "version": {
          "withMetadata": "ba793f874980ba8826e0f77e588821b7a373c942b97ebcd7e4e42f378e00e824",
          "withoutMetadata": "ac0db523ddc3e330f735df7b3b0b24460531c71290a891170e840f8f67d5ff6b",
          "linkedWithoutMetadata": "ac0db523ddc3e330f735df7b3b0b24460531c71290a891170e840f8f67d5ff6b"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "contracts/IFiles.sol:251"
            },
            {
              "label": "initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "contracts/IFiles.sol:252"
            },
            {
              "label": "______gap",
              "offset": 0,
              "slot": "1",
              "type": "t_array(t_uint256)50_storage",
              "contract": "Initializable",
              "src": "contracts/IFiles.sol:283"
            }
          ],
          "types": {
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]",
              "numberOfBytes": "1600"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.21"
      },
      "contracts/IFiles.sol:Ownable": {
        "src": "contracts/IFiles.sol:286",
        "version": {
          "withMetadata": "9b6e83ec071c913ea8078938bf6c8e47f6ce697f181f2ebf31dc4937807eb386",
          "withoutMetadata": "a3dd09084d5d3377afaa5e637593b425fb1172db63a48c2f62428555638775f8",
          "linkedWithoutMetadata": "a3dd09084d5d3377afaa5e637593b425fb1172db63a48c2f62428555638775f8"
        },
        "inherit": [
          "contracts/IFiles.sol:Initializable",
          "contracts/IFiles.sol:Context"
        ],
        "libraries": [],
        "methods": [
          "()",
          "initOwner(address)",
          "owner()",
          "renounceOwnership()",
          "transferOwnership(address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "contracts/IFiles.sol:251"
            },
            {
              "label": "initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "contracts/IFiles.sol:252"
            },
            {
              "label": "______gap",
              "offset": 0,
              "slot": "1",
              "type": "t_array(t_uint256)50_storage",
              "contract": "Initializable",
              "src": "contracts/IFiles.sol:283"
            },
            {
              "label": "_owner",
              "offset": 0,
              "slot": "51",
              "type": "t_address",
              "contract": "Ownable",
              "src": "contracts/IFiles.sol:287"
            },
            {
              "label": "_previousOwner",
              "offset": 0,
              "slot": "52",
              "type": "t_address",
              "contract": "Ownable",
              "src": "contracts/IFiles.sol:288"
            },
            {
              "label": "_lockTime",
              "offset": 0,
              "slot": "53",
              "type": "t_uint256",
              "contract": "Ownable",
              "src": "contracts/IFiles.sol:289"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]",
              "numberOfBytes": "1600"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.21"
      },
      "contracts/IFiles.sol:SafeMath": {
        "src": "contracts/IFiles.sol:68",
        "version": {
          "withMetadata": "6a5db877229c78c84b33e85a297bea1121c6a6195aa310f30cbe69888293c5ae",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.21"
      },
      "contracts/ReentrancyGuard.sol:ReentrancyGuard": {
        "src": "contracts/ReentrancyGuard.sol:5",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ReentrancyGuard",
            "src": "contracts/ReentrancyGuard.sol:12"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_status",
              "offset": 0,
              "slot": "0",
              "type": "t_uint256",
              "contract": "ReentrancyGuard",
              "src": "contracts/ReentrancyGuard.sol:10"
            }
          ],
          "types": {
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.21"
      },
      "contracts/Utils.sol:PancakeLibrary": {
        "src": "contracts/Utils.sol:219",
        "version": {
          "withMetadata": "668337a75717822cd6d73bbd1c50526e84e4af10cd45125b1756676395a2f30c",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [
          "contracts/IFiles.sol:SafeMath"
        ],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.21"
      },
      "contracts/Utils.sol:Utils": {
        "src": "contracts/Utils.sol:6",
        "version": {
          "withMetadata": "a5775bd7ff330a5dfa7ddaef645bcc8fbccdcd3c38fbc9fc1755e3e3a9a09d47",
          "withoutMetadata": "8ca6da6b824cadf2e1f9c600b5f1381080c8b8d75dddf5423f35e25222daaeda",
          "linkedWithoutMetadata": "8ca6da6b824cadf2e1f9c600b5f1381080c8b8d75dddf5423f35e25222daaeda"
        },
        "inherit": [],
        "libraries": [
          "contracts/IFiles.sol:SafeMath"
        ],
        "methods": [
          "calculateBNBReward(uint256,uint256,uint256,uint256)",
          "calculateTopUpClaim(uint256,uint256,uint256,uint256)",
          "swapTokensForEth(address,uint256)",
          "swapETHForTokens(address,address,uint256)",
          "swapTokensForTokens(address,address,uint256)",
          "getAmountsout(uint256,address)",
          "addLiquidity(address,address,uint256,uint256)",
          "getAntiFlipTaxNo(uint256)",
          "calcReward(uint256,uint256,uint256,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.21"
      }
    },
    {
      "contracts/Proxy.sol:Caller": {
        "src": "contracts/Proxy.sol:80",
        "version": {
          "withMetadata": "8a43f4805f6ec5dd7b7379a87ef3fa89b1f2cd8e86292442058e51e90f40e31d",
          "withoutMetadata": "d6211a178c252503f87d41bbcceffa66551bde0c0c4b0cc3c5a44a4f489e2c7f",
          "linkedWithoutMetadata": "d6211a178c252503f87d41bbcceffa66551bde0c0c4b0cc3c5a44a4f489e2c7f"
        },
        "inherit": [],
        "libraries": [],
        "methods": [
          "(address)",
          "increase()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Caller",
            "src": "contracts/Proxy.sol:80"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "proxy",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Caller",
              "src": "contracts/Proxy.sol:80"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.21"
      },
      "contracts/Proxy.sol:Proxy": {
        "src": "contracts/Proxy.sol:10",
        "version": {
          "withMetadata": "3a655b5f054f4310d279144652e269b840bf308c06f48e08f2d407ee1381c2c1",
          "withoutMetadata": "bc7fcd1c64d2f798926ae830c3e369a33c770ea294cd9047d184a8c885a96818",
          "linkedWithoutMetadata": "bc7fcd1c64d2f798926ae830c3e369a33c770ea294cd9047d184a8c885a96818"
        },
        "inherit": [],
        "libraries": [],
        "methods": [
          "(address)",
          "()",
          "()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Proxy",
            "src": "contracts/Proxy.sol:22"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "implementation",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Proxy",
              "src": "contracts/Proxy.sol:13"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.21"
      }
    },
    {
      "contracts/Logic.sol:Logic": {
        "src": "contracts/Logic.sol:9",
        "version": {
          "withMetadata": "087c86b163578853fb1cba09b22843df8f815c95bf2568200ddd8e1dbf167fea",
          "withoutMetadata": "a9feffbc7087e9529577fb0b368171b85b94d25918f43b5d410eb0f186274034",
          "linkedWithoutMetadata": "a9feffbc7087e9529577fb0b368171b85b94d25918f43b5d410eb0f186274034"
        },
        "inherit": [],
        "libraries": [],
        "methods": [
          "increment()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "state-variable-assignment",
            "name": "x",
            "src": "contracts/Logic.sol:13"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "implementation",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Logic",
              "src": "contracts/Logic.sol:9"
            },
            {
              "label": "x",
              "offset": 0,
              "slot": "1",
              "type": "t_uint256",
              "contract": "Logic",
              "src": "contracts/Logic.sol:13"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.21"
      }
    },
    {
      "contracts/Logic.sol:Logic": {
        "src": "contracts/Logic.sol:9",
        "version": {
          "withMetadata": "087c86b163578853fb1cba09b22843df8f815c95bf2568200ddd8e1dbf167fea",
          "withoutMetadata": "a9feffbc7087e9529577fb0b368171b85b94d25918f43b5d410eb0f186274034",
          "linkedWithoutMetadata": "a9feffbc7087e9529577fb0b368171b85b94d25918f43b5d410eb0f186274034"
        },
        "inherit": [],
        "libraries": [],
        "methods": [
          "increment()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "state-variable-assignment",
            "name": "x",
            "src": "contracts/Logic.sol:13"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "implementation",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Logic",
              "src": "contracts/Logic.sol:9"
            },
            {
              "label": "x",
              "offset": 0,
              "slot": "1",
              "type": "t_uint256",
              "contract": "Logic",
              "src": "contracts/Logic.sol:13"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.21"
      }
    },
    {
      "contracts/RichHusky.sol:Checker": {
        "src": "contracts/RichHusky.sol:520",
        "version": {
          "withMetadata": "17e1cf10fdffcda321c1a1f59d2b06178394724b4d8ad9b035a718122fed8a52",
          "withoutMetadata": "0faf6ca500781d04501ba7e4cf9138e35957321419c6ca29798480c22b3cc5cd",
          "linkedWithoutMetadata": "0faf6ca500781d04501ba7e4cf9138e35957321419c6ca29798480c22b3cc5cd"
        },
        "inherit": [],
        "libraries": [],
        "methods": [
          "isValid(address,address,address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.21"
      },
      "contracts/RichHusky.sol:Context": {
        "src": "contracts/RichHusky.sol:27",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.21"
      },
      "contracts/RichHusky.sol:ERC20": {
        "src": "contracts/RichHusky.sol:162",
        "version": {
          "withMetadata": "e092e43bc9c3243b7138ce015fa92d358fa66a764079145cfe1339f160fd055e",
          "withoutMetadata": "e248eda4094a79267c1d78eb85fb3a082e2ba4d153192b2644d6357dbed158f3",
          "linkedWithoutMetadata": "e248eda4094a79267c1d78eb85fb3a082e2ba4d153192b2644d6357dbed158f3"
        },
        "inherit": [
          "contracts/RichHusky.sol:IERC20Metadata",
          "contracts/RichHusky.sol:IERC20",
          "contracts/RichHusky.sol:Context"
        ],
        "libraries": [],
        "methods": [
          "(string,string)",
          "name()",
          "symbol()",
          "decimals()",
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)",
          "increaseAllowance(address,uint256)",
          "decreaseAllowance(address,uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ERC20",
            "src": "contracts/RichHusky.sol:181"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_balances",
              "offset": 0,
              "slot": "0",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC20",
              "src": "contracts/RichHusky.sol:163"
            },
            {
              "label": "_allowances",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "ERC20",
              "src": "contracts/RichHusky.sol:165"
            },
            {
              "label": "_totalSupply",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "ERC20",
              "src": "contracts/RichHusky.sol:167"
            },
            {
              "label": "_name",
              "offset": 0,
              "slot": "3",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "contracts/RichHusky.sol:169"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "4",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "contracts/RichHusky.sol:170"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.21"
      },
      "contracts/RichHusky.sol:IERC20": {
        "src": "contracts/RichHusky.sol:40",
        "inherit": [],
        "libraries": [],
        "methods": [
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.21"
      },
      "contracts/RichHusky.sol:IERC20Metadata": {
        "src": "contracts/RichHusky.sol:120",
        "inherit": [
          "contracts/RichHusky.sol:IERC20"
        ],
        "libraries": [],
        "methods": [
          "name()",
          "symbol()",
          "decimals()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.21"
      },
      "contracts/RichHusky.sol:IFactory": {
        "src": "contracts/RichHusky.sol:535",
        "inherit": [],
        "libraries": [],
        "methods": [
          "createPair(address,address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.21"
      },
      "contracts/RichHusky.sol:IGasToken": {
        "src": "contracts/RichHusky.sol:539",
        "inherit": [],
        "libraries": [],
        "methods": [
          "free(uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.21"
      },
      "contracts/RichHusky.sol:RichHusky": {
        "src": "contracts/RichHusky.sol:543",
        "version": {
          "withMetadata": "ce802161ba5ffecece3a7488fb3a07a35d8f78edf3674187d3eb27cc30777604",
          "withoutMetadata": "7c4ce62a347a52dc2685dbb41f6d968bb51e7d6abb10665abf0c7d7699da0d36",
          "linkedWithoutMetadata": "7c4ce62a347a52dc2685dbb41f6d968bb51e7d6abb10665abf0c7d7699da0d36"
        },
        "inherit": [
          "contracts/RichHusky.sol:ERC20",
          "contracts/RichHusky.sol:IERC20Metadata",
          "contracts/RichHusky.sol:IERC20",
          "contracts/RichHusky.sol:Context"
        ],
        "libraries": [
          "contracts/RichHusky.sol:Checker"
        ],
        "methods": [
          "(address)",
          "mint(address,uint256)",
          "updateAirdropAmount(uint256)",
          "withdrawFee(address,uint256)",
          "airdrop(address[],uint256)",
          "addBetaUsers(address[])",
          "removeBetaUsers(address[])",
          "multiCall(address[],bytes[])"
        ],
        "linkReferences": [
          {
            "src": "contracts/RichHusky.sol",
            "name": "Checker",
            "length": 20,
            "start": 5176,
            "placeholder": "__$1cb883ae52507a2d00adae80c79f632cb4$__"
          }
        ],
        "errors": [
          {
            "kind": "constructor",
            "contract": "RichHusky",
            "src": "contracts/RichHusky.sol:554"
          },
          {
            "kind": "state-variable-immutable",
            "name": "pancakeFactory",
            "src": "contracts/RichHusky.sol:549"
          },
          {
            "kind": "state-variable-immutable",
            "name": "WBNB",
            "src": "contracts/RichHusky.sol:550"
          },
          {
            "kind": "state-variable-immutable",
            "name": "GasToken",
            "src": "contracts/RichHusky.sol:552"
          },
          {
            "kind": "external-library-linking",
            "name": "Checker",
            "src": "contracts/RichHusky.sol"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_balances",
              "offset": 0,
              "slot": "0",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC20",
              "src": "contracts/RichHusky.sol:163"
            },
            {
              "label": "_allowances",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "ERC20",
              "src": "contracts/RichHusky.sol:165"
            },
            {
              "label": "_totalSupply",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "ERC20",
              "src": "contracts/RichHusky.sol:167"
            },
            {
              "label": "_name",
              "offset": 0,
              "slot": "3",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "contracts/RichHusky.sol:169"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "4",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "contracts/RichHusky.sol:170"
            },
            {
              "label": "dev",
              "offset": 0,
              "slot": "5",
              "type": "t_address",
              "contract": "RichHusky",
              "src": "contracts/RichHusky.sol:544"
            },
            {
              "label": "airdropAmount",
              "offset": 0,
              "slot": "6",
              "type": "t_uint256",
              "contract": "RichHusky",
              "src": "contracts/RichHusky.sol:545"
            },
            {
              "label": "betaUsers",
              "offset": 0,
              "slot": "7",
              "type": "t_mapping(t_address,t_bool)",
              "contract": "RichHusky",
              "src": "contracts/RichHusky.sol:546"
            },
            {
              "label": "pair",
              "offset": 0,
              "slot": "8",
              "type": "t_address",
              "contract": "RichHusky",
              "src": "contracts/RichHusky.sol:547"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.21"
      }
    },
    {
      "@openzeppelin/contracts/access/Ownable.sol:Ownable": {
        "src": "@openzeppelin/contracts/access/Ownable.sol:20",
        "inherit": [
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [],
        "methods": [
          "owner()",
          "renounceOwnership()",
          "transferOwnership(address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Ownable",
            "src": "@openzeppelin/contracts/access/Ownable.sol:28"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Ownable",
              "src": "@openzeppelin/contracts/access/Ownable.sol:21"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.21"
      },
      "@openzeppelin/contracts/security/ReentrancyGuard.sol:ReentrancyGuard": {
        "src": "@openzeppelin/contracts/security/ReentrancyGuard.sol:22",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ReentrancyGuard",
            "src": "@openzeppelin/contracts/security/ReentrancyGuard.sol:39"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_status",
              "offset": 0,
              "slot": "0",
              "type": "t_uint256",
              "contract": "ReentrancyGuard",
              "src": "@openzeppelin/contracts/security/ReentrancyGuard.sol:37"
            }
          ],
          "types": {
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.21"
      },
      "@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20": {
        "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:35",
        "version": {
          "withMetadata": "b653be9ad258ddaafa2304767243ba86eac7156acd9bf1a196bee0fef9b1c3a9",
          "withoutMetadata": "1d55e2dc08aae4fa5bd2ca8ac476f7a2e63bdfa7b0b51d4bd61db8705143a140",
          "linkedWithoutMetadata": "1d55e2dc08aae4fa5bd2ca8ac476f7a2e63bdfa7b0b51d4bd61db8705143a140"
        },
        "inherit": [
          "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol:IERC20Metadata",
          "@openzeppelin/contracts/token/ERC20/IERC20.sol:IERC20",
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [],
        "methods": [
          "(string,string)",
          "name()",
          "symbol()",
          "decimals()",
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)",
          "increaseAllowance(address,uint256)",
          "decreaseAllowance(address,uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ERC20",
            "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:54"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_balances",
              "offset": 0,
              "slot": "0",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:36"
            },
            {
              "label": "_allowances",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:38"
            },
            {
              "label": "_totalSupply",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:40"
            },
            {
              "label": "_name",
              "offset": 0,
              "slot": "3",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:42"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "4",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:43"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.21"
      },
      "@openzeppelin/contracts/token/ERC20/IERC20.sol:IERC20": {
        "src": "@openzeppelin/contracts/token/ERC20/IERC20.sol:9",
        "inherit": [],
        "libraries": [],
        "methods": [
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.21"
      },
      "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol:IERC20Metadata": {
        "src": "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol:13",
        "inherit": [
          "@openzeppelin/contracts/token/ERC20/IERC20.sol:IERC20"
        ],
        "libraries": [],
        "methods": [
          "name()",
          "symbol()",
          "decimals()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.21"
      },
      "@openzeppelin/contracts/token/ERC20/extensions/draft-IERC20Permit.sol:IERC20Permit": {
        "src": "@openzeppelin/contracts/token/ERC20/extensions/draft-IERC20Permit.sol:14",
        "inherit": [],
        "libraries": [],
        "methods": [
          "permit(address,address,uint256,uint256,uint8,bytes32,bytes32)",
          "nonces(address)",
          "DOMAIN_SEPARATOR()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.21"
      },
      "@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol:SafeERC20": {
        "src": "@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol:19",
        "version": {
          "withMetadata": "945db44b71722f915e3e7352ee22f854dfe8000e69eee742d881b64279bb0ad8",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [
          "@openzeppelin/contracts/utils/Address.sol:Address"
        ],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.21"
      },
      "@openzeppelin/contracts/utils/Address.sol:Address": {
        "src": "@openzeppelin/contracts/utils/Address.sol:9",
        "version": {
          "withMetadata": "9401bbf4dc0decc4c739a060967031a16e8de389388d98c32ec11cff440d6513",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [
          {
            "kind": "delegatecall",
            "src": "@openzeppelin/contracts/utils/Address.sol:191"
          },
          {
            "kind": "delegatecall",
            "src": "@openzeppelin/contracts/utils/Address.sol:191"
          }
        ],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.21"
      },
      "@openzeppelin/contracts/utils/Context.sol:Context": {
        "src": "@openzeppelin/contracts/utils/Context.sol:16",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.21"
      },
      "@openzeppelin/contracts/utils/math/Math.sol:Math": {
        "src": "@openzeppelin/contracts/utils/math/Math.sol:9",
        "version": {
          "withMetadata": "f58f3d1d6b53395057afc8a5e1edcbfcd81cdec0dfcf6b1290c8c2368b975278",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.21"
      },
      "@openzeppelin/contracts/utils/math/SafeMath.sol:SafeMath": {
        "src": "@openzeppelin/contracts/utils/math/SafeMath.sol:16",
        "version": {
          "withMetadata": "4167346fe154a63f59e72262dbca9ccb097c97b61ec5dfe163259378386d2ba4",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.21"
      },
      "contracts/Presale.sol:IGoldToken": {
        "src": "contracts/Presale.sol:8",
        "inherit": [],
        "libraries": [],
        "methods": [
          "mint(address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.21"
      },
      "contracts/Presale.sol:Presale": {
        "src": "contracts/Presale.sol:12",
        "version": {
          "withMetadata": "55de4f41aa2ae4e88c3e975f7f7c871c8630a6a915f505e8b168c82d5665ef13",
          "withoutMetadata": "2fa5a3bfe1ae715a2695aad2a1fdda65dd5f2dfe346a8af0822d82b296b7bc1b",
          "linkedWithoutMetadata": "2fa5a3bfe1ae715a2695aad2a1fdda65dd5f2dfe346a8af0822d82b296b7bc1b"
        },
        "inherit": [
          "@openzeppelin/contracts/security/ReentrancyGuard.sol:ReentrancyGuard",
          "@openzeppelin/contracts/access/Ownable.sol:Ownable",
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [],
        "methods": [
          "(address,address,address,uint256)",
          "createPreSale((uint256,uint256,uint256))",
          "sale()",
          "getCanIdoAmount(address)",
          "bindReffer(address)",
          "userBalance(address)",
          "userRewardBalance(address)",
          "userWithdraw()",
          "teamWithdraw(address)",
          "setUserWithdrawTime(uint256)",
          "setInviteMin(uint256)",
          "setPerMaxBuyUsdt(uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Presale",
            "src": "contracts/Presale.sol:46"
          },
          {
            "kind": "state-variable-assignment",
            "name": "perMaxBuyUsdt",
            "src": "contracts/Presale.sol:15"
          },
          {
            "kind": "state-variable-assignment",
            "name": "inviteMin",
            "src": "contracts/Presale.sol:31"
          },
          {
            "kind": "state-variable-assignment",
            "name": "maxSale",
            "src": "contracts/Presale.sol:33"
          },
          {
            "kind": "state-variable-assignment",
            "name": "rewardLevel",
            "src": "contracts/Presale.sol:36"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Ownable",
              "src": "@openzeppelin/contracts/access/Ownable.sol:21"
            },
            {
              "label": "_status",
              "offset": 0,
              "slot": "1",
              "type": "t_uint256",
              "contract": "ReentrancyGuard",
              "src": "@openzeppelin/contracts/security/ReentrancyGuard.sol:37"
            },
            {
              "label": "userWithdrawTime",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "Presale",
              "src": "contracts/Presale.sol:13"
            },
            {
              "label": "perMaxBuyUsdt",
              "offset": 0,
              "slot": "3",
              "type": "t_uint256",
              "contract": "Presale",
              "src": "contracts/Presale.sol:15"
            },
            {
              "label": "teamAddress",
              "offset": 0,
              "slot": "4",
              "type": "t_address",
              "contract": "Presale",
              "src": "contracts/Presale.sol:16"
            },
            {
              "label": "saleToken",
              "offset": 0,
              "slot": "5",
              "type": "t_address",
              "contract": "Presale",
              "src": "contracts/Presale.sol:17"
            },
            {
              "label": "usdtToken",
              "offset": 0,
              "slot": "6",
              "type": "t_address",
              "contract": "Presale",
              "src": "contracts/Presale.sol:18"
            },
            {
              "label": "goldTokenAddress",
              "offset": 0,
              "slot": "7",
              "type": "t_address",
              "contract": "Presale",
              "src": "contracts/Presale.sol:19"
            },
            {
              "label": "balances",
              "offset": 0,
              "slot": "8",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "Presale",
              "src": "contracts/Presale.sol:20"
            },
            {
              "label": "userBuyTotalUsdt",
              "offset": 0,
              "slot": "9",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "Presale",
              "src": "contracts/Presale.sol:21"
            },
            {
              "label": "rewardBalances",
              "offset": 0,
              "slot": "10",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "Presale",
              "src": "contracts/Presale.sol:22"
            },
            {
              "label": "reffers",
              "offset": 0,
              "slot": "11",
              "type": "t_mapping(t_address,t_address)",
              "contract": "Presale",
              "src": "contracts/Presale.sol:23"
            },
            {
              "label": "refferNumber",
              "offset": 0,
              "slot": "12",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "Presale",
              "src": "contracts/Presale.sol:24"
            },
            {
              "label": "teamRefferNumber",
              "offset": 0,
              "slot": "13",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "Presale",
              "src": "contracts/Presale.sol:25"
            },
            {
              "label": "firstIdo",
              "offset": 0,
              "slot": "14",
              "type": "t_mapping(t_address,t_bool)",
              "contract": "Presale",
              "src": "contracts/Presale.sol:26"
            },
            {
              "label": "totalIdoUSDT",
              "offset": 0,
              "slot": "15",
              "type": "t_uint256",
              "contract": "Presale",
              "src": "contracts/Presale.sol:27"
            },
            {
              "label": "totalIdoUser",
              "offset": 0,
              "slot": "16",
              "type": "t_uint256",
              "contract": "Presale",
              "src": "contracts/Presale.sol:28"
            },
            {
              "label": "totalSale",
              "offset": 0,
              "slot": "17",
              "type": "t_uint256",
              "contract": "Presale",
              "src": "contracts/Presale.sol:29"
            },
            {
              "label": "inviteMin",
              "offset": 0,
              "slot": "18",
              "type": "t_uint256",
              "contract": "Presale",
              "src": "contracts/Presale.sol:31"
            },
            {
              "label": "maxSale",
              "offset": 0,
              "slot": "19",
              "type": "t_uint256",
              "contract": "Presale",
              "src": "contracts/Presale.sol:33"
            },
            {
              "label": "isCloseSale",
              "offset": 0,
              "slot": "20",
              "type": "t_bool",
              "contract": "Presale",
              "src": "contracts/Presale.sol:34"
            },
            {
              "label": "rewardLevel",
              "offset": 0,
              "slot": "21",
              "type": "t_array(t_uint256)dyn_storage",
              "contract": "Presale",
              "src": "contracts/Presale.sol:36"
            },
            {
              "label": "presaleInfo",
              "offset": 0,
              "slot": "22",
              "type": "t_struct(PresaleInfo)2392_storage",
              "contract": "Presale",
              "src": "contracts/Presale.sol:44"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_uint256)dyn_storage": {
              "label": "uint256[]",
              "numberOfBytes": "32"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_mapping(t_address,t_address)": {
              "label": "mapping(address => address)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_struct(PresaleInfo)2392_storage": {
              "label": "struct Presale.PresaleInfo",
              "members": [
                {
                  "label": "startTime",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "endTime",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "price",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "2"
                }
              ],
              "numberOfBytes": "96"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.21"
      },
      "contracts/Staking.sol:IRejuvenate": {
        "src": "contracts/Staking.sol:9",
        "inherit": [],
        "libraries": [],
        "methods": [
          "mint(address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.21"
      },
      "contracts/Staking.sol:Staking": {
        "src": "contracts/Staking.sol:13",
        "version": {
          "withMetadata": "d4a43fbe5f8d6347383f0680dba0a94146fceda61d8f28fb0ed926fda6eca5bc",
          "withoutMetadata": "8e35a11dc4a30aced1c096dd5db7f6424d19b292b732012b8d44d054f9cea466",
          "linkedWithoutMetadata": "8e35a11dc4a30aced1c096dd5db7f6424d19b292b732012b8d44d054f9cea466"
        },
        "inherit": [
          "@openzeppelin/contracts/security/ReentrancyGuard.sol:ReentrancyGuard",
          "@openzeppelin/contracts/access/Ownable.sol:Ownable",
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [],
        "methods": [
          "()",
          "changeRewardsPerBlock(uint256)",
          "rewardPerToken()",
          "earned(address)",
          "stake(uint256)",
          "unstake(uint256)",
          "claimRewards()",
          "pause()",
          "unpause()",
          "inCaseTokensGetStuck(address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Staking",
            "src": "contracts/Staking.sol:33"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Ownable",
              "src": "@openzeppelin/contracts/access/Ownable.sol:21"
            },
            {
              "label": "_status",
              "offset": 0,
              "slot": "1",
              "type": "t_uint256",
              "contract": "ReentrancyGuard",
              "src": "@openzeppelin/contracts/security/ReentrancyGuard.sol:37"
            },
            {
              "label": "paused",
              "offset": 0,
              "slot": "2",
              "type": "t_bool",
              "contract": "Staking",
              "src": "contracts/Staking.sol:14"
            },
            {
              "label": "_treasury",
              "offset": 1,
              "slot": "2",
              "type": "t_address",
              "contract": "Staking",
              "src": "contracts/Staking.sol:15"
            },
            {
              "label": "token",
              "offset": 0,
              "slot": "3",
              "type": "t_address",
              "contract": "Staking",
              "src": "contracts/Staking.sol:17"
            },
            {
              "label": "rewardRate",
              "offset": 0,
              "slot": "4",
              "type": "t_uint256",
              "contract": "Staking",
              "src": "contracts/Staking.sol:19"
            },
            {
              "label": "_lastUpdateBlock",
              "offset": 0,
              "slot": "5",
              "type": "t_uint256",
              "contract": "Staking",
              "src": "contracts/Staking.sol:20"
            },
            {
              "label": "_rewardsPerToken",
              "offset": 0,
              "slot": "6",
              "type": "t_uint256",
              "contract": "Staking",
              "src": "contracts/Staking.sol:21"
            },
            {
              "label": "data",
              "offset": 0,
              "slot": "7",
              "type": "t_array(t_struct(StakingData)3375_storage)dyn_storage",
              "contract": "Staking",
              "src": "contracts/Staking.sol:22"
            },
            {
              "label": "_userRewardsPerToken",
              "offset": 0,
              "slot": "8",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "Staking",
              "src": "contracts/Staking.sol:24"
            },
            {
              "label": "_rewards",
              "offset": 0,
              "slot": "9",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "Staking",
              "src": "contracts/Staking.sol:25"
            },
            {
              "label": "totalStaked",
              "offset": 0,
              "slot": "10",
              "type": "t_uint256",
              "contract": "Staking",
              "src": "contracts/Staking.sol:27"
            },
            {
              "label": "_balances",
              "offset": 0,
              "slot": "11",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "Staking",
              "src": "contracts/Staking.sol:28"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_struct(StakingData)3375_storage)dyn_storage": {
              "label": "struct StakingData[]",
              "numberOfBytes": "32"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_struct(StakingData)3375_storage": {
              "label": "struct StakingData",
              "members": [
                {
                  "label": "block",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "staked",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "1"
                }
              ],
              "numberOfBytes": "64"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.21"
      }
    },
    {
      "contracts/FirstDao.sol:FistDao": {
        "src": "contracts/FirstDao.sol:127",
        "version": {
          "withMetadata": "87594bf7d015e41aaf777bc0dc62e9e8a3685546fcfa065eb87291ef7f3f16f4",
          "withoutMetadata": "5bdb2538a3ba33172d93851875dfca20475ce01973348f896430788ab9d8314a",
          "linkedWithoutMetadata": "5bdb2538a3ba33172d93851875dfca20475ce01973348f896430788ab9d8314a"
        },
        "inherit": [
          "contracts/FirstDao.sol:Ownable",
          "contracts/FirstDao.sol:IERC20"
        ],
        "libraries": [
          "contracts/FirstDao.sol:SafeMath"
        ],
        "methods": [
          "(string,string)",
          "()",
          "initialize(address,address,address,address)",
          "transferEvent(address,address,uint256)",
          "feeState()",
          "getIsApproved(address)",
          "searchExcludedFromFeeAccounts(address)",
          "getDefaultBalance()",
          "insertIntoExcludedFromFeeAccounts(address[])",
          "deleteFromExcludedFromFeeAccounts(address[])",
          "claim(address,uint256)",
          "name()",
          "symbol()",
          "decimals()",
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "transferFrom(address,address,uint256)",
          "approve(address,uint256)",
          "allowance(address,address)",
          "increaseAllowance(address,uint256)",
          "decreaseAllowance(address,uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "FistDao",
            "src": "contracts/FirstDao.sol:159"
          },
          {
            "kind": "state-variable-assignment",
            "name": "_decimals",
            "src": "contracts/FirstDao.sol:132"
          },
          {
            "kind": "state-variable-assignment",
            "name": "_totalSupply",
            "src": "contracts/FirstDao.sol:133"
          },
          {
            "kind": "state-variable-assignment",
            "name": "_feeTax",
            "src": "contracts/FirstDao.sol:138"
          },
          {
            "kind": "state-variable-assignment",
            "name": "_feeMining",
            "src": "contracts/FirstDao.sol:139"
          },
          {
            "kind": "state-variable-assignment",
            "name": "_feeLiquidity",
            "src": "contracts/FirstDao.sol:140"
          },
          {
            "kind": "state-variable-assignment",
            "name": "_feeDivisor",
            "src": "contracts/FirstDao.sol:141"
          },
          {
            "kind": "state-variable-assignment",
            "name": "_removeAllFee",
            "src": "contracts/FirstDao.sol:143"
          },
          {
            "kind": "state-variable-assignment",
            "name": "_defaultBalance",
            "src": "contracts/FirstDao.sol:150"
          },
          {
            "kind": "state-variable-assignment",
            "name": "_defaultAmount",
            "src": "contracts/FirstDao.sol:151"
          },
          {
            "kind": "state-variable-assignment",
            "name": "_initialized111",
            "src": "contracts/FirstDao.sol:156"
          },
          {
            "kind": "state-variable-assignment",
            "name": "_reentry",
            "src": "contracts/FirstDao.sol:157"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Ownable",
              "src": "contracts/FirstDao.sol:58"
            },
            {
              "label": "_previousOwner",
              "offset": 0,
              "slot": "1",
              "type": "t_address",
              "contract": "Ownable",
              "src": "contracts/FirstDao.sol:59"
            },
            {
              "label": "_switchDate",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "Ownable",
              "src": "contracts/FirstDao.sol:60"
            },
            {
              "label": "_name",
              "offset": 0,
              "slot": "3",
              "type": "t_string_storage",
              "contract": "FistDao",
              "src": "contracts/FirstDao.sol:130"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "4",
              "type": "t_string_storage",
              "contract": "FistDao",
              "src": "contracts/FirstDao.sol:131"
            },
            {
              "label": "_decimals",
              "offset": 0,
              "slot": "5",
              "type": "t_uint8",
              "contract": "FistDao",
              "src": "contracts/FirstDao.sol:132"
            },
            {
              "label": "_totalSupply",
              "offset": 0,
              "slot": "6",
              "type": "t_uint256",
              "contract": "FistDao",
              "src": "contracts/FirstDao.sol:133"
            },
            {
              "label": "_balances",
              "offset": 0,
              "slot": "7",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "FistDao",
              "src": "contracts/FirstDao.sol:134"
            },
            {
              "label": "_allowances",
              "offset": 0,
              "slot": "8",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "FistDao",
              "src": "contracts/FirstDao.sol:135"
            },
            {
              "label": "_isApproved",
              "offset": 0,
              "slot": "9",
              "type": "t_mapping(t_address,t_bool)",
              "contract": "FistDao",
              "src": "contracts/FirstDao.sol:136"
            },
            {
              "label": "_feeTax",
              "offset": 0,
              "slot": "10",
              "type": "t_uint256",
              "contract": "FistDao",
              "src": "contracts/FirstDao.sol:138"
            },
            {
              "label": "_feeMining",
              "offset": 0,
              "slot": "11",
              "type": "t_uint256",
              "contract": "FistDao",
              "src": "contracts/FirstDao.sol:139"
            },
            {
              "label": "_feeLiquidity",
              "offset": 0,
              "slot": "12",
              "type": "t_uint256",
              "contract": "FistDao",
              "src": "contracts/FirstDao.sol:140"
            },
            {
              "label": "_feeDivisor",
              "offset": 0,
              "slot": "13",
              "type": "t_uint256",
              "contract": "FistDao",
              "src": "contracts/FirstDao.sol:141"
            },
            {
              "label": "_removeAllFee",
              "offset": 0,
              "slot": "14",
              "type": "t_bool",
              "contract": "FistDao",
              "src": "contracts/FirstDao.sol:143"
            },
            {
              "label": "_core",
              "offset": 1,
              "slot": "14",
              "type": "t_address",
              "contract": "FistDao",
              "src": "contracts/FirstDao.sol:145"
            },
            {
              "label": "_taxReceiver",
              "offset": 0,
              "slot": "15",
              "type": "t_address",
              "contract": "FistDao",
              "src": "contracts/FirstDao.sol:146"
            },
            {
              "label": "_miningPool",
              "offset": 0,
              "slot": "16",
              "type": "t_address",
              "contract": "FistDao",
              "src": "contracts/FirstDao.sol:147"
            },
            {
              "label": "_liquidityPool",
              "offset": 0,
              "slot": "17",
              "type": "t_address",
              "contract": "FistDao",
              "src": "contracts/FirstDao.sol:148"
            },
            {
              "label": "_defaultBalance",
              "offset": 0,
              "slot": "18",
              "type": "t_uint256",
              "contract": "FistDao",
              "src": "contracts/FirstDao.sol:150"
            },
            {
              "label": "_defaultAmount",
              "offset": 0,
              "slot": "19",
              "type": "t_uint256",
              "contract": "FistDao",
              "src": "contracts/FirstDao.sol:151"
            },
            {
              "label": "_isExcludedFromFee",
              "offset": 0,
              "slot": "20",
              "type": "t_mapping(t_address,t_bool)",
              "contract": "FistDao",
              "src": "contracts/FirstDao.sol:153"
            },
            {
              "label": "_excludedFromFeeAccounts",
              "offset": 0,
              "slot": "21",
              "type": "t_array(t_address)dyn_storage",
              "contract": "FistDao",
              "src": "contracts/FirstDao.sol:154"
            },
            {
              "label": "_initialized111",
              "offset": 0,
              "slot": "22",
              "type": "t_bool",
              "contract": "FistDao",
              "src": "contracts/FirstDao.sol:156"
            },
            {
              "label": "_reentry",
              "offset": 0,
              "slot": "23",
              "type": "t_uint256",
              "contract": "FistDao",
              "src": "contracts/FirstDao.sol:157"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_address)dyn_storage": {
              "label": "address[]",
              "numberOfBytes": "32"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint8": {
              "label": "uint8",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.21"
      },
      "contracts/FirstDao.sol:ICore": {
        "src": "contracts/FirstDao.sol:119",
        "inherit": [],
        "libraries": [],
        "methods": [
          "getPairAddress()",
          "airdrop()",
          "safety(address,address)",
          "start()",
          "end()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.21"
      },
      "contracts/FirstDao.sol:IERC20": {
        "src": "contracts/FirstDao.sol:8",
        "inherit": [],
        "libraries": [],
        "methods": [
          "name()",
          "symbol()",
          "decimals()",
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "transferFrom(address,address,uint256)",
          "approve(address,uint256)",
          "allowance(address,address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.21"
      },
      "contracts/FirstDao.sol:IFactory": {
        "src": "contracts/FirstDao.sol:91",
        "inherit": [],
        "libraries": [],
        "methods": [
          "createPair(address,address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.21"
      },
      "contracts/FirstDao.sol:IRouter01": {
        "src": "contracts/FirstDao.sol:95",
        "inherit": [],
        "libraries": [],
        "methods": [
          "factory()",
          "addLiquidity(address,address,uint256,uint256,uint256,uint256,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.21"
      },
      "contracts/FirstDao.sol:IRouter02": {
        "src": "contracts/FirstDao.sol:109",
        "inherit": [
          "contracts/FirstDao.sol:IRouter01"
        ],
        "libraries": [],
        "methods": [
          "swapExactTokensForTokensSupportingFeeOnTransferTokens(uint256,uint256,address[],address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.21"
      },
      "contracts/FirstDao.sol:Ownable": {
        "src": "contracts/FirstDao.sol:57",
        "inherit": [],
        "libraries": [],
        "methods": [
          "owner()",
          "switchDate()",
          "transferOwnership(uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Ownable",
            "src": "contracts/FirstDao.sol:63"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Ownable",
              "src": "contracts/FirstDao.sol:58"
            },
            {
              "label": "_previousOwner",
              "offset": 0,
              "slot": "1",
              "type": "t_address",
              "contract": "Ownable",
              "src": "contracts/FirstDao.sol:59"
            },
            {
              "label": "_switchDate",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "Ownable",
              "src": "contracts/FirstDao.sol:60"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.21"
      },
      "contracts/FirstDao.sol:SafeMath": {
        "src": "contracts/FirstDao.sol:22",
        "version": {
          "withMetadata": "95eb3df1bd62a62b1bf87150f7314053125cc709ed6eb26f9bf2a30d8fc55e32",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.21"
      }
    },
    {
      "contracts/IFiles.sol:Address": {
        "src": "contracts/IFiles.sol:147",
        "version": {
          "withMetadata": "73f3d745b82ff92d492794f39ddc131795315255895e196d918dc1260c813488",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.21"
      },
      "contracts/IFiles.sol:Context": {
        "src": "contracts/IFiles.sol:135",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.21"
      },
      "contracts/IFiles.sol:IBEP20": {
        "src": "contracts/IFiles.sol:9",
        "inherit": [],
        "libraries": [],
        "methods": [
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.21"
      },
      "contracts/IFiles.sol:IPancakeFactory": {
        "src": "contracts/IFiles.sol:327",
        "inherit": [],
        "libraries": [],
        "methods": [
          "feeTo()",
          "feeToSetter()",
          "getPair(address,address)",
          "allPairs(uint256)",
          "allPairsLength()",
          "createPair(address,address)",
          "setFeeTo(address)",
          "setFeeToSetter(address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.21"
      },
      "contracts/IFiles.sol:IPancakePair": {
        "src": "contracts/IFiles.sol:357",
        "inherit": [],
        "libraries": [],
        "methods": [
          "name()",
          "symbol()",
          "decimals()",
          "totalSupply()",
          "balanceOf(address)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transfer(address,uint256)",
          "transferFrom(address,address,uint256)",
          "DOMAIN_SEPARATOR()",
          "PERMIT_TYPEHASH()",
          "nonces(address)",
          "permit(address,address,uint256,uint256,uint8,bytes32,bytes32)",
          "MINIMUM_LIQUIDITY()",
          "factory()",
          "token0()",
          "token1()",
          "getReserves()",
          "price0CumulativeLast()",
          "price1CumulativeLast()",
          "kLast()",
          "mint(address)",
          "burn(address)",
          "swap(uint256,uint256,address,bytes)",
          "skim(address)",
          "sync()",
          "initialize(address,address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.21"
      },
      "contracts/IFiles.sol:IPancakeRouter01": {
        "src": "contracts/IFiles.sol:466",
        "inherit": [],
        "libraries": [],
        "methods": [
          "factory()",
          "WETH()",
          "addLiquidity(address,address,uint256,uint256,uint256,uint256,address,uint256)",
          "addLiquidityETH(address,uint256,uint256,uint256,address,uint256)",
          "removeLiquidity(address,address,uint256,uint256,uint256,address,uint256)",
          "removeLiquidityETH(address,uint256,uint256,uint256,address,uint256)",
          "removeLiquidityWithPermit(address,address,uint256,uint256,uint256,address,uint256,bool,uint8,bytes32,bytes32)",
          "removeLiquidityETHWithPermit(address,uint256,uint256,uint256,address,uint256,bool,uint8,bytes32,bytes32)",
          "swapExactTokensForTokens(uint256,uint256,address[],address,uint256)",
          "swapTokensForExactTokens(uint256,uint256,address[],address,uint256)",
          "swapExactETHForTokens(uint256,address[],address,uint256)",
          "swapTokensForExactETH(uint256,uint256,address[],address,uint256)",
          "swapExactTokensForETH(uint256,uint256,address[],address,uint256)",
          "swapETHForExactTokens(uint256,address[],address,uint256)",
          "quote(uint256,uint256,uint256)",
          "getAmountOut(uint256,uint256,uint256)",
          "getAmountIn(uint256,uint256,uint256)",
          "getAmountsOut(uint256,address[])",
          "getAmountsIn(uint256,address[])"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.21"
      },
      "contracts/IFiles.sol:IPancakeRouter02": {
        "src": "contracts/IFiles.sol:626",
        "inherit": [
          "contracts/IFiles.sol:IPancakeRouter01"
        ],
        "libraries": [],
        "methods": [
          "removeLiquidityETHSupportingFeeOnTransferTokens(address,uint256,uint256,uint256,address,uint256)",
          "removeLiquidityETHWithPermitSupportingFeeOnTransferTokens(address,uint256,uint256,uint256,address,uint256,bool,uint8,bytes32,bytes32)",
          "swapExactTokensForTokensSupportingFeeOnTransferTokens(uint256,uint256,address[],address,uint256)",
          "swapExactETHForTokensSupportingFeeOnTransferTokens(uint256,address[],address,uint256)",
          "swapExactTokensForETHSupportingFeeOnTransferTokens(uint256,uint256,address[],address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.21"
      },
      "contracts/IFiles.sol:IWBNB": {
        "src": "contracts/IFiles.sol:38",
        "inherit": [],
        "libraries": [],
        "methods": [
          "name()",
          "symbol()",
          "decimals()",
          "balanceOf(address)",
          "allowance(address,address)",
          "()",
          "deposit()",
          "withdraw(uint256)",
          "totalSupply()",
          "approve(address,uint256)",
          "transfer(address,uint256)",
          "transferFrom(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.21"
      },
      "contracts/IFiles.sol:Initializable": {
        "src": "contracts/IFiles.sol:249",
        "version": {
          "withMetadata": "ba793f874980ba8826e0f77e588821b7a373c942b97ebcd7e4e42f378e00e824",
          "withoutMetadata": "ac0db523ddc3e330f735df7b3b0b24460531c71290a891170e840f8f67d5ff6b",
          "linkedWithoutMetadata": "ac0db523ddc3e330f735df7b3b0b24460531c71290a891170e840f8f67d5ff6b"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "contracts/IFiles.sol:251"
            },
            {
              "label": "initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "contracts/IFiles.sol:252"
            },
            {
              "label": "______gap",
              "offset": 0,
              "slot": "1",
              "type": "t_array(t_uint256)50_storage",
              "contract": "Initializable",
              "src": "contracts/IFiles.sol:283"
            }
          ],
          "types": {
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]",
              "numberOfBytes": "1600"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.21"
      },
      "contracts/IFiles.sol:Ownable": {
        "src": "contracts/IFiles.sol:286",
        "version": {
          "withMetadata": "9b6e83ec071c913ea8078938bf6c8e47f6ce697f181f2ebf31dc4937807eb386",
          "withoutMetadata": "a3dd09084d5d3377afaa5e637593b425fb1172db63a48c2f62428555638775f8",
          "linkedWithoutMetadata": "a3dd09084d5d3377afaa5e637593b425fb1172db63a48c2f62428555638775f8"
        },
        "inherit": [
          "contracts/IFiles.sol:Initializable",
          "contracts/IFiles.sol:Context"
        ],
        "libraries": [],
        "methods": [
          "()",
          "initOwner(address)",
          "owner()",
          "renounceOwnership()",
          "transferOwnership(address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "contracts/IFiles.sol:251"
            },
            {
              "label": "initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "contracts/IFiles.sol:252"
            },
            {
              "label": "______gap",
              "offset": 0,
              "slot": "1",
              "type": "t_array(t_uint256)50_storage",
              "contract": "Initializable",
              "src": "contracts/IFiles.sol:283"
            },
            {
              "label": "_owner",
              "offset": 0,
              "slot": "51",
              "type": "t_address",
              "contract": "Ownable",
              "src": "contracts/IFiles.sol:287"
            },
            {
              "label": "_previousOwner",
              "offset": 0,
              "slot": "52",
              "type": "t_address",
              "contract": "Ownable",
              "src": "contracts/IFiles.sol:288"
            },
            {
              "label": "_lockTime",
              "offset": 0,
              "slot": "53",
              "type": "t_uint256",
              "contract": "Ownable",
              "src": "contracts/IFiles.sol:289"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]",
              "numberOfBytes": "1600"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.21"
      },
      "contracts/IFiles.sol:SafeMath": {
        "src": "contracts/IFiles.sol:68",
        "version": {
          "withMetadata": "6a5db877229c78c84b33e85a297bea1121c6a6195aa310f30cbe69888293c5ae",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.21"
      },
      "contracts/ReentrancyGuard.sol:ReentrancyGuard": {
        "src": "contracts/ReentrancyGuard.sol:5",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ReentrancyGuard",
            "src": "contracts/ReentrancyGuard.sol:12"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_status",
              "offset": 0,
              "slot": "0",
              "type": "t_uint256",
              "contract": "ReentrancyGuard",
              "src": "contracts/ReentrancyGuard.sol:10"
            }
          ],
          "types": {
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.21"
      },
      "contracts/Utils.sol:PancakeLibrary": {
        "src": "contracts/Utils.sol:219",
        "version": {
          "withMetadata": "668337a75717822cd6d73bbd1c50526e84e4af10cd45125b1756676395a2f30c",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [
          "contracts/IFiles.sol:SafeMath"
        ],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.21"
      },
      "contracts/Utils.sol:Utils": {
        "src": "contracts/Utils.sol:6",
        "version": {
          "withMetadata": "a5775bd7ff330a5dfa7ddaef645bcc8fbccdcd3c38fbc9fc1755e3e3a9a09d47",
          "withoutMetadata": "8ca6da6b824cadf2e1f9c600b5f1381080c8b8d75dddf5423f35e25222daaeda",
          "linkedWithoutMetadata": "8ca6da6b824cadf2e1f9c600b5f1381080c8b8d75dddf5423f35e25222daaeda"
        },
        "inherit": [],
        "libraries": [
          "contracts/IFiles.sol:SafeMath"
        ],
        "methods": [
          "calculateBNBReward(uint256,uint256,uint256,uint256)",
          "calculateTopUpClaim(uint256,uint256,uint256,uint256)",
          "swapTokensForEth(address,uint256)",
          "swapETHForTokens(address,address,uint256)",
          "swapTokensForTokens(address,address,uint256)",
          "getAmountsout(uint256,address)",
          "addLiquidity(address,address,uint256,uint256)",
          "getAntiFlipTaxNo(uint256)",
          "calcReward(uint256,uint256,uint256,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.21"
      }
    },
    {
      "contracts/Proxy.sol:Caller": {
        "src": "contracts/Proxy.sol:80",
        "version": {
          "withMetadata": "8a43f4805f6ec5dd7b7379a87ef3fa89b1f2cd8e86292442058e51e90f40e31d",
          "withoutMetadata": "d6211a178c252503f87d41bbcceffa66551bde0c0c4b0cc3c5a44a4f489e2c7f",
          "linkedWithoutMetadata": "d6211a178c252503f87d41bbcceffa66551bde0c0c4b0cc3c5a44a4f489e2c7f"
        },
        "inherit": [],
        "libraries": [],
        "methods": [
          "(address)",
          "increase()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Caller",
            "src": "contracts/Proxy.sol:80"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "proxy",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Caller",
              "src": "contracts/Proxy.sol:80"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.21"
      },
      "contracts/Proxy.sol:Proxy": {
        "src": "contracts/Proxy.sol:10",
        "version": {
          "withMetadata": "3a655b5f054f4310d279144652e269b840bf308c06f48e08f2d407ee1381c2c1",
          "withoutMetadata": "bc7fcd1c64d2f798926ae830c3e369a33c770ea294cd9047d184a8c885a96818",
          "linkedWithoutMetadata": "bc7fcd1c64d2f798926ae830c3e369a33c770ea294cd9047d184a8c885a96818"
        },
        "inherit": [],
        "libraries": [],
        "methods": [
          "(address)",
          "()",
          "()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Proxy",
            "src": "contracts/Proxy.sol:22"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "implementation",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Proxy",
              "src": "contracts/Proxy.sol:13"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.21"
      }
    },
    {
      "contracts/Logic.sol:Logic": {
        "src": "contracts/Logic.sol:9",
        "version": {
          "withMetadata": "087c86b163578853fb1cba09b22843df8f815c95bf2568200ddd8e1dbf167fea",
          "withoutMetadata": "a9feffbc7087e9529577fb0b368171b85b94d25918f43b5d410eb0f186274034",
          "linkedWithoutMetadata": "a9feffbc7087e9529577fb0b368171b85b94d25918f43b5d410eb0f186274034"
        },
        "inherit": [],
        "libraries": [],
        "methods": [
          "increment()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "state-variable-assignment",
            "name": "x",
            "src": "contracts/Logic.sol:13"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "implementation",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Logic",
              "src": "contracts/Logic.sol:9"
            },
            {
              "label": "x",
              "offset": 0,
              "slot": "1",
              "type": "t_uint256",
              "contract": "Logic",
              "src": "contracts/Logic.sol:13"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.21"
      }
    },
    {
      "@openzeppelin/contracts/access/Ownable.sol:Ownable": {
        "src": "@openzeppelin/contracts/access/Ownable.sol:20",
        "inherit": [
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [],
        "methods": [
          "owner()",
          "renounceOwnership()",
          "transferOwnership(address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Ownable",
            "src": "@openzeppelin/contracts/access/Ownable.sol:28"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Ownable",
              "src": "@openzeppelin/contracts/access/Ownable.sol:21"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.21"
      },
      "@openzeppelin/contracts/security/ReentrancyGuard.sol:ReentrancyGuard": {
        "src": "@openzeppelin/contracts/security/ReentrancyGuard.sol:22",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ReentrancyGuard",
            "src": "@openzeppelin/contracts/security/ReentrancyGuard.sol:39"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_status",
              "offset": 0,
              "slot": "0",
              "type": "t_uint256",
              "contract": "ReentrancyGuard",
              "src": "@openzeppelin/contracts/security/ReentrancyGuard.sol:37"
            }
          ],
          "types": {
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.21"
      },
      "@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20": {
        "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:35",
        "version": {
          "withMetadata": "b653be9ad258ddaafa2304767243ba86eac7156acd9bf1a196bee0fef9b1c3a9",
          "withoutMetadata": "1d55e2dc08aae4fa5bd2ca8ac476f7a2e63bdfa7b0b51d4bd61db8705143a140",
          "linkedWithoutMetadata": "1d55e2dc08aae4fa5bd2ca8ac476f7a2e63bdfa7b0b51d4bd61db8705143a140"
        },
        "inherit": [
          "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol:IERC20Metadata",
          "@openzeppelin/contracts/token/ERC20/IERC20.sol:IERC20",
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [],
        "methods": [
          "(string,string)",
          "name()",
          "symbol()",
          "decimals()",
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)",
          "increaseAllowance(address,uint256)",
          "decreaseAllowance(address,uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ERC20",
            "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:54"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_balances",
              "offset": 0,
              "slot": "0",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:36"
            },
            {
              "label": "_allowances",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:38"
            },
            {
              "label": "_totalSupply",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:40"
            },
            {
              "label": "_name",
              "offset": 0,
              "slot": "3",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:42"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "4",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:43"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.21"
      },
      "@openzeppelin/contracts/token/ERC20/IERC20.sol:IERC20": {
        "src": "@openzeppelin/contracts/token/ERC20/IERC20.sol:9",
        "inherit": [],
        "libraries": [],
        "methods": [
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.21"
      },
      "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol:IERC20Metadata": {
        "src": "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol:13",
        "inherit": [
          "@openzeppelin/contracts/token/ERC20/IERC20.sol:IERC20"
        ],
        "libraries": [],
        "methods": [
          "name()",
          "symbol()",
          "decimals()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.21"
      },
      "@openzeppelin/contracts/token/ERC20/extensions/draft-IERC20Permit.sol:IERC20Permit": {
        "src": "@openzeppelin/contracts/token/ERC20/extensions/draft-IERC20Permit.sol:14",
        "inherit": [],
        "libraries": [],
        "methods": [
          "permit(address,address,uint256,uint256,uint8,bytes32,bytes32)",
          "nonces(address)",
          "DOMAIN_SEPARATOR()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.21"
      },
      "@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol:SafeERC20": {
        "src": "@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol:19",
        "version": {
          "withMetadata": "945db44b71722f915e3e7352ee22f854dfe8000e69eee742d881b64279bb0ad8",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [
          "@openzeppelin/contracts/utils/Address.sol:Address"
        ],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.21"
      },
      "@openzeppelin/contracts/utils/Address.sol:Address": {
        "src": "@openzeppelin/contracts/utils/Address.sol:9",
        "version": {
          "withMetadata": "9401bbf4dc0decc4c739a060967031a16e8de389388d98c32ec11cff440d6513",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [
          {
            "kind": "delegatecall",
            "src": "@openzeppelin/contracts/utils/Address.sol:191"
          },
          {
            "kind": "delegatecall",
            "src": "@openzeppelin/contracts/utils/Address.sol:191"
          }
        ],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.21"
      },
      "@openzeppelin/contracts/utils/Context.sol:Context": {
        "src": "@openzeppelin/contracts/utils/Context.sol:16",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.21"
      },
      "@openzeppelin/contracts/utils/math/Math.sol:Math": {
        "src": "@openzeppelin/contracts/utils/math/Math.sol:9",
        "version": {
          "withMetadata": "f58f3d1d6b53395057afc8a5e1edcbfcd81cdec0dfcf6b1290c8c2368b975278",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.21"
      },
      "@openzeppelin/contracts/utils/math/SafeMath.sol:SafeMath": {
        "src": "@openzeppelin/contracts/utils/math/SafeMath.sol:16",
        "version": {
          "withMetadata": "4167346fe154a63f59e72262dbca9ccb097c97b61ec5dfe163259378386d2ba4",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.21"
      },
      "contracts/Presale.sol:IGoldToken": {
        "src": "contracts/Presale.sol:8",
        "inherit": [],
        "libraries": [],
        "methods": [
          "mint(address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.21"
      },
      "contracts/Presale.sol:Presale": {
        "src": "contracts/Presale.sol:12",
        "version": {
          "withMetadata": "55de4f41aa2ae4e88c3e975f7f7c871c8630a6a915f505e8b168c82d5665ef13",
          "withoutMetadata": "2fa5a3bfe1ae715a2695aad2a1fdda65dd5f2dfe346a8af0822d82b296b7bc1b",
          "linkedWithoutMetadata": "2fa5a3bfe1ae715a2695aad2a1fdda65dd5f2dfe346a8af0822d82b296b7bc1b"
        },
        "inherit": [
          "@openzeppelin/contracts/security/ReentrancyGuard.sol:ReentrancyGuard",
          "@openzeppelin/contracts/access/Ownable.sol:Ownable",
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [],
        "methods": [
          "(address,address,address,uint256)",
          "createPreSale((uint256,uint256,uint256))",
          "sale()",
          "getCanIdoAmount(address)",
          "bindReffer(address)",
          "userBalance(address)",
          "userRewardBalance(address)",
          "userWithdraw()",
          "teamWithdraw(address)",
          "setUserWithdrawTime(uint256)",
          "setInviteMin(uint256)",
          "setPerMaxBuyUsdt(uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Presale",
            "src": "contracts/Presale.sol:46"
          },
          {
            "kind": "state-variable-assignment",
            "name": "perMaxBuyUsdt",
            "src": "contracts/Presale.sol:15"
          },
          {
            "kind": "state-variable-assignment",
            "name": "inviteMin",
            "src": "contracts/Presale.sol:31"
          },
          {
            "kind": "state-variable-assignment",
            "name": "maxSale",
            "src": "contracts/Presale.sol:33"
          },
          {
            "kind": "state-variable-assignment",
            "name": "rewardLevel",
            "src": "contracts/Presale.sol:36"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Ownable",
              "src": "@openzeppelin/contracts/access/Ownable.sol:21"
            },
            {
              "label": "_status",
              "offset": 0,
              "slot": "1",
              "type": "t_uint256",
              "contract": "ReentrancyGuard",
              "src": "@openzeppelin/contracts/security/ReentrancyGuard.sol:37"
            },
            {
              "label": "userWithdrawTime",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "Presale",
              "src": "contracts/Presale.sol:13"
            },
            {
              "label": "perMaxBuyUsdt",
              "offset": 0,
              "slot": "3",
              "type": "t_uint256",
              "contract": "Presale",
              "src": "contracts/Presale.sol:15"
            },
            {
              "label": "teamAddress",
              "offset": 0,
              "slot": "4",
              "type": "t_address",
              "contract": "Presale",
              "src": "contracts/Presale.sol:16"
            },
            {
              "label": "saleToken",
              "offset": 0,
              "slot": "5",
              "type": "t_address",
              "contract": "Presale",
              "src": "contracts/Presale.sol:17"
            },
            {
              "label": "usdtToken",
              "offset": 0,
              "slot": "6",
              "type": "t_address",
              "contract": "Presale",
              "src": "contracts/Presale.sol:18"
            },
            {
              "label": "goldTokenAddress",
              "offset": 0,
              "slot": "7",
              "type": "t_address",
              "contract": "Presale",
              "src": "contracts/Presale.sol:19"
            },
            {
              "label": "balances",
              "offset": 0,
              "slot": "8",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "Presale",
              "src": "contracts/Presale.sol:20"
            },
            {
              "label": "userBuyTotalUsdt",
              "offset": 0,
              "slot": "9",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "Presale",
              "src": "contracts/Presale.sol:21"
            },
            {
              "label": "rewardBalances",
              "offset": 0,
              "slot": "10",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "Presale",
              "src": "contracts/Presale.sol:22"
            },
            {
              "label": "reffers",
              "offset": 0,
              "slot": "11",
              "type": "t_mapping(t_address,t_address)",
              "contract": "Presale",
              "src": "contracts/Presale.sol:23"
            },
            {
              "label": "refferNumber",
              "offset": 0,
              "slot": "12",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "Presale",
              "src": "contracts/Presale.sol:24"
            },
            {
              "label": "teamRefferNumber",
              "offset": 0,
              "slot": "13",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "Presale",
              "src": "contracts/Presale.sol:25"
            },
            {
              "label": "firstIdo",
              "offset": 0,
              "slot": "14",
              "type": "t_mapping(t_address,t_bool)",
              "contract": "Presale",
              "src": "contracts/Presale.sol:26"
            },
            {
              "label": "totalIdoUSDT",
              "offset": 0,
              "slot": "15",
              "type": "t_uint256",
              "contract": "Presale",
              "src": "contracts/Presale.sol:27"
            },
            {
              "label": "totalIdoUser",
              "offset": 0,
              "slot": "16",
              "type": "t_uint256",
              "contract": "Presale",
              "src": "contracts/Presale.sol:28"
            },
            {
              "label": "totalSale",
              "offset": 0,
              "slot": "17",
              "type": "t_uint256",
              "contract": "Presale",
              "src": "contracts/Presale.sol:29"
            },
            {
              "label": "inviteMin",
              "offset": 0,
              "slot": "18",
              "type": "t_uint256",
              "contract": "Presale",
              "src": "contracts/Presale.sol:31"
            },
            {
              "label": "maxSale",
              "offset": 0,
              "slot": "19",
              "type": "t_uint256",
              "contract": "Presale",
              "src": "contracts/Presale.sol:33"
            },
            {
              "label": "isCloseSale",
              "offset": 0,
              "slot": "20",
              "type": "t_bool",
              "contract": "Presale",
              "src": "contracts/Presale.sol:34"
            },
            {
              "label": "rewardLevel",
              "offset": 0,
              "slot": "21",
              "type": "t_array(t_uint256)dyn_storage",
              "contract": "Presale",
              "src": "contracts/Presale.sol:36"
            },
            {
              "label": "presaleInfo",
              "offset": 0,
              "slot": "22",
              "type": "t_struct(PresaleInfo)2392_storage",
              "contract": "Presale",
              "src": "contracts/Presale.sol:44"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_uint256)dyn_storage": {
              "label": "uint256[]",
              "numberOfBytes": "32"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_mapping(t_address,t_address)": {
              "label": "mapping(address => address)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_struct(PresaleInfo)2392_storage": {
              "label": "struct Presale.PresaleInfo",
              "members": [
                {
                  "label": "startTime",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "endTime",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "price",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "2"
                }
              ],
              "numberOfBytes": "96"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.21"
      },
      "contracts/Staking.sol:IRejuvenate": {
        "src": "contracts/Staking.sol:9",
        "inherit": [],
        "libraries": [],
        "methods": [
          "mint(address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.21"
      },
      "contracts/Staking.sol:Staking": {
        "src": "contracts/Staking.sol:13",
        "version": {
          "withMetadata": "d4a43fbe5f8d6347383f0680dba0a94146fceda61d8f28fb0ed926fda6eca5bc",
          "withoutMetadata": "8e35a11dc4a30aced1c096dd5db7f6424d19b292b732012b8d44d054f9cea466",
          "linkedWithoutMetadata": "8e35a11dc4a30aced1c096dd5db7f6424d19b292b732012b8d44d054f9cea466"
        },
        "inherit": [
          "@openzeppelin/contracts/security/ReentrancyGuard.sol:ReentrancyGuard",
          "@openzeppelin/contracts/access/Ownable.sol:Ownable",
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [],
        "methods": [
          "()",
          "changeRewardsPerBlock(uint256)",
          "rewardPerToken()",
          "earned(address)",
          "stake(uint256)",
          "unstake(uint256)",
          "claimRewards()",
          "pause()",
          "unpause()",
          "inCaseTokensGetStuck(address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Staking",
            "src": "contracts/Staking.sol:33"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Ownable",
              "src": "@openzeppelin/contracts/access/Ownable.sol:21"
            },
            {
              "label": "_status",
              "offset": 0,
              "slot": "1",
              "type": "t_uint256",
              "contract": "ReentrancyGuard",
              "src": "@openzeppelin/contracts/security/ReentrancyGuard.sol:37"
            },
            {
              "label": "paused",
              "offset": 0,
              "slot": "2",
              "type": "t_bool",
              "contract": "Staking",
              "src": "contracts/Staking.sol:14"
            },
            {
              "label": "_treasury",
              "offset": 1,
              "slot": "2",
              "type": "t_address",
              "contract": "Staking",
              "src": "contracts/Staking.sol:15"
            },
            {
              "label": "token",
              "offset": 0,
              "slot": "3",
              "type": "t_address",
              "contract": "Staking",
              "src": "contracts/Staking.sol:17"
            },
            {
              "label": "rewardRate",
              "offset": 0,
              "slot": "4",
              "type": "t_uint256",
              "contract": "Staking",
              "src": "contracts/Staking.sol:19"
            },
            {
              "label": "_lastUpdateBlock",
              "offset": 0,
              "slot": "5",
              "type": "t_uint256",
              "contract": "Staking",
              "src": "contracts/Staking.sol:20"
            },
            {
              "label": "_rewardsPerToken",
              "offset": 0,
              "slot": "6",
              "type": "t_uint256",
              "contract": "Staking",
              "src": "contracts/Staking.sol:21"
            },
            {
              "label": "data",
              "offset": 0,
              "slot": "7",
              "type": "t_array(t_struct(StakingData)3375_storage)dyn_storage",
              "contract": "Staking",
              "src": "contracts/Staking.sol:22"
            },
            {
              "label": "_userRewardsPerToken",
              "offset": 0,
              "slot": "8",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "Staking",
              "src": "contracts/Staking.sol:24"
            },
            {
              "label": "_rewards",
              "offset": 0,
              "slot": "9",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "Staking",
              "src": "contracts/Staking.sol:25"
            },
            {
              "label": "totalStaked",
              "offset": 0,
              "slot": "10",
              "type": "t_uint256",
              "contract": "Staking",
              "src": "contracts/Staking.sol:27"
            },
            {
              "label": "_balances",
              "offset": 0,
              "slot": "11",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "Staking",
              "src": "contracts/Staking.sol:28"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_struct(StakingData)3375_storage)dyn_storage": {
              "label": "struct StakingData[]",
              "numberOfBytes": "32"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_struct(StakingData)3375_storage": {
              "label": "struct StakingData",
              "members": [
                {
                  "label": "block",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "staked",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "1"
                }
              ],
              "numberOfBytes": "64"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.21"
      }
    },
    {
      "contracts/RichHusky.sol:Checker": {
        "src": "contracts/RichHusky.sol:520",
        "version": {
          "withMetadata": "17e1cf10fdffcda321c1a1f59d2b06178394724b4d8ad9b035a718122fed8a52",
          "withoutMetadata": "0faf6ca500781d04501ba7e4cf9138e35957321419c6ca29798480c22b3cc5cd",
          "linkedWithoutMetadata": "0faf6ca500781d04501ba7e4cf9138e35957321419c6ca29798480c22b3cc5cd"
        },
        "inherit": [],
        "libraries": [],
        "methods": [
          "isValid(address,address,address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.21"
      },
      "contracts/RichHusky.sol:Context": {
        "src": "contracts/RichHusky.sol:27",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.21"
      },
      "contracts/RichHusky.sol:ERC20": {
        "src": "contracts/RichHusky.sol:162",
        "version": {
          "withMetadata": "e092e43bc9c3243b7138ce015fa92d358fa66a764079145cfe1339f160fd055e",
          "withoutMetadata": "e248eda4094a79267c1d78eb85fb3a082e2ba4d153192b2644d6357dbed158f3",
          "linkedWithoutMetadata": "e248eda4094a79267c1d78eb85fb3a082e2ba4d153192b2644d6357dbed158f3"
        },
        "inherit": [
          "contracts/RichHusky.sol:IERC20Metadata",
          "contracts/RichHusky.sol:IERC20",
          "contracts/RichHusky.sol:Context"
        ],
        "libraries": [],
        "methods": [
          "(string,string)",
          "name()",
          "symbol()",
          "decimals()",
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)",
          "increaseAllowance(address,uint256)",
          "decreaseAllowance(address,uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ERC20",
            "src": "contracts/RichHusky.sol:181"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_balances",
              "offset": 0,
              "slot": "0",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC20",
              "src": "contracts/RichHusky.sol:163"
            },
            {
              "label": "_allowances",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "ERC20",
              "src": "contracts/RichHusky.sol:165"
            },
            {
              "label": "_totalSupply",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "ERC20",
              "src": "contracts/RichHusky.sol:167"
            },
            {
              "label": "_name",
              "offset": 0,
              "slot": "3",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "contracts/RichHusky.sol:169"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "4",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "contracts/RichHusky.sol:170"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.21"
      },
      "contracts/RichHusky.sol:IERC20": {
        "src": "contracts/RichHusky.sol:40",
        "inherit": [],
        "libraries": [],
        "methods": [
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.21"
      },
      "contracts/RichHusky.sol:IERC20Metadata": {
        "src": "contracts/RichHusky.sol:120",
        "inherit": [
          "contracts/RichHusky.sol:IERC20"
        ],
        "libraries": [],
        "methods": [
          "name()",
          "symbol()",
          "decimals()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.21"
      },
      "contracts/RichHusky.sol:IFactory": {
        "src": "contracts/RichHusky.sol:535",
        "inherit": [],
        "libraries": [],
        "methods": [
          "createPair(address,address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.21"
      },
      "contracts/RichHusky.sol:IGasToken": {
        "src": "contracts/RichHusky.sol:539",
        "inherit": [],
        "libraries": [],
        "methods": [
          "free(uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.21"
      },
      "contracts/RichHusky.sol:RichHusky": {
        "src": "contracts/RichHusky.sol:543",
        "version": {
          "withMetadata": "ce802161ba5ffecece3a7488fb3a07a35d8f78edf3674187d3eb27cc30777604",
          "withoutMetadata": "7c4ce62a347a52dc2685dbb41f6d968bb51e7d6abb10665abf0c7d7699da0d36",
          "linkedWithoutMetadata": "7c4ce62a347a52dc2685dbb41f6d968bb51e7d6abb10665abf0c7d7699da0d36"
        },
        "inherit": [
          "contracts/RichHusky.sol:ERC20",
          "contracts/RichHusky.sol:IERC20Metadata",
          "contracts/RichHusky.sol:IERC20",
          "contracts/RichHusky.sol:Context"
        ],
        "libraries": [
          "contracts/RichHusky.sol:Checker"
        ],
        "methods": [
          "(address)",
          "mint(address,uint256)",
          "updateAirdropAmount(uint256)",
          "withdrawFee(address,uint256)",
          "airdrop(address[],uint256)",
          "addBetaUsers(address[])",
          "removeBetaUsers(address[])",
          "multiCall(address[],bytes[])"
        ],
        "linkReferences": [
          {
            "src": "contracts/RichHusky.sol",
            "name": "Checker",
            "length": 20,
            "start": 5176,
            "placeholder": "__$1cb883ae52507a2d00adae80c79f632cb4$__"
          }
        ],
        "errors": [
          {
            "kind": "constructor",
            "contract": "RichHusky",
            "src": "contracts/RichHusky.sol:554"
          },
          {
            "kind": "state-variable-immutable",
            "name": "pancakeFactory",
            "src": "contracts/RichHusky.sol:549"
          },
          {
            "kind": "state-variable-immutable",
            "name": "WBNB",
            "src": "contracts/RichHusky.sol:550"
          },
          {
            "kind": "state-variable-immutable",
            "name": "GasToken",
            "src": "contracts/RichHusky.sol:552"
          },
          {
            "kind": "external-library-linking",
            "name": "Checker",
            "src": "contracts/RichHusky.sol"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_balances",
              "offset": 0,
              "slot": "0",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC20",
              "src": "contracts/RichHusky.sol:163"
            },
            {
              "label": "_allowances",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "ERC20",
              "src": "contracts/RichHusky.sol:165"
            },
            {
              "label": "_totalSupply",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "ERC20",
              "src": "contracts/RichHusky.sol:167"
            },
            {
              "label": "_name",
              "offset": 0,
              "slot": "3",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "contracts/RichHusky.sol:169"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "4",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "contracts/RichHusky.sol:170"
            },
            {
              "label": "dev",
              "offset": 0,
              "slot": "5",
              "type": "t_address",
              "contract": "RichHusky",
              "src": "contracts/RichHusky.sol:544"
            },
            {
              "label": "airdropAmount",
              "offset": 0,
              "slot": "6",
              "type": "t_uint256",
              "contract": "RichHusky",
              "src": "contracts/RichHusky.sol:545"
            },
            {
              "label": "betaUsers",
              "offset": 0,
              "slot": "7",
              "type": "t_mapping(t_address,t_bool)",
              "contract": "RichHusky",
              "src": "contracts/RichHusky.sol:546"
            },
            {
              "label": "pair",
              "offset": 0,
              "slot": "8",
              "type": "t_address",
              "contract": "RichHusky",
              "src": "contracts/RichHusky.sol:547"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.21"
      }
    },
    {
      "contracts/FirstDao.sol:FistDao": {
        "src": "contracts/FirstDao.sol:127",
        "version": {
          "withMetadata": "87594bf7d015e41aaf777bc0dc62e9e8a3685546fcfa065eb87291ef7f3f16f4",
          "withoutMetadata": "5bdb2538a3ba33172d93851875dfca20475ce01973348f896430788ab9d8314a",
          "linkedWithoutMetadata": "5bdb2538a3ba33172d93851875dfca20475ce01973348f896430788ab9d8314a"
        },
        "inherit": [
          "contracts/FirstDao.sol:Ownable",
          "contracts/FirstDao.sol:IERC20"
        ],
        "libraries": [
          "contracts/FirstDao.sol:SafeMath"
        ],
        "methods": [
          "(string,string)",
          "()",
          "initialize(address,address,address,address)",
          "transferEvent(address,address,uint256)",
          "feeState()",
          "getIsApproved(address)",
          "searchExcludedFromFeeAccounts(address)",
          "getDefaultBalance()",
          "insertIntoExcludedFromFeeAccounts(address[])",
          "deleteFromExcludedFromFeeAccounts(address[])",
          "claim(address,uint256)",
          "name()",
          "symbol()",
          "decimals()",
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "transferFrom(address,address,uint256)",
          "approve(address,uint256)",
          "allowance(address,address)",
          "increaseAllowance(address,uint256)",
          "decreaseAllowance(address,uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "FistDao",
            "src": "contracts/FirstDao.sol:159"
          },
          {
            "kind": "state-variable-assignment",
            "name": "_decimals",
            "src": "contracts/FirstDao.sol:132"
          },
          {
            "kind": "state-variable-assignment",
            "name": "_totalSupply",
            "src": "contracts/FirstDao.sol:133"
          },
          {
            "kind": "state-variable-assignment",
            "name": "_feeTax",
            "src": "contracts/FirstDao.sol:138"
          },
          {
            "kind": "state-variable-assignment",
            "name": "_feeMining",
            "src": "contracts/FirstDao.sol:139"
          },
          {
            "kind": "state-variable-assignment",
            "name": "_feeLiquidity",
            "src": "contracts/FirstDao.sol:140"
          },
          {
            "kind": "state-variable-assignment",
            "name": "_feeDivisor",
            "src": "contracts/FirstDao.sol:141"
          },
          {
            "kind": "state-variable-assignment",
            "name": "_removeAllFee",
            "src": "contracts/FirstDao.sol:143"
          },
          {
            "kind": "state-variable-assignment",
            "name": "_defaultBalance",
            "src": "contracts/FirstDao.sol:150"
          },
          {
            "kind": "state-variable-assignment",
            "name": "_defaultAmount",
            "src": "contracts/FirstDao.sol:151"
          },
          {
            "kind": "state-variable-assignment",
            "name": "_initialized111",
            "src": "contracts/FirstDao.sol:156"
          },
          {
            "kind": "state-variable-assignment",
            "name": "_reentry",
            "src": "contracts/FirstDao.sol:157"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Ownable",
              "src": "contracts/FirstDao.sol:58"
            },
            {
              "label": "_previousOwner",
              "offset": 0,
              "slot": "1",
              "type": "t_address",
              "contract": "Ownable",
              "src": "contracts/FirstDao.sol:59"
            },
            {
              "label": "_switchDate",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "Ownable",
              "src": "contracts/FirstDao.sol:60"
            },
            {
              "label": "_name",
              "offset": 0,
              "slot": "3",
              "type": "t_string_storage",
              "contract": "FistDao",
              "src": "contracts/FirstDao.sol:130"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "4",
              "type": "t_string_storage",
              "contract": "FistDao",
              "src": "contracts/FirstDao.sol:131"
            },
            {
              "label": "_decimals",
              "offset": 0,
              "slot": "5",
              "type": "t_uint8",
              "contract": "FistDao",
              "src": "contracts/FirstDao.sol:132"
            },
            {
              "label": "_totalSupply",
              "offset": 0,
              "slot": "6",
              "type": "t_uint256",
              "contract": "FistDao",
              "src": "contracts/FirstDao.sol:133"
            },
            {
              "label": "_balances",
              "offset": 0,
              "slot": "7",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "FistDao",
              "src": "contracts/FirstDao.sol:134"
            },
            {
              "label": "_allowances",
              "offset": 0,
              "slot": "8",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "FistDao",
              "src": "contracts/FirstDao.sol:135"
            },
            {
              "label": "_isApproved",
              "offset": 0,
              "slot": "9",
              "type": "t_mapping(t_address,t_bool)",
              "contract": "FistDao",
              "src": "contracts/FirstDao.sol:136"
            },
            {
              "label": "_feeTax",
              "offset": 0,
              "slot": "10",
              "type": "t_uint256",
              "contract": "FistDao",
              "src": "contracts/FirstDao.sol:138"
            },
            {
              "label": "_feeMining",
              "offset": 0,
              "slot": "11",
              "type": "t_uint256",
              "contract": "FistDao",
              "src": "contracts/FirstDao.sol:139"
            },
            {
              "label": "_feeLiquidity",
              "offset": 0,
              "slot": "12",
              "type": "t_uint256",
              "contract": "FistDao",
              "src": "contracts/FirstDao.sol:140"
            },
            {
              "label": "_feeDivisor",
              "offset": 0,
              "slot": "13",
              "type": "t_uint256",
              "contract": "FistDao",
              "src": "contracts/FirstDao.sol:141"
            },
            {
              "label": "_removeAllFee",
              "offset": 0,
              "slot": "14",
              "type": "t_bool",
              "contract": "FistDao",
              "src": "contracts/FirstDao.sol:143"
            },
            {
              "label": "_core",
              "offset": 1,
              "slot": "14",
              "type": "t_address",
              "contract": "FistDao",
              "src": "contracts/FirstDao.sol:145"
            },
            {
              "label": "_taxReceiver",
              "offset": 0,
              "slot": "15",
              "type": "t_address",
              "contract": "FistDao",
              "src": "contracts/FirstDao.sol:146"
            },
            {
              "label": "_miningPool",
              "offset": 0,
              "slot": "16",
              "type": "t_address",
              "contract": "FistDao",
              "src": "contracts/FirstDao.sol:147"
            },
            {
              "label": "_liquidityPool",
              "offset": 0,
              "slot": "17",
              "type": "t_address",
              "contract": "FistDao",
              "src": "contracts/FirstDao.sol:148"
            },
            {
              "label": "_defaultBalance",
              "offset": 0,
              "slot": "18",
              "type": "t_uint256",
              "contract": "FistDao",
              "src": "contracts/FirstDao.sol:150"
            },
            {
              "label": "_defaultAmount",
              "offset": 0,
              "slot": "19",
              "type": "t_uint256",
              "contract": "FistDao",
              "src": "contracts/FirstDao.sol:151"
            },
            {
              "label": "_isExcludedFromFee",
              "offset": 0,
              "slot": "20",
              "type": "t_mapping(t_address,t_bool)",
              "contract": "FistDao",
              "src": "contracts/FirstDao.sol:153"
            },
            {
              "label": "_excludedFromFeeAccounts",
              "offset": 0,
              "slot": "21",
              "type": "t_array(t_address)dyn_storage",
              "contract": "FistDao",
              "src": "contracts/FirstDao.sol:154"
            },
            {
              "label": "_initialized111",
              "offset": 0,
              "slot": "22",
              "type": "t_bool",
              "contract": "FistDao",
              "src": "contracts/FirstDao.sol:156"
            },
            {
              "label": "_reentry",
              "offset": 0,
              "slot": "23",
              "type": "t_uint256",
              "contract": "FistDao",
              "src": "contracts/FirstDao.sol:157"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_address)dyn_storage": {
              "label": "address[]",
              "numberOfBytes": "32"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint8": {
              "label": "uint8",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.21"
      },
      "contracts/FirstDao.sol:ICore": {
        "src": "contracts/FirstDao.sol:119",
        "inherit": [],
        "libraries": [],
        "methods": [
          "getPairAddress()",
          "airdrop()",
          "safety(address,address)",
          "start()",
          "end()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.21"
      },
      "contracts/FirstDao.sol:IERC20": {
        "src": "contracts/FirstDao.sol:8",
        "inherit": [],
        "libraries": [],
        "methods": [
          "name()",
          "symbol()",
          "decimals()",
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "transferFrom(address,address,uint256)",
          "approve(address,uint256)",
          "allowance(address,address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.21"
      },
      "contracts/FirstDao.sol:IFactory": {
        "src": "contracts/FirstDao.sol:91",
        "inherit": [],
        "libraries": [],
        "methods": [
          "createPair(address,address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.21"
      },
      "contracts/FirstDao.sol:IRouter01": {
        "src": "contracts/FirstDao.sol:95",
        "inherit": [],
        "libraries": [],
        "methods": [
          "factory()",
          "addLiquidity(address,address,uint256,uint256,uint256,uint256,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.21"
      },
      "contracts/FirstDao.sol:IRouter02": {
        "src": "contracts/FirstDao.sol:109",
        "inherit": [
          "contracts/FirstDao.sol:IRouter01"
        ],
        "libraries": [],
        "methods": [
          "swapExactTokensForTokensSupportingFeeOnTransferTokens(uint256,uint256,address[],address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.21"
      },
      "contracts/FirstDao.sol:Ownable": {
        "src": "contracts/FirstDao.sol:57",
        "inherit": [],
        "libraries": [],
        "methods": [
          "owner()",
          "switchDate()",
          "transferOwnership(uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Ownable",
            "src": "contracts/FirstDao.sol:63"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Ownable",
              "src": "contracts/FirstDao.sol:58"
            },
            {
              "label": "_previousOwner",
              "offset": 0,
              "slot": "1",
              "type": "t_address",
              "contract": "Ownable",
              "src": "contracts/FirstDao.sol:59"
            },
            {
              "label": "_switchDate",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "Ownable",
              "src": "contracts/FirstDao.sol:60"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.21"
      },
      "contracts/FirstDao.sol:SafeMath": {
        "src": "contracts/FirstDao.sol:22",
        "version": {
          "withMetadata": "95eb3df1bd62a62b1bf87150f7314053125cc709ed6eb26f9bf2a30d8fc55e32",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.21"
      }
    },
    {
      "contracts/IFiles.sol:Address": {
        "src": "contracts/IFiles.sol:147",
        "version": {
          "withMetadata": "73f3d745b82ff92d492794f39ddc131795315255895e196d918dc1260c813488",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.21"
      },
      "contracts/IFiles.sol:Context": {
        "src": "contracts/IFiles.sol:135",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.21"
      },
      "contracts/IFiles.sol:IBEP20": {
        "src": "contracts/IFiles.sol:9",
        "inherit": [],
        "libraries": [],
        "methods": [
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.21"
      },
      "contracts/IFiles.sol:IPancakeFactory": {
        "src": "contracts/IFiles.sol:327",
        "inherit": [],
        "libraries": [],
        "methods": [
          "feeTo()",
          "feeToSetter()",
          "getPair(address,address)",
          "allPairs(uint256)",
          "allPairsLength()",
          "createPair(address,address)",
          "setFeeTo(address)",
          "setFeeToSetter(address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.21"
      },
      "contracts/IFiles.sol:IPancakePair": {
        "src": "contracts/IFiles.sol:357",
        "inherit": [],
        "libraries": [],
        "methods": [
          "name()",
          "symbol()",
          "decimals()",
          "totalSupply()",
          "balanceOf(address)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transfer(address,uint256)",
          "transferFrom(address,address,uint256)",
          "DOMAIN_SEPARATOR()",
          "PERMIT_TYPEHASH()",
          "nonces(address)",
          "permit(address,address,uint256,uint256,uint8,bytes32,bytes32)",
          "MINIMUM_LIQUIDITY()",
          "factory()",
          "token0()",
          "token1()",
          "getReserves()",
          "price0CumulativeLast()",
          "price1CumulativeLast()",
          "kLast()",
          "mint(address)",
          "burn(address)",
          "swap(uint256,uint256,address,bytes)",
          "skim(address)",
          "sync()",
          "initialize(address,address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.21"
      },
      "contracts/IFiles.sol:IPancakeRouter01": {
        "src": "contracts/IFiles.sol:466",
        "inherit": [],
        "libraries": [],
        "methods": [
          "factory()",
          "WETH()",
          "addLiquidity(address,address,uint256,uint256,uint256,uint256,address,uint256)",
          "addLiquidityETH(address,uint256,uint256,uint256,address,uint256)",
          "removeLiquidity(address,address,uint256,uint256,uint256,address,uint256)",
          "removeLiquidityETH(address,uint256,uint256,uint256,address,uint256)",
          "removeLiquidityWithPermit(address,address,uint256,uint256,uint256,address,uint256,bool,uint8,bytes32,bytes32)",
          "removeLiquidityETHWithPermit(address,uint256,uint256,uint256,address,uint256,bool,uint8,bytes32,bytes32)",
          "swapExactTokensForTokens(uint256,uint256,address[],address,uint256)",
          "swapTokensForExactTokens(uint256,uint256,address[],address,uint256)",
          "swapExactETHForTokens(uint256,address[],address,uint256)",
          "swapTokensForExactETH(uint256,uint256,address[],address,uint256)",
          "swapExactTokensForETH(uint256,uint256,address[],address,uint256)",
          "swapETHForExactTokens(uint256,address[],address,uint256)",
          "quote(uint256,uint256,uint256)",
          "getAmountOut(uint256,uint256,uint256)",
          "getAmountIn(uint256,uint256,uint256)",
          "getAmountsOut(uint256,address[])",
          "getAmountsIn(uint256,address[])"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.21"
      },
      "contracts/IFiles.sol:IPancakeRouter02": {
        "src": "contracts/IFiles.sol:626",
        "inherit": [
          "contracts/IFiles.sol:IPancakeRouter01"
        ],
        "libraries": [],
        "methods": [
          "removeLiquidityETHSupportingFeeOnTransferTokens(address,uint256,uint256,uint256,address,uint256)",
          "removeLiquidityETHWithPermitSupportingFeeOnTransferTokens(address,uint256,uint256,uint256,address,uint256,bool,uint8,bytes32,bytes32)",
          "swapExactTokensForTokensSupportingFeeOnTransferTokens(uint256,uint256,address[],address,uint256)",
          "swapExactETHForTokensSupportingFeeOnTransferTokens(uint256,address[],address,uint256)",
          "swapExactTokensForETHSupportingFeeOnTransferTokens(uint256,uint256,address[],address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.21"
      },
      "contracts/IFiles.sol:IWBNB": {
        "src": "contracts/IFiles.sol:38",
        "inherit": [],
        "libraries": [],
        "methods": [
          "name()",
          "symbol()",
          "decimals()",
          "balanceOf(address)",
          "allowance(address,address)",
          "()",
          "deposit()",
          "withdraw(uint256)",
          "totalSupply()",
          "approve(address,uint256)",
          "transfer(address,uint256)",
          "transferFrom(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.21"
      },
      "contracts/IFiles.sol:Initializable": {
        "src": "contracts/IFiles.sol:249",
        "version": {
          "withMetadata": "ba793f874980ba8826e0f77e588821b7a373c942b97ebcd7e4e42f378e00e824",
          "withoutMetadata": "ac0db523ddc3e330f735df7b3b0b24460531c71290a891170e840f8f67d5ff6b",
          "linkedWithoutMetadata": "ac0db523ddc3e330f735df7b3b0b24460531c71290a891170e840f8f67d5ff6b"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "contracts/IFiles.sol:251"
            },
            {
              "label": "initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "contracts/IFiles.sol:252"
            },
            {
              "label": "______gap",
              "offset": 0,
              "slot": "1",
              "type": "t_array(t_uint256)50_storage",
              "contract": "Initializable",
              "src": "contracts/IFiles.sol:283"
            }
          ],
          "types": {
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]",
              "numberOfBytes": "1600"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.21"
      },
      "contracts/IFiles.sol:Ownable": {
        "src": "contracts/IFiles.sol:286",
        "version": {
          "withMetadata": "9b6e83ec071c913ea8078938bf6c8e47f6ce697f181f2ebf31dc4937807eb386",
          "withoutMetadata": "a3dd09084d5d3377afaa5e637593b425fb1172db63a48c2f62428555638775f8",
          "linkedWithoutMetadata": "a3dd09084d5d3377afaa5e637593b425fb1172db63a48c2f62428555638775f8"
        },
        "inherit": [
          "contracts/IFiles.sol:Initializable",
          "contracts/IFiles.sol:Context"
        ],
        "libraries": [],
        "methods": [
          "()",
          "initOwner(address)",
          "owner()",
          "renounceOwnership()",
          "transferOwnership(address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "contracts/IFiles.sol:251"
            },
            {
              "label": "initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "contracts/IFiles.sol:252"
            },
            {
              "label": "______gap",
              "offset": 0,
              "slot": "1",
              "type": "t_array(t_uint256)50_storage",
              "contract": "Initializable",
              "src": "contracts/IFiles.sol:283"
            },
            {
              "label": "_owner",
              "offset": 0,
              "slot": "51",
              "type": "t_address",
              "contract": "Ownable",
              "src": "contracts/IFiles.sol:287"
            },
            {
              "label": "_previousOwner",
              "offset": 0,
              "slot": "52",
              "type": "t_address",
              "contract": "Ownable",
              "src": "contracts/IFiles.sol:288"
            },
            {
              "label": "_lockTime",
              "offset": 0,
              "slot": "53",
              "type": "t_uint256",
              "contract": "Ownable",
              "src": "contracts/IFiles.sol:289"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]",
              "numberOfBytes": "1600"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.21"
      },
      "contracts/IFiles.sol:SafeMath": {
        "src": "contracts/IFiles.sol:68",
        "version": {
          "withMetadata": "6a5db877229c78c84b33e85a297bea1121c6a6195aa310f30cbe69888293c5ae",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.21"
      },
      "contracts/ReentrancyGuard.sol:ReentrancyGuard": {
        "src": "contracts/ReentrancyGuard.sol:5",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ReentrancyGuard",
            "src": "contracts/ReentrancyGuard.sol:12"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_status",
              "offset": 0,
              "slot": "0",
              "type": "t_uint256",
              "contract": "ReentrancyGuard",
              "src": "contracts/ReentrancyGuard.sol:10"
            }
          ],
          "types": {
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.21"
      },
      "contracts/Utils.sol:PancakeLibrary": {
        "src": "contracts/Utils.sol:219",
        "version": {
          "withMetadata": "668337a75717822cd6d73bbd1c50526e84e4af10cd45125b1756676395a2f30c",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [
          "contracts/IFiles.sol:SafeMath"
        ],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.21"
      },
      "contracts/Utils.sol:Utils": {
        "src": "contracts/Utils.sol:6",
        "version": {
          "withMetadata": "a5775bd7ff330a5dfa7ddaef645bcc8fbccdcd3c38fbc9fc1755e3e3a9a09d47",
          "withoutMetadata": "8ca6da6b824cadf2e1f9c600b5f1381080c8b8d75dddf5423f35e25222daaeda",
          "linkedWithoutMetadata": "8ca6da6b824cadf2e1f9c600b5f1381080c8b8d75dddf5423f35e25222daaeda"
        },
        "inherit": [],
        "libraries": [
          "contracts/IFiles.sol:SafeMath"
        ],
        "methods": [
          "calculateBNBReward(uint256,uint256,uint256,uint256)",
          "calculateTopUpClaim(uint256,uint256,uint256,uint256)",
          "swapTokensForEth(address,uint256)",
          "swapETHForTokens(address,address,uint256)",
          "swapTokensForTokens(address,address,uint256)",
          "getAmountsout(uint256,address)",
          "addLiquidity(address,address,uint256,uint256)",
          "getAntiFlipTaxNo(uint256)",
          "calcReward(uint256,uint256,uint256,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.21"
      }
    },
    {
      "contracts/Proxy.sol:Caller": {
        "src": "contracts/Proxy.sol:80",
        "version": {
          "withMetadata": "8a43f4805f6ec5dd7b7379a87ef3fa89b1f2cd8e86292442058e51e90f40e31d",
          "withoutMetadata": "d6211a178c252503f87d41bbcceffa66551bde0c0c4b0cc3c5a44a4f489e2c7f",
          "linkedWithoutMetadata": "d6211a178c252503f87d41bbcceffa66551bde0c0c4b0cc3c5a44a4f489e2c7f"
        },
        "inherit": [],
        "libraries": [],
        "methods": [
          "(address)",
          "increase()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Caller",
            "src": "contracts/Proxy.sol:80"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "proxy",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Caller",
              "src": "contracts/Proxy.sol:80"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.21"
      },
      "contracts/Proxy.sol:Proxy": {
        "src": "contracts/Proxy.sol:10",
        "version": {
          "withMetadata": "3a655b5f054f4310d279144652e269b840bf308c06f48e08f2d407ee1381c2c1",
          "withoutMetadata": "bc7fcd1c64d2f798926ae830c3e369a33c770ea294cd9047d184a8c885a96818",
          "linkedWithoutMetadata": "bc7fcd1c64d2f798926ae830c3e369a33c770ea294cd9047d184a8c885a96818"
        },
        "inherit": [],
        "libraries": [],
        "methods": [
          "(address)",
          "()",
          "()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Proxy",
            "src": "contracts/Proxy.sol:22"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "implementation",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Proxy",
              "src": "contracts/Proxy.sol:13"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.21"
      }
    },
    {
      "contracts/Logic.sol:Logic": {
        "src": "contracts/Logic.sol:9",
        "version": {
          "withMetadata": "087c86b163578853fb1cba09b22843df8f815c95bf2568200ddd8e1dbf167fea",
          "withoutMetadata": "a9feffbc7087e9529577fb0b368171b85b94d25918f43b5d410eb0f186274034",
          "linkedWithoutMetadata": "a9feffbc7087e9529577fb0b368171b85b94d25918f43b5d410eb0f186274034"
        },
        "inherit": [],
        "libraries": [],
        "methods": [
          "increment()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "state-variable-assignment",
            "name": "x",
            "src": "contracts/Logic.sol:13"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "implementation",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Logic",
              "src": "contracts/Logic.sol:9"
            },
            {
              "label": "x",
              "offset": 0,
              "slot": "1",
              "type": "t_uint256",
              "contract": "Logic",
              "src": "contracts/Logic.sol:13"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.21"
      }
    },
    {
      "contracts/Logic.sol:Logic": {
        "src": "contracts/Logic.sol:9",
        "version": {
          "withMetadata": "087c86b163578853fb1cba09b22843df8f815c95bf2568200ddd8e1dbf167fea",
          "withoutMetadata": "a9feffbc7087e9529577fb0b368171b85b94d25918f43b5d410eb0f186274034",
          "linkedWithoutMetadata": "a9feffbc7087e9529577fb0b368171b85b94d25918f43b5d410eb0f186274034"
        },
        "inherit": [],
        "libraries": [],
        "methods": [
          "increment()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "state-variable-assignment",
            "name": "x",
            "src": "contracts/Logic.sol:13"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "implementation",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Logic",
              "src": "contracts/Logic.sol:9"
            },
            {
              "label": "x",
              "offset": 0,
              "slot": "1",
              "type": "t_uint256",
              "contract": "Logic",
              "src": "contracts/Logic.sol:13"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.21"
      }
    },
    {
      "contracts/Logic.sol:Logic": {
        "src": "contracts/Logic.sol:9",
        "version": {
          "withMetadata": "087c86b163578853fb1cba09b22843df8f815c95bf2568200ddd8e1dbf167fea",
          "withoutMetadata": "a9feffbc7087e9529577fb0b368171b85b94d25918f43b5d410eb0f186274034",
          "linkedWithoutMetadata": "a9feffbc7087e9529577fb0b368171b85b94d25918f43b5d410eb0f186274034"
        },
        "inherit": [],
        "libraries": [],
        "methods": [
          "increment()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "state-variable-assignment",
            "name": "x",
            "src": "contracts/Logic.sol:13"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "implementation",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Logic",
              "src": "contracts/Logic.sol:9"
            },
            {
              "label": "x",
              "offset": 0,
              "slot": "1",
              "type": "t_uint256",
              "contract": "Logic",
              "src": "contracts/Logic.sol:13"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.21"
      }
    },
    {
      "contracts/Logic.sol:Logic": {
        "src": "contracts/Logic.sol:9",
        "version": {
          "withMetadata": "087c86b163578853fb1cba09b22843df8f815c95bf2568200ddd8e1dbf167fea",
          "withoutMetadata": "a9feffbc7087e9529577fb0b368171b85b94d25918f43b5d410eb0f186274034",
          "linkedWithoutMetadata": "a9feffbc7087e9529577fb0b368171b85b94d25918f43b5d410eb0f186274034"
        },
        "inherit": [],
        "libraries": [],
        "methods": [
          "increment()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "state-variable-assignment",
            "name": "x",
            "src": "contracts/Logic.sol:13"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "implementation",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Logic",
              "src": "contracts/Logic.sol:9"
            },
            {
              "label": "x",
              "offset": 0,
              "slot": "1",
              "type": "t_uint256",
              "contract": "Logic",
              "src": "contracts/Logic.sol:13"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.21"
      }
    },
    {
      "contracts/Logic.sol:Logic": {
        "src": "contracts/Logic.sol:9",
        "version": {
          "withMetadata": "087c86b163578853fb1cba09b22843df8f815c95bf2568200ddd8e1dbf167fea",
          "withoutMetadata": "a9feffbc7087e9529577fb0b368171b85b94d25918f43b5d410eb0f186274034",
          "linkedWithoutMetadata": "a9feffbc7087e9529577fb0b368171b85b94d25918f43b5d410eb0f186274034"
        },
        "inherit": [],
        "libraries": [],
        "methods": [
          "increment()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "state-variable-assignment",
            "name": "x",
            "src": "contracts/Logic.sol:13"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "implementation",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Logic",
              "src": "contracts/Logic.sol:9"
            },
            {
              "label": "x",
              "offset": 0,
              "slot": "1",
              "type": "t_uint256",
              "contract": "Logic",
              "src": "contracts/Logic.sol:13"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.21"
      }
    },
    {
      "@openzeppelin/contracts/access/Ownable.sol:Ownable": {
        "src": "@openzeppelin/contracts/access/Ownable.sol:20",
        "inherit": [
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [],
        "methods": [
          "owner()",
          "renounceOwnership()",
          "transferOwnership(address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Ownable",
            "src": "@openzeppelin/contracts/access/Ownable.sol:28"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Ownable",
              "src": "@openzeppelin/contracts/access/Ownable.sol:21"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.21"
      },
      "@openzeppelin/contracts/security/ReentrancyGuard.sol:ReentrancyGuard": {
        "src": "@openzeppelin/contracts/security/ReentrancyGuard.sol:22",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ReentrancyGuard",
            "src": "@openzeppelin/contracts/security/ReentrancyGuard.sol:39"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_status",
              "offset": 0,
              "slot": "0",
              "type": "t_uint256",
              "contract": "ReentrancyGuard",
              "src": "@openzeppelin/contracts/security/ReentrancyGuard.sol:37"
            }
          ],
          "types": {
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.21"
      },
      "@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20": {
        "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:35",
        "version": {
          "withMetadata": "b653be9ad258ddaafa2304767243ba86eac7156acd9bf1a196bee0fef9b1c3a9",
          "withoutMetadata": "1d55e2dc08aae4fa5bd2ca8ac476f7a2e63bdfa7b0b51d4bd61db8705143a140",
          "linkedWithoutMetadata": "1d55e2dc08aae4fa5bd2ca8ac476f7a2e63bdfa7b0b51d4bd61db8705143a140"
        },
        "inherit": [
          "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol:IERC20Metadata",
          "@openzeppelin/contracts/token/ERC20/IERC20.sol:IERC20",
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [],
        "methods": [
          "(string,string)",
          "name()",
          "symbol()",
          "decimals()",
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)",
          "increaseAllowance(address,uint256)",
          "decreaseAllowance(address,uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ERC20",
            "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:54"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_balances",
              "offset": 0,
              "slot": "0",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:36"
            },
            {
              "label": "_allowances",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:38"
            },
            {
              "label": "_totalSupply",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:40"
            },
            {
              "label": "_name",
              "offset": 0,
              "slot": "3",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:42"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "4",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:43"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.21"
      },
      "@openzeppelin/contracts/token/ERC20/IERC20.sol:IERC20": {
        "src": "@openzeppelin/contracts/token/ERC20/IERC20.sol:9",
        "inherit": [],
        "libraries": [],
        "methods": [
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.21"
      },
      "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol:IERC20Metadata": {
        "src": "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol:13",
        "inherit": [
          "@openzeppelin/contracts/token/ERC20/IERC20.sol:IERC20"
        ],
        "libraries": [],
        "methods": [
          "name()",
          "symbol()",
          "decimals()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.21"
      },
      "@openzeppelin/contracts/token/ERC20/extensions/draft-IERC20Permit.sol:IERC20Permit": {
        "src": "@openzeppelin/contracts/token/ERC20/extensions/draft-IERC20Permit.sol:14",
        "inherit": [],
        "libraries": [],
        "methods": [
          "permit(address,address,uint256,uint256,uint8,bytes32,bytes32)",
          "nonces(address)",
          "DOMAIN_SEPARATOR()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.21"
      },
      "@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol:SafeERC20": {
        "src": "@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol:19",
        "version": {
          "withMetadata": "945db44b71722f915e3e7352ee22f854dfe8000e69eee742d881b64279bb0ad8",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [
          "@openzeppelin/contracts/utils/Address.sol:Address"
        ],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.21"
      },
      "@openzeppelin/contracts/utils/Address.sol:Address": {
        "src": "@openzeppelin/contracts/utils/Address.sol:9",
        "version": {
          "withMetadata": "9401bbf4dc0decc4c739a060967031a16e8de389388d98c32ec11cff440d6513",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [
          {
            "kind": "delegatecall",
            "src": "@openzeppelin/contracts/utils/Address.sol:191"
          },
          {
            "kind": "delegatecall",
            "src": "@openzeppelin/contracts/utils/Address.sol:191"
          }
        ],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.21"
      },
      "@openzeppelin/contracts/utils/Context.sol:Context": {
        "src": "@openzeppelin/contracts/utils/Context.sol:16",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.21"
      },
      "@openzeppelin/contracts/utils/math/Math.sol:Math": {
        "src": "@openzeppelin/contracts/utils/math/Math.sol:9",
        "version": {
          "withMetadata": "f58f3d1d6b53395057afc8a5e1edcbfcd81cdec0dfcf6b1290c8c2368b975278",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.21"
      },
      "@openzeppelin/contracts/utils/math/SafeMath.sol:SafeMath": {
        "src": "@openzeppelin/contracts/utils/math/SafeMath.sol:16",
        "version": {
          "withMetadata": "4167346fe154a63f59e72262dbca9ccb097c97b61ec5dfe163259378386d2ba4",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.21"
      },
      "contracts/Presale.sol:IGoldToken": {
        "src": "contracts/Presale.sol:8",
        "inherit": [],
        "libraries": [],
        "methods": [
          "mint(address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.21"
      },
      "contracts/Presale.sol:Presale": {
        "src": "contracts/Presale.sol:12",
        "version": {
          "withMetadata": "55de4f41aa2ae4e88c3e975f7f7c871c8630a6a915f505e8b168c82d5665ef13",
          "withoutMetadata": "2fa5a3bfe1ae715a2695aad2a1fdda65dd5f2dfe346a8af0822d82b296b7bc1b",
          "linkedWithoutMetadata": "2fa5a3bfe1ae715a2695aad2a1fdda65dd5f2dfe346a8af0822d82b296b7bc1b"
        },
        "inherit": [
          "@openzeppelin/contracts/security/ReentrancyGuard.sol:ReentrancyGuard",
          "@openzeppelin/contracts/access/Ownable.sol:Ownable",
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [],
        "methods": [
          "(address,address,address,uint256)",
          "createPreSale((uint256,uint256,uint256))",
          "sale()",
          "getCanIdoAmount(address)",
          "bindReffer(address)",
          "userBalance(address)",
          "userRewardBalance(address)",
          "userWithdraw()",
          "teamWithdraw(address)",
          "setUserWithdrawTime(uint256)",
          "setInviteMin(uint256)",
          "setPerMaxBuyUsdt(uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Presale",
            "src": "contracts/Presale.sol:46"
          },
          {
            "kind": "state-variable-assignment",
            "name": "perMaxBuyUsdt",
            "src": "contracts/Presale.sol:15"
          },
          {
            "kind": "state-variable-assignment",
            "name": "inviteMin",
            "src": "contracts/Presale.sol:31"
          },
          {
            "kind": "state-variable-assignment",
            "name": "maxSale",
            "src": "contracts/Presale.sol:33"
          },
          {
            "kind": "state-variable-assignment",
            "name": "rewardLevel",
            "src": "contracts/Presale.sol:36"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Ownable",
              "src": "@openzeppelin/contracts/access/Ownable.sol:21"
            },
            {
              "label": "_status",
              "offset": 0,
              "slot": "1",
              "type": "t_uint256",
              "contract": "ReentrancyGuard",
              "src": "@openzeppelin/contracts/security/ReentrancyGuard.sol:37"
            },
            {
              "label": "userWithdrawTime",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "Presale",
              "src": "contracts/Presale.sol:13"
            },
            {
              "label": "perMaxBuyUsdt",
              "offset": 0,
              "slot": "3",
              "type": "t_uint256",
              "contract": "Presale",
              "src": "contracts/Presale.sol:15"
            },
            {
              "label": "teamAddress",
              "offset": 0,
              "slot": "4",
              "type": "t_address",
              "contract": "Presale",
              "src": "contracts/Presale.sol:16"
            },
            {
              "label": "saleToken",
              "offset": 0,
              "slot": "5",
              "type": "t_address",
              "contract": "Presale",
              "src": "contracts/Presale.sol:17"
            },
            {
              "label": "usdtToken",
              "offset": 0,
              "slot": "6",
              "type": "t_address",
              "contract": "Presale",
              "src": "contracts/Presale.sol:18"
            },
            {
              "label": "goldTokenAddress",
              "offset": 0,
              "slot": "7",
              "type": "t_address",
              "contract": "Presale",
              "src": "contracts/Presale.sol:19"
            },
            {
              "label": "balances",
              "offset": 0,
              "slot": "8",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "Presale",
              "src": "contracts/Presale.sol:20"
            },
            {
              "label": "userBuyTotalUsdt",
              "offset": 0,
              "slot": "9",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "Presale",
              "src": "contracts/Presale.sol:21"
            },
            {
              "label": "rewardBalances",
              "offset": 0,
              "slot": "10",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "Presale",
              "src": "contracts/Presale.sol:22"
            },
            {
              "label": "reffers",
              "offset": 0,
              "slot": "11",
              "type": "t_mapping(t_address,t_address)",
              "contract": "Presale",
              "src": "contracts/Presale.sol:23"
            },
            {
              "label": "refferNumber",
              "offset": 0,
              "slot": "12",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "Presale",
              "src": "contracts/Presale.sol:24"
            },
            {
              "label": "teamRefferNumber",
              "offset": 0,
              "slot": "13",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "Presale",
              "src": "contracts/Presale.sol:25"
            },
            {
              "label": "firstIdo",
              "offset": 0,
              "slot": "14",
              "type": "t_mapping(t_address,t_bool)",
              "contract": "Presale",
              "src": "contracts/Presale.sol:26"
            },
            {
              "label": "totalIdoUSDT",
              "offset": 0,
              "slot": "15",
              "type": "t_uint256",
              "contract": "Presale",
              "src": "contracts/Presale.sol:27"
            },
            {
              "label": "totalIdoUser",
              "offset": 0,
              "slot": "16",
              "type": "t_uint256",
              "contract": "Presale",
              "src": "contracts/Presale.sol:28"
            },
            {
              "label": "totalSale",
              "offset": 0,
              "slot": "17",
              "type": "t_uint256",
              "contract": "Presale",
              "src": "contracts/Presale.sol:29"
            },
            {
              "label": "inviteMin",
              "offset": 0,
              "slot": "18",
              "type": "t_uint256",
              "contract": "Presale",
              "src": "contracts/Presale.sol:31"
            },
            {
              "label": "maxSale",
              "offset": 0,
              "slot": "19",
              "type": "t_uint256",
              "contract": "Presale",
              "src": "contracts/Presale.sol:33"
            },
            {
              "label": "isCloseSale",
              "offset": 0,
              "slot": "20",
              "type": "t_bool",
              "contract": "Presale",
              "src": "contracts/Presale.sol:34"
            },
            {
              "label": "rewardLevel",
              "offset": 0,
              "slot": "21",
              "type": "t_array(t_uint256)dyn_storage",
              "contract": "Presale",
              "src": "contracts/Presale.sol:36"
            },
            {
              "label": "presaleInfo",
              "offset": 0,
              "slot": "22",
              "type": "t_struct(PresaleInfo)2392_storage",
              "contract": "Presale",
              "src": "contracts/Presale.sol:44"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_uint256)dyn_storage": {
              "label": "uint256[]",
              "numberOfBytes": "32"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_mapping(t_address,t_address)": {
              "label": "mapping(address => address)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_struct(PresaleInfo)2392_storage": {
              "label": "struct Presale.PresaleInfo",
              "members": [
                {
                  "label": "startTime",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "endTime",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "price",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "2"
                }
              ],
              "numberOfBytes": "96"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.21"
      },
      "contracts/Staking.sol:IRejuvenate": {
        "src": "contracts/Staking.sol:9",
        "inherit": [],
        "libraries": [],
        "methods": [
          "mint(address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.21"
      },
      "contracts/Staking.sol:Staking": {
        "src": "contracts/Staking.sol:13",
        "version": {
          "withMetadata": "d4a43fbe5f8d6347383f0680dba0a94146fceda61d8f28fb0ed926fda6eca5bc",
          "withoutMetadata": "8e35a11dc4a30aced1c096dd5db7f6424d19b292b732012b8d44d054f9cea466",
          "linkedWithoutMetadata": "8e35a11dc4a30aced1c096dd5db7f6424d19b292b732012b8d44d054f9cea466"
        },
        "inherit": [
          "@openzeppelin/contracts/security/ReentrancyGuard.sol:ReentrancyGuard",
          "@openzeppelin/contracts/access/Ownable.sol:Ownable",
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [],
        "methods": [
          "()",
          "changeRewardsPerBlock(uint256)",
          "rewardPerToken()",
          "earned(address)",
          "stake(uint256)",
          "unstake(uint256)",
          "claimRewards()",
          "pause()",
          "unpause()",
          "inCaseTokensGetStuck(address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Staking",
            "src": "contracts/Staking.sol:33"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Ownable",
              "src": "@openzeppelin/contracts/access/Ownable.sol:21"
            },
            {
              "label": "_status",
              "offset": 0,
              "slot": "1",
              "type": "t_uint256",
              "contract": "ReentrancyGuard",
              "src": "@openzeppelin/contracts/security/ReentrancyGuard.sol:37"
            },
            {
              "label": "paused",
              "offset": 0,
              "slot": "2",
              "type": "t_bool",
              "contract": "Staking",
              "src": "contracts/Staking.sol:14"
            },
            {
              "label": "_treasury",
              "offset": 1,
              "slot": "2",
              "type": "t_address",
              "contract": "Staking",
              "src": "contracts/Staking.sol:15"
            },
            {
              "label": "token",
              "offset": 0,
              "slot": "3",
              "type": "t_address",
              "contract": "Staking",
              "src": "contracts/Staking.sol:17"
            },
            {
              "label": "rewardRate",
              "offset": 0,
              "slot": "4",
              "type": "t_uint256",
              "contract": "Staking",
              "src": "contracts/Staking.sol:19"
            },
            {
              "label": "_lastUpdateBlock",
              "offset": 0,
              "slot": "5",
              "type": "t_uint256",
              "contract": "Staking",
              "src": "contracts/Staking.sol:20"
            },
            {
              "label": "_rewardsPerToken",
              "offset": 0,
              "slot": "6",
              "type": "t_uint256",
              "contract": "Staking",
              "src": "contracts/Staking.sol:21"
            },
            {
              "label": "data",
              "offset": 0,
              "slot": "7",
              "type": "t_array(t_struct(StakingData)3375_storage)dyn_storage",
              "contract": "Staking",
              "src": "contracts/Staking.sol:22"
            },
            {
              "label": "_userRewardsPerToken",
              "offset": 0,
              "slot": "8",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "Staking",
              "src": "contracts/Staking.sol:24"
            },
            {
              "label": "_rewards",
              "offset": 0,
              "slot": "9",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "Staking",
              "src": "contracts/Staking.sol:25"
            },
            {
              "label": "totalStaked",
              "offset": 0,
              "slot": "10",
              "type": "t_uint256",
              "contract": "Staking",
              "src": "contracts/Staking.sol:27"
            },
            {
              "label": "_balances",
              "offset": 0,
              "slot": "11",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "Staking",
              "src": "contracts/Staking.sol:28"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_struct(StakingData)3375_storage)dyn_storage": {
              "label": "struct StakingData[]",
              "numberOfBytes": "32"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_struct(StakingData)3375_storage": {
              "label": "struct StakingData",
              "members": [
                {
                  "label": "block",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "staked",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "1"
                }
              ],
              "numberOfBytes": "64"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.21"
      }
    },
    {
      "contracts/RichHusky.sol:Checker": {
        "src": "contracts/RichHusky.sol:520",
        "version": {
          "withMetadata": "17e1cf10fdffcda321c1a1f59d2b06178394724b4d8ad9b035a718122fed8a52",
          "withoutMetadata": "0faf6ca500781d04501ba7e4cf9138e35957321419c6ca29798480c22b3cc5cd",
          "linkedWithoutMetadata": "0faf6ca500781d04501ba7e4cf9138e35957321419c6ca29798480c22b3cc5cd"
        },
        "inherit": [],
        "libraries": [],
        "methods": [
          "isValid(address,address,address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.21"
      },
      "contracts/RichHusky.sol:Context": {
        "src": "contracts/RichHusky.sol:27",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.21"
      },
      "contracts/RichHusky.sol:ERC20": {
        "src": "contracts/RichHusky.sol:162",
        "version": {
          "withMetadata": "e092e43bc9c3243b7138ce015fa92d358fa66a764079145cfe1339f160fd055e",
          "withoutMetadata": "e248eda4094a79267c1d78eb85fb3a082e2ba4d153192b2644d6357dbed158f3",
          "linkedWithoutMetadata": "e248eda4094a79267c1d78eb85fb3a082e2ba4d153192b2644d6357dbed158f3"
        },
        "inherit": [
          "contracts/RichHusky.sol:IERC20Metadata",
          "contracts/RichHusky.sol:IERC20",
          "contracts/RichHusky.sol:Context"
        ],
        "libraries": [],
        "methods": [
          "(string,string)",
          "name()",
          "symbol()",
          "decimals()",
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)",
          "increaseAllowance(address,uint256)",
          "decreaseAllowance(address,uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ERC20",
            "src": "contracts/RichHusky.sol:181"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_balances",
              "offset": 0,
              "slot": "0",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC20",
              "src": "contracts/RichHusky.sol:163"
            },
            {
              "label": "_allowances",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "ERC20",
              "src": "contracts/RichHusky.sol:165"
            },
            {
              "label": "_totalSupply",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "ERC20",
              "src": "contracts/RichHusky.sol:167"
            },
            {
              "label": "_name",
              "offset": 0,
              "slot": "3",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "contracts/RichHusky.sol:169"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "4",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "contracts/RichHusky.sol:170"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.21"
      },
      "contracts/RichHusky.sol:IERC20": {
        "src": "contracts/RichHusky.sol:40",
        "inherit": [],
        "libraries": [],
        "methods": [
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.21"
      },
      "contracts/RichHusky.sol:IERC20Metadata": {
        "src": "contracts/RichHusky.sol:120",
        "inherit": [
          "contracts/RichHusky.sol:IERC20"
        ],
        "libraries": [],
        "methods": [
          "name()",
          "symbol()",
          "decimals()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.21"
      },
      "contracts/RichHusky.sol:IFactory": {
        "src": "contracts/RichHusky.sol:535",
        "inherit": [],
        "libraries": [],
        "methods": [
          "createPair(address,address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.21"
      },
      "contracts/RichHusky.sol:IGasToken": {
        "src": "contracts/RichHusky.sol:539",
        "inherit": [],
        "libraries": [],
        "methods": [
          "free(uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.21"
      },
      "contracts/RichHusky.sol:RichHusky": {
        "src": "contracts/RichHusky.sol:543",
        "version": {
          "withMetadata": "ce802161ba5ffecece3a7488fb3a07a35d8f78edf3674187d3eb27cc30777604",
          "withoutMetadata": "7c4ce62a347a52dc2685dbb41f6d968bb51e7d6abb10665abf0c7d7699da0d36",
          "linkedWithoutMetadata": "7c4ce62a347a52dc2685dbb41f6d968bb51e7d6abb10665abf0c7d7699da0d36"
        },
        "inherit": [
          "contracts/RichHusky.sol:ERC20",
          "contracts/RichHusky.sol:IERC20Metadata",
          "contracts/RichHusky.sol:IERC20",
          "contracts/RichHusky.sol:Context"
        ],
        "libraries": [
          "contracts/RichHusky.sol:Checker"
        ],
        "methods": [
          "(address)",
          "mint(address,uint256)",
          "updateAirdropAmount(uint256)",
          "withdrawFee(address,uint256)",
          "airdrop(address[],uint256)",
          "addBetaUsers(address[])",
          "removeBetaUsers(address[])",
          "multiCall(address[],bytes[])"
        ],
        "linkReferences": [
          {
            "src": "contracts/RichHusky.sol",
            "name": "Checker",
            "length": 20,
            "start": 5176,
            "placeholder": "__$1cb883ae52507a2d00adae80c79f632cb4$__"
          }
        ],
        "errors": [
          {
            "kind": "constructor",
            "contract": "RichHusky",
            "src": "contracts/RichHusky.sol:554"
          },
          {
            "kind": "state-variable-immutable",
            "name": "pancakeFactory",
            "src": "contracts/RichHusky.sol:549"
          },
          {
            "kind": "state-variable-immutable",
            "name": "WBNB",
            "src": "contracts/RichHusky.sol:550"
          },
          {
            "kind": "state-variable-immutable",
            "name": "GasToken",
            "src": "contracts/RichHusky.sol:552"
          },
          {
            "kind": "external-library-linking",
            "name": "Checker",
            "src": "contracts/RichHusky.sol"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_balances",
              "offset": 0,
              "slot": "0",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC20",
              "src": "contracts/RichHusky.sol:163"
            },
            {
              "label": "_allowances",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "ERC20",
              "src": "contracts/RichHusky.sol:165"
            },
            {
              "label": "_totalSupply",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "ERC20",
              "src": "contracts/RichHusky.sol:167"
            },
            {
              "label": "_name",
              "offset": 0,
              "slot": "3",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "contracts/RichHusky.sol:169"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "4",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "contracts/RichHusky.sol:170"
            },
            {
              "label": "dev",
              "offset": 0,
              "slot": "5",
              "type": "t_address",
              "contract": "RichHusky",
              "src": "contracts/RichHusky.sol:544"
            },
            {
              "label": "airdropAmount",
              "offset": 0,
              "slot": "6",
              "type": "t_uint256",
              "contract": "RichHusky",
              "src": "contracts/RichHusky.sol:545"
            },
            {
              "label": "betaUsers",
              "offset": 0,
              "slot": "7",
              "type": "t_mapping(t_address,t_bool)",
              "contract": "RichHusky",
              "src": "contracts/RichHusky.sol:546"
            },
            {
              "label": "pair",
              "offset": 0,
              "slot": "8",
              "type": "t_address",
              "contract": "RichHusky",
              "src": "contracts/RichHusky.sol:547"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.21"
      }
    },
    {
      "contracts/FirstDao.sol:FistDao": {
        "src": "contracts/FirstDao.sol:127",
        "version": {
          "withMetadata": "87594bf7d015e41aaf777bc0dc62e9e8a3685546fcfa065eb87291ef7f3f16f4",
          "withoutMetadata": "5bdb2538a3ba33172d93851875dfca20475ce01973348f896430788ab9d8314a",
          "linkedWithoutMetadata": "5bdb2538a3ba33172d93851875dfca20475ce01973348f896430788ab9d8314a"
        },
        "inherit": [
          "contracts/FirstDao.sol:Ownable",
          "contracts/FirstDao.sol:IERC20"
        ],
        "libraries": [
          "contracts/FirstDao.sol:SafeMath"
        ],
        "methods": [
          "(string,string)",
          "()",
          "initialize(address,address,address,address)",
          "transferEvent(address,address,uint256)",
          "feeState()",
          "getIsApproved(address)",
          "searchExcludedFromFeeAccounts(address)",
          "getDefaultBalance()",
          "insertIntoExcludedFromFeeAccounts(address[])",
          "deleteFromExcludedFromFeeAccounts(address[])",
          "claim(address,uint256)",
          "name()",
          "symbol()",
          "decimals()",
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "transferFrom(address,address,uint256)",
          "approve(address,uint256)",
          "allowance(address,address)",
          "increaseAllowance(address,uint256)",
          "decreaseAllowance(address,uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "FistDao",
            "src": "contracts/FirstDao.sol:159"
          },
          {
            "kind": "state-variable-assignment",
            "name": "_decimals",
            "src": "contracts/FirstDao.sol:132"
          },
          {
            "kind": "state-variable-assignment",
            "name": "_totalSupply",
            "src": "contracts/FirstDao.sol:133"
          },
          {
            "kind": "state-variable-assignment",
            "name": "_feeTax",
            "src": "contracts/FirstDao.sol:138"
          },
          {
            "kind": "state-variable-assignment",
            "name": "_feeMining",
            "src": "contracts/FirstDao.sol:139"
          },
          {
            "kind": "state-variable-assignment",
            "name": "_feeLiquidity",
            "src": "contracts/FirstDao.sol:140"
          },
          {
            "kind": "state-variable-assignment",
            "name": "_feeDivisor",
            "src": "contracts/FirstDao.sol:141"
          },
          {
            "kind": "state-variable-assignment",
            "name": "_removeAllFee",
            "src": "contracts/FirstDao.sol:143"
          },
          {
            "kind": "state-variable-assignment",
            "name": "_defaultBalance",
            "src": "contracts/FirstDao.sol:150"
          },
          {
            "kind": "state-variable-assignment",
            "name": "_defaultAmount",
            "src": "contracts/FirstDao.sol:151"
          },
          {
            "kind": "state-variable-assignment",
            "name": "_initialized111",
            "src": "contracts/FirstDao.sol:156"
          },
          {
            "kind": "state-variable-assignment",
            "name": "_reentry",
            "src": "contracts/FirstDao.sol:157"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Ownable",
              "src": "contracts/FirstDao.sol:58"
            },
            {
              "label": "_previousOwner",
              "offset": 0,
              "slot": "1",
              "type": "t_address",
              "contract": "Ownable",
              "src": "contracts/FirstDao.sol:59"
            },
            {
              "label": "_switchDate",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "Ownable",
              "src": "contracts/FirstDao.sol:60"
            },
            {
              "label": "_name",
              "offset": 0,
              "slot": "3",
              "type": "t_string_storage",
              "contract": "FistDao",
              "src": "contracts/FirstDao.sol:130"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "4",
              "type": "t_string_storage",
              "contract": "FistDao",
              "src": "contracts/FirstDao.sol:131"
            },
            {
              "label": "_decimals",
              "offset": 0,
              "slot": "5",
              "type": "t_uint8",
              "contract": "FistDao",
              "src": "contracts/FirstDao.sol:132"
            },
            {
              "label": "_totalSupply",
              "offset": 0,
              "slot": "6",
              "type": "t_uint256",
              "contract": "FistDao",
              "src": "contracts/FirstDao.sol:133"
            },
            {
              "label": "_balances",
              "offset": 0,
              "slot": "7",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "FistDao",
              "src": "contracts/FirstDao.sol:134"
            },
            {
              "label": "_allowances",
              "offset": 0,
              "slot": "8",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "FistDao",
              "src": "contracts/FirstDao.sol:135"
            },
            {
              "label": "_isApproved",
              "offset": 0,
              "slot": "9",
              "type": "t_mapping(t_address,t_bool)",
              "contract": "FistDao",
              "src": "contracts/FirstDao.sol:136"
            },
            {
              "label": "_feeTax",
              "offset": 0,
              "slot": "10",
              "type": "t_uint256",
              "contract": "FistDao",
              "src": "contracts/FirstDao.sol:138"
            },
            {
              "label": "_feeMining",
              "offset": 0,
              "slot": "11",
              "type": "t_uint256",
              "contract": "FistDao",
              "src": "contracts/FirstDao.sol:139"
            },
            {
              "label": "_feeLiquidity",
              "offset": 0,
              "slot": "12",
              "type": "t_uint256",
              "contract": "FistDao",
              "src": "contracts/FirstDao.sol:140"
            },
            {
              "label": "_feeDivisor",
              "offset": 0,
              "slot": "13",
              "type": "t_uint256",
              "contract": "FistDao",
              "src": "contracts/FirstDao.sol:141"
            },
            {
              "label": "_removeAllFee",
              "offset": 0,
              "slot": "14",
              "type": "t_bool",
              "contract": "FistDao",
              "src": "contracts/FirstDao.sol:143"
            },
            {
              "label": "_core",
              "offset": 1,
              "slot": "14",
              "type": "t_address",
              "contract": "FistDao",
              "src": "contracts/FirstDao.sol:145"
            },
            {
              "label": "_taxReceiver",
              "offset": 0,
              "slot": "15",
              "type": "t_address",
              "contract": "FistDao",
              "src": "contracts/FirstDao.sol:146"
            },
            {
              "label": "_miningPool",
              "offset": 0,
              "slot": "16",
              "type": "t_address",
              "contract": "FistDao",
              "src": "contracts/FirstDao.sol:147"
            },
            {
              "label": "_liquidityPool",
              "offset": 0,
              "slot": "17",
              "type": "t_address",
              "contract": "FistDao",
              "src": "contracts/FirstDao.sol:148"
            },
            {
              "label": "_defaultBalance",
              "offset": 0,
              "slot": "18",
              "type": "t_uint256",
              "contract": "FistDao",
              "src": "contracts/FirstDao.sol:150"
            },
            {
              "label": "_defaultAmount",
              "offset": 0,
              "slot": "19",
              "type": "t_uint256",
              "contract": "FistDao",
              "src": "contracts/FirstDao.sol:151"
            },
            {
              "label": "_isExcludedFromFee",
              "offset": 0,
              "slot": "20",
              "type": "t_mapping(t_address,t_bool)",
              "contract": "FistDao",
              "src": "contracts/FirstDao.sol:153"
            },
            {
              "label": "_excludedFromFeeAccounts",
              "offset": 0,
              "slot": "21",
              "type": "t_array(t_address)dyn_storage",
              "contract": "FistDao",
              "src": "contracts/FirstDao.sol:154"
            },
            {
              "label": "_initialized111",
              "offset": 0,
              "slot": "22",
              "type": "t_bool",
              "contract": "FistDao",
              "src": "contracts/FirstDao.sol:156"
            },
            {
              "label": "_reentry",
              "offset": 0,
              "slot": "23",
              "type": "t_uint256",
              "contract": "FistDao",
              "src": "contracts/FirstDao.sol:157"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_address)dyn_storage": {
              "label": "address[]",
              "numberOfBytes": "32"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint8": {
              "label": "uint8",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.21"
      },
      "contracts/FirstDao.sol:ICore": {
        "src": "contracts/FirstDao.sol:119",
        "inherit": [],
        "libraries": [],
        "methods": [
          "getPairAddress()",
          "airdrop()",
          "safety(address,address)",
          "start()",
          "end()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.21"
      },
      "contracts/FirstDao.sol:IERC20": {
        "src": "contracts/FirstDao.sol:8",
        "inherit": [],
        "libraries": [],
        "methods": [
          "name()",
          "symbol()",
          "decimals()",
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "transferFrom(address,address,uint256)",
          "approve(address,uint256)",
          "allowance(address,address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.21"
      },
      "contracts/FirstDao.sol:IFactory": {
        "src": "contracts/FirstDao.sol:91",
        "inherit": [],
        "libraries": [],
        "methods": [
          "createPair(address,address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.21"
      },
      "contracts/FirstDao.sol:IRouter01": {
        "src": "contracts/FirstDao.sol:95",
        "inherit": [],
        "libraries": [],
        "methods": [
          "factory()",
          "addLiquidity(address,address,uint256,uint256,uint256,uint256,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.21"
      },
      "contracts/FirstDao.sol:IRouter02": {
        "src": "contracts/FirstDao.sol:109",
        "inherit": [
          "contracts/FirstDao.sol:IRouter01"
        ],
        "libraries": [],
        "methods": [
          "swapExactTokensForTokensSupportingFeeOnTransferTokens(uint256,uint256,address[],address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.21"
      },
      "contracts/FirstDao.sol:Ownable": {
        "src": "contracts/FirstDao.sol:57",
        "inherit": [],
        "libraries": [],
        "methods": [
          "owner()",
          "switchDate()",
          "transferOwnership(uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Ownable",
            "src": "contracts/FirstDao.sol:63"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Ownable",
              "src": "contracts/FirstDao.sol:58"
            },
            {
              "label": "_previousOwner",
              "offset": 0,
              "slot": "1",
              "type": "t_address",
              "contract": "Ownable",
              "src": "contracts/FirstDao.sol:59"
            },
            {
              "label": "_switchDate",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "Ownable",
              "src": "contracts/FirstDao.sol:60"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.21"
      },
      "contracts/FirstDao.sol:SafeMath": {
        "src": "contracts/FirstDao.sol:22",
        "version": {
          "withMetadata": "95eb3df1bd62a62b1bf87150f7314053125cc709ed6eb26f9bf2a30d8fc55e32",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.21"
      }
    },
    {
      "contracts/IFiles.sol:Address": {
        "src": "contracts/IFiles.sol:147",
        "version": {
          "withMetadata": "73f3d745b82ff92d492794f39ddc131795315255895e196d918dc1260c813488",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.21"
      },
      "contracts/IFiles.sol:Context": {
        "src": "contracts/IFiles.sol:135",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.21"
      },
      "contracts/IFiles.sol:IBEP20": {
        "src": "contracts/IFiles.sol:9",
        "inherit": [],
        "libraries": [],
        "methods": [
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.21"
      },
      "contracts/IFiles.sol:IPancakeFactory": {
        "src": "contracts/IFiles.sol:327",
        "inherit": [],
        "libraries": [],
        "methods": [
          "feeTo()",
          "feeToSetter()",
          "getPair(address,address)",
          "allPairs(uint256)",
          "allPairsLength()",
          "createPair(address,address)",
          "setFeeTo(address)",
          "setFeeToSetter(address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.21"
      },
      "contracts/IFiles.sol:IPancakePair": {
        "src": "contracts/IFiles.sol:357",
        "inherit": [],
        "libraries": [],
        "methods": [
          "name()",
          "symbol()",
          "decimals()",
          "totalSupply()",
          "balanceOf(address)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transfer(address,uint256)",
          "transferFrom(address,address,uint256)",
          "DOMAIN_SEPARATOR()",
          "PERMIT_TYPEHASH()",
          "nonces(address)",
          "permit(address,address,uint256,uint256,uint8,bytes32,bytes32)",
          "MINIMUM_LIQUIDITY()",
          "factory()",
          "token0()",
          "token1()",
          "getReserves()",
          "price0CumulativeLast()",
          "price1CumulativeLast()",
          "kLast()",
          "mint(address)",
          "burn(address)",
          "swap(uint256,uint256,address,bytes)",
          "skim(address)",
          "sync()",
          "initialize(address,address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.21"
      },
      "contracts/IFiles.sol:IPancakeRouter01": {
        "src": "contracts/IFiles.sol:466",
        "inherit": [],
        "libraries": [],
        "methods": [
          "factory()",
          "WETH()",
          "addLiquidity(address,address,uint256,uint256,uint256,uint256,address,uint256)",
          "addLiquidityETH(address,uint256,uint256,uint256,address,uint256)",
          "removeLiquidity(address,address,uint256,uint256,uint256,address,uint256)",
          "removeLiquidityETH(address,uint256,uint256,uint256,address,uint256)",
          "removeLiquidityWithPermit(address,address,uint256,uint256,uint256,address,uint256,bool,uint8,bytes32,bytes32)",
          "removeLiquidityETHWithPermit(address,uint256,uint256,uint256,address,uint256,bool,uint8,bytes32,bytes32)",
          "swapExactTokensForTokens(uint256,uint256,address[],address,uint256)",
          "swapTokensForExactTokens(uint256,uint256,address[],address,uint256)",
          "swapExactETHForTokens(uint256,address[],address,uint256)",
          "swapTokensForExactETH(uint256,uint256,address[],address,uint256)",
          "swapExactTokensForETH(uint256,uint256,address[],address,uint256)",
          "swapETHForExactTokens(uint256,address[],address,uint256)",
          "quote(uint256,uint256,uint256)",
          "getAmountOut(uint256,uint256,uint256)",
          "getAmountIn(uint256,uint256,uint256)",
          "getAmountsOut(uint256,address[])",
          "getAmountsIn(uint256,address[])"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.21"
      },
      "contracts/IFiles.sol:IPancakeRouter02": {
        "src": "contracts/IFiles.sol:626",
        "inherit": [
          "contracts/IFiles.sol:IPancakeRouter01"
        ],
        "libraries": [],
        "methods": [
          "removeLiquidityETHSupportingFeeOnTransferTokens(address,uint256,uint256,uint256,address,uint256)",
          "removeLiquidityETHWithPermitSupportingFeeOnTransferTokens(address,uint256,uint256,uint256,address,uint256,bool,uint8,bytes32,bytes32)",
          "swapExactTokensForTokensSupportingFeeOnTransferTokens(uint256,uint256,address[],address,uint256)",
          "swapExactETHForTokensSupportingFeeOnTransferTokens(uint256,address[],address,uint256)",
          "swapExactTokensForETHSupportingFeeOnTransferTokens(uint256,uint256,address[],address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.21"
      },
      "contracts/IFiles.sol:IWBNB": {
        "src": "contracts/IFiles.sol:38",
        "inherit": [],
        "libraries": [],
        "methods": [
          "name()",
          "symbol()",
          "decimals()",
          "balanceOf(address)",
          "allowance(address,address)",
          "()",
          "deposit()",
          "withdraw(uint256)",
          "totalSupply()",
          "approve(address,uint256)",
          "transfer(address,uint256)",
          "transferFrom(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.21"
      },
      "contracts/IFiles.sol:Initializable": {
        "src": "contracts/IFiles.sol:249",
        "version": {
          "withMetadata": "ba793f874980ba8826e0f77e588821b7a373c942b97ebcd7e4e42f378e00e824",
          "withoutMetadata": "ac0db523ddc3e330f735df7b3b0b24460531c71290a891170e840f8f67d5ff6b",
          "linkedWithoutMetadata": "ac0db523ddc3e330f735df7b3b0b24460531c71290a891170e840f8f67d5ff6b"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "contracts/IFiles.sol:251"
            },
            {
              "label": "initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "contracts/IFiles.sol:252"
            },
            {
              "label": "______gap",
              "offset": 0,
              "slot": "1",
              "type": "t_array(t_uint256)50_storage",
              "contract": "Initializable",
              "src": "contracts/IFiles.sol:283"
            }
          ],
          "types": {
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]",
              "numberOfBytes": "1600"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.21"
      },
      "contracts/IFiles.sol:Ownable": {
        "src": "contracts/IFiles.sol:286",
        "version": {
          "withMetadata": "9b6e83ec071c913ea8078938bf6c8e47f6ce697f181f2ebf31dc4937807eb386",
          "withoutMetadata": "a3dd09084d5d3377afaa5e637593b425fb1172db63a48c2f62428555638775f8",
          "linkedWithoutMetadata": "a3dd09084d5d3377afaa5e637593b425fb1172db63a48c2f62428555638775f8"
        },
        "inherit": [
          "contracts/IFiles.sol:Initializable",
          "contracts/IFiles.sol:Context"
        ],
        "libraries": [],
        "methods": [
          "()",
          "initOwner(address)",
          "owner()",
          "renounceOwnership()",
          "transferOwnership(address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "contracts/IFiles.sol:251"
            },
            {
              "label": "initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "contracts/IFiles.sol:252"
            },
            {
              "label": "______gap",
              "offset": 0,
              "slot": "1",
              "type": "t_array(t_uint256)50_storage",
              "contract": "Initializable",
              "src": "contracts/IFiles.sol:283"
            },
            {
              "label": "_owner",
              "offset": 0,
              "slot": "51",
              "type": "t_address",
              "contract": "Ownable",
              "src": "contracts/IFiles.sol:287"
            },
            {
              "label": "_previousOwner",
              "offset": 0,
              "slot": "52",
              "type": "t_address",
              "contract": "Ownable",
              "src": "contracts/IFiles.sol:288"
            },
            {
              "label": "_lockTime",
              "offset": 0,
              "slot": "53",
              "type": "t_uint256",
              "contract": "Ownable",
              "src": "contracts/IFiles.sol:289"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]",
              "numberOfBytes": "1600"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.21"
      },
      "contracts/IFiles.sol:SafeMath": {
        "src": "contracts/IFiles.sol:68",
        "version": {
          "withMetadata": "6a5db877229c78c84b33e85a297bea1121c6a6195aa310f30cbe69888293c5ae",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.21"
      },
      "contracts/ReentrancyGuard.sol:ReentrancyGuard": {
        "src": "contracts/ReentrancyGuard.sol:5",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ReentrancyGuard",
            "src": "contracts/ReentrancyGuard.sol:12"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_status",
              "offset": 0,
              "slot": "0",
              "type": "t_uint256",
              "contract": "ReentrancyGuard",
              "src": "contracts/ReentrancyGuard.sol:10"
            }
          ],
          "types": {
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.21"
      },
      "contracts/Utils.sol:PancakeLibrary": {
        "src": "contracts/Utils.sol:219",
        "version": {
          "withMetadata": "668337a75717822cd6d73bbd1c50526e84e4af10cd45125b1756676395a2f30c",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [
          "contracts/IFiles.sol:SafeMath"
        ],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.21"
      },
      "contracts/Utils.sol:Utils": {
        "src": "contracts/Utils.sol:6",
        "version": {
          "withMetadata": "a5775bd7ff330a5dfa7ddaef645bcc8fbccdcd3c38fbc9fc1755e3e3a9a09d47",
          "withoutMetadata": "8ca6da6b824cadf2e1f9c600b5f1381080c8b8d75dddf5423f35e25222daaeda",
          "linkedWithoutMetadata": "8ca6da6b824cadf2e1f9c600b5f1381080c8b8d75dddf5423f35e25222daaeda"
        },
        "inherit": [],
        "libraries": [
          "contracts/IFiles.sol:SafeMath"
        ],
        "methods": [
          "calculateBNBReward(uint256,uint256,uint256,uint256)",
          "calculateTopUpClaim(uint256,uint256,uint256,uint256)",
          "swapTokensForEth(address,uint256)",
          "swapETHForTokens(address,address,uint256)",
          "swapTokensForTokens(address,address,uint256)",
          "getAmountsout(uint256,address)",
          "addLiquidity(address,address,uint256,uint256)",
          "getAntiFlipTaxNo(uint256)",
          "calcReward(uint256,uint256,uint256,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.21"
      }
    },
    {
      "contracts/Proxy.sol:Caller": {
        "src": "contracts/Proxy.sol:80",
        "version": {
          "withMetadata": "8a43f4805f6ec5dd7b7379a87ef3fa89b1f2cd8e86292442058e51e90f40e31d",
          "withoutMetadata": "d6211a178c252503f87d41bbcceffa66551bde0c0c4b0cc3c5a44a4f489e2c7f",
          "linkedWithoutMetadata": "d6211a178c252503f87d41bbcceffa66551bde0c0c4b0cc3c5a44a4f489e2c7f"
        },
        "inherit": [],
        "libraries": [],
        "methods": [
          "(address)",
          "increase()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Caller",
            "src": "contracts/Proxy.sol:80"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "proxy",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Caller",
              "src": "contracts/Proxy.sol:80"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.21"
      },
      "contracts/Proxy.sol:Proxy": {
        "src": "contracts/Proxy.sol:10",
        "version": {
          "withMetadata": "3a655b5f054f4310d279144652e269b840bf308c06f48e08f2d407ee1381c2c1",
          "withoutMetadata": "bc7fcd1c64d2f798926ae830c3e369a33c770ea294cd9047d184a8c885a96818",
          "linkedWithoutMetadata": "bc7fcd1c64d2f798926ae830c3e369a33c770ea294cd9047d184a8c885a96818"
        },
        "inherit": [],
        "libraries": [],
        "methods": [
          "(address)",
          "()",
          "()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Proxy",
            "src": "contracts/Proxy.sol:22"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "implementation",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Proxy",
              "src": "contracts/Proxy.sol:13"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.21"
      }
    },
    {
      "contracts/Logic.sol:Logic": {
        "src": "contracts/Logic.sol:9",
        "version": {
          "withMetadata": "087c86b163578853fb1cba09b22843df8f815c95bf2568200ddd8e1dbf167fea",
          "withoutMetadata": "a9feffbc7087e9529577fb0b368171b85b94d25918f43b5d410eb0f186274034",
          "linkedWithoutMetadata": "a9feffbc7087e9529577fb0b368171b85b94d25918f43b5d410eb0f186274034"
        },
        "inherit": [],
        "libraries": [],
        "methods": [
          "increment()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "state-variable-assignment",
            "name": "x",
            "src": "contracts/Logic.sol:13"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "implementation",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Logic",
              "src": "contracts/Logic.sol:9"
            },
            {
              "label": "x",
              "offset": 0,
              "slot": "1",
              "type": "t_uint256",
              "contract": "Logic",
              "src": "contracts/Logic.sol:13"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.21"
      }
    },
    {
      "@openzeppelin/contracts/access/Ownable.sol:Ownable": {
        "src": "@openzeppelin/contracts/access/Ownable.sol:20",
        "inherit": [
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [],
        "methods": [
          "owner()",
          "renounceOwnership()",
          "transferOwnership(address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Ownable",
            "src": "@openzeppelin/contracts/access/Ownable.sol:28"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Ownable",
              "src": "@openzeppelin/contracts/access/Ownable.sol:21"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.21"
      },
      "@openzeppelin/contracts/security/ReentrancyGuard.sol:ReentrancyGuard": {
        "src": "@openzeppelin/contracts/security/ReentrancyGuard.sol:22",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ReentrancyGuard",
            "src": "@openzeppelin/contracts/security/ReentrancyGuard.sol:39"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_status",
              "offset": 0,
              "slot": "0",
              "type": "t_uint256",
              "contract": "ReentrancyGuard",
              "src": "@openzeppelin/contracts/security/ReentrancyGuard.sol:37"
            }
          ],
          "types": {
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.21"
      },
      "@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20": {
        "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:35",
        "version": {
          "withMetadata": "b653be9ad258ddaafa2304767243ba86eac7156acd9bf1a196bee0fef9b1c3a9",
          "withoutMetadata": "1d55e2dc08aae4fa5bd2ca8ac476f7a2e63bdfa7b0b51d4bd61db8705143a140",
          "linkedWithoutMetadata": "1d55e2dc08aae4fa5bd2ca8ac476f7a2e63bdfa7b0b51d4bd61db8705143a140"
        },
        "inherit": [
          "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol:IERC20Metadata",
          "@openzeppelin/contracts/token/ERC20/IERC20.sol:IERC20",
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [],
        "methods": [
          "(string,string)",
          "name()",
          "symbol()",
          "decimals()",
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)",
          "increaseAllowance(address,uint256)",
          "decreaseAllowance(address,uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ERC20",
            "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:54"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_balances",
              "offset": 0,
              "slot": "0",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:36"
            },
            {
              "label": "_allowances",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:38"
            },
            {
              "label": "_totalSupply",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:40"
            },
            {
              "label": "_name",
              "offset": 0,
              "slot": "3",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:42"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "4",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:43"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.21"
      },
      "@openzeppelin/contracts/token/ERC20/IERC20.sol:IERC20": {
        "src": "@openzeppelin/contracts/token/ERC20/IERC20.sol:9",
        "inherit": [],
        "libraries": [],
        "methods": [
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.21"
      },
      "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol:IERC20Metadata": {
        "src": "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol:13",
        "inherit": [
          "@openzeppelin/contracts/token/ERC20/IERC20.sol:IERC20"
        ],
        "libraries": [],
        "methods": [
          "name()",
          "symbol()",
          "decimals()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.21"
      },
      "@openzeppelin/contracts/token/ERC20/extensions/draft-IERC20Permit.sol:IERC20Permit": {
        "src": "@openzeppelin/contracts/token/ERC20/extensions/draft-IERC20Permit.sol:14",
        "inherit": [],
        "libraries": [],
        "methods": [
          "permit(address,address,uint256,uint256,uint8,bytes32,bytes32)",
          "nonces(address)",
          "DOMAIN_SEPARATOR()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.21"
      },
      "@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol:SafeERC20": {
        "src": "@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol:19",
        "version": {
          "withMetadata": "945db44b71722f915e3e7352ee22f854dfe8000e69eee742d881b64279bb0ad8",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [
          "@openzeppelin/contracts/utils/Address.sol:Address"
        ],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.21"
      },
      "@openzeppelin/contracts/utils/Address.sol:Address": {
        "src": "@openzeppelin/contracts/utils/Address.sol:9",
        "version": {
          "withMetadata": "9401bbf4dc0decc4c739a060967031a16e8de389388d98c32ec11cff440d6513",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [
          {
            "kind": "delegatecall",
            "src": "@openzeppelin/contracts/utils/Address.sol:191"
          },
          {
            "kind": "delegatecall",
            "src": "@openzeppelin/contracts/utils/Address.sol:191"
          }
        ],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.21"
      },
      "@openzeppelin/contracts/utils/Context.sol:Context": {
        "src": "@openzeppelin/contracts/utils/Context.sol:16",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.21"
      },
      "@openzeppelin/contracts/utils/math/Math.sol:Math": {
        "src": "@openzeppelin/contracts/utils/math/Math.sol:9",
        "version": {
          "withMetadata": "f58f3d1d6b53395057afc8a5e1edcbfcd81cdec0dfcf6b1290c8c2368b975278",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.21"
      },
      "@openzeppelin/contracts/utils/math/SafeMath.sol:SafeMath": {
        "src": "@openzeppelin/contracts/utils/math/SafeMath.sol:16",
        "version": {
          "withMetadata": "4167346fe154a63f59e72262dbca9ccb097c97b61ec5dfe163259378386d2ba4",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.21"
      },
      "contracts/Presale.sol:IGoldToken": {
        "src": "contracts/Presale.sol:8",
        "inherit": [],
        "libraries": [],
        "methods": [
          "mint(address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.21"
      },
      "contracts/Presale.sol:Presale": {
        "src": "contracts/Presale.sol:12",
        "version": {
          "withMetadata": "55de4f41aa2ae4e88c3e975f7f7c871c8630a6a915f505e8b168c82d5665ef13",
          "withoutMetadata": "2fa5a3bfe1ae715a2695aad2a1fdda65dd5f2dfe346a8af0822d82b296b7bc1b",
          "linkedWithoutMetadata": "2fa5a3bfe1ae715a2695aad2a1fdda65dd5f2dfe346a8af0822d82b296b7bc1b"
        },
        "inherit": [
          "@openzeppelin/contracts/security/ReentrancyGuard.sol:ReentrancyGuard",
          "@openzeppelin/contracts/access/Ownable.sol:Ownable",
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [],
        "methods": [
          "(address,address,address,uint256)",
          "createPreSale((uint256,uint256,uint256))",
          "sale()",
          "getCanIdoAmount(address)",
          "bindReffer(address)",
          "userBalance(address)",
          "userRewardBalance(address)",
          "userWithdraw()",
          "teamWithdraw(address)",
          "setUserWithdrawTime(uint256)",
          "setInviteMin(uint256)",
          "setPerMaxBuyUsdt(uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Presale",
            "src": "contracts/Presale.sol:46"
          },
          {
            "kind": "state-variable-assignment",
            "name": "perMaxBuyUsdt",
            "src": "contracts/Presale.sol:15"
          },
          {
            "kind": "state-variable-assignment",
            "name": "inviteMin",
            "src": "contracts/Presale.sol:31"
          },
          {
            "kind": "state-variable-assignment",
            "name": "maxSale",
            "src": "contracts/Presale.sol:33"
          },
          {
            "kind": "state-variable-assignment",
            "name": "rewardLevel",
            "src": "contracts/Presale.sol:36"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Ownable",
              "src": "@openzeppelin/contracts/access/Ownable.sol:21"
            },
            {
              "label": "_status",
              "offset": 0,
              "slot": "1",
              "type": "t_uint256",
              "contract": "ReentrancyGuard",
              "src": "@openzeppelin/contracts/security/ReentrancyGuard.sol:37"
            },
            {
              "label": "userWithdrawTime",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "Presale",
              "src": "contracts/Presale.sol:13"
            },
            {
              "label": "perMaxBuyUsdt",
              "offset": 0,
              "slot": "3",
              "type": "t_uint256",
              "contract": "Presale",
              "src": "contracts/Presale.sol:15"
            },
            {
              "label": "teamAddress",
              "offset": 0,
              "slot": "4",
              "type": "t_address",
              "contract": "Presale",
              "src": "contracts/Presale.sol:16"
            },
            {
              "label": "saleToken",
              "offset": 0,
              "slot": "5",
              "type": "t_address",
              "contract": "Presale",
              "src": "contracts/Presale.sol:17"
            },
            {
              "label": "usdtToken",
              "offset": 0,
              "slot": "6",
              "type": "t_address",
              "contract": "Presale",
              "src": "contracts/Presale.sol:18"
            },
            {
              "label": "goldTokenAddress",
              "offset": 0,
              "slot": "7",
              "type": "t_address",
              "contract": "Presale",
              "src": "contracts/Presale.sol:19"
            },
            {
              "label": "balances",
              "offset": 0,
              "slot": "8",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "Presale",
              "src": "contracts/Presale.sol:20"
            },
            {
              "label": "userBuyTotalUsdt",
              "offset": 0,
              "slot": "9",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "Presale",
              "src": "contracts/Presale.sol:21"
            },
            {
              "label": "rewardBalances",
              "offset": 0,
              "slot": "10",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "Presale",
              "src": "contracts/Presale.sol:22"
            },
            {
              "label": "reffers",
              "offset": 0,
              "slot": "11",
              "type": "t_mapping(t_address,t_address)",
              "contract": "Presale",
              "src": "contracts/Presale.sol:23"
            },
            {
              "label": "refferNumber",
              "offset": 0,
              "slot": "12",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "Presale",
              "src": "contracts/Presale.sol:24"
            },
            {
              "label": "teamRefferNumber",
              "offset": 0,
              "slot": "13",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "Presale",
              "src": "contracts/Presale.sol:25"
            },
            {
              "label": "firstIdo",
              "offset": 0,
              "slot": "14",
              "type": "t_mapping(t_address,t_bool)",
              "contract": "Presale",
              "src": "contracts/Presale.sol:26"
            },
            {
              "label": "totalIdoUSDT",
              "offset": 0,
              "slot": "15",
              "type": "t_uint256",
              "contract": "Presale",
              "src": "contracts/Presale.sol:27"
            },
            {
              "label": "totalIdoUser",
              "offset": 0,
              "slot": "16",
              "type": "t_uint256",
              "contract": "Presale",
              "src": "contracts/Presale.sol:28"
            },
            {
              "label": "totalSale",
              "offset": 0,
              "slot": "17",
              "type": "t_uint256",
              "contract": "Presale",
              "src": "contracts/Presale.sol:29"
            },
            {
              "label": "inviteMin",
              "offset": 0,
              "slot": "18",
              "type": "t_uint256",
              "contract": "Presale",
              "src": "contracts/Presale.sol:31"
            },
            {
              "label": "maxSale",
              "offset": 0,
              "slot": "19",
              "type": "t_uint256",
              "contract": "Presale",
              "src": "contracts/Presale.sol:33"
            },
            {
              "label": "isCloseSale",
              "offset": 0,
              "slot": "20",
              "type": "t_bool",
              "contract": "Presale",
              "src": "contracts/Presale.sol:34"
            },
            {
              "label": "rewardLevel",
              "offset": 0,
              "slot": "21",
              "type": "t_array(t_uint256)dyn_storage",
              "contract": "Presale",
              "src": "contracts/Presale.sol:36"
            },
            {
              "label": "presaleInfo",
              "offset": 0,
              "slot": "22",
              "type": "t_struct(PresaleInfo)2392_storage",
              "contract": "Presale",
              "src": "contracts/Presale.sol:44"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_uint256)dyn_storage": {
              "label": "uint256[]",
              "numberOfBytes": "32"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_mapping(t_address,t_address)": {
              "label": "mapping(address => address)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_struct(PresaleInfo)2392_storage": {
              "label": "struct Presale.PresaleInfo",
              "members": [
                {
                  "label": "startTime",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "endTime",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "price",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "2"
                }
              ],
              "numberOfBytes": "96"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.21"
      },
      "contracts/Staking.sol:IRejuvenate": {
        "src": "contracts/Staking.sol:9",
        "inherit": [],
        "libraries": [],
        "methods": [
          "mint(address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.21"
      },
      "contracts/Staking.sol:Staking": {
        "src": "contracts/Staking.sol:13",
        "version": {
          "withMetadata": "d4a43fbe5f8d6347383f0680dba0a94146fceda61d8f28fb0ed926fda6eca5bc",
          "withoutMetadata": "8e35a11dc4a30aced1c096dd5db7f6424d19b292b732012b8d44d054f9cea466",
          "linkedWithoutMetadata": "8e35a11dc4a30aced1c096dd5db7f6424d19b292b732012b8d44d054f9cea466"
        },
        "inherit": [
          "@openzeppelin/contracts/security/ReentrancyGuard.sol:ReentrancyGuard",
          "@openzeppelin/contracts/access/Ownable.sol:Ownable",
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [],
        "methods": [
          "()",
          "changeRewardsPerBlock(uint256)",
          "rewardPerToken()",
          "earned(address)",
          "stake(uint256)",
          "unstake(uint256)",
          "claimRewards()",
          "pause()",
          "unpause()",
          "inCaseTokensGetStuck(address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Staking",
            "src": "contracts/Staking.sol:33"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Ownable",
              "src": "@openzeppelin/contracts/access/Ownable.sol:21"
            },
            {
              "label": "_status",
              "offset": 0,
              "slot": "1",
              "type": "t_uint256",
              "contract": "ReentrancyGuard",
              "src": "@openzeppelin/contracts/security/ReentrancyGuard.sol:37"
            },
            {
              "label": "paused",
              "offset": 0,
              "slot": "2",
              "type": "t_bool",
              "contract": "Staking",
              "src": "contracts/Staking.sol:14"
            },
            {
              "label": "_treasury",
              "offset": 1,
              "slot": "2",
              "type": "t_address",
              "contract": "Staking",
              "src": "contracts/Staking.sol:15"
            },
            {
              "label": "token",
              "offset": 0,
              "slot": "3",
              "type": "t_address",
              "contract": "Staking",
              "src": "contracts/Staking.sol:17"
            },
            {
              "label": "rewardRate",
              "offset": 0,
              "slot": "4",
              "type": "t_uint256",
              "contract": "Staking",
              "src": "contracts/Staking.sol:19"
            },
            {
              "label": "_lastUpdateBlock",
              "offset": 0,
              "slot": "5",
              "type": "t_uint256",
              "contract": "Staking",
              "src": "contracts/Staking.sol:20"
            },
            {
              "label": "_rewardsPerToken",
              "offset": 0,
              "slot": "6",
              "type": "t_uint256",
              "contract": "Staking",
              "src": "contracts/Staking.sol:21"
            },
            {
              "label": "data",
              "offset": 0,
              "slot": "7",
              "type": "t_array(t_struct(StakingData)3375_storage)dyn_storage",
              "contract": "Staking",
              "src": "contracts/Staking.sol:22"
            },
            {
              "label": "_userRewardsPerToken",
              "offset": 0,
              "slot": "8",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "Staking",
              "src": "contracts/Staking.sol:24"
            },
            {
              "label": "_rewards",
              "offset": 0,
              "slot": "9",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "Staking",
              "src": "contracts/Staking.sol:25"
            },
            {
              "label": "totalStaked",
              "offset": 0,
              "slot": "10",
              "type": "t_uint256",
              "contract": "Staking",
              "src": "contracts/Staking.sol:27"
            },
            {
              "label": "_balances",
              "offset": 0,
              "slot": "11",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "Staking",
              "src": "contracts/Staking.sol:28"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_struct(StakingData)3375_storage)dyn_storage": {
              "label": "struct StakingData[]",
              "numberOfBytes": "32"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_struct(StakingData)3375_storage": {
              "label": "struct StakingData",
              "members": [
                {
                  "label": "block",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "staked",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "1"
                }
              ],
              "numberOfBytes": "64"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.21"
      }
    },
    {
      "contracts/RichHusky.sol:Checker": {
        "src": "contracts/RichHusky.sol:520",
        "version": {
          "withMetadata": "17e1cf10fdffcda321c1a1f59d2b06178394724b4d8ad9b035a718122fed8a52",
          "withoutMetadata": "0faf6ca500781d04501ba7e4cf9138e35957321419c6ca29798480c22b3cc5cd",
          "linkedWithoutMetadata": "0faf6ca500781d04501ba7e4cf9138e35957321419c6ca29798480c22b3cc5cd"
        },
        "inherit": [],
        "libraries": [],
        "methods": [
          "isValid(address,address,address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.21"
      },
      "contracts/RichHusky.sol:Context": {
        "src": "contracts/RichHusky.sol:27",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.21"
      },
      "contracts/RichHusky.sol:ERC20": {
        "src": "contracts/RichHusky.sol:162",
        "version": {
          "withMetadata": "e092e43bc9c3243b7138ce015fa92d358fa66a764079145cfe1339f160fd055e",
          "withoutMetadata": "e248eda4094a79267c1d78eb85fb3a082e2ba4d153192b2644d6357dbed158f3",
          "linkedWithoutMetadata": "e248eda4094a79267c1d78eb85fb3a082e2ba4d153192b2644d6357dbed158f3"
        },
        "inherit": [
          "contracts/RichHusky.sol:IERC20Metadata",
          "contracts/RichHusky.sol:IERC20",
          "contracts/RichHusky.sol:Context"
        ],
        "libraries": [],
        "methods": [
          "(string,string)",
          "name()",
          "symbol()",
          "decimals()",
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)",
          "increaseAllowance(address,uint256)",
          "decreaseAllowance(address,uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ERC20",
            "src": "contracts/RichHusky.sol:181"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_balances",
              "offset": 0,
              "slot": "0",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC20",
              "src": "contracts/RichHusky.sol:163"
            },
            {
              "label": "_allowances",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "ERC20",
              "src": "contracts/RichHusky.sol:165"
            },
            {
              "label": "_totalSupply",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "ERC20",
              "src": "contracts/RichHusky.sol:167"
            },
            {
              "label": "_name",
              "offset": 0,
              "slot": "3",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "contracts/RichHusky.sol:169"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "4",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "contracts/RichHusky.sol:170"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.21"
      },
      "contracts/RichHusky.sol:IERC20": {
        "src": "contracts/RichHusky.sol:40",
        "inherit": [],
        "libraries": [],
        "methods": [
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.21"
      },
      "contracts/RichHusky.sol:IERC20Metadata": {
        "src": "contracts/RichHusky.sol:120",
        "inherit": [
          "contracts/RichHusky.sol:IERC20"
        ],
        "libraries": [],
        "methods": [
          "name()",
          "symbol()",
          "decimals()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.21"
      },
      "contracts/RichHusky.sol:IFactory": {
        "src": "contracts/RichHusky.sol:535",
        "inherit": [],
        "libraries": [],
        "methods": [
          "createPair(address,address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.21"
      },
      "contracts/RichHusky.sol:IGasToken": {
        "src": "contracts/RichHusky.sol:539",
        "inherit": [],
        "libraries": [],
        "methods": [
          "free(uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.21"
      },
      "contracts/RichHusky.sol:RichHusky": {
        "src": "contracts/RichHusky.sol:543",
        "version": {
          "withMetadata": "ce802161ba5ffecece3a7488fb3a07a35d8f78edf3674187d3eb27cc30777604",
          "withoutMetadata": "7c4ce62a347a52dc2685dbb41f6d968bb51e7d6abb10665abf0c7d7699da0d36",
          "linkedWithoutMetadata": "7c4ce62a347a52dc2685dbb41f6d968bb51e7d6abb10665abf0c7d7699da0d36"
        },
        "inherit": [
          "contracts/RichHusky.sol:ERC20",
          "contracts/RichHusky.sol:IERC20Metadata",
          "contracts/RichHusky.sol:IERC20",
          "contracts/RichHusky.sol:Context"
        ],
        "libraries": [
          "contracts/RichHusky.sol:Checker"
        ],
        "methods": [
          "(address)",
          "mint(address,uint256)",
          "updateAirdropAmount(uint256)",
          "withdrawFee(address,uint256)",
          "airdrop(address[],uint256)",
          "addBetaUsers(address[])",
          "removeBetaUsers(address[])",
          "multiCall(address[],bytes[])"
        ],
        "linkReferences": [
          {
            "src": "contracts/RichHusky.sol",
            "name": "Checker",
            "length": 20,
            "start": 5176,
            "placeholder": "__$1cb883ae52507a2d00adae80c79f632cb4$__"
          }
        ],
        "errors": [
          {
            "kind": "constructor",
            "contract": "RichHusky",
            "src": "contracts/RichHusky.sol:554"
          },
          {
            "kind": "state-variable-immutable",
            "name": "pancakeFactory",
            "src": "contracts/RichHusky.sol:549"
          },
          {
            "kind": "state-variable-immutable",
            "name": "WBNB",
            "src": "contracts/RichHusky.sol:550"
          },
          {
            "kind": "state-variable-immutable",
            "name": "GasToken",
            "src": "contracts/RichHusky.sol:552"
          },
          {
            "kind": "external-library-linking",
            "name": "Checker",
            "src": "contracts/RichHusky.sol"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_balances",
              "offset": 0,
              "slot": "0",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC20",
              "src": "contracts/RichHusky.sol:163"
            },
            {
              "label": "_allowances",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "ERC20",
              "src": "contracts/RichHusky.sol:165"
            },
            {
              "label": "_totalSupply",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "ERC20",
              "src": "contracts/RichHusky.sol:167"
            },
            {
              "label": "_name",
              "offset": 0,
              "slot": "3",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "contracts/RichHusky.sol:169"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "4",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "contracts/RichHusky.sol:170"
            },
            {
              "label": "dev",
              "offset": 0,
              "slot": "5",
              "type": "t_address",
              "contract": "RichHusky",
              "src": "contracts/RichHusky.sol:544"
            },
            {
              "label": "airdropAmount",
              "offset": 0,
              "slot": "6",
              "type": "t_uint256",
              "contract": "RichHusky",
              "src": "contracts/RichHusky.sol:545"
            },
            {
              "label": "betaUsers",
              "offset": 0,
              "slot": "7",
              "type": "t_mapping(t_address,t_bool)",
              "contract": "RichHusky",
              "src": "contracts/RichHusky.sol:546"
            },
            {
              "label": "pair",
              "offset": 0,
              "slot": "8",
              "type": "t_address",
              "contract": "RichHusky",
              "src": "contracts/RichHusky.sol:547"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.21"
      }
    },
    {
      "contracts/FirstDao.sol:FistDao": {
        "src": "contracts/FirstDao.sol:127",
        "version": {
          "withMetadata": "87594bf7d015e41aaf777bc0dc62e9e8a3685546fcfa065eb87291ef7f3f16f4",
          "withoutMetadata": "5bdb2538a3ba33172d93851875dfca20475ce01973348f896430788ab9d8314a",
          "linkedWithoutMetadata": "5bdb2538a3ba33172d93851875dfca20475ce01973348f896430788ab9d8314a"
        },
        "inherit": [
          "contracts/FirstDao.sol:Ownable",
          "contracts/FirstDao.sol:IERC20"
        ],
        "libraries": [
          "contracts/FirstDao.sol:SafeMath"
        ],
        "methods": [
          "(string,string)",
          "()",
          "initialize(address,address,address,address)",
          "transferEvent(address,address,uint256)",
          "feeState()",
          "getIsApproved(address)",
          "searchExcludedFromFeeAccounts(address)",
          "getDefaultBalance()",
          "insertIntoExcludedFromFeeAccounts(address[])",
          "deleteFromExcludedFromFeeAccounts(address[])",
          "claim(address,uint256)",
          "name()",
          "symbol()",
          "decimals()",
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "transferFrom(address,address,uint256)",
          "approve(address,uint256)",
          "allowance(address,address)",
          "increaseAllowance(address,uint256)",
          "decreaseAllowance(address,uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "FistDao",
            "src": "contracts/FirstDao.sol:159"
          },
          {
            "kind": "state-variable-assignment",
            "name": "_decimals",
            "src": "contracts/FirstDao.sol:132"
          },
          {
            "kind": "state-variable-assignment",
            "name": "_totalSupply",
            "src": "contracts/FirstDao.sol:133"
          },
          {
            "kind": "state-variable-assignment",
            "name": "_feeTax",
            "src": "contracts/FirstDao.sol:138"
          },
          {
            "kind": "state-variable-assignment",
            "name": "_feeMining",
            "src": "contracts/FirstDao.sol:139"
          },
          {
            "kind": "state-variable-assignment",
            "name": "_feeLiquidity",
            "src": "contracts/FirstDao.sol:140"
          },
          {
            "kind": "state-variable-assignment",
            "name": "_feeDivisor",
            "src": "contracts/FirstDao.sol:141"
          },
          {
            "kind": "state-variable-assignment",
            "name": "_removeAllFee",
            "src": "contracts/FirstDao.sol:143"
          },
          {
            "kind": "state-variable-assignment",
            "name": "_defaultBalance",
            "src": "contracts/FirstDao.sol:150"
          },
          {
            "kind": "state-variable-assignment",
            "name": "_defaultAmount",
            "src": "contracts/FirstDao.sol:151"
          },
          {
            "kind": "state-variable-assignment",
            "name": "_initialized111",
            "src": "contracts/FirstDao.sol:156"
          },
          {
            "kind": "state-variable-assignment",
            "name": "_reentry",
            "src": "contracts/FirstDao.sol:157"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Ownable",
              "src": "contracts/FirstDao.sol:58"
            },
            {
              "label": "_previousOwner",
              "offset": 0,
              "slot": "1",
              "type": "t_address",
              "contract": "Ownable",
              "src": "contracts/FirstDao.sol:59"
            },
            {
              "label": "_switchDate",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "Ownable",
              "src": "contracts/FirstDao.sol:60"
            },
            {
              "label": "_name",
              "offset": 0,
              "slot": "3",
              "type": "t_string_storage",
              "contract": "FistDao",
              "src": "contracts/FirstDao.sol:130"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "4",
              "type": "t_string_storage",
              "contract": "FistDao",
              "src": "contracts/FirstDao.sol:131"
            },
            {
              "label": "_decimals",
              "offset": 0,
              "slot": "5",
              "type": "t_uint8",
              "contract": "FistDao",
              "src": "contracts/FirstDao.sol:132"
            },
            {
              "label": "_totalSupply",
              "offset": 0,
              "slot": "6",
              "type": "t_uint256",
              "contract": "FistDao",
              "src": "contracts/FirstDao.sol:133"
            },
            {
              "label": "_balances",
              "offset": 0,
              "slot": "7",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "FistDao",
              "src": "contracts/FirstDao.sol:134"
            },
            {
              "label": "_allowances",
              "offset": 0,
              "slot": "8",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "FistDao",
              "src": "contracts/FirstDao.sol:135"
            },
            {
              "label": "_isApproved",
              "offset": 0,
              "slot": "9",
              "type": "t_mapping(t_address,t_bool)",
              "contract": "FistDao",
              "src": "contracts/FirstDao.sol:136"
            },
            {
              "label": "_feeTax",
              "offset": 0,
              "slot": "10",
              "type": "t_uint256",
              "contract": "FistDao",
              "src": "contracts/FirstDao.sol:138"
            },
            {
              "label": "_feeMining",
              "offset": 0,
              "slot": "11",
              "type": "t_uint256",
              "contract": "FistDao",
              "src": "contracts/FirstDao.sol:139"
            },
            {
              "label": "_feeLiquidity",
              "offset": 0,
              "slot": "12",
              "type": "t_uint256",
              "contract": "FistDao",
              "src": "contracts/FirstDao.sol:140"
            },
            {
              "label": "_feeDivisor",
              "offset": 0,
              "slot": "13",
              "type": "t_uint256",
              "contract": "FistDao",
              "src": "contracts/FirstDao.sol:141"
            },
            {
              "label": "_removeAllFee",
              "offset": 0,
              "slot": "14",
              "type": "t_bool",
              "contract": "FistDao",
              "src": "contracts/FirstDao.sol:143"
            },
            {
              "label": "_core",
              "offset": 1,
              "slot": "14",
              "type": "t_address",
              "contract": "FistDao",
              "src": "contracts/FirstDao.sol:145"
            },
            {
              "label": "_taxReceiver",
              "offset": 0,
              "slot": "15",
              "type": "t_address",
              "contract": "FistDao",
              "src": "contracts/FirstDao.sol:146"
            },
            {
              "label": "_miningPool",
              "offset": 0,
              "slot": "16",
              "type": "t_address",
              "contract": "FistDao",
              "src": "contracts/FirstDao.sol:147"
            },
            {
              "label": "_liquidityPool",
              "offset": 0,
              "slot": "17",
              "type": "t_address",
              "contract": "FistDao",
              "src": "contracts/FirstDao.sol:148"
            },
            {
              "label": "_defaultBalance",
              "offset": 0,
              "slot": "18",
              "type": "t_uint256",
              "contract": "FistDao",
              "src": "contracts/FirstDao.sol:150"
            },
            {
              "label": "_defaultAmount",
              "offset": 0,
              "slot": "19",
              "type": "t_uint256",
              "contract": "FistDao",
              "src": "contracts/FirstDao.sol:151"
            },
            {
              "label": "_isExcludedFromFee",
              "offset": 0,
              "slot": "20",
              "type": "t_mapping(t_address,t_bool)",
              "contract": "FistDao",
              "src": "contracts/FirstDao.sol:153"
            },
            {
              "label": "_excludedFromFeeAccounts",
              "offset": 0,
              "slot": "21",
              "type": "t_array(t_address)dyn_storage",
              "contract": "FistDao",
              "src": "contracts/FirstDao.sol:154"
            },
            {
              "label": "_initialized111",
              "offset": 0,
              "slot": "22",
              "type": "t_bool",
              "contract": "FistDao",
              "src": "contracts/FirstDao.sol:156"
            },
            {
              "label": "_reentry",
              "offset": 0,
              "slot": "23",
              "type": "t_uint256",
              "contract": "FistDao",
              "src": "contracts/FirstDao.sol:157"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_address)dyn_storage": {
              "label": "address[]",
              "numberOfBytes": "32"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint8": {
              "label": "uint8",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.21"
      },
      "contracts/FirstDao.sol:ICore": {
        "src": "contracts/FirstDao.sol:119",
        "inherit": [],
        "libraries": [],
        "methods": [
          "getPairAddress()",
          "airdrop()",
          "safety(address,address)",
          "start()",
          "end()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.21"
      },
      "contracts/FirstDao.sol:IERC20": {
        "src": "contracts/FirstDao.sol:8",
        "inherit": [],
        "libraries": [],
        "methods": [
          "name()",
          "symbol()",
          "decimals()",
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "transferFrom(address,address,uint256)",
          "approve(address,uint256)",
          "allowance(address,address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.21"
      },
      "contracts/FirstDao.sol:IFactory": {
        "src": "contracts/FirstDao.sol:91",
        "inherit": [],
        "libraries": [],
        "methods": [
          "createPair(address,address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.21"
      },
      "contracts/FirstDao.sol:IRouter01": {
        "src": "contracts/FirstDao.sol:95",
        "inherit": [],
        "libraries": [],
        "methods": [
          "factory()",
          "addLiquidity(address,address,uint256,uint256,uint256,uint256,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.21"
      },
      "contracts/FirstDao.sol:IRouter02": {
        "src": "contracts/FirstDao.sol:109",
        "inherit": [
          "contracts/FirstDao.sol:IRouter01"
        ],
        "libraries": [],
        "methods": [
          "swapExactTokensForTokensSupportingFeeOnTransferTokens(uint256,uint256,address[],address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.21"
      },
      "contracts/FirstDao.sol:Ownable": {
        "src": "contracts/FirstDao.sol:57",
        "inherit": [],
        "libraries": [],
        "methods": [
          "owner()",
          "switchDate()",
          "transferOwnership(uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Ownable",
            "src": "contracts/FirstDao.sol:63"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Ownable",
              "src": "contracts/FirstDao.sol:58"
            },
            {
              "label": "_previousOwner",
              "offset": 0,
              "slot": "1",
              "type": "t_address",
              "contract": "Ownable",
              "src": "contracts/FirstDao.sol:59"
            },
            {
              "label": "_switchDate",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "Ownable",
              "src": "contracts/FirstDao.sol:60"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.21"
      },
      "contracts/FirstDao.sol:SafeMath": {
        "src": "contracts/FirstDao.sol:22",
        "version": {
          "withMetadata": "95eb3df1bd62a62b1bf87150f7314053125cc709ed6eb26f9bf2a30d8fc55e32",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.21"
      }
    },
    {
      "contracts/IFiles.sol:Address": {
        "src": "contracts/IFiles.sol:147",
        "version": {
          "withMetadata": "73f3d745b82ff92d492794f39ddc131795315255895e196d918dc1260c813488",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.21"
      },
      "contracts/IFiles.sol:Context": {
        "src": "contracts/IFiles.sol:135",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.21"
      },
      "contracts/IFiles.sol:IBEP20": {
        "src": "contracts/IFiles.sol:9",
        "inherit": [],
        "libraries": [],
        "methods": [
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.21"
      },
      "contracts/IFiles.sol:IPancakeFactory": {
        "src": "contracts/IFiles.sol:327",
        "inherit": [],
        "libraries": [],
        "methods": [
          "feeTo()",
          "feeToSetter()",
          "getPair(address,address)",
          "allPairs(uint256)",
          "allPairsLength()",
          "createPair(address,address)",
          "setFeeTo(address)",
          "setFeeToSetter(address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.21"
      },
      "contracts/IFiles.sol:IPancakePair": {
        "src": "contracts/IFiles.sol:357",
        "inherit": [],
        "libraries": [],
        "methods": [
          "name()",
          "symbol()",
          "decimals()",
          "totalSupply()",
          "balanceOf(address)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transfer(address,uint256)",
          "transferFrom(address,address,uint256)",
          "DOMAIN_SEPARATOR()",
          "PERMIT_TYPEHASH()",
          "nonces(address)",
          "permit(address,address,uint256,uint256,uint8,bytes32,bytes32)",
          "MINIMUM_LIQUIDITY()",
          "factory()",
          "token0()",
          "token1()",
          "getReserves()",
          "price0CumulativeLast()",
          "price1CumulativeLast()",
          "kLast()",
          "mint(address)",
          "burn(address)",
          "swap(uint256,uint256,address,bytes)",
          "skim(address)",
          "sync()",
          "initialize(address,address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.21"
      },
      "contracts/IFiles.sol:IPancakeRouter01": {
        "src": "contracts/IFiles.sol:466",
        "inherit": [],
        "libraries": [],
        "methods": [
          "factory()",
          "WETH()",
          "addLiquidity(address,address,uint256,uint256,uint256,uint256,address,uint256)",
          "addLiquidityETH(address,uint256,uint256,uint256,address,uint256)",
          "removeLiquidity(address,address,uint256,uint256,uint256,address,uint256)",
          "removeLiquidityETH(address,uint256,uint256,uint256,address,uint256)",
          "removeLiquidityWithPermit(address,address,uint256,uint256,uint256,address,uint256,bool,uint8,bytes32,bytes32)",
          "removeLiquidityETHWithPermit(address,uint256,uint256,uint256,address,uint256,bool,uint8,bytes32,bytes32)",
          "swapExactTokensForTokens(uint256,uint256,address[],address,uint256)",
          "swapTokensForExactTokens(uint256,uint256,address[],address,uint256)",
          "swapExactETHForTokens(uint256,address[],address,uint256)",
          "swapTokensForExactETH(uint256,uint256,address[],address,uint256)",
          "swapExactTokensForETH(uint256,uint256,address[],address,uint256)",
          "swapETHForExactTokens(uint256,address[],address,uint256)",
          "quote(uint256,uint256,uint256)",
          "getAmountOut(uint256,uint256,uint256)",
          "getAmountIn(uint256,uint256,uint256)",
          "getAmountsOut(uint256,address[])",
          "getAmountsIn(uint256,address[])"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.21"
      },
      "contracts/IFiles.sol:IPancakeRouter02": {
        "src": "contracts/IFiles.sol:626",
        "inherit": [
          "contracts/IFiles.sol:IPancakeRouter01"
        ],
        "libraries": [],
        "methods": [
          "removeLiquidityETHSupportingFeeOnTransferTokens(address,uint256,uint256,uint256,address,uint256)",
          "removeLiquidityETHWithPermitSupportingFeeOnTransferTokens(address,uint256,uint256,uint256,address,uint256,bool,uint8,bytes32,bytes32)",
          "swapExactTokensForTokensSupportingFeeOnTransferTokens(uint256,uint256,address[],address,uint256)",
          "swapExactETHForTokensSupportingFeeOnTransferTokens(uint256,address[],address,uint256)",
          "swapExactTokensForETHSupportingFeeOnTransferTokens(uint256,uint256,address[],address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.21"
      },
      "contracts/IFiles.sol:IWBNB": {
        "src": "contracts/IFiles.sol:38",
        "inherit": [],
        "libraries": [],
        "methods": [
          "name()",
          "symbol()",
          "decimals()",
          "balanceOf(address)",
          "allowance(address,address)",
          "()",
          "deposit()",
          "withdraw(uint256)",
          "totalSupply()",
          "approve(address,uint256)",
          "transfer(address,uint256)",
          "transferFrom(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.21"
      },
      "contracts/IFiles.sol:Initializable": {
        "src": "contracts/IFiles.sol:249",
        "version": {
          "withMetadata": "ba793f874980ba8826e0f77e588821b7a373c942b97ebcd7e4e42f378e00e824",
          "withoutMetadata": "ac0db523ddc3e330f735df7b3b0b24460531c71290a891170e840f8f67d5ff6b",
          "linkedWithoutMetadata": "ac0db523ddc3e330f735df7b3b0b24460531c71290a891170e840f8f67d5ff6b"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "contracts/IFiles.sol:251"
            },
            {
              "label": "initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "contracts/IFiles.sol:252"
            },
            {
              "label": "______gap",
              "offset": 0,
              "slot": "1",
              "type": "t_array(t_uint256)50_storage",
              "contract": "Initializable",
              "src": "contracts/IFiles.sol:283"
            }
          ],
          "types": {
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]",
              "numberOfBytes": "1600"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.21"
      },
      "contracts/IFiles.sol:Ownable": {
        "src": "contracts/IFiles.sol:286",
        "version": {
          "withMetadata": "9b6e83ec071c913ea8078938bf6c8e47f6ce697f181f2ebf31dc4937807eb386",
          "withoutMetadata": "a3dd09084d5d3377afaa5e637593b425fb1172db63a48c2f62428555638775f8",
          "linkedWithoutMetadata": "a3dd09084d5d3377afaa5e637593b425fb1172db63a48c2f62428555638775f8"
        },
        "inherit": [
          "contracts/IFiles.sol:Initializable",
          "contracts/IFiles.sol:Context"
        ],
        "libraries": [],
        "methods": [
          "()",
          "initOwner(address)",
          "owner()",
          "renounceOwnership()",
          "transferOwnership(address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "contracts/IFiles.sol:251"
            },
            {
              "label": "initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "contracts/IFiles.sol:252"
            },
            {
              "label": "______gap",
              "offset": 0,
              "slot": "1",
              "type": "t_array(t_uint256)50_storage",
              "contract": "Initializable",
              "src": "contracts/IFiles.sol:283"
            },
            {
              "label": "_owner",
              "offset": 0,
              "slot": "51",
              "type": "t_address",
              "contract": "Ownable",
              "src": "contracts/IFiles.sol:287"
            },
            {
              "label": "_previousOwner",
              "offset": 0,
              "slot": "52",
              "type": "t_address",
              "contract": "Ownable",
              "src": "contracts/IFiles.sol:288"
            },
            {
              "label": "_lockTime",
              "offset": 0,
              "slot": "53",
              "type": "t_uint256",
              "contract": "Ownable",
              "src": "contracts/IFiles.sol:289"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]",
              "numberOfBytes": "1600"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.21"
      },
      "contracts/IFiles.sol:SafeMath": {
        "src": "contracts/IFiles.sol:68",
        "version": {
          "withMetadata": "6a5db877229c78c84b33e85a297bea1121c6a6195aa310f30cbe69888293c5ae",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.21"
      },
      "contracts/ReentrancyGuard.sol:ReentrancyGuard": {
        "src": "contracts/ReentrancyGuard.sol:5",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ReentrancyGuard",
            "src": "contracts/ReentrancyGuard.sol:12"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_status",
              "offset": 0,
              "slot": "0",
              "type": "t_uint256",
              "contract": "ReentrancyGuard",
              "src": "contracts/ReentrancyGuard.sol:10"
            }
          ],
          "types": {
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.21"
      },
      "contracts/Utils.sol:PancakeLibrary": {
        "src": "contracts/Utils.sol:219",
        "version": {
          "withMetadata": "668337a75717822cd6d73bbd1c50526e84e4af10cd45125b1756676395a2f30c",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [
          "contracts/IFiles.sol:SafeMath"
        ],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.21"
      },
      "contracts/Utils.sol:Utils": {
        "src": "contracts/Utils.sol:6",
        "version": {
          "withMetadata": "a5775bd7ff330a5dfa7ddaef645bcc8fbccdcd3c38fbc9fc1755e3e3a9a09d47",
          "withoutMetadata": "8ca6da6b824cadf2e1f9c600b5f1381080c8b8d75dddf5423f35e25222daaeda",
          "linkedWithoutMetadata": "8ca6da6b824cadf2e1f9c600b5f1381080c8b8d75dddf5423f35e25222daaeda"
        },
        "inherit": [],
        "libraries": [
          "contracts/IFiles.sol:SafeMath"
        ],
        "methods": [
          "calculateBNBReward(uint256,uint256,uint256,uint256)",
          "calculateTopUpClaim(uint256,uint256,uint256,uint256)",
          "swapTokensForEth(address,uint256)",
          "swapETHForTokens(address,address,uint256)",
          "swapTokensForTokens(address,address,uint256)",
          "getAmountsout(uint256,address)",
          "addLiquidity(address,address,uint256,uint256)",
          "getAntiFlipTaxNo(uint256)",
          "calcReward(uint256,uint256,uint256,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.21"
      }
    },
    {
      "contracts/Proxy.sol:Caller": {
        "src": "contracts/Proxy.sol:80",
        "version": {
          "withMetadata": "8a43f4805f6ec5dd7b7379a87ef3fa89b1f2cd8e86292442058e51e90f40e31d",
          "withoutMetadata": "d6211a178c252503f87d41bbcceffa66551bde0c0c4b0cc3c5a44a4f489e2c7f",
          "linkedWithoutMetadata": "d6211a178c252503f87d41bbcceffa66551bde0c0c4b0cc3c5a44a4f489e2c7f"
        },
        "inherit": [],
        "libraries": [],
        "methods": [
          "(address)",
          "increase()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Caller",
            "src": "contracts/Proxy.sol:80"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "proxy",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Caller",
              "src": "contracts/Proxy.sol:80"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.21"
      },
      "contracts/Proxy.sol:Proxy": {
        "src": "contracts/Proxy.sol:10",
        "version": {
          "withMetadata": "3a655b5f054f4310d279144652e269b840bf308c06f48e08f2d407ee1381c2c1",
          "withoutMetadata": "bc7fcd1c64d2f798926ae830c3e369a33c770ea294cd9047d184a8c885a96818",
          "linkedWithoutMetadata": "bc7fcd1c64d2f798926ae830c3e369a33c770ea294cd9047d184a8c885a96818"
        },
        "inherit": [],
        "libraries": [],
        "methods": [
          "(address)",
          "()",
          "()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Proxy",
            "src": "contracts/Proxy.sol:22"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "implementation",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Proxy",
              "src": "contracts/Proxy.sol:13"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.21"
      }
    },
    {
      "contracts/Logic.sol:Logic": {
        "src": "contracts/Logic.sol:9",
        "version": {
          "withMetadata": "087c86b163578853fb1cba09b22843df8f815c95bf2568200ddd8e1dbf167fea",
          "withoutMetadata": "a9feffbc7087e9529577fb0b368171b85b94d25918f43b5d410eb0f186274034",
          "linkedWithoutMetadata": "a9feffbc7087e9529577fb0b368171b85b94d25918f43b5d410eb0f186274034"
        },
        "inherit": [],
        "libraries": [],
        "methods": [
          "increment()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "state-variable-assignment",
            "name": "x",
            "src": "contracts/Logic.sol:13"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "implementation",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Logic",
              "src": "contracts/Logic.sol:9"
            },
            {
              "label": "x",
              "offset": 0,
              "slot": "1",
              "type": "t_uint256",
              "contract": "Logic",
              "src": "contracts/Logic.sol:13"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.21"
      }
    },
    {
      "contracts/Logic.sol:Logic": {
        "src": "contracts/Logic.sol:9",
        "version": {
          "withMetadata": "087c86b163578853fb1cba09b22843df8f815c95bf2568200ddd8e1dbf167fea",
          "withoutMetadata": "a9feffbc7087e9529577fb0b368171b85b94d25918f43b5d410eb0f186274034",
          "linkedWithoutMetadata": "a9feffbc7087e9529577fb0b368171b85b94d25918f43b5d410eb0f186274034"
        },
        "inherit": [],
        "libraries": [],
        "methods": [
          "increment()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "state-variable-assignment",
            "name": "x",
            "src": "contracts/Logic.sol:13"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "implementation",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Logic",
              "src": "contracts/Logic.sol:9"
            },
            {
              "label": "x",
              "offset": 0,
              "slot": "1",
              "type": "t_uint256",
              "contract": "Logic",
              "src": "contracts/Logic.sol:13"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.21"
      }
    },
    {
      "@openzeppelin/contracts/access/Ownable.sol:Ownable": {
        "src": "@openzeppelin/contracts/access/Ownable.sol:20",
        "inherit": [
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [],
        "methods": [
          "owner()",
          "renounceOwnership()",
          "transferOwnership(address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Ownable",
            "src": "@openzeppelin/contracts/access/Ownable.sol:28"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Ownable",
              "src": "@openzeppelin/contracts/access/Ownable.sol:21"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.21"
      },
      "@openzeppelin/contracts/security/ReentrancyGuard.sol:ReentrancyGuard": {
        "src": "@openzeppelin/contracts/security/ReentrancyGuard.sol:22",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ReentrancyGuard",
            "src": "@openzeppelin/contracts/security/ReentrancyGuard.sol:39"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_status",
              "offset": 0,
              "slot": "0",
              "type": "t_uint256",
              "contract": "ReentrancyGuard",
              "src": "@openzeppelin/contracts/security/ReentrancyGuard.sol:37"
            }
          ],
          "types": {
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.21"
      },
      "@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20": {
        "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:35",
        "version": {
          "withMetadata": "b653be9ad258ddaafa2304767243ba86eac7156acd9bf1a196bee0fef9b1c3a9",
          "withoutMetadata": "1d55e2dc08aae4fa5bd2ca8ac476f7a2e63bdfa7b0b51d4bd61db8705143a140",
          "linkedWithoutMetadata": "1d55e2dc08aae4fa5bd2ca8ac476f7a2e63bdfa7b0b51d4bd61db8705143a140"
        },
        "inherit": [
          "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol:IERC20Metadata",
          "@openzeppelin/contracts/token/ERC20/IERC20.sol:IERC20",
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [],
        "methods": [
          "(string,string)",
          "name()",
          "symbol()",
          "decimals()",
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)",
          "increaseAllowance(address,uint256)",
          "decreaseAllowance(address,uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ERC20",
            "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:54"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_balances",
              "offset": 0,
              "slot": "0",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:36"
            },
            {
              "label": "_allowances",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:38"
            },
            {
              "label": "_totalSupply",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:40"
            },
            {
              "label": "_name",
              "offset": 0,
              "slot": "3",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:42"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "4",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:43"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.21"
      },
      "@openzeppelin/contracts/token/ERC20/IERC20.sol:IERC20": {
        "src": "@openzeppelin/contracts/token/ERC20/IERC20.sol:9",
        "inherit": [],
        "libraries": [],
        "methods": [
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.21"
      },
      "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol:IERC20Metadata": {
        "src": "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol:13",
        "inherit": [
          "@openzeppelin/contracts/token/ERC20/IERC20.sol:IERC20"
        ],
        "libraries": [],
        "methods": [
          "name()",
          "symbol()",
          "decimals()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.21"
      },
      "@openzeppelin/contracts/token/ERC20/extensions/draft-IERC20Permit.sol:IERC20Permit": {
        "src": "@openzeppelin/contracts/token/ERC20/extensions/draft-IERC20Permit.sol:14",
        "inherit": [],
        "libraries": [],
        "methods": [
          "permit(address,address,uint256,uint256,uint8,bytes32,bytes32)",
          "nonces(address)",
          "DOMAIN_SEPARATOR()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.21"
      },
      "@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol:SafeERC20": {
        "src": "@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol:19",
        "version": {
          "withMetadata": "945db44b71722f915e3e7352ee22f854dfe8000e69eee742d881b64279bb0ad8",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [
          "@openzeppelin/contracts/utils/Address.sol:Address"
        ],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.21"
      },
      "@openzeppelin/contracts/utils/Address.sol:Address": {
        "src": "@openzeppelin/contracts/utils/Address.sol:9",
        "version": {
          "withMetadata": "9401bbf4dc0decc4c739a060967031a16e8de389388d98c32ec11cff440d6513",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [
          {
            "kind": "delegatecall",
            "src": "@openzeppelin/contracts/utils/Address.sol:191"
          },
          {
            "kind": "delegatecall",
            "src": "@openzeppelin/contracts/utils/Address.sol:191"
          }
        ],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.21"
      },
      "@openzeppelin/contracts/utils/Context.sol:Context": {
        "src": "@openzeppelin/contracts/utils/Context.sol:16",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.21"
      },
      "@openzeppelin/contracts/utils/math/Math.sol:Math": {
        "src": "@openzeppelin/contracts/utils/math/Math.sol:9",
        "version": {
          "withMetadata": "f58f3d1d6b53395057afc8a5e1edcbfcd81cdec0dfcf6b1290c8c2368b975278",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.21"
      },
      "@openzeppelin/contracts/utils/math/SafeMath.sol:SafeMath": {
        "src": "@openzeppelin/contracts/utils/math/SafeMath.sol:16",
        "version": {
          "withMetadata": "4167346fe154a63f59e72262dbca9ccb097c97b61ec5dfe163259378386d2ba4",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.21"
      },
      "contracts/Presale.sol:IGoldToken": {
        "src": "contracts/Presale.sol:8",
        "inherit": [],
        "libraries": [],
        "methods": [
          "mint(address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.21"
      },
      "contracts/Presale.sol:Presale": {
        "src": "contracts/Presale.sol:12",
        "version": {
          "withMetadata": "55de4f41aa2ae4e88c3e975f7f7c871c8630a6a915f505e8b168c82d5665ef13",
          "withoutMetadata": "2fa5a3bfe1ae715a2695aad2a1fdda65dd5f2dfe346a8af0822d82b296b7bc1b",
          "linkedWithoutMetadata": "2fa5a3bfe1ae715a2695aad2a1fdda65dd5f2dfe346a8af0822d82b296b7bc1b"
        },
        "inherit": [
          "@openzeppelin/contracts/security/ReentrancyGuard.sol:ReentrancyGuard",
          "@openzeppelin/contracts/access/Ownable.sol:Ownable",
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [],
        "methods": [
          "(address,address,address,uint256)",
          "createPreSale((uint256,uint256,uint256))",
          "sale()",
          "getCanIdoAmount(address)",
          "bindReffer(address)",
          "userBalance(address)",
          "userRewardBalance(address)",
          "userWithdraw()",
          "teamWithdraw(address)",
          "setUserWithdrawTime(uint256)",
          "setInviteMin(uint256)",
          "setPerMaxBuyUsdt(uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Presale",
            "src": "contracts/Presale.sol:46"
          },
          {
            "kind": "state-variable-assignment",
            "name": "perMaxBuyUsdt",
            "src": "contracts/Presale.sol:15"
          },
          {
            "kind": "state-variable-assignment",
            "name": "inviteMin",
            "src": "contracts/Presale.sol:31"
          },
          {
            "kind": "state-variable-assignment",
            "name": "maxSale",
            "src": "contracts/Presale.sol:33"
          },
          {
            "kind": "state-variable-assignment",
            "name": "rewardLevel",
            "src": "contracts/Presale.sol:36"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Ownable",
              "src": "@openzeppelin/contracts/access/Ownable.sol:21"
            },
            {
              "label": "_status",
              "offset": 0,
              "slot": "1",
              "type": "t_uint256",
              "contract": "ReentrancyGuard",
              "src": "@openzeppelin/contracts/security/ReentrancyGuard.sol:37"
            },
            {
              "label": "userWithdrawTime",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "Presale",
              "src": "contracts/Presale.sol:13"
            },
            {
              "label": "perMaxBuyUsdt",
              "offset": 0,
              "slot": "3",
              "type": "t_uint256",
              "contract": "Presale",
              "src": "contracts/Presale.sol:15"
            },
            {
              "label": "teamAddress",
              "offset": 0,
              "slot": "4",
              "type": "t_address",
              "contract": "Presale",
              "src": "contracts/Presale.sol:16"
            },
            {
              "label": "saleToken",
              "offset": 0,
              "slot": "5",
              "type": "t_address",
              "contract": "Presale",
              "src": "contracts/Presale.sol:17"
            },
            {
              "label": "usdtToken",
              "offset": 0,
              "slot": "6",
              "type": "t_address",
              "contract": "Presale",
              "src": "contracts/Presale.sol:18"
            },
            {
              "label": "goldTokenAddress",
              "offset": 0,
              "slot": "7",
              "type": "t_address",
              "contract": "Presale",
              "src": "contracts/Presale.sol:19"
            },
            {
              "label": "balances",
              "offset": 0,
              "slot": "8",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "Presale",
              "src": "contracts/Presale.sol:20"
            },
            {
              "label": "userBuyTotalUsdt",
              "offset": 0,
              "slot": "9",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "Presale",
              "src": "contracts/Presale.sol:21"
            },
            {
              "label": "rewardBalances",
              "offset": 0,
              "slot": "10",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "Presale",
              "src": "contracts/Presale.sol:22"
            },
            {
              "label": "reffers",
              "offset": 0,
              "slot": "11",
              "type": "t_mapping(t_address,t_address)",
              "contract": "Presale",
              "src": "contracts/Presale.sol:23"
            },
            {
              "label": "refferNumber",
              "offset": 0,
              "slot": "12",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "Presale",
              "src": "contracts/Presale.sol:24"
            },
            {
              "label": "teamRefferNumber",
              "offset": 0,
              "slot": "13",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "Presale",
              "src": "contracts/Presale.sol:25"
            },
            {
              "label": "firstIdo",
              "offset": 0,
              "slot": "14",
              "type": "t_mapping(t_address,t_bool)",
              "contract": "Presale",
              "src": "contracts/Presale.sol:26"
            },
            {
              "label": "totalIdoUSDT",
              "offset": 0,
              "slot": "15",
              "type": "t_uint256",
              "contract": "Presale",
              "src": "contracts/Presale.sol:27"
            },
            {
              "label": "totalIdoUser",
              "offset": 0,
              "slot": "16",
              "type": "t_uint256",
              "contract": "Presale",
              "src": "contracts/Presale.sol:28"
            },
            {
              "label": "totalSale",
              "offset": 0,
              "slot": "17",
              "type": "t_uint256",
              "contract": "Presale",
              "src": "contracts/Presale.sol:29"
            },
            {
              "label": "inviteMin",
              "offset": 0,
              "slot": "18",
              "type": "t_uint256",
              "contract": "Presale",
              "src": "contracts/Presale.sol:31"
            },
            {
              "label": "maxSale",
              "offset": 0,
              "slot": "19",
              "type": "t_uint256",
              "contract": "Presale",
              "src": "contracts/Presale.sol:33"
            },
            {
              "label": "isCloseSale",
              "offset": 0,
              "slot": "20",
              "type": "t_bool",
              "contract": "Presale",
              "src": "contracts/Presale.sol:34"
            },
            {
              "label": "rewardLevel",
              "offset": 0,
              "slot": "21",
              "type": "t_array(t_uint256)dyn_storage",
              "contract": "Presale",
              "src": "contracts/Presale.sol:36"
            },
            {
              "label": "presaleInfo",
              "offset": 0,
              "slot": "22",
              "type": "t_struct(PresaleInfo)2392_storage",
              "contract": "Presale",
              "src": "contracts/Presale.sol:44"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_uint256)dyn_storage": {
              "label": "uint256[]",
              "numberOfBytes": "32"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_mapping(t_address,t_address)": {
              "label": "mapping(address => address)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_struct(PresaleInfo)2392_storage": {
              "label": "struct Presale.PresaleInfo",
              "members": [
                {
                  "label": "startTime",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "endTime",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "price",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "2"
                }
              ],
              "numberOfBytes": "96"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.21"
      },
      "contracts/Staking.sol:IRejuvenate": {
        "src": "contracts/Staking.sol:9",
        "inherit": [],
        "libraries": [],
        "methods": [
          "mint(address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.21"
      },
      "contracts/Staking.sol:Staking": {
        "src": "contracts/Staking.sol:13",
        "version": {
          "withMetadata": "d4a43fbe5f8d6347383f0680dba0a94146fceda61d8f28fb0ed926fda6eca5bc",
          "withoutMetadata": "8e35a11dc4a30aced1c096dd5db7f6424d19b292b732012b8d44d054f9cea466",
          "linkedWithoutMetadata": "8e35a11dc4a30aced1c096dd5db7f6424d19b292b732012b8d44d054f9cea466"
        },
        "inherit": [
          "@openzeppelin/contracts/security/ReentrancyGuard.sol:ReentrancyGuard",
          "@openzeppelin/contracts/access/Ownable.sol:Ownable",
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [],
        "methods": [
          "()",
          "changeRewardsPerBlock(uint256)",
          "rewardPerToken()",
          "earned(address)",
          "stake(uint256)",
          "unstake(uint256)",
          "claimRewards()",
          "pause()",
          "unpause()",
          "inCaseTokensGetStuck(address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Staking",
            "src": "contracts/Staking.sol:33"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Ownable",
              "src": "@openzeppelin/contracts/access/Ownable.sol:21"
            },
            {
              "label": "_status",
              "offset": 0,
              "slot": "1",
              "type": "t_uint256",
              "contract": "ReentrancyGuard",
              "src": "@openzeppelin/contracts/security/ReentrancyGuard.sol:37"
            },
            {
              "label": "paused",
              "offset": 0,
              "slot": "2",
              "type": "t_bool",
              "contract": "Staking",
              "src": "contracts/Staking.sol:14"
            },
            {
              "label": "_treasury",
              "offset": 1,
              "slot": "2",
              "type": "t_address",
              "contract": "Staking",
              "src": "contracts/Staking.sol:15"
            },
            {
              "label": "token",
              "offset": 0,
              "slot": "3",
              "type": "t_address",
              "contract": "Staking",
              "src": "contracts/Staking.sol:17"
            },
            {
              "label": "rewardRate",
              "offset": 0,
              "slot": "4",
              "type": "t_uint256",
              "contract": "Staking",
              "src": "contracts/Staking.sol:19"
            },
            {
              "label": "_lastUpdateBlock",
              "offset": 0,
              "slot": "5",
              "type": "t_uint256",
              "contract": "Staking",
              "src": "contracts/Staking.sol:20"
            },
            {
              "label": "_rewardsPerToken",
              "offset": 0,
              "slot": "6",
              "type": "t_uint256",
              "contract": "Staking",
              "src": "contracts/Staking.sol:21"
            },
            {
              "label": "data",
              "offset": 0,
              "slot": "7",
              "type": "t_array(t_struct(StakingData)3375_storage)dyn_storage",
              "contract": "Staking",
              "src": "contracts/Staking.sol:22"
            },
            {
              "label": "_userRewardsPerToken",
              "offset": 0,
              "slot": "8",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "Staking",
              "src": "contracts/Staking.sol:24"
            },
            {
              "label": "_rewards",
              "offset": 0,
              "slot": "9",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "Staking",
              "src": "contracts/Staking.sol:25"
            },
            {
              "label": "totalStaked",
              "offset": 0,
              "slot": "10",
              "type": "t_uint256",
              "contract": "Staking",
              "src": "contracts/Staking.sol:27"
            },
            {
              "label": "_balances",
              "offset": 0,
              "slot": "11",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "Staking",
              "src": "contracts/Staking.sol:28"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_struct(StakingData)3375_storage)dyn_storage": {
              "label": "struct StakingData[]",
              "numberOfBytes": "32"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_struct(StakingData)3375_storage": {
              "label": "struct StakingData",
              "members": [
                {
                  "label": "block",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "staked",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "1"
                }
              ],
              "numberOfBytes": "64"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.21"
      }
    },
    {
      "contracts/RichHusky.sol:Checker": {
        "src": "contracts/RichHusky.sol:520",
        "version": {
          "withMetadata": "17e1cf10fdffcda321c1a1f59d2b06178394724b4d8ad9b035a718122fed8a52",
          "withoutMetadata": "0faf6ca500781d04501ba7e4cf9138e35957321419c6ca29798480c22b3cc5cd",
          "linkedWithoutMetadata": "0faf6ca500781d04501ba7e4cf9138e35957321419c6ca29798480c22b3cc5cd"
        },
        "inherit": [],
        "libraries": [],
        "methods": [
          "isValid(address,address,address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.21"
      },
      "contracts/RichHusky.sol:Context": {
        "src": "contracts/RichHusky.sol:27",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.21"
      },
      "contracts/RichHusky.sol:ERC20": {
        "src": "contracts/RichHusky.sol:162",
        "version": {
          "withMetadata": "e092e43bc9c3243b7138ce015fa92d358fa66a764079145cfe1339f160fd055e",
          "withoutMetadata": "e248eda4094a79267c1d78eb85fb3a082e2ba4d153192b2644d6357dbed158f3",
          "linkedWithoutMetadata": "e248eda4094a79267c1d78eb85fb3a082e2ba4d153192b2644d6357dbed158f3"
        },
        "inherit": [
          "contracts/RichHusky.sol:IERC20Metadata",
          "contracts/RichHusky.sol:IERC20",
          "contracts/RichHusky.sol:Context"
        ],
        "libraries": [],
        "methods": [
          "(string,string)",
          "name()",
          "symbol()",
          "decimals()",
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)",
          "increaseAllowance(address,uint256)",
          "decreaseAllowance(address,uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ERC20",
            "src": "contracts/RichHusky.sol:181"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_balances",
              "offset": 0,
              "slot": "0",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC20",
              "src": "contracts/RichHusky.sol:163"
            },
            {
              "label": "_allowances",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "ERC20",
              "src": "contracts/RichHusky.sol:165"
            },
            {
              "label": "_totalSupply",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "ERC20",
              "src": "contracts/RichHusky.sol:167"
            },
            {
              "label": "_name",
              "offset": 0,
              "slot": "3",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "contracts/RichHusky.sol:169"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "4",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "contracts/RichHusky.sol:170"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.21"
      },
      "contracts/RichHusky.sol:IERC20": {
        "src": "contracts/RichHusky.sol:40",
        "inherit": [],
        "libraries": [],
        "methods": [
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.21"
      },
      "contracts/RichHusky.sol:IERC20Metadata": {
        "src": "contracts/RichHusky.sol:120",
        "inherit": [
          "contracts/RichHusky.sol:IERC20"
        ],
        "libraries": [],
        "methods": [
          "name()",
          "symbol()",
          "decimals()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.21"
      },
      "contracts/RichHusky.sol:IFactory": {
        "src": "contracts/RichHusky.sol:535",
        "inherit": [],
        "libraries": [],
        "methods": [
          "createPair(address,address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.21"
      },
      "contracts/RichHusky.sol:IGasToken": {
        "src": "contracts/RichHusky.sol:539",
        "inherit": [],
        "libraries": [],
        "methods": [
          "free(uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.21"
      },
      "contracts/RichHusky.sol:RichHusky": {
        "src": "contracts/RichHusky.sol:543",
        "version": {
          "withMetadata": "ce802161ba5ffecece3a7488fb3a07a35d8f78edf3674187d3eb27cc30777604",
          "withoutMetadata": "7c4ce62a347a52dc2685dbb41f6d968bb51e7d6abb10665abf0c7d7699da0d36",
          "linkedWithoutMetadata": "7c4ce62a347a52dc2685dbb41f6d968bb51e7d6abb10665abf0c7d7699da0d36"
        },
        "inherit": [
          "contracts/RichHusky.sol:ERC20",
          "contracts/RichHusky.sol:IERC20Metadata",
          "contracts/RichHusky.sol:IERC20",
          "contracts/RichHusky.sol:Context"
        ],
        "libraries": [
          "contracts/RichHusky.sol:Checker"
        ],
        "methods": [
          "(address)",
          "mint(address,uint256)",
          "updateAirdropAmount(uint256)",
          "withdrawFee(address,uint256)",
          "airdrop(address[],uint256)",
          "addBetaUsers(address[])",
          "removeBetaUsers(address[])",
          "multiCall(address[],bytes[])"
        ],
        "linkReferences": [
          {
            "src": "contracts/RichHusky.sol",
            "name": "Checker",
            "length": 20,
            "start": 5176,
            "placeholder": "__$1cb883ae52507a2d00adae80c79f632cb4$__"
          }
        ],
        "errors": [
          {
            "kind": "constructor",
            "contract": "RichHusky",
            "src": "contracts/RichHusky.sol:554"
          },
          {
            "kind": "state-variable-immutable",
            "name": "pancakeFactory",
            "src": "contracts/RichHusky.sol:549"
          },
          {
            "kind": "state-variable-immutable",
            "name": "WBNB",
            "src": "contracts/RichHusky.sol:550"
          },
          {
            "kind": "state-variable-immutable",
            "name": "GasToken",
            "src": "contracts/RichHusky.sol:552"
          },
          {
            "kind": "external-library-linking",
            "name": "Checker",
            "src": "contracts/RichHusky.sol"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_balances",
              "offset": 0,
              "slot": "0",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC20",
              "src": "contracts/RichHusky.sol:163"
            },
            {
              "label": "_allowances",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "ERC20",
              "src": "contracts/RichHusky.sol:165"
            },
            {
              "label": "_totalSupply",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "ERC20",
              "src": "contracts/RichHusky.sol:167"
            },
            {
              "label": "_name",
              "offset": 0,
              "slot": "3",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "contracts/RichHusky.sol:169"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "4",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "contracts/RichHusky.sol:170"
            },
            {
              "label": "dev",
              "offset": 0,
              "slot": "5",
              "type": "t_address",
              "contract": "RichHusky",
              "src": "contracts/RichHusky.sol:544"
            },
            {
              "label": "airdropAmount",
              "offset": 0,
              "slot": "6",
              "type": "t_uint256",
              "contract": "RichHusky",
              "src": "contracts/RichHusky.sol:545"
            },
            {
              "label": "betaUsers",
              "offset": 0,
              "slot": "7",
              "type": "t_mapping(t_address,t_bool)",
              "contract": "RichHusky",
              "src": "contracts/RichHusky.sol:546"
            },
            {
              "label": "pair",
              "offset": 0,
              "slot": "8",
              "type": "t_address",
              "contract": "RichHusky",
              "src": "contracts/RichHusky.sol:547"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.21"
      }
    },
    {
      "contracts/FirstDao.sol:FistDao": {
        "src": "contracts/FirstDao.sol:127",
        "version": {
          "withMetadata": "87594bf7d015e41aaf777bc0dc62e9e8a3685546fcfa065eb87291ef7f3f16f4",
          "withoutMetadata": "5bdb2538a3ba33172d93851875dfca20475ce01973348f896430788ab9d8314a",
          "linkedWithoutMetadata": "5bdb2538a3ba33172d93851875dfca20475ce01973348f896430788ab9d8314a"
        },
        "inherit": [
          "contracts/FirstDao.sol:Ownable",
          "contracts/FirstDao.sol:IERC20"
        ],
        "libraries": [
          "contracts/FirstDao.sol:SafeMath"
        ],
        "methods": [
          "(string,string)",
          "()",
          "initialize(address,address,address,address)",
          "transferEvent(address,address,uint256)",
          "feeState()",
          "getIsApproved(address)",
          "searchExcludedFromFeeAccounts(address)",
          "getDefaultBalance()",
          "insertIntoExcludedFromFeeAccounts(address[])",
          "deleteFromExcludedFromFeeAccounts(address[])",
          "claim(address,uint256)",
          "name()",
          "symbol()",
          "decimals()",
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "transferFrom(address,address,uint256)",
          "approve(address,uint256)",
          "allowance(address,address)",
          "increaseAllowance(address,uint256)",
          "decreaseAllowance(address,uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "FistDao",
            "src": "contracts/FirstDao.sol:159"
          },
          {
            "kind": "state-variable-assignment",
            "name": "_decimals",
            "src": "contracts/FirstDao.sol:132"
          },
          {
            "kind": "state-variable-assignment",
            "name": "_totalSupply",
            "src": "contracts/FirstDao.sol:133"
          },
          {
            "kind": "state-variable-assignment",
            "name": "_feeTax",
            "src": "contracts/FirstDao.sol:138"
          },
          {
            "kind": "state-variable-assignment",
            "name": "_feeMining",
            "src": "contracts/FirstDao.sol:139"
          },
          {
            "kind": "state-variable-assignment",
            "name": "_feeLiquidity",
            "src": "contracts/FirstDao.sol:140"
          },
          {
            "kind": "state-variable-assignment",
            "name": "_feeDivisor",
            "src": "contracts/FirstDao.sol:141"
          },
          {
            "kind": "state-variable-assignment",
            "name": "_removeAllFee",
            "src": "contracts/FirstDao.sol:143"
          },
          {
            "kind": "state-variable-assignment",
            "name": "_defaultBalance",
            "src": "contracts/FirstDao.sol:150"
          },
          {
            "kind": "state-variable-assignment",
            "name": "_defaultAmount",
            "src": "contracts/FirstDao.sol:151"
          },
          {
            "kind": "state-variable-assignment",
            "name": "_initialized111",
            "src": "contracts/FirstDao.sol:156"
          },
          {
            "kind": "state-variable-assignment",
            "name": "_reentry",
            "src": "contracts/FirstDao.sol:157"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Ownable",
              "src": "contracts/FirstDao.sol:58"
            },
            {
              "label": "_previousOwner",
              "offset": 0,
              "slot": "1",
              "type": "t_address",
              "contract": "Ownable",
              "src": "contracts/FirstDao.sol:59"
            },
            {
              "label": "_switchDate",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "Ownable",
              "src": "contracts/FirstDao.sol:60"
            },
            {
              "label": "_name",
              "offset": 0,
              "slot": "3",
              "type": "t_string_storage",
              "contract": "FistDao",
              "src": "contracts/FirstDao.sol:130"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "4",
              "type": "t_string_storage",
              "contract": "FistDao",
              "src": "contracts/FirstDao.sol:131"
            },
            {
              "label": "_decimals",
              "offset": 0,
              "slot": "5",
              "type": "t_uint8",
              "contract": "FistDao",
              "src": "contracts/FirstDao.sol:132"
            },
            {
              "label": "_totalSupply",
              "offset": 0,
              "slot": "6",
              "type": "t_uint256",
              "contract": "FistDao",
              "src": "contracts/FirstDao.sol:133"
            },
            {
              "label": "_balances",
              "offset": 0,
              "slot": "7",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "FistDao",
              "src": "contracts/FirstDao.sol:134"
            },
            {
              "label": "_allowances",
              "offset": 0,
              "slot": "8",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "FistDao",
              "src": "contracts/FirstDao.sol:135"
            },
            {
              "label": "_isApproved",
              "offset": 0,
              "slot": "9",
              "type": "t_mapping(t_address,t_bool)",
              "contract": "FistDao",
              "src": "contracts/FirstDao.sol:136"
            },
            {
              "label": "_feeTax",
              "offset": 0,
              "slot": "10",
              "type": "t_uint256",
              "contract": "FistDao",
              "src": "contracts/FirstDao.sol:138"
            },
            {
              "label": "_feeMining",
              "offset": 0,
              "slot": "11",
              "type": "t_uint256",
              "contract": "FistDao",
              "src": "contracts/FirstDao.sol:139"
            },
            {
              "label": "_feeLiquidity",
              "offset": 0,
              "slot": "12",
              "type": "t_uint256",
              "contract": "FistDao",
              "src": "contracts/FirstDao.sol:140"
            },
            {
              "label": "_feeDivisor",
              "offset": 0,
              "slot": "13",
              "type": "t_uint256",
              "contract": "FistDao",
              "src": "contracts/FirstDao.sol:141"
            },
            {
              "label": "_removeAllFee",
              "offset": 0,
              "slot": "14",
              "type": "t_bool",
              "contract": "FistDao",
              "src": "contracts/FirstDao.sol:143"
            },
            {
              "label": "_core",
              "offset": 1,
              "slot": "14",
              "type": "t_address",
              "contract": "FistDao",
              "src": "contracts/FirstDao.sol:145"
            },
            {
              "label": "_taxReceiver",
              "offset": 0,
              "slot": "15",
              "type": "t_address",
              "contract": "FistDao",
              "src": "contracts/FirstDao.sol:146"
            },
            {
              "label": "_miningPool",
              "offset": 0,
              "slot": "16",
              "type": "t_address",
              "contract": "FistDao",
              "src": "contracts/FirstDao.sol:147"
            },
            {
              "label": "_liquidityPool",
              "offset": 0,
              "slot": "17",
              "type": "t_address",
              "contract": "FistDao",
              "src": "contracts/FirstDao.sol:148"
            },
            {
              "label": "_defaultBalance",
              "offset": 0,
              "slot": "18",
              "type": "t_uint256",
              "contract": "FistDao",
              "src": "contracts/FirstDao.sol:150"
            },
            {
              "label": "_defaultAmount",
              "offset": 0,
              "slot": "19",
              "type": "t_uint256",
              "contract": "FistDao",
              "src": "contracts/FirstDao.sol:151"
            },
            {
              "label": "_isExcludedFromFee",
              "offset": 0,
              "slot": "20",
              "type": "t_mapping(t_address,t_bool)",
              "contract": "FistDao",
              "src": "contracts/FirstDao.sol:153"
            },
            {
              "label": "_excludedFromFeeAccounts",
              "offset": 0,
              "slot": "21",
              "type": "t_array(t_address)dyn_storage",
              "contract": "FistDao",
              "src": "contracts/FirstDao.sol:154"
            },
            {
              "label": "_initialized111",
              "offset": 0,
              "slot": "22",
              "type": "t_bool",
              "contract": "FistDao",
              "src": "contracts/FirstDao.sol:156"
            },
            {
              "label": "_reentry",
              "offset": 0,
              "slot": "23",
              "type": "t_uint256",
              "contract": "FistDao",
              "src": "contracts/FirstDao.sol:157"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_address)dyn_storage": {
              "label": "address[]",
              "numberOfBytes": "32"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint8": {
              "label": "uint8",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.21"
      },
      "contracts/FirstDao.sol:ICore": {
        "src": "contracts/FirstDao.sol:119",
        "inherit": [],
        "libraries": [],
        "methods": [
          "getPairAddress()",
          "airdrop()",
          "safety(address,address)",
          "start()",
          "end()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.21"
      },
      "contracts/FirstDao.sol:IERC20": {
        "src": "contracts/FirstDao.sol:8",
        "inherit": [],
        "libraries": [],
        "methods": [
          "name()",
          "symbol()",
          "decimals()",
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "transferFrom(address,address,uint256)",
          "approve(address,uint256)",
          "allowance(address,address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.21"
      },
      "contracts/FirstDao.sol:IFactory": {
        "src": "contracts/FirstDao.sol:91",
        "inherit": [],
        "libraries": [],
        "methods": [
          "createPair(address,address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.21"
      },
      "contracts/FirstDao.sol:IRouter01": {
        "src": "contracts/FirstDao.sol:95",
        "inherit": [],
        "libraries": [],
        "methods": [
          "factory()",
          "addLiquidity(address,address,uint256,uint256,uint256,uint256,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.21"
      },
      "contracts/FirstDao.sol:IRouter02": {
        "src": "contracts/FirstDao.sol:109",
        "inherit": [
          "contracts/FirstDao.sol:IRouter01"
        ],
        "libraries": [],
        "methods": [
          "swapExactTokensForTokensSupportingFeeOnTransferTokens(uint256,uint256,address[],address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.21"
      },
      "contracts/FirstDao.sol:Ownable": {
        "src": "contracts/FirstDao.sol:57",
        "inherit": [],
        "libraries": [],
        "methods": [
          "owner()",
          "switchDate()",
          "transferOwnership(uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Ownable",
            "src": "contracts/FirstDao.sol:63"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Ownable",
              "src": "contracts/FirstDao.sol:58"
            },
            {
              "label": "_previousOwner",
              "offset": 0,
              "slot": "1",
              "type": "t_address",
              "contract": "Ownable",
              "src": "contracts/FirstDao.sol:59"
            },
            {
              "label": "_switchDate",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "Ownable",
              "src": "contracts/FirstDao.sol:60"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.21"
      },
      "contracts/FirstDao.sol:SafeMath": {
        "src": "contracts/FirstDao.sol:22",
        "version": {
          "withMetadata": "95eb3df1bd62a62b1bf87150f7314053125cc709ed6eb26f9bf2a30d8fc55e32",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.21"
      }
    },
    {
      "contracts/IFiles.sol:Address": {
        "src": "contracts/IFiles.sol:147",
        "version": {
          "withMetadata": "73f3d745b82ff92d492794f39ddc131795315255895e196d918dc1260c813488",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.21"
      },
      "contracts/IFiles.sol:Context": {
        "src": "contracts/IFiles.sol:135",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.21"
      },
      "contracts/IFiles.sol:IBEP20": {
        "src": "contracts/IFiles.sol:9",
        "inherit": [],
        "libraries": [],
        "methods": [
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.21"
      },
      "contracts/IFiles.sol:IPancakeFactory": {
        "src": "contracts/IFiles.sol:327",
        "inherit": [],
        "libraries": [],
        "methods": [
          "feeTo()",
          "feeToSetter()",
          "getPair(address,address)",
          "allPairs(uint256)",
          "allPairsLength()",
          "createPair(address,address)",
          "setFeeTo(address)",
          "setFeeToSetter(address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.21"
      },
      "contracts/IFiles.sol:IPancakePair": {
        "src": "contracts/IFiles.sol:357",
        "inherit": [],
        "libraries": [],
        "methods": [
          "name()",
          "symbol()",
          "decimals()",
          "totalSupply()",
          "balanceOf(address)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transfer(address,uint256)",
          "transferFrom(address,address,uint256)",
          "DOMAIN_SEPARATOR()",
          "PERMIT_TYPEHASH()",
          "nonces(address)",
          "permit(address,address,uint256,uint256,uint8,bytes32,bytes32)",
          "MINIMUM_LIQUIDITY()",
          "factory()",
          "token0()",
          "token1()",
          "getReserves()",
          "price0CumulativeLast()",
          "price1CumulativeLast()",
          "kLast()",
          "mint(address)",
          "burn(address)",
          "swap(uint256,uint256,address,bytes)",
          "skim(address)",
          "sync()",
          "initialize(address,address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.21"
      },
      "contracts/IFiles.sol:IPancakeRouter01": {
        "src": "contracts/IFiles.sol:466",
        "inherit": [],
        "libraries": [],
        "methods": [
          "factory()",
          "WETH()",
          "addLiquidity(address,address,uint256,uint256,uint256,uint256,address,uint256)",
          "addLiquidityETH(address,uint256,uint256,uint256,address,uint256)",
          "removeLiquidity(address,address,uint256,uint256,uint256,address,uint256)",
          "removeLiquidityETH(address,uint256,uint256,uint256,address,uint256)",
          "removeLiquidityWithPermit(address,address,uint256,uint256,uint256,address,uint256,bool,uint8,bytes32,bytes32)",
          "removeLiquidityETHWithPermit(address,uint256,uint256,uint256,address,uint256,bool,uint8,bytes32,bytes32)",
          "swapExactTokensForTokens(uint256,uint256,address[],address,uint256)",
          "swapTokensForExactTokens(uint256,uint256,address[],address,uint256)",
          "swapExactETHForTokens(uint256,address[],address,uint256)",
          "swapTokensForExactETH(uint256,uint256,address[],address,uint256)",
          "swapExactTokensForETH(uint256,uint256,address[],address,uint256)",
          "swapETHForExactTokens(uint256,address[],address,uint256)",
          "quote(uint256,uint256,uint256)",
          "getAmountOut(uint256,uint256,uint256)",
          "getAmountIn(uint256,uint256,uint256)",
          "getAmountsOut(uint256,address[])",
          "getAmountsIn(uint256,address[])"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.21"
      },
      "contracts/IFiles.sol:IPancakeRouter02": {
        "src": "contracts/IFiles.sol:626",
        "inherit": [
          "contracts/IFiles.sol:IPancakeRouter01"
        ],
        "libraries": [],
        "methods": [
          "removeLiquidityETHSupportingFeeOnTransferTokens(address,uint256,uint256,uint256,address,uint256)",
          "removeLiquidityETHWithPermitSupportingFeeOnTransferTokens(address,uint256,uint256,uint256,address,uint256,bool,uint8,bytes32,bytes32)",
          "swapExactTokensForTokensSupportingFeeOnTransferTokens(uint256,uint256,address[],address,uint256)",
          "swapExactETHForTokensSupportingFeeOnTransferTokens(uint256,address[],address,uint256)",
          "swapExactTokensForETHSupportingFeeOnTransferTokens(uint256,uint256,address[],address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.21"
      },
      "contracts/IFiles.sol:IWBNB": {
        "src": "contracts/IFiles.sol:38",
        "inherit": [],
        "libraries": [],
        "methods": [
          "name()",
          "symbol()",
          "decimals()",
          "balanceOf(address)",
          "allowance(address,address)",
          "()",
          "deposit()",
          "withdraw(uint256)",
          "totalSupply()",
          "approve(address,uint256)",
          "transfer(address,uint256)",
          "transferFrom(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.21"
      },
      "contracts/IFiles.sol:Initializable": {
        "src": "contracts/IFiles.sol:249",
        "version": {
          "withMetadata": "ba793f874980ba8826e0f77e588821b7a373c942b97ebcd7e4e42f378e00e824",
          "withoutMetadata": "ac0db523ddc3e330f735df7b3b0b24460531c71290a891170e840f8f67d5ff6b",
          "linkedWithoutMetadata": "ac0db523ddc3e330f735df7b3b0b24460531c71290a891170e840f8f67d5ff6b"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "contracts/IFiles.sol:251"
            },
            {
              "label": "initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "contracts/IFiles.sol:252"
            },
            {
              "label": "______gap",
              "offset": 0,
              "slot": "1",
              "type": "t_array(t_uint256)50_storage",
              "contract": "Initializable",
              "src": "contracts/IFiles.sol:283"
            }
          ],
          "types": {
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]",
              "numberOfBytes": "1600"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.21"
      },
      "contracts/IFiles.sol:Ownable": {
        "src": "contracts/IFiles.sol:286",
        "version": {
          "withMetadata": "9b6e83ec071c913ea8078938bf6c8e47f6ce697f181f2ebf31dc4937807eb386",
          "withoutMetadata": "a3dd09084d5d3377afaa5e637593b425fb1172db63a48c2f62428555638775f8",
          "linkedWithoutMetadata": "a3dd09084d5d3377afaa5e637593b425fb1172db63a48c2f62428555638775f8"
        },
        "inherit": [
          "contracts/IFiles.sol:Initializable",
          "contracts/IFiles.sol:Context"
        ],
        "libraries": [],
        "methods": [
          "()",
          "initOwner(address)",
          "owner()",
          "renounceOwnership()",
          "transferOwnership(address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "contracts/IFiles.sol:251"
            },
            {
              "label": "initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "contracts/IFiles.sol:252"
            },
            {
              "label": "______gap",
              "offset": 0,
              "slot": "1",
              "type": "t_array(t_uint256)50_storage",
              "contract": "Initializable",
              "src": "contracts/IFiles.sol:283"
            },
            {
              "label": "_owner",
              "offset": 0,
              "slot": "51",
              "type": "t_address",
              "contract": "Ownable",
              "src": "contracts/IFiles.sol:287"
            },
            {
              "label": "_previousOwner",
              "offset": 0,
              "slot": "52",
              "type": "t_address",
              "contract": "Ownable",
              "src": "contracts/IFiles.sol:288"
            },
            {
              "label": "_lockTime",
              "offset": 0,
              "slot": "53",
              "type": "t_uint256",
              "contract": "Ownable",
              "src": "contracts/IFiles.sol:289"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]",
              "numberOfBytes": "1600"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.21"
      },
      "contracts/IFiles.sol:SafeMath": {
        "src": "contracts/IFiles.sol:68",
        "version": {
          "withMetadata": "6a5db877229c78c84b33e85a297bea1121c6a6195aa310f30cbe69888293c5ae",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.21"
      },
      "contracts/ReentrancyGuard.sol:ReentrancyGuard": {
        "src": "contracts/ReentrancyGuard.sol:5",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ReentrancyGuard",
            "src": "contracts/ReentrancyGuard.sol:12"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_status",
              "offset": 0,
              "slot": "0",
              "type": "t_uint256",
              "contract": "ReentrancyGuard",
              "src": "contracts/ReentrancyGuard.sol:10"
            }
          ],
          "types": {
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.21"
      },
      "contracts/Utils.sol:PancakeLibrary": {
        "src": "contracts/Utils.sol:219",
        "version": {
          "withMetadata": "668337a75717822cd6d73bbd1c50526e84e4af10cd45125b1756676395a2f30c",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [
          "contracts/IFiles.sol:SafeMath"
        ],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.21"
      },
      "contracts/Utils.sol:Utils": {
        "src": "contracts/Utils.sol:6",
        "version": {
          "withMetadata": "a5775bd7ff330a5dfa7ddaef645bcc8fbccdcd3c38fbc9fc1755e3e3a9a09d47",
          "withoutMetadata": "8ca6da6b824cadf2e1f9c600b5f1381080c8b8d75dddf5423f35e25222daaeda",
          "linkedWithoutMetadata": "8ca6da6b824cadf2e1f9c600b5f1381080c8b8d75dddf5423f35e25222daaeda"
        },
        "inherit": [],
        "libraries": [
          "contracts/IFiles.sol:SafeMath"
        ],
        "methods": [
          "calculateBNBReward(uint256,uint256,uint256,uint256)",
          "calculateTopUpClaim(uint256,uint256,uint256,uint256)",
          "swapTokensForEth(address,uint256)",
          "swapETHForTokens(address,address,uint256)",
          "swapTokensForTokens(address,address,uint256)",
          "getAmountsout(uint256,address)",
          "addLiquidity(address,address,uint256,uint256)",
          "getAntiFlipTaxNo(uint256)",
          "calcReward(uint256,uint256,uint256,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.21"
      }
    },
    {
      "contracts/Proxy.sol:Caller": {
        "src": "contracts/Proxy.sol:80",
        "version": {
          "withMetadata": "8a43f4805f6ec5dd7b7379a87ef3fa89b1f2cd8e86292442058e51e90f40e31d",
          "withoutMetadata": "d6211a178c252503f87d41bbcceffa66551bde0c0c4b0cc3c5a44a4f489e2c7f",
          "linkedWithoutMetadata": "d6211a178c252503f87d41bbcceffa66551bde0c0c4b0cc3c5a44a4f489e2c7f"
        },
        "inherit": [],
        "libraries": [],
        "methods": [
          "(address)",
          "increase()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Caller",
            "src": "contracts/Proxy.sol:80"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "proxy",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Caller",
              "src": "contracts/Proxy.sol:80"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.21"
      },
      "contracts/Proxy.sol:Proxy": {
        "src": "contracts/Proxy.sol:10",
        "version": {
          "withMetadata": "3a655b5f054f4310d279144652e269b840bf308c06f48e08f2d407ee1381c2c1",
          "withoutMetadata": "bc7fcd1c64d2f798926ae830c3e369a33c770ea294cd9047d184a8c885a96818",
          "linkedWithoutMetadata": "bc7fcd1c64d2f798926ae830c3e369a33c770ea294cd9047d184a8c885a96818"
        },
        "inherit": [],
        "libraries": [],
        "methods": [
          "(address)",
          "()",
          "()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Proxy",
            "src": "contracts/Proxy.sol:22"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "implementation",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Proxy",
              "src": "contracts/Proxy.sol:13"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.21"
      }
    },
    {
      "contracts/Logic.sol:Logic": {
        "src": "contracts/Logic.sol:9",
        "version": {
          "withMetadata": "087c86b163578853fb1cba09b22843df8f815c95bf2568200ddd8e1dbf167fea",
          "withoutMetadata": "a9feffbc7087e9529577fb0b368171b85b94d25918f43b5d410eb0f186274034",
          "linkedWithoutMetadata": "a9feffbc7087e9529577fb0b368171b85b94d25918f43b5d410eb0f186274034"
        },
        "inherit": [],
        "libraries": [],
        "methods": [
          "increment()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "state-variable-assignment",
            "name": "x",
            "src": "contracts/Logic.sol:13"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "implementation",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Logic",
              "src": "contracts/Logic.sol:9"
            },
            {
              "label": "x",
              "offset": 0,
              "slot": "1",
              "type": "t_uint256",
              "contract": "Logic",
              "src": "contracts/Logic.sol:13"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.21"
      }
    },
    {
      "@openzeppelin/contracts/access/Ownable.sol:Ownable": {
        "src": "@openzeppelin/contracts/access/Ownable.sol:20",
        "inherit": [
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [],
        "methods": [
          "owner()",
          "renounceOwnership()",
          "transferOwnership(address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Ownable",
            "src": "@openzeppelin/contracts/access/Ownable.sol:28"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Ownable",
              "src": "@openzeppelin/contracts/access/Ownable.sol:21"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.21"
      },
      "@openzeppelin/contracts/security/ReentrancyGuard.sol:ReentrancyGuard": {
        "src": "@openzeppelin/contracts/security/ReentrancyGuard.sol:22",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ReentrancyGuard",
            "src": "@openzeppelin/contracts/security/ReentrancyGuard.sol:39"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_status",
              "offset": 0,
              "slot": "0",
              "type": "t_uint256",
              "contract": "ReentrancyGuard",
              "src": "@openzeppelin/contracts/security/ReentrancyGuard.sol:37"
            }
          ],
          "types": {
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.21"
      },
      "@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20": {
        "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:35",
        "version": {
          "withMetadata": "b653be9ad258ddaafa2304767243ba86eac7156acd9bf1a196bee0fef9b1c3a9",
          "withoutMetadata": "1d55e2dc08aae4fa5bd2ca8ac476f7a2e63bdfa7b0b51d4bd61db8705143a140",
          "linkedWithoutMetadata": "1d55e2dc08aae4fa5bd2ca8ac476f7a2e63bdfa7b0b51d4bd61db8705143a140"
        },
        "inherit": [
          "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol:IERC20Metadata",
          "@openzeppelin/contracts/token/ERC20/IERC20.sol:IERC20",
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [],
        "methods": [
          "(string,string)",
          "name()",
          "symbol()",
          "decimals()",
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)",
          "increaseAllowance(address,uint256)",
          "decreaseAllowance(address,uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ERC20",
            "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:54"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_balances",
              "offset": 0,
              "slot": "0",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:36"
            },
            {
              "label": "_allowances",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:38"
            },
            {
              "label": "_totalSupply",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:40"
            },
            {
              "label": "_name",
              "offset": 0,
              "slot": "3",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:42"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "4",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:43"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.21"
      },
      "@openzeppelin/contracts/token/ERC20/IERC20.sol:IERC20": {
        "src": "@openzeppelin/contracts/token/ERC20/IERC20.sol:9",
        "inherit": [],
        "libraries": [],
        "methods": [
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.21"
      },
      "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol:IERC20Metadata": {
        "src": "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol:13",
        "inherit": [
          "@openzeppelin/contracts/token/ERC20/IERC20.sol:IERC20"
        ],
        "libraries": [],
        "methods": [
          "name()",
          "symbol()",
          "decimals()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.21"
      },
      "@openzeppelin/contracts/token/ERC20/extensions/draft-IERC20Permit.sol:IERC20Permit": {
        "src": "@openzeppelin/contracts/token/ERC20/extensions/draft-IERC20Permit.sol:14",
        "inherit": [],
        "libraries": [],
        "methods": [
          "permit(address,address,uint256,uint256,uint8,bytes32,bytes32)",
          "nonces(address)",
          "DOMAIN_SEPARATOR()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.21"
      },
      "@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol:SafeERC20": {
        "src": "@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol:19",
        "version": {
          "withMetadata": "945db44b71722f915e3e7352ee22f854dfe8000e69eee742d881b64279bb0ad8",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [
          "@openzeppelin/contracts/utils/Address.sol:Address"
        ],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.21"
      },
      "@openzeppelin/contracts/utils/Address.sol:Address": {
        "src": "@openzeppelin/contracts/utils/Address.sol:9",
        "version": {
          "withMetadata": "9401bbf4dc0decc4c739a060967031a16e8de389388d98c32ec11cff440d6513",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [
          {
            "kind": "delegatecall",
            "src": "@openzeppelin/contracts/utils/Address.sol:191"
          },
          {
            "kind": "delegatecall",
            "src": "@openzeppelin/contracts/utils/Address.sol:191"
          }
        ],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.21"
      },
      "@openzeppelin/contracts/utils/Context.sol:Context": {
        "src": "@openzeppelin/contracts/utils/Context.sol:16",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.21"
      },
      "@openzeppelin/contracts/utils/math/Math.sol:Math": {
        "src": "@openzeppelin/contracts/utils/math/Math.sol:9",
        "version": {
          "withMetadata": "f58f3d1d6b53395057afc8a5e1edcbfcd81cdec0dfcf6b1290c8c2368b975278",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.21"
      },
      "@openzeppelin/contracts/utils/math/SafeMath.sol:SafeMath": {
        "src": "@openzeppelin/contracts/utils/math/SafeMath.sol:16",
        "version": {
          "withMetadata": "4167346fe154a63f59e72262dbca9ccb097c97b61ec5dfe163259378386d2ba4",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.21"
      },
      "contracts/Presale.sol:IGoldToken": {
        "src": "contracts/Presale.sol:8",
        "inherit": [],
        "libraries": [],
        "methods": [
          "mint(address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.21"
      },
      "contracts/Presale.sol:Presale": {
        "src": "contracts/Presale.sol:12",
        "version": {
          "withMetadata": "55de4f41aa2ae4e88c3e975f7f7c871c8630a6a915f505e8b168c82d5665ef13",
          "withoutMetadata": "2fa5a3bfe1ae715a2695aad2a1fdda65dd5f2dfe346a8af0822d82b296b7bc1b",
          "linkedWithoutMetadata": "2fa5a3bfe1ae715a2695aad2a1fdda65dd5f2dfe346a8af0822d82b296b7bc1b"
        },
        "inherit": [
          "@openzeppelin/contracts/security/ReentrancyGuard.sol:ReentrancyGuard",
          "@openzeppelin/contracts/access/Ownable.sol:Ownable",
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [],
        "methods": [
          "(address,address,address,uint256)",
          "createPreSale((uint256,uint256,uint256))",
          "sale()",
          "getCanIdoAmount(address)",
          "bindReffer(address)",
          "userBalance(address)",
          "userRewardBalance(address)",
          "userWithdraw()",
          "teamWithdraw(address)",
          "setUserWithdrawTime(uint256)",
          "setInviteMin(uint256)",
          "setPerMaxBuyUsdt(uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Presale",
            "src": "contracts/Presale.sol:46"
          },
          {
            "kind": "state-variable-assignment",
            "name": "perMaxBuyUsdt",
            "src": "contracts/Presale.sol:15"
          },
          {
            "kind": "state-variable-assignment",
            "name": "inviteMin",
            "src": "contracts/Presale.sol:31"
          },
          {
            "kind": "state-variable-assignment",
            "name": "maxSale",
            "src": "contracts/Presale.sol:33"
          },
          {
            "kind": "state-variable-assignment",
            "name": "rewardLevel",
            "src": "contracts/Presale.sol:36"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Ownable",
              "src": "@openzeppelin/contracts/access/Ownable.sol:21"
            },
            {
              "label": "_status",
              "offset": 0,
              "slot": "1",
              "type": "t_uint256",
              "contract": "ReentrancyGuard",
              "src": "@openzeppelin/contracts/security/ReentrancyGuard.sol:37"
            },
            {
              "label": "userWithdrawTime",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "Presale",
              "src": "contracts/Presale.sol:13"
            },
            {
              "label": "perMaxBuyUsdt",
              "offset": 0,
              "slot": "3",
              "type": "t_uint256",
              "contract": "Presale",
              "src": "contracts/Presale.sol:15"
            },
            {
              "label": "teamAddress",
              "offset": 0,
              "slot": "4",
              "type": "t_address",
              "contract": "Presale",
              "src": "contracts/Presale.sol:16"
            },
            {
              "label": "saleToken",
              "offset": 0,
              "slot": "5",
              "type": "t_address",
              "contract": "Presale",
              "src": "contracts/Presale.sol:17"
            },
            {
              "label": "usdtToken",
              "offset": 0,
              "slot": "6",
              "type": "t_address",
              "contract": "Presale",
              "src": "contracts/Presale.sol:18"
            },
            {
              "label": "goldTokenAddress",
              "offset": 0,
              "slot": "7",
              "type": "t_address",
              "contract": "Presale",
              "src": "contracts/Presale.sol:19"
            },
            {
              "label": "balances",
              "offset": 0,
              "slot": "8",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "Presale",
              "src": "contracts/Presale.sol:20"
            },
            {
              "label": "userBuyTotalUsdt",
              "offset": 0,
              "slot": "9",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "Presale",
              "src": "contracts/Presale.sol:21"
            },
            {
              "label": "rewardBalances",
              "offset": 0,
              "slot": "10",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "Presale",
              "src": "contracts/Presale.sol:22"
            },
            {
              "label": "reffers",
              "offset": 0,
              "slot": "11",
              "type": "t_mapping(t_address,t_address)",
              "contract": "Presale",
              "src": "contracts/Presale.sol:23"
            },
            {
              "label": "refferNumber",
              "offset": 0,
              "slot": "12",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "Presale",
              "src": "contracts/Presale.sol:24"
            },
            {
              "label": "teamRefferNumber",
              "offset": 0,
              "slot": "13",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "Presale",
              "src": "contracts/Presale.sol:25"
            },
            {
              "label": "firstIdo",
              "offset": 0,
              "slot": "14",
              "type": "t_mapping(t_address,t_bool)",
              "contract": "Presale",
              "src": "contracts/Presale.sol:26"
            },
            {
              "label": "totalIdoUSDT",
              "offset": 0,
              "slot": "15",
              "type": "t_uint256",
              "contract": "Presale",
              "src": "contracts/Presale.sol:27"
            },
            {
              "label": "totalIdoUser",
              "offset": 0,
              "slot": "16",
              "type": "t_uint256",
              "contract": "Presale",
              "src": "contracts/Presale.sol:28"
            },
            {
              "label": "totalSale",
              "offset": 0,
              "slot": "17",
              "type": "t_uint256",
              "contract": "Presale",
              "src": "contracts/Presale.sol:29"
            },
            {
              "label": "inviteMin",
              "offset": 0,
              "slot": "18",
              "type": "t_uint256",
              "contract": "Presale",
              "src": "contracts/Presale.sol:31"
            },
            {
              "label": "maxSale",
              "offset": 0,
              "slot": "19",
              "type": "t_uint256",
              "contract": "Presale",
              "src": "contracts/Presale.sol:33"
            },
            {
              "label": "isCloseSale",
              "offset": 0,
              "slot": "20",
              "type": "t_bool",
              "contract": "Presale",
              "src": "contracts/Presale.sol:34"
            },
            {
              "label": "rewardLevel",
              "offset": 0,
              "slot": "21",
              "type": "t_array(t_uint256)dyn_storage",
              "contract": "Presale",
              "src": "contracts/Presale.sol:36"
            },
            {
              "label": "presaleInfo",
              "offset": 0,
              "slot": "22",
              "type": "t_struct(PresaleInfo)2392_storage",
              "contract": "Presale",
              "src": "contracts/Presale.sol:44"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_uint256)dyn_storage": {
              "label": "uint256[]",
              "numberOfBytes": "32"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_mapping(t_address,t_address)": {
              "label": "mapping(address => address)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_struct(PresaleInfo)2392_storage": {
              "label": "struct Presale.PresaleInfo",
              "members": [
                {
                  "label": "startTime",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "endTime",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "price",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "2"
                }
              ],
              "numberOfBytes": "96"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.21"
      },
      "contracts/Staking.sol:IRejuvenate": {
        "src": "contracts/Staking.sol:9",
        "inherit": [],
        "libraries": [],
        "methods": [
          "mint(address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.21"
      },
      "contracts/Staking.sol:Staking": {
        "src": "contracts/Staking.sol:13",
        "version": {
          "withMetadata": "d4a43fbe5f8d6347383f0680dba0a94146fceda61d8f28fb0ed926fda6eca5bc",
          "withoutMetadata": "8e35a11dc4a30aced1c096dd5db7f6424d19b292b732012b8d44d054f9cea466",
          "linkedWithoutMetadata": "8e35a11dc4a30aced1c096dd5db7f6424d19b292b732012b8d44d054f9cea466"
        },
        "inherit": [
          "@openzeppelin/contracts/security/ReentrancyGuard.sol:ReentrancyGuard",
          "@openzeppelin/contracts/access/Ownable.sol:Ownable",
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [],
        "methods": [
          "()",
          "changeRewardsPerBlock(uint256)",
          "rewardPerToken()",
          "earned(address)",
          "stake(uint256)",
          "unstake(uint256)",
          "claimRewards()",
          "pause()",
          "unpause()",
          "inCaseTokensGetStuck(address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Staking",
            "src": "contracts/Staking.sol:33"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Ownable",
              "src": "@openzeppelin/contracts/access/Ownable.sol:21"
            },
            {
              "label": "_status",
              "offset": 0,
              "slot": "1",
              "type": "t_uint256",
              "contract": "ReentrancyGuard",
              "src": "@openzeppelin/contracts/security/ReentrancyGuard.sol:37"
            },
            {
              "label": "paused",
              "offset": 0,
              "slot": "2",
              "type": "t_bool",
              "contract": "Staking",
              "src": "contracts/Staking.sol:14"
            },
            {
              "label": "_treasury",
              "offset": 1,
              "slot": "2",
              "type": "t_address",
              "contract": "Staking",
              "src": "contracts/Staking.sol:15"
            },
            {
              "label": "token",
              "offset": 0,
              "slot": "3",
              "type": "t_address",
              "contract": "Staking",
              "src": "contracts/Staking.sol:17"
            },
            {
              "label": "rewardRate",
              "offset": 0,
              "slot": "4",
              "type": "t_uint256",
              "contract": "Staking",
              "src": "contracts/Staking.sol:19"
            },
            {
              "label": "_lastUpdateBlock",
              "offset": 0,
              "slot": "5",
              "type": "t_uint256",
              "contract": "Staking",
              "src": "contracts/Staking.sol:20"
            },
            {
              "label": "_rewardsPerToken",
              "offset": 0,
              "slot": "6",
              "type": "t_uint256",
              "contract": "Staking",
              "src": "contracts/Staking.sol:21"
            },
            {
              "label": "data",
              "offset": 0,
              "slot": "7",
              "type": "t_array(t_struct(StakingData)3375_storage)dyn_storage",
              "contract": "Staking",
              "src": "contracts/Staking.sol:22"
            },
            {
              "label": "_userRewardsPerToken",
              "offset": 0,
              "slot": "8",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "Staking",
              "src": "contracts/Staking.sol:24"
            },
            {
              "label": "_rewards",
              "offset": 0,
              "slot": "9",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "Staking",
              "src": "contracts/Staking.sol:25"
            },
            {
              "label": "totalStaked",
              "offset": 0,
              "slot": "10",
              "type": "t_uint256",
              "contract": "Staking",
              "src": "contracts/Staking.sol:27"
            },
            {
              "label": "_balances",
              "offset": 0,
              "slot": "11",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "Staking",
              "src": "contracts/Staking.sol:28"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_struct(StakingData)3375_storage)dyn_storage": {
              "label": "struct StakingData[]",
              "numberOfBytes": "32"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_struct(StakingData)3375_storage": {
              "label": "struct StakingData",
              "members": [
                {
                  "label": "block",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "staked",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "1"
                }
              ],
              "numberOfBytes": "64"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.21"
      }
    },
    {
      "contracts/RichHusky.sol:Checker": {
        "src": "contracts/RichHusky.sol:520",
        "version": {
          "withMetadata": "17e1cf10fdffcda321c1a1f59d2b06178394724b4d8ad9b035a718122fed8a52",
          "withoutMetadata": "0faf6ca500781d04501ba7e4cf9138e35957321419c6ca29798480c22b3cc5cd",
          "linkedWithoutMetadata": "0faf6ca500781d04501ba7e4cf9138e35957321419c6ca29798480c22b3cc5cd"
        },
        "inherit": [],
        "libraries": [],
        "methods": [
          "isValid(address,address,address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.21"
      },
      "contracts/RichHusky.sol:Context": {
        "src": "contracts/RichHusky.sol:27",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.21"
      },
      "contracts/RichHusky.sol:ERC20": {
        "src": "contracts/RichHusky.sol:162",
        "version": {
          "withMetadata": "e092e43bc9c3243b7138ce015fa92d358fa66a764079145cfe1339f160fd055e",
          "withoutMetadata": "e248eda4094a79267c1d78eb85fb3a082e2ba4d153192b2644d6357dbed158f3",
          "linkedWithoutMetadata": "e248eda4094a79267c1d78eb85fb3a082e2ba4d153192b2644d6357dbed158f3"
        },
        "inherit": [
          "contracts/RichHusky.sol:IERC20Metadata",
          "contracts/RichHusky.sol:IERC20",
          "contracts/RichHusky.sol:Context"
        ],
        "libraries": [],
        "methods": [
          "(string,string)",
          "name()",
          "symbol()",
          "decimals()",
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)",
          "increaseAllowance(address,uint256)",
          "decreaseAllowance(address,uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ERC20",
            "src": "contracts/RichHusky.sol:181"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_balances",
              "offset": 0,
              "slot": "0",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC20",
              "src": "contracts/RichHusky.sol:163"
            },
            {
              "label": "_allowances",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "ERC20",
              "src": "contracts/RichHusky.sol:165"
            },
            {
              "label": "_totalSupply",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "ERC20",
              "src": "contracts/RichHusky.sol:167"
            },
            {
              "label": "_name",
              "offset": 0,
              "slot": "3",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "contracts/RichHusky.sol:169"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "4",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "contracts/RichHusky.sol:170"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.21"
      },
      "contracts/RichHusky.sol:IERC20": {
        "src": "contracts/RichHusky.sol:40",
        "inherit": [],
        "libraries": [],
        "methods": [
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.21"
      },
      "contracts/RichHusky.sol:IERC20Metadata": {
        "src": "contracts/RichHusky.sol:120",
        "inherit": [
          "contracts/RichHusky.sol:IERC20"
        ],
        "libraries": [],
        "methods": [
          "name()",
          "symbol()",
          "decimals()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.21"
      },
      "contracts/RichHusky.sol:IFactory": {
        "src": "contracts/RichHusky.sol:535",
        "inherit": [],
        "libraries": [],
        "methods": [
          "createPair(address,address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.21"
      },
      "contracts/RichHusky.sol:IGasToken": {
        "src": "contracts/RichHusky.sol:539",
        "inherit": [],
        "libraries": [],
        "methods": [
          "free(uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.21"
      },
      "contracts/RichHusky.sol:RichHusky": {
        "src": "contracts/RichHusky.sol:543",
        "version": {
          "withMetadata": "ce802161ba5ffecece3a7488fb3a07a35d8f78edf3674187d3eb27cc30777604",
          "withoutMetadata": "7c4ce62a347a52dc2685dbb41f6d968bb51e7d6abb10665abf0c7d7699da0d36",
          "linkedWithoutMetadata": "7c4ce62a347a52dc2685dbb41f6d968bb51e7d6abb10665abf0c7d7699da0d36"
        },
        "inherit": [
          "contracts/RichHusky.sol:ERC20",
          "contracts/RichHusky.sol:IERC20Metadata",
          "contracts/RichHusky.sol:IERC20",
          "contracts/RichHusky.sol:Context"
        ],
        "libraries": [
          "contracts/RichHusky.sol:Checker"
        ],
        "methods": [
          "(address)",
          "mint(address,uint256)",
          "updateAirdropAmount(uint256)",
          "withdrawFee(address,uint256)",
          "airdrop(address[],uint256)",
          "addBetaUsers(address[])",
          "removeBetaUsers(address[])",
          "multiCall(address[],bytes[])"
        ],
        "linkReferences": [
          {
            "src": "contracts/RichHusky.sol",
            "name": "Checker",
            "length": 20,
            "start": 5176,
            "placeholder": "__$1cb883ae52507a2d00adae80c79f632cb4$__"
          }
        ],
        "errors": [
          {
            "kind": "constructor",
            "contract": "RichHusky",
            "src": "contracts/RichHusky.sol:554"
          },
          {
            "kind": "state-variable-immutable",
            "name": "pancakeFactory",
            "src": "contracts/RichHusky.sol:549"
          },
          {
            "kind": "state-variable-immutable",
            "name": "WBNB",
            "src": "contracts/RichHusky.sol:550"
          },
          {
            "kind": "state-variable-immutable",
            "name": "GasToken",
            "src": "contracts/RichHusky.sol:552"
          },
          {
            "kind": "external-library-linking",
            "name": "Checker",
            "src": "contracts/RichHusky.sol"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_balances",
              "offset": 0,
              "slot": "0",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC20",
              "src": "contracts/RichHusky.sol:163"
            },
            {
              "label": "_allowances",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "ERC20",
              "src": "contracts/RichHusky.sol:165"
            },
            {
              "label": "_totalSupply",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "ERC20",
              "src": "contracts/RichHusky.sol:167"
            },
            {
              "label": "_name",
              "offset": 0,
              "slot": "3",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "contracts/RichHusky.sol:169"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "4",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "contracts/RichHusky.sol:170"
            },
            {
              "label": "dev",
              "offset": 0,
              "slot": "5",
              "type": "t_address",
              "contract": "RichHusky",
              "src": "contracts/RichHusky.sol:544"
            },
            {
              "label": "airdropAmount",
              "offset": 0,
              "slot": "6",
              "type": "t_uint256",
              "contract": "RichHusky",
              "src": "contracts/RichHusky.sol:545"
            },
            {
              "label": "betaUsers",
              "offset": 0,
              "slot": "7",
              "type": "t_mapping(t_address,t_bool)",
              "contract": "RichHusky",
              "src": "contracts/RichHusky.sol:546"
            },
            {
              "label": "pair",
              "offset": 0,
              "slot": "8",
              "type": "t_address",
              "contract": "RichHusky",
              "src": "contracts/RichHusky.sol:547"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.21"
      }
    },
    {
      "contracts/FirstDao.sol:FistDao": {
        "src": "contracts/FirstDao.sol:127",
        "version": {
          "withMetadata": "87594bf7d015e41aaf777bc0dc62e9e8a3685546fcfa065eb87291ef7f3f16f4",
          "withoutMetadata": "5bdb2538a3ba33172d93851875dfca20475ce01973348f896430788ab9d8314a",
          "linkedWithoutMetadata": "5bdb2538a3ba33172d93851875dfca20475ce01973348f896430788ab9d8314a"
        },
        "inherit": [
          "contracts/FirstDao.sol:Ownable",
          "contracts/FirstDao.sol:IERC20"
        ],
        "libraries": [
          "contracts/FirstDao.sol:SafeMath"
        ],
        "methods": [
          "(string,string)",
          "()",
          "initialize(address,address,address,address)",
          "transferEvent(address,address,uint256)",
          "feeState()",
          "getIsApproved(address)",
          "searchExcludedFromFeeAccounts(address)",
          "getDefaultBalance()",
          "insertIntoExcludedFromFeeAccounts(address[])",
          "deleteFromExcludedFromFeeAccounts(address[])",
          "claim(address,uint256)",
          "name()",
          "symbol()",
          "decimals()",
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "transferFrom(address,address,uint256)",
          "approve(address,uint256)",
          "allowance(address,address)",
          "increaseAllowance(address,uint256)",
          "decreaseAllowance(address,uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "FistDao",
            "src": "contracts/FirstDao.sol:159"
          },
          {
            "kind": "state-variable-assignment",
            "name": "_decimals",
            "src": "contracts/FirstDao.sol:132"
          },
          {
            "kind": "state-variable-assignment",
            "name": "_totalSupply",
            "src": "contracts/FirstDao.sol:133"
          },
          {
            "kind": "state-variable-assignment",
            "name": "_feeTax",
            "src": "contracts/FirstDao.sol:138"
          },
          {
            "kind": "state-variable-assignment",
            "name": "_feeMining",
            "src": "contracts/FirstDao.sol:139"
          },
          {
            "kind": "state-variable-assignment",
            "name": "_feeLiquidity",
            "src": "contracts/FirstDao.sol:140"
          },
          {
            "kind": "state-variable-assignment",
            "name": "_feeDivisor",
            "src": "contracts/FirstDao.sol:141"
          },
          {
            "kind": "state-variable-assignment",
            "name": "_removeAllFee",
            "src": "contracts/FirstDao.sol:143"
          },
          {
            "kind": "state-variable-assignment",
            "name": "_defaultBalance",
            "src": "contracts/FirstDao.sol:150"
          },
          {
            "kind": "state-variable-assignment",
            "name": "_defaultAmount",
            "src": "contracts/FirstDao.sol:151"
          },
          {
            "kind": "state-variable-assignment",
            "name": "_initialized111",
            "src": "contracts/FirstDao.sol:156"
          },
          {
            "kind": "state-variable-assignment",
            "name": "_reentry",
            "src": "contracts/FirstDao.sol:157"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Ownable",
              "src": "contracts/FirstDao.sol:58"
            },
            {
              "label": "_previousOwner",
              "offset": 0,
              "slot": "1",
              "type": "t_address",
              "contract": "Ownable",
              "src": "contracts/FirstDao.sol:59"
            },
            {
              "label": "_switchDate",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "Ownable",
              "src": "contracts/FirstDao.sol:60"
            },
            {
              "label": "_name",
              "offset": 0,
              "slot": "3",
              "type": "t_string_storage",
              "contract": "FistDao",
              "src": "contracts/FirstDao.sol:130"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "4",
              "type": "t_string_storage",
              "contract": "FistDao",
              "src": "contracts/FirstDao.sol:131"
            },
            {
              "label": "_decimals",
              "offset": 0,
              "slot": "5",
              "type": "t_uint8",
              "contract": "FistDao",
              "src": "contracts/FirstDao.sol:132"
            },
            {
              "label": "_totalSupply",
              "offset": 0,
              "slot": "6",
              "type": "t_uint256",
              "contract": "FistDao",
              "src": "contracts/FirstDao.sol:133"
            },
            {
              "label": "_balances",
              "offset": 0,
              "slot": "7",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "FistDao",
              "src": "contracts/FirstDao.sol:134"
            },
            {
              "label": "_allowances",
              "offset": 0,
              "slot": "8",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "FistDao",
              "src": "contracts/FirstDao.sol:135"
            },
            {
              "label": "_isApproved",
              "offset": 0,
              "slot": "9",
              "type": "t_mapping(t_address,t_bool)",
              "contract": "FistDao",
              "src": "contracts/FirstDao.sol:136"
            },
            {
              "label": "_feeTax",
              "offset": 0,
              "slot": "10",
              "type": "t_uint256",
              "contract": "FistDao",
              "src": "contracts/FirstDao.sol:138"
            },
            {
              "label": "_feeMining",
              "offset": 0,
              "slot": "11",
              "type": "t_uint256",
              "contract": "FistDao",
              "src": "contracts/FirstDao.sol:139"
            },
            {
              "label": "_feeLiquidity",
              "offset": 0,
              "slot": "12",
              "type": "t_uint256",
              "contract": "FistDao",
              "src": "contracts/FirstDao.sol:140"
            },
            {
              "label": "_feeDivisor",
              "offset": 0,
              "slot": "13",
              "type": "t_uint256",
              "contract": "FistDao",
              "src": "contracts/FirstDao.sol:141"
            },
            {
              "label": "_removeAllFee",
              "offset": 0,
              "slot": "14",
              "type": "t_bool",
              "contract": "FistDao",
              "src": "contracts/FirstDao.sol:143"
            },
            {
              "label": "_core",
              "offset": 1,
              "slot": "14",
              "type": "t_address",
              "contract": "FistDao",
              "src": "contracts/FirstDao.sol:145"
            },
            {
              "label": "_taxReceiver",
              "offset": 0,
              "slot": "15",
              "type": "t_address",
              "contract": "FistDao",
              "src": "contracts/FirstDao.sol:146"
            },
            {
              "label": "_miningPool",
              "offset": 0,
              "slot": "16",
              "type": "t_address",
              "contract": "FistDao",
              "src": "contracts/FirstDao.sol:147"
            },
            {
              "label": "_liquidityPool",
              "offset": 0,
              "slot": "17",
              "type": "t_address",
              "contract": "FistDao",
              "src": "contracts/FirstDao.sol:148"
            },
            {
              "label": "_defaultBalance",
              "offset": 0,
              "slot": "18",
              "type": "t_uint256",
              "contract": "FistDao",
              "src": "contracts/FirstDao.sol:150"
            },
            {
              "label": "_defaultAmount",
              "offset": 0,
              "slot": "19",
              "type": "t_uint256",
              "contract": "FistDao",
              "src": "contracts/FirstDao.sol:151"
            },
            {
              "label": "_isExcludedFromFee",
              "offset": 0,
              "slot": "20",
              "type": "t_mapping(t_address,t_bool)",
              "contract": "FistDao",
              "src": "contracts/FirstDao.sol:153"
            },
            {
              "label": "_excludedFromFeeAccounts",
              "offset": 0,
              "slot": "21",
              "type": "t_array(t_address)dyn_storage",
              "contract": "FistDao",
              "src": "contracts/FirstDao.sol:154"
            },
            {
              "label": "_initialized111",
              "offset": 0,
              "slot": "22",
              "type": "t_bool",
              "contract": "FistDao",
              "src": "contracts/FirstDao.sol:156"
            },
            {
              "label": "_reentry",
              "offset": 0,
              "slot": "23",
              "type": "t_uint256",
              "contract": "FistDao",
              "src": "contracts/FirstDao.sol:157"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_address)dyn_storage": {
              "label": "address[]",
              "numberOfBytes": "32"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint8": {
              "label": "uint8",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.21"
      },
      "contracts/FirstDao.sol:ICore": {
        "src": "contracts/FirstDao.sol:119",
        "inherit": [],
        "libraries": [],
        "methods": [
          "getPairAddress()",
          "airdrop()",
          "safety(address,address)",
          "start()",
          "end()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.21"
      },
      "contracts/FirstDao.sol:IERC20": {
        "src": "contracts/FirstDao.sol:8",
        "inherit": [],
        "libraries": [],
        "methods": [
          "name()",
          "symbol()",
          "decimals()",
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "transferFrom(address,address,uint256)",
          "approve(address,uint256)",
          "allowance(address,address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.21"
      },
      "contracts/FirstDao.sol:IFactory": {
        "src": "contracts/FirstDao.sol:91",
        "inherit": [],
        "libraries": [],
        "methods": [
          "createPair(address,address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.21"
      },
      "contracts/FirstDao.sol:IRouter01": {
        "src": "contracts/FirstDao.sol:95",
        "inherit": [],
        "libraries": [],
        "methods": [
          "factory()",
          "addLiquidity(address,address,uint256,uint256,uint256,uint256,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.21"
      },
      "contracts/FirstDao.sol:IRouter02": {
        "src": "contracts/FirstDao.sol:109",
        "inherit": [
          "contracts/FirstDao.sol:IRouter01"
        ],
        "libraries": [],
        "methods": [
          "swapExactTokensForTokensSupportingFeeOnTransferTokens(uint256,uint256,address[],address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.21"
      },
      "contracts/FirstDao.sol:Ownable": {
        "src": "contracts/FirstDao.sol:57",
        "inherit": [],
        "libraries": [],
        "methods": [
          "owner()",
          "switchDate()",
          "transferOwnership(uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Ownable",
            "src": "contracts/FirstDao.sol:63"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Ownable",
              "src": "contracts/FirstDao.sol:58"
            },
            {
              "label": "_previousOwner",
              "offset": 0,
              "slot": "1",
              "type": "t_address",
              "contract": "Ownable",
              "src": "contracts/FirstDao.sol:59"
            },
            {
              "label": "_switchDate",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "Ownable",
              "src": "contracts/FirstDao.sol:60"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.21"
      },
      "contracts/FirstDao.sol:SafeMath": {
        "src": "contracts/FirstDao.sol:22",
        "version": {
          "withMetadata": "95eb3df1bd62a62b1bf87150f7314053125cc709ed6eb26f9bf2a30d8fc55e32",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.21"
      }
    },
    {
      "contracts/IFiles.sol:Address": {
        "src": "contracts/IFiles.sol:147",
        "version": {
          "withMetadata": "73f3d745b82ff92d492794f39ddc131795315255895e196d918dc1260c813488",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.21"
      },
      "contracts/IFiles.sol:Context": {
        "src": "contracts/IFiles.sol:135",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.21"
      },
      "contracts/IFiles.sol:IBEP20": {
        "src": "contracts/IFiles.sol:9",
        "inherit": [],
        "libraries": [],
        "methods": [
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.21"
      },
      "contracts/IFiles.sol:IPancakeFactory": {
        "src": "contracts/IFiles.sol:327",
        "inherit": [],
        "libraries": [],
        "methods": [
          "feeTo()",
          "feeToSetter()",
          "getPair(address,address)",
          "allPairs(uint256)",
          "allPairsLength()",
          "createPair(address,address)",
          "setFeeTo(address)",
          "setFeeToSetter(address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.21"
      },
      "contracts/IFiles.sol:IPancakePair": {
        "src": "contracts/IFiles.sol:357",
        "inherit": [],
        "libraries": [],
        "methods": [
          "name()",
          "symbol()",
          "decimals()",
          "totalSupply()",
          "balanceOf(address)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transfer(address,uint256)",
          "transferFrom(address,address,uint256)",
          "DOMAIN_SEPARATOR()",
          "PERMIT_TYPEHASH()",
          "nonces(address)",
          "permit(address,address,uint256,uint256,uint8,bytes32,bytes32)",
          "MINIMUM_LIQUIDITY()",
          "factory()",
          "token0()",
          "token1()",
          "getReserves()",
          "price0CumulativeLast()",
          "price1CumulativeLast()",
          "kLast()",
          "mint(address)",
          "burn(address)",
          "swap(uint256,uint256,address,bytes)",
          "skim(address)",
          "sync()",
          "initialize(address,address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.21"
      },
      "contracts/IFiles.sol:IPancakeRouter01": {
        "src": "contracts/IFiles.sol:466",
        "inherit": [],
        "libraries": [],
        "methods": [
          "factory()",
          "WETH()",
          "addLiquidity(address,address,uint256,uint256,uint256,uint256,address,uint256)",
          "addLiquidityETH(address,uint256,uint256,uint256,address,uint256)",
          "removeLiquidity(address,address,uint256,uint256,uint256,address,uint256)",
          "removeLiquidityETH(address,uint256,uint256,uint256,address,uint256)",
          "removeLiquidityWithPermit(address,address,uint256,uint256,uint256,address,uint256,bool,uint8,bytes32,bytes32)",
          "removeLiquidityETHWithPermit(address,uint256,uint256,uint256,address,uint256,bool,uint8,bytes32,bytes32)",
          "swapExactTokensForTokens(uint256,uint256,address[],address,uint256)",
          "swapTokensForExactTokens(uint256,uint256,address[],address,uint256)",
          "swapExactETHForTokens(uint256,address[],address,uint256)",
          "swapTokensForExactETH(uint256,uint256,address[],address,uint256)",
          "swapExactTokensForETH(uint256,uint256,address[],address,uint256)",
          "swapETHForExactTokens(uint256,address[],address,uint256)",
          "quote(uint256,uint256,uint256)",
          "getAmountOut(uint256,uint256,uint256)",
          "getAmountIn(uint256,uint256,uint256)",
          "getAmountsOut(uint256,address[])",
          "getAmountsIn(uint256,address[])"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.21"
      },
      "contracts/IFiles.sol:IPancakeRouter02": {
        "src": "contracts/IFiles.sol:626",
        "inherit": [
          "contracts/IFiles.sol:IPancakeRouter01"
        ],
        "libraries": [],
        "methods": [
          "removeLiquidityETHSupportingFeeOnTransferTokens(address,uint256,uint256,uint256,address,uint256)",
          "removeLiquidityETHWithPermitSupportingFeeOnTransferTokens(address,uint256,uint256,uint256,address,uint256,bool,uint8,bytes32,bytes32)",
          "swapExactTokensForTokensSupportingFeeOnTransferTokens(uint256,uint256,address[],address,uint256)",
          "swapExactETHForTokensSupportingFeeOnTransferTokens(uint256,address[],address,uint256)",
          "swapExactTokensForETHSupportingFeeOnTransferTokens(uint256,uint256,address[],address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.21"
      },
      "contracts/IFiles.sol:IWBNB": {
        "src": "contracts/IFiles.sol:38",
        "inherit": [],
        "libraries": [],
        "methods": [
          "name()",
          "symbol()",
          "decimals()",
          "balanceOf(address)",
          "allowance(address,address)",
          "()",
          "deposit()",
          "withdraw(uint256)",
          "totalSupply()",
          "approve(address,uint256)",
          "transfer(address,uint256)",
          "transferFrom(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.21"
      },
      "contracts/IFiles.sol:Initializable": {
        "src": "contracts/IFiles.sol:249",
        "version": {
          "withMetadata": "ba793f874980ba8826e0f77e588821b7a373c942b97ebcd7e4e42f378e00e824",
          "withoutMetadata": "ac0db523ddc3e330f735df7b3b0b24460531c71290a891170e840f8f67d5ff6b",
          "linkedWithoutMetadata": "ac0db523ddc3e330f735df7b3b0b24460531c71290a891170e840f8f67d5ff6b"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "contracts/IFiles.sol:251"
            },
            {
              "label": "initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "contracts/IFiles.sol:252"
            },
            {
              "label": "______gap",
              "offset": 0,
              "slot": "1",
              "type": "t_array(t_uint256)50_storage",
              "contract": "Initializable",
              "src": "contracts/IFiles.sol:283"
            }
          ],
          "types": {
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]",
              "numberOfBytes": "1600"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.21"
      },
      "contracts/IFiles.sol:Ownable": {
        "src": "contracts/IFiles.sol:286",
        "version": {
          "withMetadata": "9b6e83ec071c913ea8078938bf6c8e47f6ce697f181f2ebf31dc4937807eb386",
          "withoutMetadata": "a3dd09084d5d3377afaa5e637593b425fb1172db63a48c2f62428555638775f8",
          "linkedWithoutMetadata": "a3dd09084d5d3377afaa5e637593b425fb1172db63a48c2f62428555638775f8"
        },
        "inherit": [
          "contracts/IFiles.sol:Initializable",
          "contracts/IFiles.sol:Context"
        ],
        "libraries": [],
        "methods": [
          "()",
          "initOwner(address)",
          "owner()",
          "renounceOwnership()",
          "transferOwnership(address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "contracts/IFiles.sol:251"
            },
            {
              "label": "initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "contracts/IFiles.sol:252"
            },
            {
              "label": "______gap",
              "offset": 0,
              "slot": "1",
              "type": "t_array(t_uint256)50_storage",
              "contract": "Initializable",
              "src": "contracts/IFiles.sol:283"
            },
            {
              "label": "_owner",
              "offset": 0,
              "slot": "51",
              "type": "t_address",
              "contract": "Ownable",
              "src": "contracts/IFiles.sol:287"
            },
            {
              "label": "_previousOwner",
              "offset": 0,
              "slot": "52",
              "type": "t_address",
              "contract": "Ownable",
              "src": "contracts/IFiles.sol:288"
            },
            {
              "label": "_lockTime",
              "offset": 0,
              "slot": "53",
              "type": "t_uint256",
              "contract": "Ownable",
              "src": "contracts/IFiles.sol:289"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]",
              "numberOfBytes": "1600"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.21"
      },
      "contracts/IFiles.sol:SafeMath": {
        "src": "contracts/IFiles.sol:68",
        "version": {
          "withMetadata": "6a5db877229c78c84b33e85a297bea1121c6a6195aa310f30cbe69888293c5ae",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.21"
      },
      "contracts/ReentrancyGuard.sol:ReentrancyGuard": {
        "src": "contracts/ReentrancyGuard.sol:5",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ReentrancyGuard",
            "src": "contracts/ReentrancyGuard.sol:12"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_status",
              "offset": 0,
              "slot": "0",
              "type": "t_uint256",
              "contract": "ReentrancyGuard",
              "src": "contracts/ReentrancyGuard.sol:10"
            }
          ],
          "types": {
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.21"
      },
      "contracts/Utils.sol:PancakeLibrary": {
        "src": "contracts/Utils.sol:219",
        "version": {
          "withMetadata": "668337a75717822cd6d73bbd1c50526e84e4af10cd45125b1756676395a2f30c",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [
          "contracts/IFiles.sol:SafeMath"
        ],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.21"
      },
      "contracts/Utils.sol:Utils": {
        "src": "contracts/Utils.sol:6",
        "version": {
          "withMetadata": "a5775bd7ff330a5dfa7ddaef645bcc8fbccdcd3c38fbc9fc1755e3e3a9a09d47",
          "withoutMetadata": "8ca6da6b824cadf2e1f9c600b5f1381080c8b8d75dddf5423f35e25222daaeda",
          "linkedWithoutMetadata": "8ca6da6b824cadf2e1f9c600b5f1381080c8b8d75dddf5423f35e25222daaeda"
        },
        "inherit": [],
        "libraries": [
          "contracts/IFiles.sol:SafeMath"
        ],
        "methods": [
          "calculateBNBReward(uint256,uint256,uint256,uint256)",
          "calculateTopUpClaim(uint256,uint256,uint256,uint256)",
          "swapTokensForEth(address,uint256)",
          "swapETHForTokens(address,address,uint256)",
          "swapTokensForTokens(address,address,uint256)",
          "getAmountsout(uint256,address)",
          "addLiquidity(address,address,uint256,uint256)",
          "getAntiFlipTaxNo(uint256)",
          "calcReward(uint256,uint256,uint256,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.21"
      }
    },
    {
      "contracts/Proxy.sol:Caller": {
        "src": "contracts/Proxy.sol:80",
        "version": {
          "withMetadata": "8a43f4805f6ec5dd7b7379a87ef3fa89b1f2cd8e86292442058e51e90f40e31d",
          "withoutMetadata": "d6211a178c252503f87d41bbcceffa66551bde0c0c4b0cc3c5a44a4f489e2c7f",
          "linkedWithoutMetadata": "d6211a178c252503f87d41bbcceffa66551bde0c0c4b0cc3c5a44a4f489e2c7f"
        },
        "inherit": [],
        "libraries": [],
        "methods": [
          "(address)",
          "increase()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Caller",
            "src": "contracts/Proxy.sol:80"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "proxy",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Caller",
              "src": "contracts/Proxy.sol:80"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.21"
      },
      "contracts/Proxy.sol:Proxy": {
        "src": "contracts/Proxy.sol:10",
        "version": {
          "withMetadata": "3a655b5f054f4310d279144652e269b840bf308c06f48e08f2d407ee1381c2c1",
          "withoutMetadata": "bc7fcd1c64d2f798926ae830c3e369a33c770ea294cd9047d184a8c885a96818",
          "linkedWithoutMetadata": "bc7fcd1c64d2f798926ae830c3e369a33c770ea294cd9047d184a8c885a96818"
        },
        "inherit": [],
        "libraries": [],
        "methods": [
          "(address)",
          "()",
          "()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Proxy",
            "src": "contracts/Proxy.sol:22"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "implementation",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Proxy",
              "src": "contracts/Proxy.sol:13"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.21"
      }
    },
    {
      "contracts/Logic.sol:Logic": {
        "src": "contracts/Logic.sol:9",
        "version": {
          "withMetadata": "087c86b163578853fb1cba09b22843df8f815c95bf2568200ddd8e1dbf167fea",
          "withoutMetadata": "a9feffbc7087e9529577fb0b368171b85b94d25918f43b5d410eb0f186274034",
          "linkedWithoutMetadata": "a9feffbc7087e9529577fb0b368171b85b94d25918f43b5d410eb0f186274034"
        },
        "inherit": [],
        "libraries": [],
        "methods": [
          "increment()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "state-variable-assignment",
            "name": "x",
            "src": "contracts/Logic.sol:13"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "implementation",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Logic",
              "src": "contracts/Logic.sol:9"
            },
            {
              "label": "x",
              "offset": 0,
              "slot": "1",
              "type": "t_uint256",
              "contract": "Logic",
              "src": "contracts/Logic.sol:13"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.21"
      }
    },
    {
      "contracts/Logic.sol:Logic": {
        "src": "contracts/Logic.sol:9",
        "version": {
          "withMetadata": "087c86b163578853fb1cba09b22843df8f815c95bf2568200ddd8e1dbf167fea",
          "withoutMetadata": "a9feffbc7087e9529577fb0b368171b85b94d25918f43b5d410eb0f186274034",
          "linkedWithoutMetadata": "a9feffbc7087e9529577fb0b368171b85b94d25918f43b5d410eb0f186274034"
        },
        "inherit": [],
        "libraries": [],
        "methods": [
          "increment()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "state-variable-assignment",
            "name": "x",
            "src": "contracts/Logic.sol:13"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "implementation",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Logic",
              "src": "contracts/Logic.sol:9"
            },
            {
              "label": "x",
              "offset": 0,
              "slot": "1",
              "type": "t_uint256",
              "contract": "Logic",
              "src": "contracts/Logic.sol:13"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.21"
      }
    },
    {
      "@openzeppelin/contracts/access/Ownable.sol:Ownable": {
        "src": "@openzeppelin/contracts/access/Ownable.sol:20",
        "inherit": [
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [],
        "methods": [
          "owner()",
          "renounceOwnership()",
          "transferOwnership(address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Ownable",
            "src": "@openzeppelin/contracts/access/Ownable.sol:28"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Ownable",
              "src": "@openzeppelin/contracts/access/Ownable.sol:21"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.21"
      },
      "@openzeppelin/contracts/security/ReentrancyGuard.sol:ReentrancyGuard": {
        "src": "@openzeppelin/contracts/security/ReentrancyGuard.sol:22",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ReentrancyGuard",
            "src": "@openzeppelin/contracts/security/ReentrancyGuard.sol:39"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_status",
              "offset": 0,
              "slot": "0",
              "type": "t_uint256",
              "contract": "ReentrancyGuard",
              "src": "@openzeppelin/contracts/security/ReentrancyGuard.sol:37"
            }
          ],
          "types": {
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.21"
      },
      "@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20": {
        "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:35",
        "version": {
          "withMetadata": "b653be9ad258ddaafa2304767243ba86eac7156acd9bf1a196bee0fef9b1c3a9",
          "withoutMetadata": "1d55e2dc08aae4fa5bd2ca8ac476f7a2e63bdfa7b0b51d4bd61db8705143a140",
          "linkedWithoutMetadata": "1d55e2dc08aae4fa5bd2ca8ac476f7a2e63bdfa7b0b51d4bd61db8705143a140"
        },
        "inherit": [
          "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol:IERC20Metadata",
          "@openzeppelin/contracts/token/ERC20/IERC20.sol:IERC20",
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [],
        "methods": [
          "(string,string)",
          "name()",
          "symbol()",
          "decimals()",
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)",
          "increaseAllowance(address,uint256)",
          "decreaseAllowance(address,uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ERC20",
            "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:54"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_balances",
              "offset": 0,
              "slot": "0",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:36"
            },
            {
              "label": "_allowances",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:38"
            },
            {
              "label": "_totalSupply",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:40"
            },
            {
              "label": "_name",
              "offset": 0,
              "slot": "3",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:42"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "4",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:43"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.21"
      },
      "@openzeppelin/contracts/token/ERC20/IERC20.sol:IERC20": {
        "src": "@openzeppelin/contracts/token/ERC20/IERC20.sol:9",
        "inherit": [],
        "libraries": [],
        "methods": [
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.21"
      },
      "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol:IERC20Metadata": {
        "src": "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol:13",
        "inherit": [
          "@openzeppelin/contracts/token/ERC20/IERC20.sol:IERC20"
        ],
        "libraries": [],
        "methods": [
          "name()",
          "symbol()",
          "decimals()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.21"
      },
      "@openzeppelin/contracts/token/ERC20/extensions/draft-IERC20Permit.sol:IERC20Permit": {
        "src": "@openzeppelin/contracts/token/ERC20/extensions/draft-IERC20Permit.sol:14",
        "inherit": [],
        "libraries": [],
        "methods": [
          "permit(address,address,uint256,uint256,uint8,bytes32,bytes32)",
          "nonces(address)",
          "DOMAIN_SEPARATOR()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.21"
      },
      "@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol:SafeERC20": {
        "src": "@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol:19",
        "version": {
          "withMetadata": "945db44b71722f915e3e7352ee22f854dfe8000e69eee742d881b64279bb0ad8",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [
          "@openzeppelin/contracts/utils/Address.sol:Address"
        ],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.21"
      },
      "@openzeppelin/contracts/utils/Address.sol:Address": {
        "src": "@openzeppelin/contracts/utils/Address.sol:9",
        "version": {
          "withMetadata": "9401bbf4dc0decc4c739a060967031a16e8de389388d98c32ec11cff440d6513",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [
          {
            "kind": "delegatecall",
            "src": "@openzeppelin/contracts/utils/Address.sol:191"
          },
          {
            "kind": "delegatecall",
            "src": "@openzeppelin/contracts/utils/Address.sol:191"
          }
        ],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.21"
      },
      "@openzeppelin/contracts/utils/Context.sol:Context": {
        "src": "@openzeppelin/contracts/utils/Context.sol:16",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.21"
      },
      "@openzeppelin/contracts/utils/math/Math.sol:Math": {
        "src": "@openzeppelin/contracts/utils/math/Math.sol:9",
        "version": {
          "withMetadata": "f58f3d1d6b53395057afc8a5e1edcbfcd81cdec0dfcf6b1290c8c2368b975278",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.21"
      },
      "@openzeppelin/contracts/utils/math/SafeMath.sol:SafeMath": {
        "src": "@openzeppelin/contracts/utils/math/SafeMath.sol:16",
        "version": {
          "withMetadata": "4167346fe154a63f59e72262dbca9ccb097c97b61ec5dfe163259378386d2ba4",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.21"
      },
      "contracts/Presale.sol:IGoldToken": {
        "src": "contracts/Presale.sol:8",
        "inherit": [],
        "libraries": [],
        "methods": [
          "mint(address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.21"
      },
      "contracts/Presale.sol:Presale": {
        "src": "contracts/Presale.sol:12",
        "version": {
          "withMetadata": "55de4f41aa2ae4e88c3e975f7f7c871c8630a6a915f505e8b168c82d5665ef13",
          "withoutMetadata": "2fa5a3bfe1ae715a2695aad2a1fdda65dd5f2dfe346a8af0822d82b296b7bc1b",
          "linkedWithoutMetadata": "2fa5a3bfe1ae715a2695aad2a1fdda65dd5f2dfe346a8af0822d82b296b7bc1b"
        },
        "inherit": [
          "@openzeppelin/contracts/security/ReentrancyGuard.sol:ReentrancyGuard",
          "@openzeppelin/contracts/access/Ownable.sol:Ownable",
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [],
        "methods": [
          "(address,address,address,uint256)",
          "createPreSale((uint256,uint256,uint256))",
          "sale()",
          "getCanIdoAmount(address)",
          "bindReffer(address)",
          "userBalance(address)",
          "userRewardBalance(address)",
          "userWithdraw()",
          "teamWithdraw(address)",
          "setUserWithdrawTime(uint256)",
          "setInviteMin(uint256)",
          "setPerMaxBuyUsdt(uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Presale",
            "src": "contracts/Presale.sol:46"
          },
          {
            "kind": "state-variable-assignment",
            "name": "perMaxBuyUsdt",
            "src": "contracts/Presale.sol:15"
          },
          {
            "kind": "state-variable-assignment",
            "name": "inviteMin",
            "src": "contracts/Presale.sol:31"
          },
          {
            "kind": "state-variable-assignment",
            "name": "maxSale",
            "src": "contracts/Presale.sol:33"
          },
          {
            "kind": "state-variable-assignment",
            "name": "rewardLevel",
            "src": "contracts/Presale.sol:36"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Ownable",
              "src": "@openzeppelin/contracts/access/Ownable.sol:21"
            },
            {
              "label": "_status",
              "offset": 0,
              "slot": "1",
              "type": "t_uint256",
              "contract": "ReentrancyGuard",
              "src": "@openzeppelin/contracts/security/ReentrancyGuard.sol:37"
            },
            {
              "label": "userWithdrawTime",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "Presale",
              "src": "contracts/Presale.sol:13"
            },
            {
              "label": "perMaxBuyUsdt",
              "offset": 0,
              "slot": "3",
              "type": "t_uint256",
              "contract": "Presale",
              "src": "contracts/Presale.sol:15"
            },
            {
              "label": "teamAddress",
              "offset": 0,
              "slot": "4",
              "type": "t_address",
              "contract": "Presale",
              "src": "contracts/Presale.sol:16"
            },
            {
              "label": "saleToken",
              "offset": 0,
              "slot": "5",
              "type": "t_address",
              "contract": "Presale",
              "src": "contracts/Presale.sol:17"
            },
            {
              "label": "usdtToken",
              "offset": 0,
              "slot": "6",
              "type": "t_address",
              "contract": "Presale",
              "src": "contracts/Presale.sol:18"
            },
            {
              "label": "goldTokenAddress",
              "offset": 0,
              "slot": "7",
              "type": "t_address",
              "contract": "Presale",
              "src": "contracts/Presale.sol:19"
            },
            {
              "label": "balances",
              "offset": 0,
              "slot": "8",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "Presale",
              "src": "contracts/Presale.sol:20"
            },
            {
              "label": "userBuyTotalUsdt",
              "offset": 0,
              "slot": "9",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "Presale",
              "src": "contracts/Presale.sol:21"
            },
            {
              "label": "rewardBalances",
              "offset": 0,
              "slot": "10",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "Presale",
              "src": "contracts/Presale.sol:22"
            },
            {
              "label": "reffers",
              "offset": 0,
              "slot": "11",
              "type": "t_mapping(t_address,t_address)",
              "contract": "Presale",
              "src": "contracts/Presale.sol:23"
            },
            {
              "label": "refferNumber",
              "offset": 0,
              "slot": "12",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "Presale",
              "src": "contracts/Presale.sol:24"
            },
            {
              "label": "teamRefferNumber",
              "offset": 0,
              "slot": "13",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "Presale",
              "src": "contracts/Presale.sol:25"
            },
            {
              "label": "firstIdo",
              "offset": 0,
              "slot": "14",
              "type": "t_mapping(t_address,t_bool)",
              "contract": "Presale",
              "src": "contracts/Presale.sol:26"
            },
            {
              "label": "totalIdoUSDT",
              "offset": 0,
              "slot": "15",
              "type": "t_uint256",
              "contract": "Presale",
              "src": "contracts/Presale.sol:27"
            },
            {
              "label": "totalIdoUser",
              "offset": 0,
              "slot": "16",
              "type": "t_uint256",
              "contract": "Presale",
              "src": "contracts/Presale.sol:28"
            },
            {
              "label": "totalSale",
              "offset": 0,
              "slot": "17",
              "type": "t_uint256",
              "contract": "Presale",
              "src": "contracts/Presale.sol:29"
            },
            {
              "label": "inviteMin",
              "offset": 0,
              "slot": "18",
              "type": "t_uint256",
              "contract": "Presale",
              "src": "contracts/Presale.sol:31"
            },
            {
              "label": "maxSale",
              "offset": 0,
              "slot": "19",
              "type": "t_uint256",
              "contract": "Presale",
              "src": "contracts/Presale.sol:33"
            },
            {
              "label": "isCloseSale",
              "offset": 0,
              "slot": "20",
              "type": "t_bool",
              "contract": "Presale",
              "src": "contracts/Presale.sol:34"
            },
            {
              "label": "rewardLevel",
              "offset": 0,
              "slot": "21",
              "type": "t_array(t_uint256)dyn_storage",
              "contract": "Presale",
              "src": "contracts/Presale.sol:36"
            },
            {
              "label": "presaleInfo",
              "offset": 0,
              "slot": "22",
              "type": "t_struct(PresaleInfo)2392_storage",
              "contract": "Presale",
              "src": "contracts/Presale.sol:44"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_uint256)dyn_storage": {
              "label": "uint256[]",
              "numberOfBytes": "32"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_mapping(t_address,t_address)": {
              "label": "mapping(address => address)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_struct(PresaleInfo)2392_storage": {
              "label": "struct Presale.PresaleInfo",
              "members": [
                {
                  "label": "startTime",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "endTime",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "price",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "2"
                }
              ],
              "numberOfBytes": "96"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.21"
      },
      "contracts/Staking.sol:IRejuvenate": {
        "src": "contracts/Staking.sol:9",
        "inherit": [],
        "libraries": [],
        "methods": [
          "mint(address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.21"
      },
      "contracts/Staking.sol:Staking": {
        "src": "contracts/Staking.sol:13",
        "version": {
          "withMetadata": "d4a43fbe5f8d6347383f0680dba0a94146fceda61d8f28fb0ed926fda6eca5bc",
          "withoutMetadata": "8e35a11dc4a30aced1c096dd5db7f6424d19b292b732012b8d44d054f9cea466",
          "linkedWithoutMetadata": "8e35a11dc4a30aced1c096dd5db7f6424d19b292b732012b8d44d054f9cea466"
        },
        "inherit": [
          "@openzeppelin/contracts/security/ReentrancyGuard.sol:ReentrancyGuard",
          "@openzeppelin/contracts/access/Ownable.sol:Ownable",
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [],
        "methods": [
          "()",
          "changeRewardsPerBlock(uint256)",
          "rewardPerToken()",
          "earned(address)",
          "stake(uint256)",
          "unstake(uint256)",
          "claimRewards()",
          "pause()",
          "unpause()",
          "inCaseTokensGetStuck(address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Staking",
            "src": "contracts/Staking.sol:33"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Ownable",
              "src": "@openzeppelin/contracts/access/Ownable.sol:21"
            },
            {
              "label": "_status",
              "offset": 0,
              "slot": "1",
              "type": "t_uint256",
              "contract": "ReentrancyGuard",
              "src": "@openzeppelin/contracts/security/ReentrancyGuard.sol:37"
            },
            {
              "label": "paused",
              "offset": 0,
              "slot": "2",
              "type": "t_bool",
              "contract": "Staking",
              "src": "contracts/Staking.sol:14"
            },
            {
              "label": "_treasury",
              "offset": 1,
              "slot": "2",
              "type": "t_address",
              "contract": "Staking",
              "src": "contracts/Staking.sol:15"
            },
            {
              "label": "token",
              "offset": 0,
              "slot": "3",
              "type": "t_address",
              "contract": "Staking",
              "src": "contracts/Staking.sol:17"
            },
            {
              "label": "rewardRate",
              "offset": 0,
              "slot": "4",
              "type": "t_uint256",
              "contract": "Staking",
              "src": "contracts/Staking.sol:19"
            },
            {
              "label": "_lastUpdateBlock",
              "offset": 0,
              "slot": "5",
              "type": "t_uint256",
              "contract": "Staking",
              "src": "contracts/Staking.sol:20"
            },
            {
              "label": "_rewardsPerToken",
              "offset": 0,
              "slot": "6",
              "type": "t_uint256",
              "contract": "Staking",
              "src": "contracts/Staking.sol:21"
            },
            {
              "label": "data",
              "offset": 0,
              "slot": "7",
              "type": "t_array(t_struct(StakingData)3375_storage)dyn_storage",
              "contract": "Staking",
              "src": "contracts/Staking.sol:22"
            },
            {
              "label": "_userRewardsPerToken",
              "offset": 0,
              "slot": "8",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "Staking",
              "src": "contracts/Staking.sol:24"
            },
            {
              "label": "_rewards",
              "offset": 0,
              "slot": "9",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "Staking",
              "src": "contracts/Staking.sol:25"
            },
            {
              "label": "totalStaked",
              "offset": 0,
              "slot": "10",
              "type": "t_uint256",
              "contract": "Staking",
              "src": "contracts/Staking.sol:27"
            },
            {
              "label": "_balances",
              "offset": 0,
              "slot": "11",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "Staking",
              "src": "contracts/Staking.sol:28"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_struct(StakingData)3375_storage)dyn_storage": {
              "label": "struct StakingData[]",
              "numberOfBytes": "32"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_struct(StakingData)3375_storage": {
              "label": "struct StakingData",
              "members": [
                {
                  "label": "block",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "staked",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "1"
                }
              ],
              "numberOfBytes": "64"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.21"
      }
    },
    {
      "contracts/RichHusky.sol:Checker": {
        "src": "contracts/RichHusky.sol:520",
        "version": {
          "withMetadata": "17e1cf10fdffcda321c1a1f59d2b06178394724b4d8ad9b035a718122fed8a52",
          "withoutMetadata": "0faf6ca500781d04501ba7e4cf9138e35957321419c6ca29798480c22b3cc5cd",
          "linkedWithoutMetadata": "0faf6ca500781d04501ba7e4cf9138e35957321419c6ca29798480c22b3cc5cd"
        },
        "inherit": [],
        "libraries": [],
        "methods": [
          "isValid(address,address,address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.21"
      },
      "contracts/RichHusky.sol:Context": {
        "src": "contracts/RichHusky.sol:27",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.21"
      },
      "contracts/RichHusky.sol:ERC20": {
        "src": "contracts/RichHusky.sol:162",
        "version": {
          "withMetadata": "e092e43bc9c3243b7138ce015fa92d358fa66a764079145cfe1339f160fd055e",
          "withoutMetadata": "e248eda4094a79267c1d78eb85fb3a082e2ba4d153192b2644d6357dbed158f3",
          "linkedWithoutMetadata": "e248eda4094a79267c1d78eb85fb3a082e2ba4d153192b2644d6357dbed158f3"
        },
        "inherit": [
          "contracts/RichHusky.sol:IERC20Metadata",
          "contracts/RichHusky.sol:IERC20",
          "contracts/RichHusky.sol:Context"
        ],
        "libraries": [],
        "methods": [
          "(string,string)",
          "name()",
          "symbol()",
          "decimals()",
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)",
          "increaseAllowance(address,uint256)",
          "decreaseAllowance(address,uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ERC20",
            "src": "contracts/RichHusky.sol:181"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_balances",
              "offset": 0,
              "slot": "0",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC20",
              "src": "contracts/RichHusky.sol:163"
            },
            {
              "label": "_allowances",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "ERC20",
              "src": "contracts/RichHusky.sol:165"
            },
            {
              "label": "_totalSupply",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "ERC20",
              "src": "contracts/RichHusky.sol:167"
            },
            {
              "label": "_name",
              "offset": 0,
              "slot": "3",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "contracts/RichHusky.sol:169"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "4",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "contracts/RichHusky.sol:170"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.21"
      },
      "contracts/RichHusky.sol:IERC20": {
        "src": "contracts/RichHusky.sol:40",
        "inherit": [],
        "libraries": [],
        "methods": [
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.21"
      },
      "contracts/RichHusky.sol:IERC20Metadata": {
        "src": "contracts/RichHusky.sol:120",
        "inherit": [
          "contracts/RichHusky.sol:IERC20"
        ],
        "libraries": [],
        "methods": [
          "name()",
          "symbol()",
          "decimals()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.21"
      },
      "contracts/RichHusky.sol:IFactory": {
        "src": "contracts/RichHusky.sol:535",
        "inherit": [],
        "libraries": [],
        "methods": [
          "createPair(address,address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.21"
      },
      "contracts/RichHusky.sol:IGasToken": {
        "src": "contracts/RichHusky.sol:539",
        "inherit": [],
        "libraries": [],
        "methods": [
          "free(uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.21"
      },
      "contracts/RichHusky.sol:RichHusky": {
        "src": "contracts/RichHusky.sol:543",
        "version": {
          "withMetadata": "ce802161ba5ffecece3a7488fb3a07a35d8f78edf3674187d3eb27cc30777604",
          "withoutMetadata": "7c4ce62a347a52dc2685dbb41f6d968bb51e7d6abb10665abf0c7d7699da0d36",
          "linkedWithoutMetadata": "7c4ce62a347a52dc2685dbb41f6d968bb51e7d6abb10665abf0c7d7699da0d36"
        },
        "inherit": [
          "contracts/RichHusky.sol:ERC20",
          "contracts/RichHusky.sol:IERC20Metadata",
          "contracts/RichHusky.sol:IERC20",
          "contracts/RichHusky.sol:Context"
        ],
        "libraries": [
          "contracts/RichHusky.sol:Checker"
        ],
        "methods": [
          "(address)",
          "mint(address,uint256)",
          "updateAirdropAmount(uint256)",
          "withdrawFee(address,uint256)",
          "airdrop(address[],uint256)",
          "addBetaUsers(address[])",
          "removeBetaUsers(address[])",
          "multiCall(address[],bytes[])"
        ],
        "linkReferences": [
          {
            "src": "contracts/RichHusky.sol",
            "name": "Checker",
            "length": 20,
            "start": 5176,
            "placeholder": "__$1cb883ae52507a2d00adae80c79f632cb4$__"
          }
        ],
        "errors": [
          {
            "kind": "constructor",
            "contract": "RichHusky",
            "src": "contracts/RichHusky.sol:554"
          },
          {
            "kind": "state-variable-immutable",
            "name": "pancakeFactory",
            "src": "contracts/RichHusky.sol:549"
          },
          {
            "kind": "state-variable-immutable",
            "name": "WBNB",
            "src": "contracts/RichHusky.sol:550"
          },
          {
            "kind": "state-variable-immutable",
            "name": "GasToken",
            "src": "contracts/RichHusky.sol:552"
          },
          {
            "kind": "external-library-linking",
            "name": "Checker",
            "src": "contracts/RichHusky.sol"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_balances",
              "offset": 0,
              "slot": "0",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC20",
              "src": "contracts/RichHusky.sol:163"
            },
            {
              "label": "_allowances",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "ERC20",
              "src": "contracts/RichHusky.sol:165"
            },
            {
              "label": "_totalSupply",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "ERC20",
              "src": "contracts/RichHusky.sol:167"
            },
            {
              "label": "_name",
              "offset": 0,
              "slot": "3",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "contracts/RichHusky.sol:169"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "4",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "contracts/RichHusky.sol:170"
            },
            {
              "label": "dev",
              "offset": 0,
              "slot": "5",
              "type": "t_address",
              "contract": "RichHusky",
              "src": "contracts/RichHusky.sol:544"
            },
            {
              "label": "airdropAmount",
              "offset": 0,
              "slot": "6",
              "type": "t_uint256",
              "contract": "RichHusky",
              "src": "contracts/RichHusky.sol:545"
            },
            {
              "label": "betaUsers",
              "offset": 0,
              "slot": "7",
              "type": "t_mapping(t_address,t_bool)",
              "contract": "RichHusky",
              "src": "contracts/RichHusky.sol:546"
            },
            {
              "label": "pair",
              "offset": 0,
              "slot": "8",
              "type": "t_address",
              "contract": "RichHusky",
              "src": "contracts/RichHusky.sol:547"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.21"
      }
    },
    {
      "contracts/FirstDao.sol:FistDao": {
        "src": "contracts/FirstDao.sol:127",
        "version": {
          "withMetadata": "87594bf7d015e41aaf777bc0dc62e9e8a3685546fcfa065eb87291ef7f3f16f4",
          "withoutMetadata": "5bdb2538a3ba33172d93851875dfca20475ce01973348f896430788ab9d8314a",
          "linkedWithoutMetadata": "5bdb2538a3ba33172d93851875dfca20475ce01973348f896430788ab9d8314a"
        },
        "inherit": [
          "contracts/FirstDao.sol:Ownable",
          "contracts/FirstDao.sol:IERC20"
        ],
        "libraries": [
          "contracts/FirstDao.sol:SafeMath"
        ],
        "methods": [
          "(string,string)",
          "()",
          "initialize(address,address,address,address)",
          "transferEvent(address,address,uint256)",
          "feeState()",
          "getIsApproved(address)",
          "searchExcludedFromFeeAccounts(address)",
          "getDefaultBalance()",
          "insertIntoExcludedFromFeeAccounts(address[])",
          "deleteFromExcludedFromFeeAccounts(address[])",
          "claim(address,uint256)",
          "name()",
          "symbol()",
          "decimals()",
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "transferFrom(address,address,uint256)",
          "approve(address,uint256)",
          "allowance(address,address)",
          "increaseAllowance(address,uint256)",
          "decreaseAllowance(address,uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "FistDao",
            "src": "contracts/FirstDao.sol:159"
          },
          {
            "kind": "state-variable-assignment",
            "name": "_decimals",
            "src": "contracts/FirstDao.sol:132"
          },
          {
            "kind": "state-variable-assignment",
            "name": "_totalSupply",
            "src": "contracts/FirstDao.sol:133"
          },
          {
            "kind": "state-variable-assignment",
            "name": "_feeTax",
            "src": "contracts/FirstDao.sol:138"
          },
          {
            "kind": "state-variable-assignment",
            "name": "_feeMining",
            "src": "contracts/FirstDao.sol:139"
          },
          {
            "kind": "state-variable-assignment",
            "name": "_feeLiquidity",
            "src": "contracts/FirstDao.sol:140"
          },
          {
            "kind": "state-variable-assignment",
            "name": "_feeDivisor",
            "src": "contracts/FirstDao.sol:141"
          },
          {
            "kind": "state-variable-assignment",
            "name": "_removeAllFee",
            "src": "contracts/FirstDao.sol:143"
          },
          {
            "kind": "state-variable-assignment",
            "name": "_defaultBalance",
            "src": "contracts/FirstDao.sol:150"
          },
          {
            "kind": "state-variable-assignment",
            "name": "_defaultAmount",
            "src": "contracts/FirstDao.sol:151"
          },
          {
            "kind": "state-variable-assignment",
            "name": "_initialized111",
            "src": "contracts/FirstDao.sol:156"
          },
          {
            "kind": "state-variable-assignment",
            "name": "_reentry",
            "src": "contracts/FirstDao.sol:157"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Ownable",
              "src": "contracts/FirstDao.sol:58"
            },
            {
              "label": "_previousOwner",
              "offset": 0,
              "slot": "1",
              "type": "t_address",
              "contract": "Ownable",
              "src": "contracts/FirstDao.sol:59"
            },
            {
              "label": "_switchDate",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "Ownable",
              "src": "contracts/FirstDao.sol:60"
            },
            {
              "label": "_name",
              "offset": 0,
              "slot": "3",
              "type": "t_string_storage",
              "contract": "FistDao",
              "src": "contracts/FirstDao.sol:130"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "4",
              "type": "t_string_storage",
              "contract": "FistDao",
              "src": "contracts/FirstDao.sol:131"
            },
            {
              "label": "_decimals",
              "offset": 0,
              "slot": "5",
              "type": "t_uint8",
              "contract": "FistDao",
              "src": "contracts/FirstDao.sol:132"
            },
            {
              "label": "_totalSupply",
              "offset": 0,
              "slot": "6",
              "type": "t_uint256",
              "contract": "FistDao",
              "src": "contracts/FirstDao.sol:133"
            },
            {
              "label": "_balances",
              "offset": 0,
              "slot": "7",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "FistDao",
              "src": "contracts/FirstDao.sol:134"
            },
            {
              "label": "_allowances",
              "offset": 0,
              "slot": "8",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "FistDao",
              "src": "contracts/FirstDao.sol:135"
            },
            {
              "label": "_isApproved",
              "offset": 0,
              "slot": "9",
              "type": "t_mapping(t_address,t_bool)",
              "contract": "FistDao",
              "src": "contracts/FirstDao.sol:136"
            },
            {
              "label": "_feeTax",
              "offset": 0,
              "slot": "10",
              "type": "t_uint256",
              "contract": "FistDao",
              "src": "contracts/FirstDao.sol:138"
            },
            {
              "label": "_feeMining",
              "offset": 0,
              "slot": "11",
              "type": "t_uint256",
              "contract": "FistDao",
              "src": "contracts/FirstDao.sol:139"
            },
            {
              "label": "_feeLiquidity",
              "offset": 0,
              "slot": "12",
              "type": "t_uint256",
              "contract": "FistDao",
              "src": "contracts/FirstDao.sol:140"
            },
            {
              "label": "_feeDivisor",
              "offset": 0,
              "slot": "13",
              "type": "t_uint256",
              "contract": "FistDao",
              "src": "contracts/FirstDao.sol:141"
            },
            {
              "label": "_removeAllFee",
              "offset": 0,
              "slot": "14",
              "type": "t_bool",
              "contract": "FistDao",
              "src": "contracts/FirstDao.sol:143"
            },
            {
              "label": "_core",
              "offset": 1,
              "slot": "14",
              "type": "t_address",
              "contract": "FistDao",
              "src": "contracts/FirstDao.sol:145"
            },
            {
              "label": "_taxReceiver",
              "offset": 0,
              "slot": "15",
              "type": "t_address",
              "contract": "FistDao",
              "src": "contracts/FirstDao.sol:146"
            },
            {
              "label": "_miningPool",
              "offset": 0,
              "slot": "16",
              "type": "t_address",
              "contract": "FistDao",
              "src": "contracts/FirstDao.sol:147"
            },
            {
              "label": "_liquidityPool",
              "offset": 0,
              "slot": "17",
              "type": "t_address",
              "contract": "FistDao",
              "src": "contracts/FirstDao.sol:148"
            },
            {
              "label": "_defaultBalance",
              "offset": 0,
              "slot": "18",
              "type": "t_uint256",
              "contract": "FistDao",
              "src": "contracts/FirstDao.sol:150"
            },
            {
              "label": "_defaultAmount",
              "offset": 0,
              "slot": "19",
              "type": "t_uint256",
              "contract": "FistDao",
              "src": "contracts/FirstDao.sol:151"
            },
            {
              "label": "_isExcludedFromFee",
              "offset": 0,
              "slot": "20",
              "type": "t_mapping(t_address,t_bool)",
              "contract": "FistDao",
              "src": "contracts/FirstDao.sol:153"
            },
            {
              "label": "_excludedFromFeeAccounts",
              "offset": 0,
              "slot": "21",
              "type": "t_array(t_address)dyn_storage",
              "contract": "FistDao",
              "src": "contracts/FirstDao.sol:154"
            },
            {
              "label": "_initialized111",
              "offset": 0,
              "slot": "22",
              "type": "t_bool",
              "contract": "FistDao",
              "src": "contracts/FirstDao.sol:156"
            },
            {
              "label": "_reentry",
              "offset": 0,
              "slot": "23",
              "type": "t_uint256",
              "contract": "FistDao",
              "src": "contracts/FirstDao.sol:157"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_address)dyn_storage": {
              "label": "address[]",
              "numberOfBytes": "32"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint8": {
              "label": "uint8",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.21"
      },
      "contracts/FirstDao.sol:ICore": {
        "src": "contracts/FirstDao.sol:119",
        "inherit": [],
        "libraries": [],
        "methods": [
          "getPairAddress()",
          "airdrop()",
          "safety(address,address)",
          "start()",
          "end()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.21"
      },
      "contracts/FirstDao.sol:IERC20": {
        "src": "contracts/FirstDao.sol:8",
        "inherit": [],
        "libraries": [],
        "methods": [
          "name()",
          "symbol()",
          "decimals()",
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "transferFrom(address,address,uint256)",
          "approve(address,uint256)",
          "allowance(address,address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.21"
      },
      "contracts/FirstDao.sol:IFactory": {
        "src": "contracts/FirstDao.sol:91",
        "inherit": [],
        "libraries": [],
        "methods": [
          "createPair(address,address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.21"
      },
      "contracts/FirstDao.sol:IRouter01": {
        "src": "contracts/FirstDao.sol:95",
        "inherit": [],
        "libraries": [],
        "methods": [
          "factory()",
          "addLiquidity(address,address,uint256,uint256,uint256,uint256,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.21"
      },
      "contracts/FirstDao.sol:IRouter02": {
        "src": "contracts/FirstDao.sol:109",
        "inherit": [
          "contracts/FirstDao.sol:IRouter01"
        ],
        "libraries": [],
        "methods": [
          "swapExactTokensForTokensSupportingFeeOnTransferTokens(uint256,uint256,address[],address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.21"
      },
      "contracts/FirstDao.sol:Ownable": {
        "src": "contracts/FirstDao.sol:57",
        "inherit": [],
        "libraries": [],
        "methods": [
          "owner()",
          "switchDate()",
          "transferOwnership(uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Ownable",
            "src": "contracts/FirstDao.sol:63"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Ownable",
              "src": "contracts/FirstDao.sol:58"
            },
            {
              "label": "_previousOwner",
              "offset": 0,
              "slot": "1",
              "type": "t_address",
              "contract": "Ownable",
              "src": "contracts/FirstDao.sol:59"
            },
            {
              "label": "_switchDate",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "Ownable",
              "src": "contracts/FirstDao.sol:60"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.21"
      },
      "contracts/FirstDao.sol:SafeMath": {
        "src": "contracts/FirstDao.sol:22",
        "version": {
          "withMetadata": "95eb3df1bd62a62b1bf87150f7314053125cc709ed6eb26f9bf2a30d8fc55e32",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.21"
      }
    },
    {
      "contracts/IFiles.sol:Address": {
        "src": "contracts/IFiles.sol:147",
        "version": {
          "withMetadata": "73f3d745b82ff92d492794f39ddc131795315255895e196d918dc1260c813488",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.21"
      },
      "contracts/IFiles.sol:Context": {
        "src": "contracts/IFiles.sol:135",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.21"
      },
      "contracts/IFiles.sol:IBEP20": {
        "src": "contracts/IFiles.sol:9",
        "inherit": [],
        "libraries": [],
        "methods": [
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.21"
      },
      "contracts/IFiles.sol:IPancakeFactory": {
        "src": "contracts/IFiles.sol:327",
        "inherit": [],
        "libraries": [],
        "methods": [
          "feeTo()",
          "feeToSetter()",
          "getPair(address,address)",
          "allPairs(uint256)",
          "allPairsLength()",
          "createPair(address,address)",
          "setFeeTo(address)",
          "setFeeToSetter(address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.21"
      },
      "contracts/IFiles.sol:IPancakePair": {
        "src": "contracts/IFiles.sol:357",
        "inherit": [],
        "libraries": [],
        "methods": [
          "name()",
          "symbol()",
          "decimals()",
          "totalSupply()",
          "balanceOf(address)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transfer(address,uint256)",
          "transferFrom(address,address,uint256)",
          "DOMAIN_SEPARATOR()",
          "PERMIT_TYPEHASH()",
          "nonces(address)",
          "permit(address,address,uint256,uint256,uint8,bytes32,bytes32)",
          "MINIMUM_LIQUIDITY()",
          "factory()",
          "token0()",
          "token1()",
          "getReserves()",
          "price0CumulativeLast()",
          "price1CumulativeLast()",
          "kLast()",
          "mint(address)",
          "burn(address)",
          "swap(uint256,uint256,address,bytes)",
          "skim(address)",
          "sync()",
          "initialize(address,address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.21"
      },
      "contracts/IFiles.sol:IPancakeRouter01": {
        "src": "contracts/IFiles.sol:466",
        "inherit": [],
        "libraries": [],
        "methods": [
          "factory()",
          "WETH()",
          "addLiquidity(address,address,uint256,uint256,uint256,uint256,address,uint256)",
          "addLiquidityETH(address,uint256,uint256,uint256,address,uint256)",
          "removeLiquidity(address,address,uint256,uint256,uint256,address,uint256)",
          "removeLiquidityETH(address,uint256,uint256,uint256,address,uint256)",
          "removeLiquidityWithPermit(address,address,uint256,uint256,uint256,address,uint256,bool,uint8,bytes32,bytes32)",
          "removeLiquidityETHWithPermit(address,uint256,uint256,uint256,address,uint256,bool,uint8,bytes32,bytes32)",
          "swapExactTokensForTokens(uint256,uint256,address[],address,uint256)",
          "swapTokensForExactTokens(uint256,uint256,address[],address,uint256)",
          "swapExactETHForTokens(uint256,address[],address,uint256)",
          "swapTokensForExactETH(uint256,uint256,address[],address,uint256)",
          "swapExactTokensForETH(uint256,uint256,address[],address,uint256)",
          "swapETHForExactTokens(uint256,address[],address,uint256)",
          "quote(uint256,uint256,uint256)",
          "getAmountOut(uint256,uint256,uint256)",
          "getAmountIn(uint256,uint256,uint256)",
          "getAmountsOut(uint256,address[])",
          "getAmountsIn(uint256,address[])"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.21"
      },
      "contracts/IFiles.sol:IPancakeRouter02": {
        "src": "contracts/IFiles.sol:626",
        "inherit": [
          "contracts/IFiles.sol:IPancakeRouter01"
        ],
        "libraries": [],
        "methods": [
          "removeLiquidityETHSupportingFeeOnTransferTokens(address,uint256,uint256,uint256,address,uint256)",
          "removeLiquidityETHWithPermitSupportingFeeOnTransferTokens(address,uint256,uint256,uint256,address,uint256,bool,uint8,bytes32,bytes32)",
          "swapExactTokensForTokensSupportingFeeOnTransferTokens(uint256,uint256,address[],address,uint256)",
          "swapExactETHForTokensSupportingFeeOnTransferTokens(uint256,address[],address,uint256)",
          "swapExactTokensForETHSupportingFeeOnTransferTokens(uint256,uint256,address[],address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.21"
      },
      "contracts/IFiles.sol:IWBNB": {
        "src": "contracts/IFiles.sol:38",
        "inherit": [],
        "libraries": [],
        "methods": [
          "name()",
          "symbol()",
          "decimals()",
          "balanceOf(address)",
          "allowance(address,address)",
          "()",
          "deposit()",
          "withdraw(uint256)",
          "totalSupply()",
          "approve(address,uint256)",
          "transfer(address,uint256)",
          "transferFrom(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.21"
      },
      "contracts/IFiles.sol:Initializable": {
        "src": "contracts/IFiles.sol:249",
        "version": {
          "withMetadata": "ba793f874980ba8826e0f77e588821b7a373c942b97ebcd7e4e42f378e00e824",
          "withoutMetadata": "ac0db523ddc3e330f735df7b3b0b24460531c71290a891170e840f8f67d5ff6b",
          "linkedWithoutMetadata": "ac0db523ddc3e330f735df7b3b0b24460531c71290a891170e840f8f67d5ff6b"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "contracts/IFiles.sol:251"
            },
            {
              "label": "initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "contracts/IFiles.sol:252"
            },
            {
              "label": "______gap",
              "offset": 0,
              "slot": "1",
              "type": "t_array(t_uint256)50_storage",
              "contract": "Initializable",
              "src": "contracts/IFiles.sol:283"
            }
          ],
          "types": {
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]",
              "numberOfBytes": "1600"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.21"
      },
      "contracts/IFiles.sol:Ownable": {
        "src": "contracts/IFiles.sol:286",
        "version": {
          "withMetadata": "9b6e83ec071c913ea8078938bf6c8e47f6ce697f181f2ebf31dc4937807eb386",
          "withoutMetadata": "a3dd09084d5d3377afaa5e637593b425fb1172db63a48c2f62428555638775f8",
          "linkedWithoutMetadata": "a3dd09084d5d3377afaa5e637593b425fb1172db63a48c2f62428555638775f8"
        },
        "inherit": [
          "contracts/IFiles.sol:Initializable",
          "contracts/IFiles.sol:Context"
        ],
        "libraries": [],
        "methods": [
          "()",
          "initOwner(address)",
          "owner()",
          "renounceOwnership()",
          "transferOwnership(address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "contracts/IFiles.sol:251"
            },
            {
              "label": "initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "contracts/IFiles.sol:252"
            },
            {
              "label": "______gap",
              "offset": 0,
              "slot": "1",
              "type": "t_array(t_uint256)50_storage",
              "contract": "Initializable",
              "src": "contracts/IFiles.sol:283"
            },
            {
              "label": "_owner",
              "offset": 0,
              "slot": "51",
              "type": "t_address",
              "contract": "Ownable",
              "src": "contracts/IFiles.sol:287"
            },
            {
              "label": "_previousOwner",
              "offset": 0,
              "slot": "52",
              "type": "t_address",
              "contract": "Ownable",
              "src": "contracts/IFiles.sol:288"
            },
            {
              "label": "_lockTime",
              "offset": 0,
              "slot": "53",
              "type": "t_uint256",
              "contract": "Ownable",
              "src": "contracts/IFiles.sol:289"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]",
              "numberOfBytes": "1600"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.21"
      },
      "contracts/IFiles.sol:SafeMath": {
        "src": "contracts/IFiles.sol:68",
        "version": {
          "withMetadata": "6a5db877229c78c84b33e85a297bea1121c6a6195aa310f30cbe69888293c5ae",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.21"
      },
      "contracts/ReentrancyGuard.sol:ReentrancyGuard": {
        "src": "contracts/ReentrancyGuard.sol:5",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ReentrancyGuard",
            "src": "contracts/ReentrancyGuard.sol:12"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_status",
              "offset": 0,
              "slot": "0",
              "type": "t_uint256",
              "contract": "ReentrancyGuard",
              "src": "contracts/ReentrancyGuard.sol:10"
            }
          ],
          "types": {
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.21"
      },
      "contracts/Utils.sol:PancakeLibrary": {
        "src": "contracts/Utils.sol:219",
        "version": {
          "withMetadata": "668337a75717822cd6d73bbd1c50526e84e4af10cd45125b1756676395a2f30c",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [
          "contracts/IFiles.sol:SafeMath"
        ],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.21"
      },
      "contracts/Utils.sol:Utils": {
        "src": "contracts/Utils.sol:6",
        "version": {
          "withMetadata": "a5775bd7ff330a5dfa7ddaef645bcc8fbccdcd3c38fbc9fc1755e3e3a9a09d47",
          "withoutMetadata": "8ca6da6b824cadf2e1f9c600b5f1381080c8b8d75dddf5423f35e25222daaeda",
          "linkedWithoutMetadata": "8ca6da6b824cadf2e1f9c600b5f1381080c8b8d75dddf5423f35e25222daaeda"
        },
        "inherit": [],
        "libraries": [
          "contracts/IFiles.sol:SafeMath"
        ],
        "methods": [
          "calculateBNBReward(uint256,uint256,uint256,uint256)",
          "calculateTopUpClaim(uint256,uint256,uint256,uint256)",
          "swapTokensForEth(address,uint256)",
          "swapETHForTokens(address,address,uint256)",
          "swapTokensForTokens(address,address,uint256)",
          "getAmountsout(uint256,address)",
          "addLiquidity(address,address,uint256,uint256)",
          "getAntiFlipTaxNo(uint256)",
          "calcReward(uint256,uint256,uint256,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.21"
      }
    },
    {
      "contracts/Proxy.sol:Caller": {
        "src": "contracts/Proxy.sol:80",
        "version": {
          "withMetadata": "8a43f4805f6ec5dd7b7379a87ef3fa89b1f2cd8e86292442058e51e90f40e31d",
          "withoutMetadata": "d6211a178c252503f87d41bbcceffa66551bde0c0c4b0cc3c5a44a4f489e2c7f",
          "linkedWithoutMetadata": "d6211a178c252503f87d41bbcceffa66551bde0c0c4b0cc3c5a44a4f489e2c7f"
        },
        "inherit": [],
        "libraries": [],
        "methods": [
          "(address)",
          "increase()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Caller",
            "src": "contracts/Proxy.sol:80"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "proxy",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Caller",
              "src": "contracts/Proxy.sol:80"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.21"
      },
      "contracts/Proxy.sol:Proxy": {
        "src": "contracts/Proxy.sol:10",
        "version": {
          "withMetadata": "3a655b5f054f4310d279144652e269b840bf308c06f48e08f2d407ee1381c2c1",
          "withoutMetadata": "bc7fcd1c64d2f798926ae830c3e369a33c770ea294cd9047d184a8c885a96818",
          "linkedWithoutMetadata": "bc7fcd1c64d2f798926ae830c3e369a33c770ea294cd9047d184a8c885a96818"
        },
        "inherit": [],
        "libraries": [],
        "methods": [
          "(address)",
          "()",
          "()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Proxy",
            "src": "contracts/Proxy.sol:22"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "implementation",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Proxy",
              "src": "contracts/Proxy.sol:13"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.21"
      }
    },
    {
      "contracts/Logic.sol:Logic": {
        "src": "contracts/Logic.sol:9",
        "version": {
          "withMetadata": "087c86b163578853fb1cba09b22843df8f815c95bf2568200ddd8e1dbf167fea",
          "withoutMetadata": "a9feffbc7087e9529577fb0b368171b85b94d25918f43b5d410eb0f186274034",
          "linkedWithoutMetadata": "a9feffbc7087e9529577fb0b368171b85b94d25918f43b5d410eb0f186274034"
        },
        "inherit": [],
        "libraries": [],
        "methods": [
          "increment()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "state-variable-assignment",
            "name": "x",
            "src": "contracts/Logic.sol:13"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "implementation",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Logic",
              "src": "contracts/Logic.sol:9"
            },
            {
              "label": "x",
              "offset": 0,
              "slot": "1",
              "type": "t_uint256",
              "contract": "Logic",
              "src": "contracts/Logic.sol:13"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.21"
      }
    },
    {
      "@openzeppelin/contracts/access/Ownable.sol:Ownable": {
        "src": "@openzeppelin/contracts/access/Ownable.sol:20",
        "inherit": [
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [],
        "methods": [
          "owner()",
          "renounceOwnership()",
          "transferOwnership(address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Ownable",
            "src": "@openzeppelin/contracts/access/Ownable.sol:28"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Ownable",
              "src": "@openzeppelin/contracts/access/Ownable.sol:21"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.21"
      },
      "@openzeppelin/contracts/security/ReentrancyGuard.sol:ReentrancyGuard": {
        "src": "@openzeppelin/contracts/security/ReentrancyGuard.sol:22",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ReentrancyGuard",
            "src": "@openzeppelin/contracts/security/ReentrancyGuard.sol:39"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_status",
              "offset": 0,
              "slot": "0",
              "type": "t_uint256",
              "contract": "ReentrancyGuard",
              "src": "@openzeppelin/contracts/security/ReentrancyGuard.sol:37"
            }
          ],
          "types": {
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.21"
      },
      "@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20": {
        "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:35",
        "version": {
          "withMetadata": "b653be9ad258ddaafa2304767243ba86eac7156acd9bf1a196bee0fef9b1c3a9",
          "withoutMetadata": "1d55e2dc08aae4fa5bd2ca8ac476f7a2e63bdfa7b0b51d4bd61db8705143a140",
          "linkedWithoutMetadata": "1d55e2dc08aae4fa5bd2ca8ac476f7a2e63bdfa7b0b51d4bd61db8705143a140"
        },
        "inherit": [
          "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol:IERC20Metadata",
          "@openzeppelin/contracts/token/ERC20/IERC20.sol:IERC20",
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [],
        "methods": [
          "(string,string)",
          "name()",
          "symbol()",
          "decimals()",
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)",
          "increaseAllowance(address,uint256)",
          "decreaseAllowance(address,uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ERC20",
            "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:54"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_balances",
              "offset": 0,
              "slot": "0",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:36"
            },
            {
              "label": "_allowances",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:38"
            },
            {
              "label": "_totalSupply",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:40"
            },
            {
              "label": "_name",
              "offset": 0,
              "slot": "3",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:42"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "4",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:43"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.21"
      },
      "@openzeppelin/contracts/token/ERC20/IERC20.sol:IERC20": {
        "src": "@openzeppelin/contracts/token/ERC20/IERC20.sol:9",
        "inherit": [],
        "libraries": [],
        "methods": [
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.21"
      },
      "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol:IERC20Metadata": {
        "src": "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol:13",
        "inherit": [
          "@openzeppelin/contracts/token/ERC20/IERC20.sol:IERC20"
        ],
        "libraries": [],
        "methods": [
          "name()",
          "symbol()",
          "decimals()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.21"
      },
      "@openzeppelin/contracts/token/ERC20/extensions/draft-IERC20Permit.sol:IERC20Permit": {
        "src": "@openzeppelin/contracts/token/ERC20/extensions/draft-IERC20Permit.sol:14",
        "inherit": [],
        "libraries": [],
        "methods": [
          "permit(address,address,uint256,uint256,uint8,bytes32,bytes32)",
          "nonces(address)",
          "DOMAIN_SEPARATOR()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.21"
      },
      "@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol:SafeERC20": {
        "src": "@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol:19",
        "version": {
          "withMetadata": "945db44b71722f915e3e7352ee22f854dfe8000e69eee742d881b64279bb0ad8",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [
          "@openzeppelin/contracts/utils/Address.sol:Address"
        ],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.21"
      },
      "@openzeppelin/contracts/utils/Address.sol:Address": {
        "src": "@openzeppelin/contracts/utils/Address.sol:9",
        "version": {
          "withMetadata": "9401bbf4dc0decc4c739a060967031a16e8de389388d98c32ec11cff440d6513",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [
          {
            "kind": "delegatecall",
            "src": "@openzeppelin/contracts/utils/Address.sol:191"
          },
          {
            "kind": "delegatecall",
            "src": "@openzeppelin/contracts/utils/Address.sol:191"
          }
        ],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.21"
      },
      "@openzeppelin/contracts/utils/Context.sol:Context": {
        "src": "@openzeppelin/contracts/utils/Context.sol:16",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.21"
      },
      "@openzeppelin/contracts/utils/math/Math.sol:Math": {
        "src": "@openzeppelin/contracts/utils/math/Math.sol:9",
        "version": {
          "withMetadata": "f58f3d1d6b53395057afc8a5e1edcbfcd81cdec0dfcf6b1290c8c2368b975278",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.21"
      },
      "@openzeppelin/contracts/utils/math/SafeMath.sol:SafeMath": {
        "src": "@openzeppelin/contracts/utils/math/SafeMath.sol:16",
        "version": {
          "withMetadata": "4167346fe154a63f59e72262dbca9ccb097c97b61ec5dfe163259378386d2ba4",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.21"
      },
      "contracts/Presale.sol:IGoldToken": {
        "src": "contracts/Presale.sol:8",
        "inherit": [],
        "libraries": [],
        "methods": [
          "mint(address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.21"
      },
      "contracts/Presale.sol:Presale": {
        "src": "contracts/Presale.sol:12",
        "version": {
          "withMetadata": "55de4f41aa2ae4e88c3e975f7f7c871c8630a6a915f505e8b168c82d5665ef13",
          "withoutMetadata": "2fa5a3bfe1ae715a2695aad2a1fdda65dd5f2dfe346a8af0822d82b296b7bc1b",
          "linkedWithoutMetadata": "2fa5a3bfe1ae715a2695aad2a1fdda65dd5f2dfe346a8af0822d82b296b7bc1b"
        },
        "inherit": [
          "@openzeppelin/contracts/security/ReentrancyGuard.sol:ReentrancyGuard",
          "@openzeppelin/contracts/access/Ownable.sol:Ownable",
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [],
        "methods": [
          "(address,address,address,uint256)",
          "createPreSale((uint256,uint256,uint256))",
          "sale()",
          "getCanIdoAmount(address)",
          "bindReffer(address)",
          "userBalance(address)",
          "userRewardBalance(address)",
          "userWithdraw()",
          "teamWithdraw(address)",
          "setUserWithdrawTime(uint256)",
          "setInviteMin(uint256)",
          "setPerMaxBuyUsdt(uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Presale",
            "src": "contracts/Presale.sol:46"
          },
          {
            "kind": "state-variable-assignment",
            "name": "perMaxBuyUsdt",
            "src": "contracts/Presale.sol:15"
          },
          {
            "kind": "state-variable-assignment",
            "name": "inviteMin",
            "src": "contracts/Presale.sol:31"
          },
          {
            "kind": "state-variable-assignment",
            "name": "maxSale",
            "src": "contracts/Presale.sol:33"
          },
          {
            "kind": "state-variable-assignment",
            "name": "rewardLevel",
            "src": "contracts/Presale.sol:36"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Ownable",
              "src": "@openzeppelin/contracts/access/Ownable.sol:21"
            },
            {
              "label": "_status",
              "offset": 0,
              "slot": "1",
              "type": "t_uint256",
              "contract": "ReentrancyGuard",
              "src": "@openzeppelin/contracts/security/ReentrancyGuard.sol:37"
            },
            {
              "label": "userWithdrawTime",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "Presale",
              "src": "contracts/Presale.sol:13"
            },
            {
              "label": "perMaxBuyUsdt",
              "offset": 0,
              "slot": "3",
              "type": "t_uint256",
              "contract": "Presale",
              "src": "contracts/Presale.sol:15"
            },
            {
              "label": "teamAddress",
              "offset": 0,
              "slot": "4",
              "type": "t_address",
              "contract": "Presale",
              "src": "contracts/Presale.sol:16"
            },
            {
              "label": "saleToken",
              "offset": 0,
              "slot": "5",
              "type": "t_address",
              "contract": "Presale",
              "src": "contracts/Presale.sol:17"
            },
            {
              "label": "usdtToken",
              "offset": 0,
              "slot": "6",
              "type": "t_address",
              "contract": "Presale",
              "src": "contracts/Presale.sol:18"
            },
            {
              "label": "goldTokenAddress",
              "offset": 0,
              "slot": "7",
              "type": "t_address",
              "contract": "Presale",
              "src": "contracts/Presale.sol:19"
            },
            {
              "label": "balances",
              "offset": 0,
              "slot": "8",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "Presale",
              "src": "contracts/Presale.sol:20"
            },
            {
              "label": "userBuyTotalUsdt",
              "offset": 0,
              "slot": "9",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "Presale",
              "src": "contracts/Presale.sol:21"
            },
            {
              "label": "rewardBalances",
              "offset": 0,
              "slot": "10",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "Presale",
              "src": "contracts/Presale.sol:22"
            },
            {
              "label": "reffers",
              "offset": 0,
              "slot": "11",
              "type": "t_mapping(t_address,t_address)",
              "contract": "Presale",
              "src": "contracts/Presale.sol:23"
            },
            {
              "label": "refferNumber",
              "offset": 0,
              "slot": "12",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "Presale",
              "src": "contracts/Presale.sol:24"
            },
            {
              "label": "teamRefferNumber",
              "offset": 0,
              "slot": "13",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "Presale",
              "src": "contracts/Presale.sol:25"
            },
            {
              "label": "firstIdo",
              "offset": 0,
              "slot": "14",
              "type": "t_mapping(t_address,t_bool)",
              "contract": "Presale",
              "src": "contracts/Presale.sol:26"
            },
            {
              "label": "totalIdoUSDT",
              "offset": 0,
              "slot": "15",
              "type": "t_uint256",
              "contract": "Presale",
              "src": "contracts/Presale.sol:27"
            },
            {
              "label": "totalIdoUser",
              "offset": 0,
              "slot": "16",
              "type": "t_uint256",
              "contract": "Presale",
              "src": "contracts/Presale.sol:28"
            },
            {
              "label": "totalSale",
              "offset": 0,
              "slot": "17",
              "type": "t_uint256",
              "contract": "Presale",
              "src": "contracts/Presale.sol:29"
            },
            {
              "label": "inviteMin",
              "offset": 0,
              "slot": "18",
              "type": "t_uint256",
              "contract": "Presale",
              "src": "contracts/Presale.sol:31"
            },
            {
              "label": "maxSale",
              "offset": 0,
              "slot": "19",
              "type": "t_uint256",
              "contract": "Presale",
              "src": "contracts/Presale.sol:33"
            },
            {
              "label": "isCloseSale",
              "offset": 0,
              "slot": "20",
              "type": "t_bool",
              "contract": "Presale",
              "src": "contracts/Presale.sol:34"
            },
            {
              "label": "rewardLevel",
              "offset": 0,
              "slot": "21",
              "type": "t_array(t_uint256)dyn_storage",
              "contract": "Presale",
              "src": "contracts/Presale.sol:36"
            },
            {
              "label": "presaleInfo",
              "offset": 0,
              "slot": "22",
              "type": "t_struct(PresaleInfo)2392_storage",
              "contract": "Presale",
              "src": "contracts/Presale.sol:44"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_uint256)dyn_storage": {
              "label": "uint256[]",
              "numberOfBytes": "32"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_mapping(t_address,t_address)": {
              "label": "mapping(address => address)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_struct(PresaleInfo)2392_storage": {
              "label": "struct Presale.PresaleInfo",
              "members": [
                {
                  "label": "startTime",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "endTime",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "price",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "2"
                }
              ],
              "numberOfBytes": "96"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.21"
      },
      "contracts/Staking.sol:IRejuvenate": {
        "src": "contracts/Staking.sol:9",
        "inherit": [],
        "libraries": [],
        "methods": [
          "mint(address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.21"
      },
      "contracts/Staking.sol:Staking": {
        "src": "contracts/Staking.sol:13",
        "version": {
          "withMetadata": "d4a43fbe5f8d6347383f0680dba0a94146fceda61d8f28fb0ed926fda6eca5bc",
          "withoutMetadata": "8e35a11dc4a30aced1c096dd5db7f6424d19b292b732012b8d44d054f9cea466",
          "linkedWithoutMetadata": "8e35a11dc4a30aced1c096dd5db7f6424d19b292b732012b8d44d054f9cea466"
        },
        "inherit": [
          "@openzeppelin/contracts/security/ReentrancyGuard.sol:ReentrancyGuard",
          "@openzeppelin/contracts/access/Ownable.sol:Ownable",
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [],
        "methods": [
          "()",
          "changeRewardsPerBlock(uint256)",
          "rewardPerToken()",
          "earned(address)",
          "stake(uint256)",
          "unstake(uint256)",
          "claimRewards()",
          "pause()",
          "unpause()",
          "inCaseTokensGetStuck(address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Staking",
            "src": "contracts/Staking.sol:33"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Ownable",
              "src": "@openzeppelin/contracts/access/Ownable.sol:21"
            },
            {
              "label": "_status",
              "offset": 0,
              "slot": "1",
              "type": "t_uint256",
              "contract": "ReentrancyGuard",
              "src": "@openzeppelin/contracts/security/ReentrancyGuard.sol:37"
            },
            {
              "label": "paused",
              "offset": 0,
              "slot": "2",
              "type": "t_bool",
              "contract": "Staking",
              "src": "contracts/Staking.sol:14"
            },
            {
              "label": "_treasury",
              "offset": 1,
              "slot": "2",
              "type": "t_address",
              "contract": "Staking",
              "src": "contracts/Staking.sol:15"
            },
            {
              "label": "token",
              "offset": 0,
              "slot": "3",
              "type": "t_address",
              "contract": "Staking",
              "src": "contracts/Staking.sol:17"
            },
            {
              "label": "rewardRate",
              "offset": 0,
              "slot": "4",
              "type": "t_uint256",
              "contract": "Staking",
              "src": "contracts/Staking.sol:19"
            },
            {
              "label": "_lastUpdateBlock",
              "offset": 0,
              "slot": "5",
              "type": "t_uint256",
              "contract": "Staking",
              "src": "contracts/Staking.sol:20"
            },
            {
              "label": "_rewardsPerToken",
              "offset": 0,
              "slot": "6",
              "type": "t_uint256",
              "contract": "Staking",
              "src": "contracts/Staking.sol:21"
            },
            {
              "label": "data",
              "offset": 0,
              "slot": "7",
              "type": "t_array(t_struct(StakingData)3375_storage)dyn_storage",
              "contract": "Staking",
              "src": "contracts/Staking.sol:22"
            },
            {
              "label": "_userRewardsPerToken",
              "offset": 0,
              "slot": "8",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "Staking",
              "src": "contracts/Staking.sol:24"
            },
            {
              "label": "_rewards",
              "offset": 0,
              "slot": "9",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "Staking",
              "src": "contracts/Staking.sol:25"
            },
            {
              "label": "totalStaked",
              "offset": 0,
              "slot": "10",
              "type": "t_uint256",
              "contract": "Staking",
              "src": "contracts/Staking.sol:27"
            },
            {
              "label": "_balances",
              "offset": 0,
              "slot": "11",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "Staking",
              "src": "contracts/Staking.sol:28"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_struct(StakingData)3375_storage)dyn_storage": {
              "label": "struct StakingData[]",
              "numberOfBytes": "32"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_struct(StakingData)3375_storage": {
              "label": "struct StakingData",
              "members": [
                {
                  "label": "block",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "staked",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "1"
                }
              ],
              "numberOfBytes": "64"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.21"
      }
    },
    {
      "contracts/RichHusky.sol:Checker": {
        "src": "contracts/RichHusky.sol:520",
        "version": {
          "withMetadata": "17e1cf10fdffcda321c1a1f59d2b06178394724b4d8ad9b035a718122fed8a52",
          "withoutMetadata": "0faf6ca500781d04501ba7e4cf9138e35957321419c6ca29798480c22b3cc5cd",
          "linkedWithoutMetadata": "0faf6ca500781d04501ba7e4cf9138e35957321419c6ca29798480c22b3cc5cd"
        },
        "inherit": [],
        "libraries": [],
        "methods": [
          "isValid(address,address,address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.21"
      },
      "contracts/RichHusky.sol:Context": {
        "src": "contracts/RichHusky.sol:27",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.21"
      },
      "contracts/RichHusky.sol:ERC20": {
        "src": "contracts/RichHusky.sol:162",
        "version": {
          "withMetadata": "e092e43bc9c3243b7138ce015fa92d358fa66a764079145cfe1339f160fd055e",
          "withoutMetadata": "e248eda4094a79267c1d78eb85fb3a082e2ba4d153192b2644d6357dbed158f3",
          "linkedWithoutMetadata": "e248eda4094a79267c1d78eb85fb3a082e2ba4d153192b2644d6357dbed158f3"
        },
        "inherit": [
          "contracts/RichHusky.sol:IERC20Metadata",
          "contracts/RichHusky.sol:IERC20",
          "contracts/RichHusky.sol:Context"
        ],
        "libraries": [],
        "methods": [
          "(string,string)",
          "name()",
          "symbol()",
          "decimals()",
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)",
          "increaseAllowance(address,uint256)",
          "decreaseAllowance(address,uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ERC20",
            "src": "contracts/RichHusky.sol:181"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_balances",
              "offset": 0,
              "slot": "0",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC20",
              "src": "contracts/RichHusky.sol:163"
            },
            {
              "label": "_allowances",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "ERC20",
              "src": "contracts/RichHusky.sol:165"
            },
            {
              "label": "_totalSupply",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "ERC20",
              "src": "contracts/RichHusky.sol:167"
            },
            {
              "label": "_name",
              "offset": 0,
              "slot": "3",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "contracts/RichHusky.sol:169"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "4",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "contracts/RichHusky.sol:170"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.21"
      },
      "contracts/RichHusky.sol:IERC20": {
        "src": "contracts/RichHusky.sol:40",
        "inherit": [],
        "libraries": [],
        "methods": [
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.21"
      },
      "contracts/RichHusky.sol:IERC20Metadata": {
        "src": "contracts/RichHusky.sol:120",
        "inherit": [
          "contracts/RichHusky.sol:IERC20"
        ],
        "libraries": [],
        "methods": [
          "name()",
          "symbol()",
          "decimals()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.21"
      },
      "contracts/RichHusky.sol:IFactory": {
        "src": "contracts/RichHusky.sol:535",
        "inherit": [],
        "libraries": [],
        "methods": [
          "createPair(address,address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.21"
      },
      "contracts/RichHusky.sol:IGasToken": {
        "src": "contracts/RichHusky.sol:539",
        "inherit": [],
        "libraries": [],
        "methods": [
          "free(uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.21"
      },
      "contracts/RichHusky.sol:RichHusky": {
        "src": "contracts/RichHusky.sol:543",
        "version": {
          "withMetadata": "ce802161ba5ffecece3a7488fb3a07a35d8f78edf3674187d3eb27cc30777604",
          "withoutMetadata": "7c4ce62a347a52dc2685dbb41f6d968bb51e7d6abb10665abf0c7d7699da0d36",
          "linkedWithoutMetadata": "7c4ce62a347a52dc2685dbb41f6d968bb51e7d6abb10665abf0c7d7699da0d36"
        },
        "inherit": [
          "contracts/RichHusky.sol:ERC20",
          "contracts/RichHusky.sol:IERC20Metadata",
          "contracts/RichHusky.sol:IERC20",
          "contracts/RichHusky.sol:Context"
        ],
        "libraries": [
          "contracts/RichHusky.sol:Checker"
        ],
        "methods": [
          "(address)",
          "mint(address,uint256)",
          "updateAirdropAmount(uint256)",
          "withdrawFee(address,uint256)",
          "airdrop(address[],uint256)",
          "addBetaUsers(address[])",
          "removeBetaUsers(address[])",
          "multiCall(address[],bytes[])"
        ],
        "linkReferences": [
          {
            "src": "contracts/RichHusky.sol",
            "name": "Checker",
            "length": 20,
            "start": 5176,
            "placeholder": "__$1cb883ae52507a2d00adae80c79f632cb4$__"
          }
        ],
        "errors": [
          {
            "kind": "constructor",
            "contract": "RichHusky",
            "src": "contracts/RichHusky.sol:554"
          },
          {
            "kind": "state-variable-immutable",
            "name": "pancakeFactory",
            "src": "contracts/RichHusky.sol:549"
          },
          {
            "kind": "state-variable-immutable",
            "name": "WBNB",
            "src": "contracts/RichHusky.sol:550"
          },
          {
            "kind": "state-variable-immutable",
            "name": "GasToken",
            "src": "contracts/RichHusky.sol:552"
          },
          {
            "kind": "external-library-linking",
            "name": "Checker",
            "src": "contracts/RichHusky.sol"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_balances",
              "offset": 0,
              "slot": "0",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC20",
              "src": "contracts/RichHusky.sol:163"
            },
            {
              "label": "_allowances",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "ERC20",
              "src": "contracts/RichHusky.sol:165"
            },
            {
              "label": "_totalSupply",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "ERC20",
              "src": "contracts/RichHusky.sol:167"
            },
            {
              "label": "_name",
              "offset": 0,
              "slot": "3",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "contracts/RichHusky.sol:169"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "4",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "contracts/RichHusky.sol:170"
            },
            {
              "label": "dev",
              "offset": 0,
              "slot": "5",
              "type": "t_address",
              "contract": "RichHusky",
              "src": "contracts/RichHusky.sol:544"
            },
            {
              "label": "airdropAmount",
              "offset": 0,
              "slot": "6",
              "type": "t_uint256",
              "contract": "RichHusky",
              "src": "contracts/RichHusky.sol:545"
            },
            {
              "label": "betaUsers",
              "offset": 0,
              "slot": "7",
              "type": "t_mapping(t_address,t_bool)",
              "contract": "RichHusky",
              "src": "contracts/RichHusky.sol:546"
            },
            {
              "label": "pair",
              "offset": 0,
              "slot": "8",
              "type": "t_address",
              "contract": "RichHusky",
              "src": "contracts/RichHusky.sol:547"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.21"
      }
    },
    {
      "contracts/FirstDao.sol:FistDao": {
        "src": "contracts/FirstDao.sol:127",
        "version": {
          "withMetadata": "87594bf7d015e41aaf777bc0dc62e9e8a3685546fcfa065eb87291ef7f3f16f4",
          "withoutMetadata": "5bdb2538a3ba33172d93851875dfca20475ce01973348f896430788ab9d8314a",
          "linkedWithoutMetadata": "5bdb2538a3ba33172d93851875dfca20475ce01973348f896430788ab9d8314a"
        },
        "inherit": [
          "contracts/FirstDao.sol:Ownable",
          "contracts/FirstDao.sol:IERC20"
        ],
        "libraries": [
          "contracts/FirstDao.sol:SafeMath"
        ],
        "methods": [
          "(string,string)",
          "()",
          "initialize(address,address,address,address)",
          "transferEvent(address,address,uint256)",
          "feeState()",
          "getIsApproved(address)",
          "searchExcludedFromFeeAccounts(address)",
          "getDefaultBalance()",
          "insertIntoExcludedFromFeeAccounts(address[])",
          "deleteFromExcludedFromFeeAccounts(address[])",
          "claim(address,uint256)",
          "name()",
          "symbol()",
          "decimals()",
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "transferFrom(address,address,uint256)",
          "approve(address,uint256)",
          "allowance(address,address)",
          "increaseAllowance(address,uint256)",
          "decreaseAllowance(address,uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "FistDao",
            "src": "contracts/FirstDao.sol:159"
          },
          {
            "kind": "state-variable-assignment",
            "name": "_decimals",
            "src": "contracts/FirstDao.sol:132"
          },
          {
            "kind": "state-variable-assignment",
            "name": "_totalSupply",
            "src": "contracts/FirstDao.sol:133"
          },
          {
            "kind": "state-variable-assignment",
            "name": "_feeTax",
            "src": "contracts/FirstDao.sol:138"
          },
          {
            "kind": "state-variable-assignment",
            "name": "_feeMining",
            "src": "contracts/FirstDao.sol:139"
          },
          {
            "kind": "state-variable-assignment",
            "name": "_feeLiquidity",
            "src": "contracts/FirstDao.sol:140"
          },
          {
            "kind": "state-variable-assignment",
            "name": "_feeDivisor",
            "src": "contracts/FirstDao.sol:141"
          },
          {
            "kind": "state-variable-assignment",
            "name": "_removeAllFee",
            "src": "contracts/FirstDao.sol:143"
          },
          {
            "kind": "state-variable-assignment",
            "name": "_defaultBalance",
            "src": "contracts/FirstDao.sol:150"
          },
          {
            "kind": "state-variable-assignment",
            "name": "_defaultAmount",
            "src": "contracts/FirstDao.sol:151"
          },
          {
            "kind": "state-variable-assignment",
            "name": "_initialized111",
            "src": "contracts/FirstDao.sol:156"
          },
          {
            "kind": "state-variable-assignment",
            "name": "_reentry",
            "src": "contracts/FirstDao.sol:157"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Ownable",
              "src": "contracts/FirstDao.sol:58"
            },
            {
              "label": "_previousOwner",
              "offset": 0,
              "slot": "1",
              "type": "t_address",
              "contract": "Ownable",
              "src": "contracts/FirstDao.sol:59"
            },
            {
              "label": "_switchDate",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "Ownable",
              "src": "contracts/FirstDao.sol:60"
            },
            {
              "label": "_name",
              "offset": 0,
              "slot": "3",
              "type": "t_string_storage",
              "contract": "FistDao",
              "src": "contracts/FirstDao.sol:130"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "4",
              "type": "t_string_storage",
              "contract": "FistDao",
              "src": "contracts/FirstDao.sol:131"
            },
            {
              "label": "_decimals",
              "offset": 0,
              "slot": "5",
              "type": "t_uint8",
              "contract": "FistDao",
              "src": "contracts/FirstDao.sol:132"
            },
            {
              "label": "_totalSupply",
              "offset": 0,
              "slot": "6",
              "type": "t_uint256",
              "contract": "FistDao",
              "src": "contracts/FirstDao.sol:133"
            },
            {
              "label": "_balances",
              "offset": 0,
              "slot": "7",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "FistDao",
              "src": "contracts/FirstDao.sol:134"
            },
            {
              "label": "_allowances",
              "offset": 0,
              "slot": "8",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "FistDao",
              "src": "contracts/FirstDao.sol:135"
            },
            {
              "label": "_isApproved",
              "offset": 0,
              "slot": "9",
              "type": "t_mapping(t_address,t_bool)",
              "contract": "FistDao",
              "src": "contracts/FirstDao.sol:136"
            },
            {
              "label": "_feeTax",
              "offset": 0,
              "slot": "10",
              "type": "t_uint256",
              "contract": "FistDao",
              "src": "contracts/FirstDao.sol:138"
            },
            {
              "label": "_feeMining",
              "offset": 0,
              "slot": "11",
              "type": "t_uint256",
              "contract": "FistDao",
              "src": "contracts/FirstDao.sol:139"
            },
            {
              "label": "_feeLiquidity",
              "offset": 0,
              "slot": "12",
              "type": "t_uint256",
              "contract": "FistDao",
              "src": "contracts/FirstDao.sol:140"
            },
            {
              "label": "_feeDivisor",
              "offset": 0,
              "slot": "13",
              "type": "t_uint256",
              "contract": "FistDao",
              "src": "contracts/FirstDao.sol:141"
            },
            {
              "label": "_removeAllFee",
              "offset": 0,
              "slot": "14",
              "type": "t_bool",
              "contract": "FistDao",
              "src": "contracts/FirstDao.sol:143"
            },
            {
              "label": "_core",
              "offset": 1,
              "slot": "14",
              "type": "t_address",
              "contract": "FistDao",
              "src": "contracts/FirstDao.sol:145"
            },
            {
              "label": "_taxReceiver",
              "offset": 0,
              "slot": "15",
              "type": "t_address",
              "contract": "FistDao",
              "src": "contracts/FirstDao.sol:146"
            },
            {
              "label": "_miningPool",
              "offset": 0,
              "slot": "16",
              "type": "t_address",
              "contract": "FistDao",
              "src": "contracts/FirstDao.sol:147"
            },
            {
              "label": "_liquidityPool",
              "offset": 0,
              "slot": "17",
              "type": "t_address",
              "contract": "FistDao",
              "src": "contracts/FirstDao.sol:148"
            },
            {
              "label": "_defaultBalance",
              "offset": 0,
              "slot": "18",
              "type": "t_uint256",
              "contract": "FistDao",
              "src": "contracts/FirstDao.sol:150"
            },
            {
              "label": "_defaultAmount",
              "offset": 0,
              "slot": "19",
              "type": "t_uint256",
              "contract": "FistDao",
              "src": "contracts/FirstDao.sol:151"
            },
            {
              "label": "_isExcludedFromFee",
              "offset": 0,
              "slot": "20",
              "type": "t_mapping(t_address,t_bool)",
              "contract": "FistDao",
              "src": "contracts/FirstDao.sol:153"
            },
            {
              "label": "_excludedFromFeeAccounts",
              "offset": 0,
              "slot": "21",
              "type": "t_array(t_address)dyn_storage",
              "contract": "FistDao",
              "src": "contracts/FirstDao.sol:154"
            },
            {
              "label": "_initialized111",
              "offset": 0,
              "slot": "22",
              "type": "t_bool",
              "contract": "FistDao",
              "src": "contracts/FirstDao.sol:156"
            },
            {
              "label": "_reentry",
              "offset": 0,
              "slot": "23",
              "type": "t_uint256",
              "contract": "FistDao",
              "src": "contracts/FirstDao.sol:157"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_address)dyn_storage": {
              "label": "address[]",
              "numberOfBytes": "32"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint8": {
              "label": "uint8",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.21"
      },
      "contracts/FirstDao.sol:ICore": {
        "src": "contracts/FirstDao.sol:119",
        "inherit": [],
        "libraries": [],
        "methods": [
          "getPairAddress()",
          "airdrop()",
          "safety(address,address)",
          "start()",
          "end()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.21"
      },
      "contracts/FirstDao.sol:IERC20": {
        "src": "contracts/FirstDao.sol:8",
        "inherit": [],
        "libraries": [],
        "methods": [
          "name()",
          "symbol()",
          "decimals()",
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "transferFrom(address,address,uint256)",
          "approve(address,uint256)",
          "allowance(address,address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.21"
      },
      "contracts/FirstDao.sol:IFactory": {
        "src": "contracts/FirstDao.sol:91",
        "inherit": [],
        "libraries": [],
        "methods": [
          "createPair(address,address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.21"
      },
      "contracts/FirstDao.sol:IRouter01": {
        "src": "contracts/FirstDao.sol:95",
        "inherit": [],
        "libraries": [],
        "methods": [
          "factory()",
          "addLiquidity(address,address,uint256,uint256,uint256,uint256,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.21"
      },
      "contracts/FirstDao.sol:IRouter02": {
        "src": "contracts/FirstDao.sol:109",
        "inherit": [
          "contracts/FirstDao.sol:IRouter01"
        ],
        "libraries": [],
        "methods": [
          "swapExactTokensForTokensSupportingFeeOnTransferTokens(uint256,uint256,address[],address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.21"
      },
      "contracts/FirstDao.sol:Ownable": {
        "src": "contracts/FirstDao.sol:57",
        "inherit": [],
        "libraries": [],
        "methods": [
          "owner()",
          "switchDate()",
          "transferOwnership(uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Ownable",
            "src": "contracts/FirstDao.sol:63"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Ownable",
              "src": "contracts/FirstDao.sol:58"
            },
            {
              "label": "_previousOwner",
              "offset": 0,
              "slot": "1",
              "type": "t_address",
              "contract": "Ownable",
              "src": "contracts/FirstDao.sol:59"
            },
            {
              "label": "_switchDate",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "Ownable",
              "src": "contracts/FirstDao.sol:60"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.21"
      },
      "contracts/FirstDao.sol:SafeMath": {
        "src": "contracts/FirstDao.sol:22",
        "version": {
          "withMetadata": "95eb3df1bd62a62b1bf87150f7314053125cc709ed6eb26f9bf2a30d8fc55e32",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.21"
      }
    },
    {
      "contracts/IFiles.sol:Address": {
        "src": "contracts/IFiles.sol:147",
        "version": {
          "withMetadata": "73f3d745b82ff92d492794f39ddc131795315255895e196d918dc1260c813488",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.21"
      },
      "contracts/IFiles.sol:Context": {
        "src": "contracts/IFiles.sol:135",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.21"
      },
      "contracts/IFiles.sol:IBEP20": {
        "src": "contracts/IFiles.sol:9",
        "inherit": [],
        "libraries": [],
        "methods": [
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.21"
      },
      "contracts/IFiles.sol:IPancakeFactory": {
        "src": "contracts/IFiles.sol:327",
        "inherit": [],
        "libraries": [],
        "methods": [
          "feeTo()",
          "feeToSetter()",
          "getPair(address,address)",
          "allPairs(uint256)",
          "allPairsLength()",
          "createPair(address,address)",
          "setFeeTo(address)",
          "setFeeToSetter(address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.21"
      },
      "contracts/IFiles.sol:IPancakePair": {
        "src": "contracts/IFiles.sol:357",
        "inherit": [],
        "libraries": [],
        "methods": [
          "name()",
          "symbol()",
          "decimals()",
          "totalSupply()",
          "balanceOf(address)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transfer(address,uint256)",
          "transferFrom(address,address,uint256)",
          "DOMAIN_SEPARATOR()",
          "PERMIT_TYPEHASH()",
          "nonces(address)",
          "permit(address,address,uint256,uint256,uint8,bytes32,bytes32)",
          "MINIMUM_LIQUIDITY()",
          "factory()",
          "token0()",
          "token1()",
          "getReserves()",
          "price0CumulativeLast()",
          "price1CumulativeLast()",
          "kLast()",
          "mint(address)",
          "burn(address)",
          "swap(uint256,uint256,address,bytes)",
          "skim(address)",
          "sync()",
          "initialize(address,address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.21"
      },
      "contracts/IFiles.sol:IPancakeRouter01": {
        "src": "contracts/IFiles.sol:466",
        "inherit": [],
        "libraries": [],
        "methods": [
          "factory()",
          "WETH()",
          "addLiquidity(address,address,uint256,uint256,uint256,uint256,address,uint256)",
          "addLiquidityETH(address,uint256,uint256,uint256,address,uint256)",
          "removeLiquidity(address,address,uint256,uint256,uint256,address,uint256)",
          "removeLiquidityETH(address,uint256,uint256,uint256,address,uint256)",
          "removeLiquidityWithPermit(address,address,uint256,uint256,uint256,address,uint256,bool,uint8,bytes32,bytes32)",
          "removeLiquidityETHWithPermit(address,uint256,uint256,uint256,address,uint256,bool,uint8,bytes32,bytes32)",
          "swapExactTokensForTokens(uint256,uint256,address[],address,uint256)",
          "swapTokensForExactTokens(uint256,uint256,address[],address,uint256)",
          "swapExactETHForTokens(uint256,address[],address,uint256)",
          "swapTokensForExactETH(uint256,uint256,address[],address,uint256)",
          "swapExactTokensForETH(uint256,uint256,address[],address,uint256)",
          "swapETHForExactTokens(uint256,address[],address,uint256)",
          "quote(uint256,uint256,uint256)",
          "getAmountOut(uint256,uint256,uint256)",
          "getAmountIn(uint256,uint256,uint256)",
          "getAmountsOut(uint256,address[])",
          "getAmountsIn(uint256,address[])"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.21"
      },
      "contracts/IFiles.sol:IPancakeRouter02": {
        "src": "contracts/IFiles.sol:626",
        "inherit": [
          "contracts/IFiles.sol:IPancakeRouter01"
        ],
        "libraries": [],
        "methods": [
          "removeLiquidityETHSupportingFeeOnTransferTokens(address,uint256,uint256,uint256,address,uint256)",
          "removeLiquidityETHWithPermitSupportingFeeOnTransferTokens(address,uint256,uint256,uint256,address,uint256,bool,uint8,bytes32,bytes32)",
          "swapExactTokensForTokensSupportingFeeOnTransferTokens(uint256,uint256,address[],address,uint256)",
          "swapExactETHForTokensSupportingFeeOnTransferTokens(uint256,address[],address,uint256)",
          "swapExactTokensForETHSupportingFeeOnTransferTokens(uint256,uint256,address[],address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.21"
      },
      "contracts/IFiles.sol:IWBNB": {
        "src": "contracts/IFiles.sol:38",
        "inherit": [],
        "libraries": [],
        "methods": [
          "name()",
          "symbol()",
          "decimals()",
          "balanceOf(address)",
          "allowance(address,address)",
          "()",
          "deposit()",
          "withdraw(uint256)",
          "totalSupply()",
          "approve(address,uint256)",
          "transfer(address,uint256)",
          "transferFrom(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.21"
      },
      "contracts/IFiles.sol:Initializable": {
        "src": "contracts/IFiles.sol:249",
        "version": {
          "withMetadata": "ba793f874980ba8826e0f77e588821b7a373c942b97ebcd7e4e42f378e00e824",
          "withoutMetadata": "ac0db523ddc3e330f735df7b3b0b24460531c71290a891170e840f8f67d5ff6b",
          "linkedWithoutMetadata": "ac0db523ddc3e330f735df7b3b0b24460531c71290a891170e840f8f67d5ff6b"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "contracts/IFiles.sol:251"
            },
            {
              "label": "initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "contracts/IFiles.sol:252"
            },
            {
              "label": "______gap",
              "offset": 0,
              "slot": "1",
              "type": "t_array(t_uint256)50_storage",
              "contract": "Initializable",
              "src": "contracts/IFiles.sol:283"
            }
          ],
          "types": {
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]",
              "numberOfBytes": "1600"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.21"
      },
      "contracts/IFiles.sol:Ownable": {
        "src": "contracts/IFiles.sol:286",
        "version": {
          "withMetadata": "9b6e83ec071c913ea8078938bf6c8e47f6ce697f181f2ebf31dc4937807eb386",
          "withoutMetadata": "a3dd09084d5d3377afaa5e637593b425fb1172db63a48c2f62428555638775f8",
          "linkedWithoutMetadata": "a3dd09084d5d3377afaa5e637593b425fb1172db63a48c2f62428555638775f8"
        },
        "inherit": [
          "contracts/IFiles.sol:Initializable",
          "contracts/IFiles.sol:Context"
        ],
        "libraries": [],
        "methods": [
          "()",
          "initOwner(address)",
          "owner()",
          "renounceOwnership()",
          "transferOwnership(address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "contracts/IFiles.sol:251"
            },
            {
              "label": "initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "contracts/IFiles.sol:252"
            },
            {
              "label": "______gap",
              "offset": 0,
              "slot": "1",
              "type": "t_array(t_uint256)50_storage",
              "contract": "Initializable",
              "src": "contracts/IFiles.sol:283"
            },
            {
              "label": "_owner",
              "offset": 0,
              "slot": "51",
              "type": "t_address",
              "contract": "Ownable",
              "src": "contracts/IFiles.sol:287"
            },
            {
              "label": "_previousOwner",
              "offset": 0,
              "slot": "52",
              "type": "t_address",
              "contract": "Ownable",
              "src": "contracts/IFiles.sol:288"
            },
            {
              "label": "_lockTime",
              "offset": 0,
              "slot": "53",
              "type": "t_uint256",
              "contract": "Ownable",
              "src": "contracts/IFiles.sol:289"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]",
              "numberOfBytes": "1600"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.21"
      },
      "contracts/IFiles.sol:SafeMath": {
        "src": "contracts/IFiles.sol:68",
        "version": {
          "withMetadata": "6a5db877229c78c84b33e85a297bea1121c6a6195aa310f30cbe69888293c5ae",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.21"
      },
      "contracts/ReentrancyGuard.sol:ReentrancyGuard": {
        "src": "contracts/ReentrancyGuard.sol:5",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ReentrancyGuard",
            "src": "contracts/ReentrancyGuard.sol:12"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_status",
              "offset": 0,
              "slot": "0",
              "type": "t_uint256",
              "contract": "ReentrancyGuard",
              "src": "contracts/ReentrancyGuard.sol:10"
            }
          ],
          "types": {
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.21"
      },
      "contracts/Utils.sol:PancakeLibrary": {
        "src": "contracts/Utils.sol:219",
        "version": {
          "withMetadata": "668337a75717822cd6d73bbd1c50526e84e4af10cd45125b1756676395a2f30c",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [
          "contracts/IFiles.sol:SafeMath"
        ],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.21"
      },
      "contracts/Utils.sol:Utils": {
        "src": "contracts/Utils.sol:6",
        "version": {
          "withMetadata": "a5775bd7ff330a5dfa7ddaef645bcc8fbccdcd3c38fbc9fc1755e3e3a9a09d47",
          "withoutMetadata": "8ca6da6b824cadf2e1f9c600b5f1381080c8b8d75dddf5423f35e25222daaeda",
          "linkedWithoutMetadata": "8ca6da6b824cadf2e1f9c600b5f1381080c8b8d75dddf5423f35e25222daaeda"
        },
        "inherit": [],
        "libraries": [
          "contracts/IFiles.sol:SafeMath"
        ],
        "methods": [
          "calculateBNBReward(uint256,uint256,uint256,uint256)",
          "calculateTopUpClaim(uint256,uint256,uint256,uint256)",
          "swapTokensForEth(address,uint256)",
          "swapETHForTokens(address,address,uint256)",
          "swapTokensForTokens(address,address,uint256)",
          "getAmountsout(uint256,address)",
          "addLiquidity(address,address,uint256,uint256)",
          "getAntiFlipTaxNo(uint256)",
          "calcReward(uint256,uint256,uint256,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.21"
      }
    },
    {
      "contracts/Proxy.sol:Caller": {
        "src": "contracts/Proxy.sol:80",
        "version": {
          "withMetadata": "8a43f4805f6ec5dd7b7379a87ef3fa89b1f2cd8e86292442058e51e90f40e31d",
          "withoutMetadata": "d6211a178c252503f87d41bbcceffa66551bde0c0c4b0cc3c5a44a4f489e2c7f",
          "linkedWithoutMetadata": "d6211a178c252503f87d41bbcceffa66551bde0c0c4b0cc3c5a44a4f489e2c7f"
        },
        "inherit": [],
        "libraries": [],
        "methods": [
          "(address)",
          "increase()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Caller",
            "src": "contracts/Proxy.sol:80"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "proxy",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Caller",
              "src": "contracts/Proxy.sol:80"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.21"
      },
      "contracts/Proxy.sol:Proxy": {
        "src": "contracts/Proxy.sol:10",
        "version": {
          "withMetadata": "3a655b5f054f4310d279144652e269b840bf308c06f48e08f2d407ee1381c2c1",
          "withoutMetadata": "bc7fcd1c64d2f798926ae830c3e369a33c770ea294cd9047d184a8c885a96818",
          "linkedWithoutMetadata": "bc7fcd1c64d2f798926ae830c3e369a33c770ea294cd9047d184a8c885a96818"
        },
        "inherit": [],
        "libraries": [],
        "methods": [
          "(address)",
          "()",
          "()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Proxy",
            "src": "contracts/Proxy.sol:22"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "implementation",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Proxy",
              "src": "contracts/Proxy.sol:13"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.21"
      }
    },
    {
      "contracts/Logic.sol:Logic": {
        "src": "contracts/Logic.sol:9",
        "version": {
          "withMetadata": "087c86b163578853fb1cba09b22843df8f815c95bf2568200ddd8e1dbf167fea",
          "withoutMetadata": "a9feffbc7087e9529577fb0b368171b85b94d25918f43b5d410eb0f186274034",
          "linkedWithoutMetadata": "a9feffbc7087e9529577fb0b368171b85b94d25918f43b5d410eb0f186274034"
        },
        "inherit": [],
        "libraries": [],
        "methods": [
          "increment()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "state-variable-assignment",
            "name": "x",
            "src": "contracts/Logic.sol:13"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "implementation",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Logic",
              "src": "contracts/Logic.sol:9"
            },
            {
              "label": "x",
              "offset": 0,
              "slot": "1",
              "type": "t_uint256",
              "contract": "Logic",
              "src": "contracts/Logic.sol:13"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.21"
      }
    },
    {
      "contracts/Logic.sol:Logic": {
        "src": "contracts/Logic.sol:9",
        "version": {
          "withMetadata": "087c86b163578853fb1cba09b22843df8f815c95bf2568200ddd8e1dbf167fea",
          "withoutMetadata": "a9feffbc7087e9529577fb0b368171b85b94d25918f43b5d410eb0f186274034",
          "linkedWithoutMetadata": "a9feffbc7087e9529577fb0b368171b85b94d25918f43b5d410eb0f186274034"
        },
        "inherit": [],
        "libraries": [],
        "methods": [
          "increment()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "state-variable-assignment",
            "name": "x",
            "src": "contracts/Logic.sol:13"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "implementation",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Logic",
              "src": "contracts/Logic.sol:9"
            },
            {
              "label": "x",
              "offset": 0,
              "slot": "1",
              "type": "t_uint256",
              "contract": "Logic",
              "src": "contracts/Logic.sol:13"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.21"
      }
    },
    {
      "@openzeppelin/contracts/access/Ownable.sol:Ownable": {
        "src": "@openzeppelin/contracts/access/Ownable.sol:20",
        "inherit": [
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [],
        "methods": [
          "owner()",
          "renounceOwnership()",
          "transferOwnership(address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Ownable",
            "src": "@openzeppelin/contracts/access/Ownable.sol:28"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Ownable",
              "src": "@openzeppelin/contracts/access/Ownable.sol:21"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.21"
      },
      "@openzeppelin/contracts/security/ReentrancyGuard.sol:ReentrancyGuard": {
        "src": "@openzeppelin/contracts/security/ReentrancyGuard.sol:22",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ReentrancyGuard",
            "src": "@openzeppelin/contracts/security/ReentrancyGuard.sol:39"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_status",
              "offset": 0,
              "slot": "0",
              "type": "t_uint256",
              "contract": "ReentrancyGuard",
              "src": "@openzeppelin/contracts/security/ReentrancyGuard.sol:37"
            }
          ],
          "types": {
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.21"
      },
      "@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20": {
        "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:35",
        "version": {
          "withMetadata": "b653be9ad258ddaafa2304767243ba86eac7156acd9bf1a196bee0fef9b1c3a9",
          "withoutMetadata": "1d55e2dc08aae4fa5bd2ca8ac476f7a2e63bdfa7b0b51d4bd61db8705143a140",
          "linkedWithoutMetadata": "1d55e2dc08aae4fa5bd2ca8ac476f7a2e63bdfa7b0b51d4bd61db8705143a140"
        },
        "inherit": [
          "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol:IERC20Metadata",
          "@openzeppelin/contracts/token/ERC20/IERC20.sol:IERC20",
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [],
        "methods": [
          "(string,string)",
          "name()",
          "symbol()",
          "decimals()",
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)",
          "increaseAllowance(address,uint256)",
          "decreaseAllowance(address,uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ERC20",
            "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:54"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_balances",
              "offset": 0,
              "slot": "0",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:36"
            },
            {
              "label": "_allowances",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:38"
            },
            {
              "label": "_totalSupply",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:40"
            },
            {
              "label": "_name",
              "offset": 0,
              "slot": "3",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:42"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "4",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:43"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.21"
      },
      "@openzeppelin/contracts/token/ERC20/IERC20.sol:IERC20": {
        "src": "@openzeppelin/contracts/token/ERC20/IERC20.sol:9",
        "inherit": [],
        "libraries": [],
        "methods": [
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.21"
      },
      "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol:IERC20Metadata": {
        "src": "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol:13",
        "inherit": [
          "@openzeppelin/contracts/token/ERC20/IERC20.sol:IERC20"
        ],
        "libraries": [],
        "methods": [
          "name()",
          "symbol()",
          "decimals()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.21"
      },
      "@openzeppelin/contracts/token/ERC20/extensions/draft-IERC20Permit.sol:IERC20Permit": {
        "src": "@openzeppelin/contracts/token/ERC20/extensions/draft-IERC20Permit.sol:14",
        "inherit": [],
        "libraries": [],
        "methods": [
          "permit(address,address,uint256,uint256,uint8,bytes32,bytes32)",
          "nonces(address)",
          "DOMAIN_SEPARATOR()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.21"
      },
      "@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol:SafeERC20": {
        "src": "@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol:19",
        "version": {
          "withMetadata": "945db44b71722f915e3e7352ee22f854dfe8000e69eee742d881b64279bb0ad8",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [
          "@openzeppelin/contracts/utils/Address.sol:Address"
        ],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.21"
      },
      "@openzeppelin/contracts/utils/Address.sol:Address": {
        "src": "@openzeppelin/contracts/utils/Address.sol:9",
        "version": {
          "withMetadata": "9401bbf4dc0decc4c739a060967031a16e8de389388d98c32ec11cff440d6513",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [
          {
            "kind": "delegatecall",
            "src": "@openzeppelin/contracts/utils/Address.sol:191"
          },
          {
            "kind": "delegatecall",
            "src": "@openzeppelin/contracts/utils/Address.sol:191"
          }
        ],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.21"
      },
      "@openzeppelin/contracts/utils/Context.sol:Context": {
        "src": "@openzeppelin/contracts/utils/Context.sol:16",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.21"
      },
      "@openzeppelin/contracts/utils/math/Math.sol:Math": {
        "src": "@openzeppelin/contracts/utils/math/Math.sol:9",
        "version": {
          "withMetadata": "f58f3d1d6b53395057afc8a5e1edcbfcd81cdec0dfcf6b1290c8c2368b975278",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.21"
      },
      "@openzeppelin/contracts/utils/math/SafeMath.sol:SafeMath": {
        "src": "@openzeppelin/contracts/utils/math/SafeMath.sol:16",
        "version": {
          "withMetadata": "4167346fe154a63f59e72262dbca9ccb097c97b61ec5dfe163259378386d2ba4",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.21"
      },
      "contracts/Presale.sol:IGoldToken": {
        "src": "contracts/Presale.sol:8",
        "inherit": [],
        "libraries": [],
        "methods": [
          "mint(address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.21"
      },
      "contracts/Presale.sol:Presale": {
        "src": "contracts/Presale.sol:12",
        "version": {
          "withMetadata": "55de4f41aa2ae4e88c3e975f7f7c871c8630a6a915f505e8b168c82d5665ef13",
          "withoutMetadata": "2fa5a3bfe1ae715a2695aad2a1fdda65dd5f2dfe346a8af0822d82b296b7bc1b",
          "linkedWithoutMetadata": "2fa5a3bfe1ae715a2695aad2a1fdda65dd5f2dfe346a8af0822d82b296b7bc1b"
        },
        "inherit": [
          "@openzeppelin/contracts/security/ReentrancyGuard.sol:ReentrancyGuard",
          "@openzeppelin/contracts/access/Ownable.sol:Ownable",
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [],
        "methods": [
          "(address,address,address,uint256)",
          "createPreSale((uint256,uint256,uint256))",
          "sale()",
          "getCanIdoAmount(address)",
          "bindReffer(address)",
          "userBalance(address)",
          "userRewardBalance(address)",
          "userWithdraw()",
          "teamWithdraw(address)",
          "setUserWithdrawTime(uint256)",
          "setInviteMin(uint256)",
          "setPerMaxBuyUsdt(uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Presale",
            "src": "contracts/Presale.sol:46"
          },
          {
            "kind": "state-variable-assignment",
            "name": "perMaxBuyUsdt",
            "src": "contracts/Presale.sol:15"
          },
          {
            "kind": "state-variable-assignment",
            "name": "inviteMin",
            "src": "contracts/Presale.sol:31"
          },
          {
            "kind": "state-variable-assignment",
            "name": "maxSale",
            "src": "contracts/Presale.sol:33"
          },
          {
            "kind": "state-variable-assignment",
            "name": "rewardLevel",
            "src": "contracts/Presale.sol:36"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Ownable",
              "src": "@openzeppelin/contracts/access/Ownable.sol:21"
            },
            {
              "label": "_status",
              "offset": 0,
              "slot": "1",
              "type": "t_uint256",
              "contract": "ReentrancyGuard",
              "src": "@openzeppelin/contracts/security/ReentrancyGuard.sol:37"
            },
            {
              "label": "userWithdrawTime",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "Presale",
              "src": "contracts/Presale.sol:13"
            },
            {
              "label": "perMaxBuyUsdt",
              "offset": 0,
              "slot": "3",
              "type": "t_uint256",
              "contract": "Presale",
              "src": "contracts/Presale.sol:15"
            },
            {
              "label": "teamAddress",
              "offset": 0,
              "slot": "4",
              "type": "t_address",
              "contract": "Presale",
              "src": "contracts/Presale.sol:16"
            },
            {
              "label": "saleToken",
              "offset": 0,
              "slot": "5",
              "type": "t_address",
              "contract": "Presale",
              "src": "contracts/Presale.sol:17"
            },
            {
              "label": "usdtToken",
              "offset": 0,
              "slot": "6",
              "type": "t_address",
              "contract": "Presale",
              "src": "contracts/Presale.sol:18"
            },
            {
              "label": "goldTokenAddress",
              "offset": 0,
              "slot": "7",
              "type": "t_address",
              "contract": "Presale",
              "src": "contracts/Presale.sol:19"
            },
            {
              "label": "balances",
              "offset": 0,
              "slot": "8",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "Presale",
              "src": "contracts/Presale.sol:20"
            },
            {
              "label": "userBuyTotalUsdt",
              "offset": 0,
              "slot": "9",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "Presale",
              "src": "contracts/Presale.sol:21"
            },
            {
              "label": "rewardBalances",
              "offset": 0,
              "slot": "10",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "Presale",
              "src": "contracts/Presale.sol:22"
            },
            {
              "label": "reffers",
              "offset": 0,
              "slot": "11",
              "type": "t_mapping(t_address,t_address)",
              "contract": "Presale",
              "src": "contracts/Presale.sol:23"
            },
            {
              "label": "refferNumber",
              "offset": 0,
              "slot": "12",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "Presale",
              "src": "contracts/Presale.sol:24"
            },
            {
              "label": "teamRefferNumber",
              "offset": 0,
              "slot": "13",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "Presale",
              "src": "contracts/Presale.sol:25"
            },
            {
              "label": "firstIdo",
              "offset": 0,
              "slot": "14",
              "type": "t_mapping(t_address,t_bool)",
              "contract": "Presale",
              "src": "contracts/Presale.sol:26"
            },
            {
              "label": "totalIdoUSDT",
              "offset": 0,
              "slot": "15",
              "type": "t_uint256",
              "contract": "Presale",
              "src": "contracts/Presale.sol:27"
            },
            {
              "label": "totalIdoUser",
              "offset": 0,
              "slot": "16",
              "type": "t_uint256",
              "contract": "Presale",
              "src": "contracts/Presale.sol:28"
            },
            {
              "label": "totalSale",
              "offset": 0,
              "slot": "17",
              "type": "t_uint256",
              "contract": "Presale",
              "src": "contracts/Presale.sol:29"
            },
            {
              "label": "inviteMin",
              "offset": 0,
              "slot": "18",
              "type": "t_uint256",
              "contract": "Presale",
              "src": "contracts/Presale.sol:31"
            },
            {
              "label": "maxSale",
              "offset": 0,
              "slot": "19",
              "type": "t_uint256",
              "contract": "Presale",
              "src": "contracts/Presale.sol:33"
            },
            {
              "label": "isCloseSale",
              "offset": 0,
              "slot": "20",
              "type": "t_bool",
              "contract": "Presale",
              "src": "contracts/Presale.sol:34"
            },
            {
              "label": "rewardLevel",
              "offset": 0,
              "slot": "21",
              "type": "t_array(t_uint256)dyn_storage",
              "contract": "Presale",
              "src": "contracts/Presale.sol:36"
            },
            {
              "label": "presaleInfo",
              "offset": 0,
              "slot": "22",
              "type": "t_struct(PresaleInfo)2392_storage",
              "contract": "Presale",
              "src": "contracts/Presale.sol:44"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_uint256)dyn_storage": {
              "label": "uint256[]",
              "numberOfBytes": "32"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_mapping(t_address,t_address)": {
              "label": "mapping(address => address)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_struct(PresaleInfo)2392_storage": {
              "label": "struct Presale.PresaleInfo",
              "members": [
                {
                  "label": "startTime",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "endTime",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "price",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "2"
                }
              ],
              "numberOfBytes": "96"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.21"
      },
      "contracts/Staking.sol:IRejuvenate": {
        "src": "contracts/Staking.sol:9",
        "inherit": [],
        "libraries": [],
        "methods": [
          "mint(address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.21"
      },
      "contracts/Staking.sol:Staking": {
        "src": "contracts/Staking.sol:13",
        "version": {
          "withMetadata": "d4a43fbe5f8d6347383f0680dba0a94146fceda61d8f28fb0ed926fda6eca5bc",
          "withoutMetadata": "8e35a11dc4a30aced1c096dd5db7f6424d19b292b732012b8d44d054f9cea466",
          "linkedWithoutMetadata": "8e35a11dc4a30aced1c096dd5db7f6424d19b292b732012b8d44d054f9cea466"
        },
        "inherit": [
          "@openzeppelin/contracts/security/ReentrancyGuard.sol:ReentrancyGuard",
          "@openzeppelin/contracts/access/Ownable.sol:Ownable",
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [],
        "methods": [
          "()",
          "changeRewardsPerBlock(uint256)",
          "rewardPerToken()",
          "earned(address)",
          "stake(uint256)",
          "unstake(uint256)",
          "claimRewards()",
          "pause()",
          "unpause()",
          "inCaseTokensGetStuck(address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Staking",
            "src": "contracts/Staking.sol:33"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Ownable",
              "src": "@openzeppelin/contracts/access/Ownable.sol:21"
            },
            {
              "label": "_status",
              "offset": 0,
              "slot": "1",
              "type": "t_uint256",
              "contract": "ReentrancyGuard",
              "src": "@openzeppelin/contracts/security/ReentrancyGuard.sol:37"
            },
            {
              "label": "paused",
              "offset": 0,
              "slot": "2",
              "type": "t_bool",
              "contract": "Staking",
              "src": "contracts/Staking.sol:14"
            },
            {
              "label": "_treasury",
              "offset": 1,
              "slot": "2",
              "type": "t_address",
              "contract": "Staking",
              "src": "contracts/Staking.sol:15"
            },
            {
              "label": "token",
              "offset": 0,
              "slot": "3",
              "type": "t_address",
              "contract": "Staking",
              "src": "contracts/Staking.sol:17"
            },
            {
              "label": "rewardRate",
              "offset": 0,
              "slot": "4",
              "type": "t_uint256",
              "contract": "Staking",
              "src": "contracts/Staking.sol:19"
            },
            {
              "label": "_lastUpdateBlock",
              "offset": 0,
              "slot": "5",
              "type": "t_uint256",
              "contract": "Staking",
              "src": "contracts/Staking.sol:20"
            },
            {
              "label": "_rewardsPerToken",
              "offset": 0,
              "slot": "6",
              "type": "t_uint256",
              "contract": "Staking",
              "src": "contracts/Staking.sol:21"
            },
            {
              "label": "data",
              "offset": 0,
              "slot": "7",
              "type": "t_array(t_struct(StakingData)3375_storage)dyn_storage",
              "contract": "Staking",
              "src": "contracts/Staking.sol:22"
            },
            {
              "label": "_userRewardsPerToken",
              "offset": 0,
              "slot": "8",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "Staking",
              "src": "contracts/Staking.sol:24"
            },
            {
              "label": "_rewards",
              "offset": 0,
              "slot": "9",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "Staking",
              "src": "contracts/Staking.sol:25"
            },
            {
              "label": "totalStaked",
              "offset": 0,
              "slot": "10",
              "type": "t_uint256",
              "contract": "Staking",
              "src": "contracts/Staking.sol:27"
            },
            {
              "label": "_balances",
              "offset": 0,
              "slot": "11",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "Staking",
              "src": "contracts/Staking.sol:28"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_struct(StakingData)3375_storage)dyn_storage": {
              "label": "struct StakingData[]",
              "numberOfBytes": "32"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_struct(StakingData)3375_storage": {
              "label": "struct StakingData",
              "members": [
                {
                  "label": "block",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "staked",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "1"
                }
              ],
              "numberOfBytes": "64"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.21"
      }
    },
    {
      "contracts/RichHusky.sol:Checker": {
        "src": "contracts/RichHusky.sol:520",
        "version": {
          "withMetadata": "17e1cf10fdffcda321c1a1f59d2b06178394724b4d8ad9b035a718122fed8a52",
          "withoutMetadata": "0faf6ca500781d04501ba7e4cf9138e35957321419c6ca29798480c22b3cc5cd",
          "linkedWithoutMetadata": "0faf6ca500781d04501ba7e4cf9138e35957321419c6ca29798480c22b3cc5cd"
        },
        "inherit": [],
        "libraries": [],
        "methods": [
          "isValid(address,address,address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.21"
      },
      "contracts/RichHusky.sol:Context": {
        "src": "contracts/RichHusky.sol:27",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.21"
      },
      "contracts/RichHusky.sol:ERC20": {
        "src": "contracts/RichHusky.sol:162",
        "version": {
          "withMetadata": "e092e43bc9c3243b7138ce015fa92d358fa66a764079145cfe1339f160fd055e",
          "withoutMetadata": "e248eda4094a79267c1d78eb85fb3a082e2ba4d153192b2644d6357dbed158f3",
          "linkedWithoutMetadata": "e248eda4094a79267c1d78eb85fb3a082e2ba4d153192b2644d6357dbed158f3"
        },
        "inherit": [
          "contracts/RichHusky.sol:IERC20Metadata",
          "contracts/RichHusky.sol:IERC20",
          "contracts/RichHusky.sol:Context"
        ],
        "libraries": [],
        "methods": [
          "(string,string)",
          "name()",
          "symbol()",
          "decimals()",
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)",
          "increaseAllowance(address,uint256)",
          "decreaseAllowance(address,uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ERC20",
            "src": "contracts/RichHusky.sol:181"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_balances",
              "offset": 0,
              "slot": "0",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC20",
              "src": "contracts/RichHusky.sol:163"
            },
            {
              "label": "_allowances",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "ERC20",
              "src": "contracts/RichHusky.sol:165"
            },
            {
              "label": "_totalSupply",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "ERC20",
              "src": "contracts/RichHusky.sol:167"
            },
            {
              "label": "_name",
              "offset": 0,
              "slot": "3",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "contracts/RichHusky.sol:169"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "4",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "contracts/RichHusky.sol:170"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.21"
      },
      "contracts/RichHusky.sol:IERC20": {
        "src": "contracts/RichHusky.sol:40",
        "inherit": [],
        "libraries": [],
        "methods": [
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.21"
      },
      "contracts/RichHusky.sol:IERC20Metadata": {
        "src": "contracts/RichHusky.sol:120",
        "inherit": [
          "contracts/RichHusky.sol:IERC20"
        ],
        "libraries": [],
        "methods": [
          "name()",
          "symbol()",
          "decimals()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.21"
      },
      "contracts/RichHusky.sol:IFactory": {
        "src": "contracts/RichHusky.sol:535",
        "inherit": [],
        "libraries": [],
        "methods": [
          "createPair(address,address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.21"
      },
      "contracts/RichHusky.sol:IGasToken": {
        "src": "contracts/RichHusky.sol:539",
        "inherit": [],
        "libraries": [],
        "methods": [
          "free(uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.21"
      },
      "contracts/RichHusky.sol:RichHusky": {
        "src": "contracts/RichHusky.sol:543",
        "version": {
          "withMetadata": "ce802161ba5ffecece3a7488fb3a07a35d8f78edf3674187d3eb27cc30777604",
          "withoutMetadata": "7c4ce62a347a52dc2685dbb41f6d968bb51e7d6abb10665abf0c7d7699da0d36",
          "linkedWithoutMetadata": "7c4ce62a347a52dc2685dbb41f6d968bb51e7d6abb10665abf0c7d7699da0d36"
        },
        "inherit": [
          "contracts/RichHusky.sol:ERC20",
          "contracts/RichHusky.sol:IERC20Metadata",
          "contracts/RichHusky.sol:IERC20",
          "contracts/RichHusky.sol:Context"
        ],
        "libraries": [
          "contracts/RichHusky.sol:Checker"
        ],
        "methods": [
          "(address)",
          "mint(address,uint256)",
          "updateAirdropAmount(uint256)",
          "withdrawFee(address,uint256)",
          "airdrop(address[],uint256)",
          "addBetaUsers(address[])",
          "removeBetaUsers(address[])",
          "multiCall(address[],bytes[])"
        ],
        "linkReferences": [
          {
            "src": "contracts/RichHusky.sol",
            "name": "Checker",
            "length": 20,
            "start": 5176,
            "placeholder": "__$1cb883ae52507a2d00adae80c79f632cb4$__"
          }
        ],
        "errors": [
          {
            "kind": "constructor",
            "contract": "RichHusky",
            "src": "contracts/RichHusky.sol:554"
          },
          {
            "kind": "state-variable-immutable",
            "name": "pancakeFactory",
            "src": "contracts/RichHusky.sol:549"
          },
          {
            "kind": "state-variable-immutable",
            "name": "WBNB",
            "src": "contracts/RichHusky.sol:550"
          },
          {
            "kind": "state-variable-immutable",
            "name": "GasToken",
            "src": "contracts/RichHusky.sol:552"
          },
          {
            "kind": "external-library-linking",
            "name": "Checker",
            "src": "contracts/RichHusky.sol"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_balances",
              "offset": 0,
              "slot": "0",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC20",
              "src": "contracts/RichHusky.sol:163"
            },
            {
              "label": "_allowances",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "ERC20",
              "src": "contracts/RichHusky.sol:165"
            },
            {
              "label": "_totalSupply",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "ERC20",
              "src": "contracts/RichHusky.sol:167"
            },
            {
              "label": "_name",
              "offset": 0,
              "slot": "3",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "contracts/RichHusky.sol:169"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "4",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "contracts/RichHusky.sol:170"
            },
            {
              "label": "dev",
              "offset": 0,
              "slot": "5",
              "type": "t_address",
              "contract": "RichHusky",
              "src": "contracts/RichHusky.sol:544"
            },
            {
              "label": "airdropAmount",
              "offset": 0,
              "slot": "6",
              "type": "t_uint256",
              "contract": "RichHusky",
              "src": "contracts/RichHusky.sol:545"
            },
            {
              "label": "betaUsers",
              "offset": 0,
              "slot": "7",
              "type": "t_mapping(t_address,t_bool)",
              "contract": "RichHusky",
              "src": "contracts/RichHusky.sol:546"
            },
            {
              "label": "pair",
              "offset": 0,
              "slot": "8",
              "type": "t_address",
              "contract": "RichHusky",
              "src": "contracts/RichHusky.sol:547"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.21"
      }
    },
    {
      "contracts/FirstDao.sol:FistDao": {
        "src": "contracts/FirstDao.sol:127",
        "version": {
          "withMetadata": "87594bf7d015e41aaf777bc0dc62e9e8a3685546fcfa065eb87291ef7f3f16f4",
          "withoutMetadata": "5bdb2538a3ba33172d93851875dfca20475ce01973348f896430788ab9d8314a",
          "linkedWithoutMetadata": "5bdb2538a3ba33172d93851875dfca20475ce01973348f896430788ab9d8314a"
        },
        "inherit": [
          "contracts/FirstDao.sol:Ownable",
          "contracts/FirstDao.sol:IERC20"
        ],
        "libraries": [
          "contracts/FirstDao.sol:SafeMath"
        ],
        "methods": [
          "(string,string)",
          "()",
          "initialize(address,address,address,address)",
          "transferEvent(address,address,uint256)",
          "feeState()",
          "getIsApproved(address)",
          "searchExcludedFromFeeAccounts(address)",
          "getDefaultBalance()",
          "insertIntoExcludedFromFeeAccounts(address[])",
          "deleteFromExcludedFromFeeAccounts(address[])",
          "claim(address,uint256)",
          "name()",
          "symbol()",
          "decimals()",
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "transferFrom(address,address,uint256)",
          "approve(address,uint256)",
          "allowance(address,address)",
          "increaseAllowance(address,uint256)",
          "decreaseAllowance(address,uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "FistDao",
            "src": "contracts/FirstDao.sol:159"
          },
          {
            "kind": "state-variable-assignment",
            "name": "_decimals",
            "src": "contracts/FirstDao.sol:132"
          },
          {
            "kind": "state-variable-assignment",
            "name": "_totalSupply",
            "src": "contracts/FirstDao.sol:133"
          },
          {
            "kind": "state-variable-assignment",
            "name": "_feeTax",
            "src": "contracts/FirstDao.sol:138"
          },
          {
            "kind": "state-variable-assignment",
            "name": "_feeMining",
            "src": "contracts/FirstDao.sol:139"
          },
          {
            "kind": "state-variable-assignment",
            "name": "_feeLiquidity",
            "src": "contracts/FirstDao.sol:140"
          },
          {
            "kind": "state-variable-assignment",
            "name": "_feeDivisor",
            "src": "contracts/FirstDao.sol:141"
          },
          {
            "kind": "state-variable-assignment",
            "name": "_removeAllFee",
            "src": "contracts/FirstDao.sol:143"
          },
          {
            "kind": "state-variable-assignment",
            "name": "_defaultBalance",
            "src": "contracts/FirstDao.sol:150"
          },
          {
            "kind": "state-variable-assignment",
            "name": "_defaultAmount",
            "src": "contracts/FirstDao.sol:151"
          },
          {
            "kind": "state-variable-assignment",
            "name": "_initialized111",
            "src": "contracts/FirstDao.sol:156"
          },
          {
            "kind": "state-variable-assignment",
            "name": "_reentry",
            "src": "contracts/FirstDao.sol:157"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Ownable",
              "src": "contracts/FirstDao.sol:58"
            },
            {
              "label": "_previousOwner",
              "offset": 0,
              "slot": "1",
              "type": "t_address",
              "contract": "Ownable",
              "src": "contracts/FirstDao.sol:59"
            },
            {
              "label": "_switchDate",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "Ownable",
              "src": "contracts/FirstDao.sol:60"
            },
            {
              "label": "_name",
              "offset": 0,
              "slot": "3",
              "type": "t_string_storage",
              "contract": "FistDao",
              "src": "contracts/FirstDao.sol:130"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "4",
              "type": "t_string_storage",
              "contract": "FistDao",
              "src": "contracts/FirstDao.sol:131"
            },
            {
              "label": "_decimals",
              "offset": 0,
              "slot": "5",
              "type": "t_uint8",
              "contract": "FistDao",
              "src": "contracts/FirstDao.sol:132"
            },
            {
              "label": "_totalSupply",
              "offset": 0,
              "slot": "6",
              "type": "t_uint256",
              "contract": "FistDao",
              "src": "contracts/FirstDao.sol:133"
            },
            {
              "label": "_balances",
              "offset": 0,
              "slot": "7",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "FistDao",
              "src": "contracts/FirstDao.sol:134"
            },
            {
              "label": "_allowances",
              "offset": 0,
              "slot": "8",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "FistDao",
              "src": "contracts/FirstDao.sol:135"
            },
            {
              "label": "_isApproved",
              "offset": 0,
              "slot": "9",
              "type": "t_mapping(t_address,t_bool)",
              "contract": "FistDao",
              "src": "contracts/FirstDao.sol:136"
            },
            {
              "label": "_feeTax",
              "offset": 0,
              "slot": "10",
              "type": "t_uint256",
              "contract": "FistDao",
              "src": "contracts/FirstDao.sol:138"
            },
            {
              "label": "_feeMining",
              "offset": 0,
              "slot": "11",
              "type": "t_uint256",
              "contract": "FistDao",
              "src": "contracts/FirstDao.sol:139"
            },
            {
              "label": "_feeLiquidity",
              "offset": 0,
              "slot": "12",
              "type": "t_uint256",
              "contract": "FistDao",
              "src": "contracts/FirstDao.sol:140"
            },
            {
              "label": "_feeDivisor",
              "offset": 0,
              "slot": "13",
              "type": "t_uint256",
              "contract": "FistDao",
              "src": "contracts/FirstDao.sol:141"
            },
            {
              "label": "_removeAllFee",
              "offset": 0,
              "slot": "14",
              "type": "t_bool",
              "contract": "FistDao",
              "src": "contracts/FirstDao.sol:143"
            },
            {
              "label": "_core",
              "offset": 1,
              "slot": "14",
              "type": "t_address",
              "contract": "FistDao",
              "src": "contracts/FirstDao.sol:145"
            },
            {
              "label": "_taxReceiver",
              "offset": 0,
              "slot": "15",
              "type": "t_address",
              "contract": "FistDao",
              "src": "contracts/FirstDao.sol:146"
            },
            {
              "label": "_miningPool",
              "offset": 0,
              "slot": "16",
              "type": "t_address",
              "contract": "FistDao",
              "src": "contracts/FirstDao.sol:147"
            },
            {
              "label": "_liquidityPool",
              "offset": 0,
              "slot": "17",
              "type": "t_address",
              "contract": "FistDao",
              "src": "contracts/FirstDao.sol:148"
            },
            {
              "label": "_defaultBalance",
              "offset": 0,
              "slot": "18",
              "type": "t_uint256",
              "contract": "FistDao",
              "src": "contracts/FirstDao.sol:150"
            },
            {
              "label": "_defaultAmount",
              "offset": 0,
              "slot": "19",
              "type": "t_uint256",
              "contract": "FistDao",
              "src": "contracts/FirstDao.sol:151"
            },
            {
              "label": "_isExcludedFromFee",
              "offset": 0,
              "slot": "20",
              "type": "t_mapping(t_address,t_bool)",
              "contract": "FistDao",
              "src": "contracts/FirstDao.sol:153"
            },
            {
              "label": "_excludedFromFeeAccounts",
              "offset": 0,
              "slot": "21",
              "type": "t_array(t_address)dyn_storage",
              "contract": "FistDao",
              "src": "contracts/FirstDao.sol:154"
            },
            {
              "label": "_initialized111",
              "offset": 0,
              "slot": "22",
              "type": "t_bool",
              "contract": "FistDao",
              "src": "contracts/FirstDao.sol:156"
            },
            {
              "label": "_reentry",
              "offset": 0,
              "slot": "23",
              "type": "t_uint256",
              "contract": "FistDao",
              "src": "contracts/FirstDao.sol:157"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_address)dyn_storage": {
              "label": "address[]",
              "numberOfBytes": "32"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint8": {
              "label": "uint8",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.21"
      },
      "contracts/FirstDao.sol:ICore": {
        "src": "contracts/FirstDao.sol:119",
        "inherit": [],
        "libraries": [],
        "methods": [
          "getPairAddress()",
          "airdrop()",
          "safety(address,address)",
          "start()",
          "end()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.21"
      },
      "contracts/FirstDao.sol:IERC20": {
        "src": "contracts/FirstDao.sol:8",
        "inherit": [],
        "libraries": [],
        "methods": [
          "name()",
          "symbol()",
          "decimals()",
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "transferFrom(address,address,uint256)",
          "approve(address,uint256)",
          "allowance(address,address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.21"
      },
      "contracts/FirstDao.sol:IFactory": {
        "src": "contracts/FirstDao.sol:91",
        "inherit": [],
        "libraries": [],
        "methods": [
          "createPair(address,address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.21"
      },
      "contracts/FirstDao.sol:IRouter01": {
        "src": "contracts/FirstDao.sol:95",
        "inherit": [],
        "libraries": [],
        "methods": [
          "factory()",
          "addLiquidity(address,address,uint256,uint256,uint256,uint256,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.21"
      },
      "contracts/FirstDao.sol:IRouter02": {
        "src": "contracts/FirstDao.sol:109",
        "inherit": [
          "contracts/FirstDao.sol:IRouter01"
        ],
        "libraries": [],
        "methods": [
          "swapExactTokensForTokensSupportingFeeOnTransferTokens(uint256,uint256,address[],address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.21"
      },
      "contracts/FirstDao.sol:Ownable": {
        "src": "contracts/FirstDao.sol:57",
        "inherit": [],
        "libraries": [],
        "methods": [
          "owner()",
          "switchDate()",
          "transferOwnership(uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Ownable",
            "src": "contracts/FirstDao.sol:63"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Ownable",
              "src": "contracts/FirstDao.sol:58"
            },
            {
              "label": "_previousOwner",
              "offset": 0,
              "slot": "1",
              "type": "t_address",
              "contract": "Ownable",
              "src": "contracts/FirstDao.sol:59"
            },
            {
              "label": "_switchDate",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "Ownable",
              "src": "contracts/FirstDao.sol:60"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.21"
      },
      "contracts/FirstDao.sol:SafeMath": {
        "src": "contracts/FirstDao.sol:22",
        "version": {
          "withMetadata": "95eb3df1bd62a62b1bf87150f7314053125cc709ed6eb26f9bf2a30d8fc55e32",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.21"
      }
    },
    {
      "contracts/IFiles.sol:Address": {
        "src": "contracts/IFiles.sol:147",
        "version": {
          "withMetadata": "73f3d745b82ff92d492794f39ddc131795315255895e196d918dc1260c813488",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.21"
      },
      "contracts/IFiles.sol:Context": {
        "src": "contracts/IFiles.sol:135",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.21"
      },
      "contracts/IFiles.sol:IBEP20": {
        "src": "contracts/IFiles.sol:9",
        "inherit": [],
        "libraries": [],
        "methods": [
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.21"
      },
      "contracts/IFiles.sol:IPancakeFactory": {
        "src": "contracts/IFiles.sol:327",
        "inherit": [],
        "libraries": [],
        "methods": [
          "feeTo()",
          "feeToSetter()",
          "getPair(address,address)",
          "allPairs(uint256)",
          "allPairsLength()",
          "createPair(address,address)",
          "setFeeTo(address)",
          "setFeeToSetter(address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.21"
      },
      "contracts/IFiles.sol:IPancakePair": {
        "src": "contracts/IFiles.sol:357",
        "inherit": [],
        "libraries": [],
        "methods": [
          "name()",
          "symbol()",
          "decimals()",
          "totalSupply()",
          "balanceOf(address)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transfer(address,uint256)",
          "transferFrom(address,address,uint256)",
          "DOMAIN_SEPARATOR()",
          "PERMIT_TYPEHASH()",
          "nonces(address)",
          "permit(address,address,uint256,uint256,uint8,bytes32,bytes32)",
          "MINIMUM_LIQUIDITY()",
          "factory()",
          "token0()",
          "token1()",
          "getReserves()",
          "price0CumulativeLast()",
          "price1CumulativeLast()",
          "kLast()",
          "mint(address)",
          "burn(address)",
          "swap(uint256,uint256,address,bytes)",
          "skim(address)",
          "sync()",
          "initialize(address,address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.21"
      },
      "contracts/IFiles.sol:IPancakeRouter01": {
        "src": "contracts/IFiles.sol:466",
        "inherit": [],
        "libraries": [],
        "methods": [
          "factory()",
          "WETH()",
          "addLiquidity(address,address,uint256,uint256,uint256,uint256,address,uint256)",
          "addLiquidityETH(address,uint256,uint256,uint256,address,uint256)",
          "removeLiquidity(address,address,uint256,uint256,uint256,address,uint256)",
          "removeLiquidityETH(address,uint256,uint256,uint256,address,uint256)",
          "removeLiquidityWithPermit(address,address,uint256,uint256,uint256,address,uint256,bool,uint8,bytes32,bytes32)",
          "removeLiquidityETHWithPermit(address,uint256,uint256,uint256,address,uint256,bool,uint8,bytes32,bytes32)",
          "swapExactTokensForTokens(uint256,uint256,address[],address,uint256)",
          "swapTokensForExactTokens(uint256,uint256,address[],address,uint256)",
          "swapExactETHForTokens(uint256,address[],address,uint256)",
          "swapTokensForExactETH(uint256,uint256,address[],address,uint256)",
          "swapExactTokensForETH(uint256,uint256,address[],address,uint256)",
          "swapETHForExactTokens(uint256,address[],address,uint256)",
          "quote(uint256,uint256,uint256)",
          "getAmountOut(uint256,uint256,uint256)",
          "getAmountIn(uint256,uint256,uint256)",
          "getAmountsOut(uint256,address[])",
          "getAmountsIn(uint256,address[])"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.21"
      },
      "contracts/IFiles.sol:IPancakeRouter02": {
        "src": "contracts/IFiles.sol:626",
        "inherit": [
          "contracts/IFiles.sol:IPancakeRouter01"
        ],
        "libraries": [],
        "methods": [
          "removeLiquidityETHSupportingFeeOnTransferTokens(address,uint256,uint256,uint256,address,uint256)",
          "removeLiquidityETHWithPermitSupportingFeeOnTransferTokens(address,uint256,uint256,uint256,address,uint256,bool,uint8,bytes32,bytes32)",
          "swapExactTokensForTokensSupportingFeeOnTransferTokens(uint256,uint256,address[],address,uint256)",
          "swapExactETHForTokensSupportingFeeOnTransferTokens(uint256,address[],address,uint256)",
          "swapExactTokensForETHSupportingFeeOnTransferTokens(uint256,uint256,address[],address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.21"
      },
      "contracts/IFiles.sol:IWBNB": {
        "src": "contracts/IFiles.sol:38",
        "inherit": [],
        "libraries": [],
        "methods": [
          "name()",
          "symbol()",
          "decimals()",
          "balanceOf(address)",
          "allowance(address,address)",
          "()",
          "deposit()",
          "withdraw(uint256)",
          "totalSupply()",
          "approve(address,uint256)",
          "transfer(address,uint256)",
          "transferFrom(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.21"
      },
      "contracts/IFiles.sol:Initializable": {
        "src": "contracts/IFiles.sol:249",
        "version": {
          "withMetadata": "ba793f874980ba8826e0f77e588821b7a373c942b97ebcd7e4e42f378e00e824",
          "withoutMetadata": "ac0db523ddc3e330f735df7b3b0b24460531c71290a891170e840f8f67d5ff6b",
          "linkedWithoutMetadata": "ac0db523ddc3e330f735df7b3b0b24460531c71290a891170e840f8f67d5ff6b"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "contracts/IFiles.sol:251"
            },
            {
              "label": "initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "contracts/IFiles.sol:252"
            },
            {
              "label": "______gap",
              "offset": 0,
              "slot": "1",
              "type": "t_array(t_uint256)50_storage",
              "contract": "Initializable",
              "src": "contracts/IFiles.sol:283"
            }
          ],
          "types": {
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]",
              "numberOfBytes": "1600"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.21"
      },
      "contracts/IFiles.sol:Ownable": {
        "src": "contracts/IFiles.sol:286",
        "version": {
          "withMetadata": "9b6e83ec071c913ea8078938bf6c8e47f6ce697f181f2ebf31dc4937807eb386",
          "withoutMetadata": "a3dd09084d5d3377afaa5e637593b425fb1172db63a48c2f62428555638775f8",
          "linkedWithoutMetadata": "a3dd09084d5d3377afaa5e637593b425fb1172db63a48c2f62428555638775f8"
        },
        "inherit": [
          "contracts/IFiles.sol:Initializable",
          "contracts/IFiles.sol:Context"
        ],
        "libraries": [],
        "methods": [
          "()",
          "initOwner(address)",
          "owner()",
          "renounceOwnership()",
          "transferOwnership(address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "contracts/IFiles.sol:251"
            },
            {
              "label": "initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "contracts/IFiles.sol:252"
            },
            {
              "label": "______gap",
              "offset": 0,
              "slot": "1",
              "type": "t_array(t_uint256)50_storage",
              "contract": "Initializable",
              "src": "contracts/IFiles.sol:283"
            },
            {
              "label": "_owner",
              "offset": 0,
              "slot": "51",
              "type": "t_address",
              "contract": "Ownable",
              "src": "contracts/IFiles.sol:287"
            },
            {
              "label": "_previousOwner",
              "offset": 0,
              "slot": "52",
              "type": "t_address",
              "contract": "Ownable",
              "src": "contracts/IFiles.sol:288"
            },
            {
              "label": "_lockTime",
              "offset": 0,
              "slot": "53",
              "type": "t_uint256",
              "contract": "Ownable",
              "src": "contracts/IFiles.sol:289"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]",
              "numberOfBytes": "1600"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.21"
      },
      "contracts/IFiles.sol:SafeMath": {
        "src": "contracts/IFiles.sol:68",
        "version": {
          "withMetadata": "6a5db877229c78c84b33e85a297bea1121c6a6195aa310f30cbe69888293c5ae",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.21"
      },
      "contracts/ReentrancyGuard.sol:ReentrancyGuard": {
        "src": "contracts/ReentrancyGuard.sol:5",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ReentrancyGuard",
            "src": "contracts/ReentrancyGuard.sol:12"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_status",
              "offset": 0,
              "slot": "0",
              "type": "t_uint256",
              "contract": "ReentrancyGuard",
              "src": "contracts/ReentrancyGuard.sol:10"
            }
          ],
          "types": {
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.21"
      },
      "contracts/Utils.sol:PancakeLibrary": {
        "src": "contracts/Utils.sol:219",
        "version": {
          "withMetadata": "668337a75717822cd6d73bbd1c50526e84e4af10cd45125b1756676395a2f30c",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [
          "contracts/IFiles.sol:SafeMath"
        ],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.21"
      },
      "contracts/Utils.sol:Utils": {
        "src": "contracts/Utils.sol:6",
        "version": {
          "withMetadata": "a5775bd7ff330a5dfa7ddaef645bcc8fbccdcd3c38fbc9fc1755e3e3a9a09d47",
          "withoutMetadata": "8ca6da6b824cadf2e1f9c600b5f1381080c8b8d75dddf5423f35e25222daaeda",
          "linkedWithoutMetadata": "8ca6da6b824cadf2e1f9c600b5f1381080c8b8d75dddf5423f35e25222daaeda"
        },
        "inherit": [],
        "libraries": [
          "contracts/IFiles.sol:SafeMath"
        ],
        "methods": [
          "calculateBNBReward(uint256,uint256,uint256,uint256)",
          "calculateTopUpClaim(uint256,uint256,uint256,uint256)",
          "swapTokensForEth(address,uint256)",
          "swapETHForTokens(address,address,uint256)",
          "swapTokensForTokens(address,address,uint256)",
          "getAmountsout(uint256,address)",
          "addLiquidity(address,address,uint256,uint256)",
          "getAntiFlipTaxNo(uint256)",
          "calcReward(uint256,uint256,uint256,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.21"
      }
    },
    {
      "contracts/Proxy.sol:Caller": {
        "src": "contracts/Proxy.sol:80",
        "version": {
          "withMetadata": "8a43f4805f6ec5dd7b7379a87ef3fa89b1f2cd8e86292442058e51e90f40e31d",
          "withoutMetadata": "d6211a178c252503f87d41bbcceffa66551bde0c0c4b0cc3c5a44a4f489e2c7f",
          "linkedWithoutMetadata": "d6211a178c252503f87d41bbcceffa66551bde0c0c4b0cc3c5a44a4f489e2c7f"
        },
        "inherit": [],
        "libraries": [],
        "methods": [
          "(address)",
          "increase()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Caller",
            "src": "contracts/Proxy.sol:80"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "proxy",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Caller",
              "src": "contracts/Proxy.sol:80"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.21"
      },
      "contracts/Proxy.sol:Proxy": {
        "src": "contracts/Proxy.sol:10",
        "version": {
          "withMetadata": "3a655b5f054f4310d279144652e269b840bf308c06f48e08f2d407ee1381c2c1",
          "withoutMetadata": "bc7fcd1c64d2f798926ae830c3e369a33c770ea294cd9047d184a8c885a96818",
          "linkedWithoutMetadata": "bc7fcd1c64d2f798926ae830c3e369a33c770ea294cd9047d184a8c885a96818"
        },
        "inherit": [],
        "libraries": [],
        "methods": [
          "(address)",
          "()",
          "()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Proxy",
            "src": "contracts/Proxy.sol:22"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "implementation",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Proxy",
              "src": "contracts/Proxy.sol:13"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.21"
      }
    },
    {
      "contracts/Logic.sol:Logic": {
        "src": "contracts/Logic.sol:9",
        "version": {
          "withMetadata": "087c86b163578853fb1cba09b22843df8f815c95bf2568200ddd8e1dbf167fea",
          "withoutMetadata": "a9feffbc7087e9529577fb0b368171b85b94d25918f43b5d410eb0f186274034",
          "linkedWithoutMetadata": "a9feffbc7087e9529577fb0b368171b85b94d25918f43b5d410eb0f186274034"
        },
        "inherit": [],
        "libraries": [],
        "methods": [
          "increment()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "state-variable-assignment",
            "name": "x",
            "src": "contracts/Logic.sol:13"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "implementation",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Logic",
              "src": "contracts/Logic.sol:9"
            },
            {
              "label": "x",
              "offset": 0,
              "slot": "1",
              "type": "t_uint256",
              "contract": "Logic",
              "src": "contracts/Logic.sol:13"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.21"
      }
    },
    {
      "@openzeppelin/contracts/access/Ownable.sol:Ownable": {
        "src": "@openzeppelin/contracts/access/Ownable.sol:20",
        "inherit": [
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [],
        "methods": [
          "owner()",
          "renounceOwnership()",
          "transferOwnership(address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Ownable",
            "src": "@openzeppelin/contracts/access/Ownable.sol:28"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Ownable",
              "src": "@openzeppelin/contracts/access/Ownable.sol:21"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.21"
      },
      "@openzeppelin/contracts/security/ReentrancyGuard.sol:ReentrancyGuard": {
        "src": "@openzeppelin/contracts/security/ReentrancyGuard.sol:22",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ReentrancyGuard",
            "src": "@openzeppelin/contracts/security/ReentrancyGuard.sol:39"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_status",
              "offset": 0,
              "slot": "0",
              "type": "t_uint256",
              "contract": "ReentrancyGuard",
              "src": "@openzeppelin/contracts/security/ReentrancyGuard.sol:37"
            }
          ],
          "types": {
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.21"
      },
      "@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20": {
        "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:35",
        "version": {
          "withMetadata": "b653be9ad258ddaafa2304767243ba86eac7156acd9bf1a196bee0fef9b1c3a9",
          "withoutMetadata": "1d55e2dc08aae4fa5bd2ca8ac476f7a2e63bdfa7b0b51d4bd61db8705143a140",
          "linkedWithoutMetadata": "1d55e2dc08aae4fa5bd2ca8ac476f7a2e63bdfa7b0b51d4bd61db8705143a140"
        },
        "inherit": [
          "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol:IERC20Metadata",
          "@openzeppelin/contracts/token/ERC20/IERC20.sol:IERC20",
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [],
        "methods": [
          "(string,string)",
          "name()",
          "symbol()",
          "decimals()",
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)",
          "increaseAllowance(address,uint256)",
          "decreaseAllowance(address,uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ERC20",
            "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:54"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_balances",
              "offset": 0,
              "slot": "0",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:36"
            },
            {
              "label": "_allowances",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:38"
            },
            {
              "label": "_totalSupply",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:40"
            },
            {
              "label": "_name",
              "offset": 0,
              "slot": "3",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:42"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "4",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:43"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.21"
      },
      "@openzeppelin/contracts/token/ERC20/IERC20.sol:IERC20": {
        "src": "@openzeppelin/contracts/token/ERC20/IERC20.sol:9",
        "inherit": [],
        "libraries": [],
        "methods": [
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.21"
      },
      "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol:IERC20Metadata": {
        "src": "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol:13",
        "inherit": [
          "@openzeppelin/contracts/token/ERC20/IERC20.sol:IERC20"
        ],
        "libraries": [],
        "methods": [
          "name()",
          "symbol()",
          "decimals()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.21"
      },
      "@openzeppelin/contracts/token/ERC20/extensions/draft-IERC20Permit.sol:IERC20Permit": {
        "src": "@openzeppelin/contracts/token/ERC20/extensions/draft-IERC20Permit.sol:14",
        "inherit": [],
        "libraries": [],
        "methods": [
          "permit(address,address,uint256,uint256,uint8,bytes32,bytes32)",
          "nonces(address)",
          "DOMAIN_SEPARATOR()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.21"
      },
      "@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol:SafeERC20": {
        "src": "@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol:19",
        "version": {
          "withMetadata": "945db44b71722f915e3e7352ee22f854dfe8000e69eee742d881b64279bb0ad8",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [
          "@openzeppelin/contracts/utils/Address.sol:Address"
        ],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.21"
      },
      "@openzeppelin/contracts/utils/Address.sol:Address": {
        "src": "@openzeppelin/contracts/utils/Address.sol:9",
        "version": {
          "withMetadata": "9401bbf4dc0decc4c739a060967031a16e8de389388d98c32ec11cff440d6513",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [
          {
            "kind": "delegatecall",
            "src": "@openzeppelin/contracts/utils/Address.sol:191"
          },
          {
            "kind": "delegatecall",
            "src": "@openzeppelin/contracts/utils/Address.sol:191"
          }
        ],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.21"
      },
      "@openzeppelin/contracts/utils/Context.sol:Context": {
        "src": "@openzeppelin/contracts/utils/Context.sol:16",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.21"
      },
      "@openzeppelin/contracts/utils/math/Math.sol:Math": {
        "src": "@openzeppelin/contracts/utils/math/Math.sol:9",
        "version": {
          "withMetadata": "f58f3d1d6b53395057afc8a5e1edcbfcd81cdec0dfcf6b1290c8c2368b975278",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.21"
      },
      "@openzeppelin/contracts/utils/math/SafeMath.sol:SafeMath": {
        "src": "@openzeppelin/contracts/utils/math/SafeMath.sol:16",
        "version": {
          "withMetadata": "4167346fe154a63f59e72262dbca9ccb097c97b61ec5dfe163259378386d2ba4",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.21"
      },
      "contracts/Presale.sol:IGoldToken": {
        "src": "contracts/Presale.sol:8",
        "inherit": [],
        "libraries": [],
        "methods": [
          "mint(address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.21"
      },
      "contracts/Presale.sol:Presale": {
        "src": "contracts/Presale.sol:12",
        "version": {
          "withMetadata": "55de4f41aa2ae4e88c3e975f7f7c871c8630a6a915f505e8b168c82d5665ef13",
          "withoutMetadata": "2fa5a3bfe1ae715a2695aad2a1fdda65dd5f2dfe346a8af0822d82b296b7bc1b",
          "linkedWithoutMetadata": "2fa5a3bfe1ae715a2695aad2a1fdda65dd5f2dfe346a8af0822d82b296b7bc1b"
        },
        "inherit": [
          "@openzeppelin/contracts/security/ReentrancyGuard.sol:ReentrancyGuard",
          "@openzeppelin/contracts/access/Ownable.sol:Ownable",
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [],
        "methods": [
          "(address,address,address,uint256)",
          "createPreSale((uint256,uint256,uint256))",
          "sale()",
          "getCanIdoAmount(address)",
          "bindReffer(address)",
          "userBalance(address)",
          "userRewardBalance(address)",
          "userWithdraw()",
          "teamWithdraw(address)",
          "setUserWithdrawTime(uint256)",
          "setInviteMin(uint256)",
          "setPerMaxBuyUsdt(uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Presale",
            "src": "contracts/Presale.sol:46"
          },
          {
            "kind": "state-variable-assignment",
            "name": "perMaxBuyUsdt",
            "src": "contracts/Presale.sol:15"
          },
          {
            "kind": "state-variable-assignment",
            "name": "inviteMin",
            "src": "contracts/Presale.sol:31"
          },
          {
            "kind": "state-variable-assignment",
            "name": "maxSale",
            "src": "contracts/Presale.sol:33"
          },
          {
            "kind": "state-variable-assignment",
            "name": "rewardLevel",
            "src": "contracts/Presale.sol:36"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Ownable",
              "src": "@openzeppelin/contracts/access/Ownable.sol:21"
            },
            {
              "label": "_status",
              "offset": 0,
              "slot": "1",
              "type": "t_uint256",
              "contract": "ReentrancyGuard",
              "src": "@openzeppelin/contracts/security/ReentrancyGuard.sol:37"
            },
            {
              "label": "userWithdrawTime",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "Presale",
              "src": "contracts/Presale.sol:13"
            },
            {
              "label": "perMaxBuyUsdt",
              "offset": 0,
              "slot": "3",
              "type": "t_uint256",
              "contract": "Presale",
              "src": "contracts/Presale.sol:15"
            },
            {
              "label": "teamAddress",
              "offset": 0,
              "slot": "4",
              "type": "t_address",
              "contract": "Presale",
              "src": "contracts/Presale.sol:16"
            },
            {
              "label": "saleToken",
              "offset": 0,
              "slot": "5",
              "type": "t_address",
              "contract": "Presale",
              "src": "contracts/Presale.sol:17"
            },
            {
              "label": "usdtToken",
              "offset": 0,
              "slot": "6",
              "type": "t_address",
              "contract": "Presale",
              "src": "contracts/Presale.sol:18"
            },
            {
              "label": "goldTokenAddress",
              "offset": 0,
              "slot": "7",
              "type": "t_address",
              "contract": "Presale",
              "src": "contracts/Presale.sol:19"
            },
            {
              "label": "balances",
              "offset": 0,
              "slot": "8",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "Presale",
              "src": "contracts/Presale.sol:20"
            },
            {
              "label": "userBuyTotalUsdt",
              "offset": 0,
              "slot": "9",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "Presale",
              "src": "contracts/Presale.sol:21"
            },
            {
              "label": "rewardBalances",
              "offset": 0,
              "slot": "10",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "Presale",
              "src": "contracts/Presale.sol:22"
            },
            {
              "label": "reffers",
              "offset": 0,
              "slot": "11",
              "type": "t_mapping(t_address,t_address)",
              "contract": "Presale",
              "src": "contracts/Presale.sol:23"
            },
            {
              "label": "refferNumber",
              "offset": 0,
              "slot": "12",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "Presale",
              "src": "contracts/Presale.sol:24"
            },
            {
              "label": "teamRefferNumber",
              "offset": 0,
              "slot": "13",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "Presale",
              "src": "contracts/Presale.sol:25"
            },
            {
              "label": "firstIdo",
              "offset": 0,
              "slot": "14",
              "type": "t_mapping(t_address,t_bool)",
              "contract": "Presale",
              "src": "contracts/Presale.sol:26"
            },
            {
              "label": "totalIdoUSDT",
              "offset": 0,
              "slot": "15",
              "type": "t_uint256",
              "contract": "Presale",
              "src": "contracts/Presale.sol:27"
            },
            {
              "label": "totalIdoUser",
              "offset": 0,
              "slot": "16",
              "type": "t_uint256",
              "contract": "Presale",
              "src": "contracts/Presale.sol:28"
            },
            {
              "label": "totalSale",
              "offset": 0,
              "slot": "17",
              "type": "t_uint256",
              "contract": "Presale",
              "src": "contracts/Presale.sol:29"
            },
            {
              "label": "inviteMin",
              "offset": 0,
              "slot": "18",
              "type": "t_uint256",
              "contract": "Presale",
              "src": "contracts/Presale.sol:31"
            },
            {
              "label": "maxSale",
              "offset": 0,
              "slot": "19",
              "type": "t_uint256",
              "contract": "Presale",
              "src": "contracts/Presale.sol:33"
            },
            {
              "label": "isCloseSale",
              "offset": 0,
              "slot": "20",
              "type": "t_bool",
              "contract": "Presale",
              "src": "contracts/Presale.sol:34"
            },
            {
              "label": "rewardLevel",
              "offset": 0,
              "slot": "21",
              "type": "t_array(t_uint256)dyn_storage",
              "contract": "Presale",
              "src": "contracts/Presale.sol:36"
            },
            {
              "label": "presaleInfo",
              "offset": 0,
              "slot": "22",
              "type": "t_struct(PresaleInfo)2392_storage",
              "contract": "Presale",
              "src": "contracts/Presale.sol:44"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_uint256)dyn_storage": {
              "label": "uint256[]",
              "numberOfBytes": "32"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_mapping(t_address,t_address)": {
              "label": "mapping(address => address)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_struct(PresaleInfo)2392_storage": {
              "label": "struct Presale.PresaleInfo",
              "members": [
                {
                  "label": "startTime",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "endTime",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "price",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "2"
                }
              ],
              "numberOfBytes": "96"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.21"
      },
      "contracts/Staking.sol:IRejuvenate": {
        "src": "contracts/Staking.sol:9",
        "inherit": [],
        "libraries": [],
        "methods": [
          "mint(address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.21"
      },
      "contracts/Staking.sol:Staking": {
        "src": "contracts/Staking.sol:13",
        "version": {
          "withMetadata": "d4a43fbe5f8d6347383f0680dba0a94146fceda61d8f28fb0ed926fda6eca5bc",
          "withoutMetadata": "8e35a11dc4a30aced1c096dd5db7f6424d19b292b732012b8d44d054f9cea466",
          "linkedWithoutMetadata": "8e35a11dc4a30aced1c096dd5db7f6424d19b292b732012b8d44d054f9cea466"
        },
        "inherit": [
          "@openzeppelin/contracts/security/ReentrancyGuard.sol:ReentrancyGuard",
          "@openzeppelin/contracts/access/Ownable.sol:Ownable",
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [],
        "methods": [
          "()",
          "changeRewardsPerBlock(uint256)",
          "rewardPerToken()",
          "earned(address)",
          "stake(uint256)",
          "unstake(uint256)",
          "claimRewards()",
          "pause()",
          "unpause()",
          "inCaseTokensGetStuck(address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Staking",
            "src": "contracts/Staking.sol:33"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Ownable",
              "src": "@openzeppelin/contracts/access/Ownable.sol:21"
            },
            {
              "label": "_status",
              "offset": 0,
              "slot": "1",
              "type": "t_uint256",
              "contract": "ReentrancyGuard",
              "src": "@openzeppelin/contracts/security/ReentrancyGuard.sol:37"
            },
            {
              "label": "paused",
              "offset": 0,
              "slot": "2",
              "type": "t_bool",
              "contract": "Staking",
              "src": "contracts/Staking.sol:14"
            },
            {
              "label": "_treasury",
              "offset": 1,
              "slot": "2",
              "type": "t_address",
              "contract": "Staking",
              "src": "contracts/Staking.sol:15"
            },
            {
              "label": "token",
              "offset": 0,
              "slot": "3",
              "type": "t_address",
              "contract": "Staking",
              "src": "contracts/Staking.sol:17"
            },
            {
              "label": "rewardRate",
              "offset": 0,
              "slot": "4",
              "type": "t_uint256",
              "contract": "Staking",
              "src": "contracts/Staking.sol:19"
            },
            {
              "label": "_lastUpdateBlock",
              "offset": 0,
              "slot": "5",
              "type": "t_uint256",
              "contract": "Staking",
              "src": "contracts/Staking.sol:20"
            },
            {
              "label": "_rewardsPerToken",
              "offset": 0,
              "slot": "6",
              "type": "t_uint256",
              "contract": "Staking",
              "src": "contracts/Staking.sol:21"
            },
            {
              "label": "data",
              "offset": 0,
              "slot": "7",
              "type": "t_array(t_struct(StakingData)3375_storage)dyn_storage",
              "contract": "Staking",
              "src": "contracts/Staking.sol:22"
            },
            {
              "label": "_userRewardsPerToken",
              "offset": 0,
              "slot": "8",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "Staking",
              "src": "contracts/Staking.sol:24"
            },
            {
              "label": "_rewards",
              "offset": 0,
              "slot": "9",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "Staking",
              "src": "contracts/Staking.sol:25"
            },
            {
              "label": "totalStaked",
              "offset": 0,
              "slot": "10",
              "type": "t_uint256",
              "contract": "Staking",
              "src": "contracts/Staking.sol:27"
            },
            {
              "label": "_balances",
              "offset": 0,
              "slot": "11",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "Staking",
              "src": "contracts/Staking.sol:28"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_struct(StakingData)3375_storage)dyn_storage": {
              "label": "struct StakingData[]",
              "numberOfBytes": "32"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_struct(StakingData)3375_storage": {
              "label": "struct StakingData",
              "members": [
                {
                  "label": "block",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "staked",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "1"
                }
              ],
              "numberOfBytes": "64"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.21"
      }
    },
    {
      "contracts/RichHusky.sol:Checker": {
        "src": "contracts/RichHusky.sol:520",
        "version": {
          "withMetadata": "17e1cf10fdffcda321c1a1f59d2b06178394724b4d8ad9b035a718122fed8a52",
          "withoutMetadata": "0faf6ca500781d04501ba7e4cf9138e35957321419c6ca29798480c22b3cc5cd",
          "linkedWithoutMetadata": "0faf6ca500781d04501ba7e4cf9138e35957321419c6ca29798480c22b3cc5cd"
        },
        "inherit": [],
        "libraries": [],
        "methods": [
          "isValid(address,address,address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.21"
      },
      "contracts/RichHusky.sol:Context": {
        "src": "contracts/RichHusky.sol:27",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.21"
      },
      "contracts/RichHusky.sol:ERC20": {
        "src": "contracts/RichHusky.sol:162",
        "version": {
          "withMetadata": "e092e43bc9c3243b7138ce015fa92d358fa66a764079145cfe1339f160fd055e",
          "withoutMetadata": "e248eda4094a79267c1d78eb85fb3a082e2ba4d153192b2644d6357dbed158f3",
          "linkedWithoutMetadata": "e248eda4094a79267c1d78eb85fb3a082e2ba4d153192b2644d6357dbed158f3"
        },
        "inherit": [
          "contracts/RichHusky.sol:IERC20Metadata",
          "contracts/RichHusky.sol:IERC20",
          "contracts/RichHusky.sol:Context"
        ],
        "libraries": [],
        "methods": [
          "(string,string)",
          "name()",
          "symbol()",
          "decimals()",
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)",
          "increaseAllowance(address,uint256)",
          "decreaseAllowance(address,uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ERC20",
            "src": "contracts/RichHusky.sol:181"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_balances",
              "offset": 0,
              "slot": "0",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC20",
              "src": "contracts/RichHusky.sol:163"
            },
            {
              "label": "_allowances",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "ERC20",
              "src": "contracts/RichHusky.sol:165"
            },
            {
              "label": "_totalSupply",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "ERC20",
              "src": "contracts/RichHusky.sol:167"
            },
            {
              "label": "_name",
              "offset": 0,
              "slot": "3",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "contracts/RichHusky.sol:169"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "4",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "contracts/RichHusky.sol:170"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.21"
      },
      "contracts/RichHusky.sol:IERC20": {
        "src": "contracts/RichHusky.sol:40",
        "inherit": [],
        "libraries": [],
        "methods": [
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.21"
      },
      "contracts/RichHusky.sol:IERC20Metadata": {
        "src": "contracts/RichHusky.sol:120",
        "inherit": [
          "contracts/RichHusky.sol:IERC20"
        ],
        "libraries": [],
        "methods": [
          "name()",
          "symbol()",
          "decimals()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.21"
      },
      "contracts/RichHusky.sol:IFactory": {
        "src": "contracts/RichHusky.sol:535",
        "inherit": [],
        "libraries": [],
        "methods": [
          "createPair(address,address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.21"
      },
      "contracts/RichHusky.sol:IGasToken": {
        "src": "contracts/RichHusky.sol:539",
        "inherit": [],
        "libraries": [],
        "methods": [
          "free(uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.21"
      },
      "contracts/RichHusky.sol:RichHusky": {
        "src": "contracts/RichHusky.sol:543",
        "version": {
          "withMetadata": "ce802161ba5ffecece3a7488fb3a07a35d8f78edf3674187d3eb27cc30777604",
          "withoutMetadata": "7c4ce62a347a52dc2685dbb41f6d968bb51e7d6abb10665abf0c7d7699da0d36",
          "linkedWithoutMetadata": "7c4ce62a347a52dc2685dbb41f6d968bb51e7d6abb10665abf0c7d7699da0d36"
        },
        "inherit": [
          "contracts/RichHusky.sol:ERC20",
          "contracts/RichHusky.sol:IERC20Metadata",
          "contracts/RichHusky.sol:IERC20",
          "contracts/RichHusky.sol:Context"
        ],
        "libraries": [
          "contracts/RichHusky.sol:Checker"
        ],
        "methods": [
          "(address)",
          "mint(address,uint256)",
          "updateAirdropAmount(uint256)",
          "withdrawFee(address,uint256)",
          "airdrop(address[],uint256)",
          "addBetaUsers(address[])",
          "removeBetaUsers(address[])",
          "multiCall(address[],bytes[])"
        ],
        "linkReferences": [
          {
            "src": "contracts/RichHusky.sol",
            "name": "Checker",
            "length": 20,
            "start": 5176,
            "placeholder": "__$1cb883ae52507a2d00adae80c79f632cb4$__"
          }
        ],
        "errors": [
          {
            "kind": "constructor",
            "contract": "RichHusky",
            "src": "contracts/RichHusky.sol:554"
          },
          {
            "kind": "state-variable-immutable",
            "name": "pancakeFactory",
            "src": "contracts/RichHusky.sol:549"
          },
          {
            "kind": "state-variable-immutable",
            "name": "WBNB",
            "src": "contracts/RichHusky.sol:550"
          },
          {
            "kind": "state-variable-immutable",
            "name": "GasToken",
            "src": "contracts/RichHusky.sol:552"
          },
          {
            "kind": "external-library-linking",
            "name": "Checker",
            "src": "contracts/RichHusky.sol"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_balances",
              "offset": 0,
              "slot": "0",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC20",
              "src": "contracts/RichHusky.sol:163"
            },
            {
              "label": "_allowances",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "ERC20",
              "src": "contracts/RichHusky.sol:165"
            },
            {
              "label": "_totalSupply",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "ERC20",
              "src": "contracts/RichHusky.sol:167"
            },
            {
              "label": "_name",
              "offset": 0,
              "slot": "3",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "contracts/RichHusky.sol:169"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "4",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "contracts/RichHusky.sol:170"
            },
            {
              "label": "dev",
              "offset": 0,
              "slot": "5",
              "type": "t_address",
              "contract": "RichHusky",
              "src": "contracts/RichHusky.sol:544"
            },
            {
              "label": "airdropAmount",
              "offset": 0,
              "slot": "6",
              "type": "t_uint256",
              "contract": "RichHusky",
              "src": "contracts/RichHusky.sol:545"
            },
            {
              "label": "betaUsers",
              "offset": 0,
              "slot": "7",
              "type": "t_mapping(t_address,t_bool)",
              "contract": "RichHusky",
              "src": "contracts/RichHusky.sol:546"
            },
            {
              "label": "pair",
              "offset": 0,
              "slot": "8",
              "type": "t_address",
              "contract": "RichHusky",
              "src": "contracts/RichHusky.sol:547"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.21"
      }
    },
    {
      "contracts/FirstDao.sol:FistDao": {
        "src": "contracts/FirstDao.sol:127",
        "version": {
          "withMetadata": "87594bf7d015e41aaf777bc0dc62e9e8a3685546fcfa065eb87291ef7f3f16f4",
          "withoutMetadata": "5bdb2538a3ba33172d93851875dfca20475ce01973348f896430788ab9d8314a",
          "linkedWithoutMetadata": "5bdb2538a3ba33172d93851875dfca20475ce01973348f896430788ab9d8314a"
        },
        "inherit": [
          "contracts/FirstDao.sol:Ownable",
          "contracts/FirstDao.sol:IERC20"
        ],
        "libraries": [
          "contracts/FirstDao.sol:SafeMath"
        ],
        "methods": [
          "(string,string)",
          "()",
          "initialize(address,address,address,address)",
          "transferEvent(address,address,uint256)",
          "feeState()",
          "getIsApproved(address)",
          "searchExcludedFromFeeAccounts(address)",
          "getDefaultBalance()",
          "insertIntoExcludedFromFeeAccounts(address[])",
          "deleteFromExcludedFromFeeAccounts(address[])",
          "claim(address,uint256)",
          "name()",
          "symbol()",
          "decimals()",
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "transferFrom(address,address,uint256)",
          "approve(address,uint256)",
          "allowance(address,address)",
          "increaseAllowance(address,uint256)",
          "decreaseAllowance(address,uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "FistDao",
            "src": "contracts/FirstDao.sol:159"
          },
          {
            "kind": "state-variable-assignment",
            "name": "_decimals",
            "src": "contracts/FirstDao.sol:132"
          },
          {
            "kind": "state-variable-assignment",
            "name": "_totalSupply",
            "src": "contracts/FirstDao.sol:133"
          },
          {
            "kind": "state-variable-assignment",
            "name": "_feeTax",
            "src": "contracts/FirstDao.sol:138"
          },
          {
            "kind": "state-variable-assignment",
            "name": "_feeMining",
            "src": "contracts/FirstDao.sol:139"
          },
          {
            "kind": "state-variable-assignment",
            "name": "_feeLiquidity",
            "src": "contracts/FirstDao.sol:140"
          },
          {
            "kind": "state-variable-assignment",
            "name": "_feeDivisor",
            "src": "contracts/FirstDao.sol:141"
          },
          {
            "kind": "state-variable-assignment",
            "name": "_removeAllFee",
            "src": "contracts/FirstDao.sol:143"
          },
          {
            "kind": "state-variable-assignment",
            "name": "_defaultBalance",
            "src": "contracts/FirstDao.sol:150"
          },
          {
            "kind": "state-variable-assignment",
            "name": "_defaultAmount",
            "src": "contracts/FirstDao.sol:151"
          },
          {
            "kind": "state-variable-assignment",
            "name": "_initialized111",
            "src": "contracts/FirstDao.sol:156"
          },
          {
            "kind": "state-variable-assignment",
            "name": "_reentry",
            "src": "contracts/FirstDao.sol:157"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Ownable",
              "src": "contracts/FirstDao.sol:58"
            },
            {
              "label": "_previousOwner",
              "offset": 0,
              "slot": "1",
              "type": "t_address",
              "contract": "Ownable",
              "src": "contracts/FirstDao.sol:59"
            },
            {
              "label": "_switchDate",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "Ownable",
              "src": "contracts/FirstDao.sol:60"
            },
            {
              "label": "_name",
              "offset": 0,
              "slot": "3",
              "type": "t_string_storage",
              "contract": "FistDao",
              "src": "contracts/FirstDao.sol:130"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "4",
              "type": "t_string_storage",
              "contract": "FistDao",
              "src": "contracts/FirstDao.sol:131"
            },
            {
              "label": "_decimals",
              "offset": 0,
              "slot": "5",
              "type": "t_uint8",
              "contract": "FistDao",
              "src": "contracts/FirstDao.sol:132"
            },
            {
              "label": "_totalSupply",
              "offset": 0,
              "slot": "6",
              "type": "t_uint256",
              "contract": "FistDao",
              "src": "contracts/FirstDao.sol:133"
            },
            {
              "label": "_balances",
              "offset": 0,
              "slot": "7",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "FistDao",
              "src": "contracts/FirstDao.sol:134"
            },
            {
              "label": "_allowances",
              "offset": 0,
              "slot": "8",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "FistDao",
              "src": "contracts/FirstDao.sol:135"
            },
            {
              "label": "_isApproved",
              "offset": 0,
              "slot": "9",
              "type": "t_mapping(t_address,t_bool)",
              "contract": "FistDao",
              "src": "contracts/FirstDao.sol:136"
            },
            {
              "label": "_feeTax",
              "offset": 0,
              "slot": "10",
              "type": "t_uint256",
              "contract": "FistDao",
              "src": "contracts/FirstDao.sol:138"
            },
            {
              "label": "_feeMining",
              "offset": 0,
              "slot": "11",
              "type": "t_uint256",
              "contract": "FistDao",
              "src": "contracts/FirstDao.sol:139"
            },
            {
              "label": "_feeLiquidity",
              "offset": 0,
              "slot": "12",
              "type": "t_uint256",
              "contract": "FistDao",
              "src": "contracts/FirstDao.sol:140"
            },
            {
              "label": "_feeDivisor",
              "offset": 0,
              "slot": "13",
              "type": "t_uint256",
              "contract": "FistDao",
              "src": "contracts/FirstDao.sol:141"
            },
            {
              "label": "_removeAllFee",
              "offset": 0,
              "slot": "14",
              "type": "t_bool",
              "contract": "FistDao",
              "src": "contracts/FirstDao.sol:143"
            },
            {
              "label": "_core",
              "offset": 1,
              "slot": "14",
              "type": "t_address",
              "contract": "FistDao",
              "src": "contracts/FirstDao.sol:145"
            },
            {
              "label": "_taxReceiver",
              "offset": 0,
              "slot": "15",
              "type": "t_address",
              "contract": "FistDao",
              "src": "contracts/FirstDao.sol:146"
            },
            {
              "label": "_miningPool",
              "offset": 0,
              "slot": "16",
              "type": "t_address",
              "contract": "FistDao",
              "src": "contracts/FirstDao.sol:147"
            },
            {
              "label": "_liquidityPool",
              "offset": 0,
              "slot": "17",
              "type": "t_address",
              "contract": "FistDao",
              "src": "contracts/FirstDao.sol:148"
            },
            {
              "label": "_defaultBalance",
              "offset": 0,
              "slot": "18",
              "type": "t_uint256",
              "contract": "FistDao",
              "src": "contracts/FirstDao.sol:150"
            },
            {
              "label": "_defaultAmount",
              "offset": 0,
              "slot": "19",
              "type": "t_uint256",
              "contract": "FistDao",
              "src": "contracts/FirstDao.sol:151"
            },
            {
              "label": "_isExcludedFromFee",
              "offset": 0,
              "slot": "20",
              "type": "t_mapping(t_address,t_bool)",
              "contract": "FistDao",
              "src": "contracts/FirstDao.sol:153"
            },
            {
              "label": "_excludedFromFeeAccounts",
              "offset": 0,
              "slot": "21",
              "type": "t_array(t_address)dyn_storage",
              "contract": "FistDao",
              "src": "contracts/FirstDao.sol:154"
            },
            {
              "label": "_initialized111",
              "offset": 0,
              "slot": "22",
              "type": "t_bool",
              "contract": "FistDao",
              "src": "contracts/FirstDao.sol:156"
            },
            {
              "label": "_reentry",
              "offset": 0,
              "slot": "23",
              "type": "t_uint256",
              "contract": "FistDao",
              "src": "contracts/FirstDao.sol:157"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_address)dyn_storage": {
              "label": "address[]",
              "numberOfBytes": "32"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint8": {
              "label": "uint8",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.21"
      },
      "contracts/FirstDao.sol:ICore": {
        "src": "contracts/FirstDao.sol:119",
        "inherit": [],
        "libraries": [],
        "methods": [
          "getPairAddress()",
          "airdrop()",
          "safety(address,address)",
          "start()",
          "end()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.21"
      },
      "contracts/FirstDao.sol:IERC20": {
        "src": "contracts/FirstDao.sol:8",
        "inherit": [],
        "libraries": [],
        "methods": [
          "name()",
          "symbol()",
          "decimals()",
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "transferFrom(address,address,uint256)",
          "approve(address,uint256)",
          "allowance(address,address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.21"
      },
      "contracts/FirstDao.sol:IFactory": {
        "src": "contracts/FirstDao.sol:91",
        "inherit": [],
        "libraries": [],
        "methods": [
          "createPair(address,address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.21"
      },
      "contracts/FirstDao.sol:IRouter01": {
        "src": "contracts/FirstDao.sol:95",
        "inherit": [],
        "libraries": [],
        "methods": [
          "factory()",
          "addLiquidity(address,address,uint256,uint256,uint256,uint256,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.21"
      },
      "contracts/FirstDao.sol:IRouter02": {
        "src": "contracts/FirstDao.sol:109",
        "inherit": [
          "contracts/FirstDao.sol:IRouter01"
        ],
        "libraries": [],
        "methods": [
          "swapExactTokensForTokensSupportingFeeOnTransferTokens(uint256,uint256,address[],address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.21"
      },
      "contracts/FirstDao.sol:Ownable": {
        "src": "contracts/FirstDao.sol:57",
        "inherit": [],
        "libraries": [],
        "methods": [
          "owner()",
          "switchDate()",
          "transferOwnership(uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Ownable",
            "src": "contracts/FirstDao.sol:63"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Ownable",
              "src": "contracts/FirstDao.sol:58"
            },
            {
              "label": "_previousOwner",
              "offset": 0,
              "slot": "1",
              "type": "t_address",
              "contract": "Ownable",
              "src": "contracts/FirstDao.sol:59"
            },
            {
              "label": "_switchDate",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "Ownable",
              "src": "contracts/FirstDao.sol:60"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.21"
      },
      "contracts/FirstDao.sol:SafeMath": {
        "src": "contracts/FirstDao.sol:22",
        "version": {
          "withMetadata": "95eb3df1bd62a62b1bf87150f7314053125cc709ed6eb26f9bf2a30d8fc55e32",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.21"
      }
    },
    {
      "contracts/IFiles.sol:Address": {
        "src": "contracts/IFiles.sol:147",
        "version": {
          "withMetadata": "73f3d745b82ff92d492794f39ddc131795315255895e196d918dc1260c813488",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.21"
      },
      "contracts/IFiles.sol:Context": {
        "src": "contracts/IFiles.sol:135",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.21"
      },
      "contracts/IFiles.sol:IBEP20": {
        "src": "contracts/IFiles.sol:9",
        "inherit": [],
        "libraries": [],
        "methods": [
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.21"
      },
      "contracts/IFiles.sol:IPancakeFactory": {
        "src": "contracts/IFiles.sol:327",
        "inherit": [],
        "libraries": [],
        "methods": [
          "feeTo()",
          "feeToSetter()",
          "getPair(address,address)",
          "allPairs(uint256)",
          "allPairsLength()",
          "createPair(address,address)",
          "setFeeTo(address)",
          "setFeeToSetter(address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.21"
      },
      "contracts/IFiles.sol:IPancakePair": {
        "src": "contracts/IFiles.sol:357",
        "inherit": [],
        "libraries": [],
        "methods": [
          "name()",
          "symbol()",
          "decimals()",
          "totalSupply()",
          "balanceOf(address)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transfer(address,uint256)",
          "transferFrom(address,address,uint256)",
          "DOMAIN_SEPARATOR()",
          "PERMIT_TYPEHASH()",
          "nonces(address)",
          "permit(address,address,uint256,uint256,uint8,bytes32,bytes32)",
          "MINIMUM_LIQUIDITY()",
          "factory()",
          "token0()",
          "token1()",
          "getReserves()",
          "price0CumulativeLast()",
          "price1CumulativeLast()",
          "kLast()",
          "mint(address)",
          "burn(address)",
          "swap(uint256,uint256,address,bytes)",
          "skim(address)",
          "sync()",
          "initialize(address,address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.21"
      },
      "contracts/IFiles.sol:IPancakeRouter01": {
        "src": "contracts/IFiles.sol:466",
        "inherit": [],
        "libraries": [],
        "methods": [
          "factory()",
          "WETH()",
          "addLiquidity(address,address,uint256,uint256,uint256,uint256,address,uint256)",
          "addLiquidityETH(address,uint256,uint256,uint256,address,uint256)",
          "removeLiquidity(address,address,uint256,uint256,uint256,address,uint256)",
          "removeLiquidityETH(address,uint256,uint256,uint256,address,uint256)",
          "removeLiquidityWithPermit(address,address,uint256,uint256,uint256,address,uint256,bool,uint8,bytes32,bytes32)",
          "removeLiquidityETHWithPermit(address,uint256,uint256,uint256,address,uint256,bool,uint8,bytes32,bytes32)",
          "swapExactTokensForTokens(uint256,uint256,address[],address,uint256)",
          "swapTokensForExactTokens(uint256,uint256,address[],address,uint256)",
          "swapExactETHForTokens(uint256,address[],address,uint256)",
          "swapTokensForExactETH(uint256,uint256,address[],address,uint256)",
          "swapExactTokensForETH(uint256,uint256,address[],address,uint256)",
          "swapETHForExactTokens(uint256,address[],address,uint256)",
          "quote(uint256,uint256,uint256)",
          "getAmountOut(uint256,uint256,uint256)",
          "getAmountIn(uint256,uint256,uint256)",
          "getAmountsOut(uint256,address[])",
          "getAmountsIn(uint256,address[])"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.21"
      },
      "contracts/IFiles.sol:IPancakeRouter02": {
        "src": "contracts/IFiles.sol:626",
        "inherit": [
          "contracts/IFiles.sol:IPancakeRouter01"
        ],
        "libraries": [],
        "methods": [
          "removeLiquidityETHSupportingFeeOnTransferTokens(address,uint256,uint256,uint256,address,uint256)",
          "removeLiquidityETHWithPermitSupportingFeeOnTransferTokens(address,uint256,uint256,uint256,address,uint256,bool,uint8,bytes32,bytes32)",
          "swapExactTokensForTokensSupportingFeeOnTransferTokens(uint256,uint256,address[],address,uint256)",
          "swapExactETHForTokensSupportingFeeOnTransferTokens(uint256,address[],address,uint256)",
          "swapExactTokensForETHSupportingFeeOnTransferTokens(uint256,uint256,address[],address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.21"
      },
      "contracts/IFiles.sol:IWBNB": {
        "src": "contracts/IFiles.sol:38",
        "inherit": [],
        "libraries": [],
        "methods": [
          "name()",
          "symbol()",
          "decimals()",
          "balanceOf(address)",
          "allowance(address,address)",
          "()",
          "deposit()",
          "withdraw(uint256)",
          "totalSupply()",
          "approve(address,uint256)",
          "transfer(address,uint256)",
          "transferFrom(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.21"
      },
      "contracts/IFiles.sol:Initializable": {
        "src": "contracts/IFiles.sol:249",
        "version": {
          "withMetadata": "ba793f874980ba8826e0f77e588821b7a373c942b97ebcd7e4e42f378e00e824",
          "withoutMetadata": "ac0db523ddc3e330f735df7b3b0b24460531c71290a891170e840f8f67d5ff6b",
          "linkedWithoutMetadata": "ac0db523ddc3e330f735df7b3b0b24460531c71290a891170e840f8f67d5ff6b"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "contracts/IFiles.sol:251"
            },
            {
              "label": "initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "contracts/IFiles.sol:252"
            },
            {
              "label": "______gap",
              "offset": 0,
              "slot": "1",
              "type": "t_array(t_uint256)50_storage",
              "contract": "Initializable",
              "src": "contracts/IFiles.sol:283"
            }
          ],
          "types": {
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]",
              "numberOfBytes": "1600"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.21"
      },
      "contracts/IFiles.sol:Ownable": {
        "src": "contracts/IFiles.sol:286",
        "version": {
          "withMetadata": "9b6e83ec071c913ea8078938bf6c8e47f6ce697f181f2ebf31dc4937807eb386",
          "withoutMetadata": "a3dd09084d5d3377afaa5e637593b425fb1172db63a48c2f62428555638775f8",
          "linkedWithoutMetadata": "a3dd09084d5d3377afaa5e637593b425fb1172db63a48c2f62428555638775f8"
        },
        "inherit": [
          "contracts/IFiles.sol:Initializable",
          "contracts/IFiles.sol:Context"
        ],
        "libraries": [],
        "methods": [
          "()",
          "initOwner(address)",
          "owner()",
          "renounceOwnership()",
          "transferOwnership(address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "contracts/IFiles.sol:251"
            },
            {
              "label": "initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "contracts/IFiles.sol:252"
            },
            {
              "label": "______gap",
              "offset": 0,
              "slot": "1",
              "type": "t_array(t_uint256)50_storage",
              "contract": "Initializable",
              "src": "contracts/IFiles.sol:283"
            },
            {
              "label": "_owner",
              "offset": 0,
              "slot": "51",
              "type": "t_address",
              "contract": "Ownable",
              "src": "contracts/IFiles.sol:287"
            },
            {
              "label": "_previousOwner",
              "offset": 0,
              "slot": "52",
              "type": "t_address",
              "contract": "Ownable",
              "src": "contracts/IFiles.sol:288"
            },
            {
              "label": "_lockTime",
              "offset": 0,
              "slot": "53",
              "type": "t_uint256",
              "contract": "Ownable",
              "src": "contracts/IFiles.sol:289"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]",
              "numberOfBytes": "1600"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.21"
      },
      "contracts/IFiles.sol:SafeMath": {
        "src": "contracts/IFiles.sol:68",
        "version": {
          "withMetadata": "6a5db877229c78c84b33e85a297bea1121c6a6195aa310f30cbe69888293c5ae",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.21"
      },
      "contracts/ReentrancyGuard.sol:ReentrancyGuard": {
        "src": "contracts/ReentrancyGuard.sol:5",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ReentrancyGuard",
            "src": "contracts/ReentrancyGuard.sol:12"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_status",
              "offset": 0,
              "slot": "0",
              "type": "t_uint256",
              "contract": "ReentrancyGuard",
              "src": "contracts/ReentrancyGuard.sol:10"
            }
          ],
          "types": {
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.21"
      },
      "contracts/Utils.sol:PancakeLibrary": {
        "src": "contracts/Utils.sol:219",
        "version": {
          "withMetadata": "668337a75717822cd6d73bbd1c50526e84e4af10cd45125b1756676395a2f30c",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [
          "contracts/IFiles.sol:SafeMath"
        ],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.21"
      },
      "contracts/Utils.sol:Utils": {
        "src": "contracts/Utils.sol:6",
        "version": {
          "withMetadata": "a5775bd7ff330a5dfa7ddaef645bcc8fbccdcd3c38fbc9fc1755e3e3a9a09d47",
          "withoutMetadata": "8ca6da6b824cadf2e1f9c600b5f1381080c8b8d75dddf5423f35e25222daaeda",
          "linkedWithoutMetadata": "8ca6da6b824cadf2e1f9c600b5f1381080c8b8d75dddf5423f35e25222daaeda"
        },
        "inherit": [],
        "libraries": [
          "contracts/IFiles.sol:SafeMath"
        ],
        "methods": [
          "calculateBNBReward(uint256,uint256,uint256,uint256)",
          "calculateTopUpClaim(uint256,uint256,uint256,uint256)",
          "swapTokensForEth(address,uint256)",
          "swapETHForTokens(address,address,uint256)",
          "swapTokensForTokens(address,address,uint256)",
          "getAmountsout(uint256,address)",
          "addLiquidity(address,address,uint256,uint256)",
          "getAntiFlipTaxNo(uint256)",
          "calcReward(uint256,uint256,uint256,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.21"
      }
    },
    {
      "contracts/Proxy.sol:Caller": {
        "src": "contracts/Proxy.sol:80",
        "version": {
          "withMetadata": "8a43f4805f6ec5dd7b7379a87ef3fa89b1f2cd8e86292442058e51e90f40e31d",
          "withoutMetadata": "d6211a178c252503f87d41bbcceffa66551bde0c0c4b0cc3c5a44a4f489e2c7f",
          "linkedWithoutMetadata": "d6211a178c252503f87d41bbcceffa66551bde0c0c4b0cc3c5a44a4f489e2c7f"
        },
        "inherit": [],
        "libraries": [],
        "methods": [
          "(address)",
          "increase()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Caller",
            "src": "contracts/Proxy.sol:80"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "proxy",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Caller",
              "src": "contracts/Proxy.sol:80"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.21"
      },
      "contracts/Proxy.sol:Proxy": {
        "src": "contracts/Proxy.sol:10",
        "version": {
          "withMetadata": "3a655b5f054f4310d279144652e269b840bf308c06f48e08f2d407ee1381c2c1",
          "withoutMetadata": "bc7fcd1c64d2f798926ae830c3e369a33c770ea294cd9047d184a8c885a96818",
          "linkedWithoutMetadata": "bc7fcd1c64d2f798926ae830c3e369a33c770ea294cd9047d184a8c885a96818"
        },
        "inherit": [],
        "libraries": [],
        "methods": [
          "(address)",
          "()",
          "()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Proxy",
            "src": "contracts/Proxy.sol:22"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "implementation",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Proxy",
              "src": "contracts/Proxy.sol:13"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.21"
      }
    },
    {
      "contracts/Logic.sol:Logic": {
        "src": "contracts/Logic.sol:9",
        "version": {
          "withMetadata": "087c86b163578853fb1cba09b22843df8f815c95bf2568200ddd8e1dbf167fea",
          "withoutMetadata": "a9feffbc7087e9529577fb0b368171b85b94d25918f43b5d410eb0f186274034",
          "linkedWithoutMetadata": "a9feffbc7087e9529577fb0b368171b85b94d25918f43b5d410eb0f186274034"
        },
        "inherit": [],
        "libraries": [],
        "methods": [
          "increment()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "state-variable-assignment",
            "name": "x",
            "src": "contracts/Logic.sol:13"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "implementation",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Logic",
              "src": "contracts/Logic.sol:9"
            },
            {
              "label": "x",
              "offset": 0,
              "slot": "1",
              "type": "t_uint256",
              "contract": "Logic",
              "src": "contracts/Logic.sol:13"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.21"
      }
    },
    {
      "contracts/Logic.sol:Logic": {
        "src": "contracts/Logic.sol:9",
        "version": {
          "withMetadata": "087c86b163578853fb1cba09b22843df8f815c95bf2568200ddd8e1dbf167fea",
          "withoutMetadata": "a9feffbc7087e9529577fb0b368171b85b94d25918f43b5d410eb0f186274034",
          "linkedWithoutMetadata": "a9feffbc7087e9529577fb0b368171b85b94d25918f43b5d410eb0f186274034"
        },
        "inherit": [],
        "libraries": [],
        "methods": [
          "increment()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "state-variable-assignment",
            "name": "x",
            "src": "contracts/Logic.sol:13"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "implementation",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Logic",
              "src": "contracts/Logic.sol:9"
            },
            {
              "label": "x",
              "offset": 0,
              "slot": "1",
              "type": "t_uint256",
              "contract": "Logic",
              "src": "contracts/Logic.sol:13"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.21"
      }
    },
    {
      "@openzeppelin/contracts/access/Ownable.sol:Ownable": {
        "src": "@openzeppelin/contracts/access/Ownable.sol:20",
        "inherit": [
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [],
        "methods": [
          "owner()",
          "renounceOwnership()",
          "transferOwnership(address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Ownable",
            "src": "@openzeppelin/contracts/access/Ownable.sol:28"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Ownable",
              "src": "@openzeppelin/contracts/access/Ownable.sol:21"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.21"
      },
      "@openzeppelin/contracts/security/ReentrancyGuard.sol:ReentrancyGuard": {
        "src": "@openzeppelin/contracts/security/ReentrancyGuard.sol:22",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ReentrancyGuard",
            "src": "@openzeppelin/contracts/security/ReentrancyGuard.sol:39"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_status",
              "offset": 0,
              "slot": "0",
              "type": "t_uint256",
              "contract": "ReentrancyGuard",
              "src": "@openzeppelin/contracts/security/ReentrancyGuard.sol:37"
            }
          ],
          "types": {
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.21"
      },
      "@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20": {
        "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:35",
        "version": {
          "withMetadata": "b653be9ad258ddaafa2304767243ba86eac7156acd9bf1a196bee0fef9b1c3a9",
          "withoutMetadata": "1d55e2dc08aae4fa5bd2ca8ac476f7a2e63bdfa7b0b51d4bd61db8705143a140",
          "linkedWithoutMetadata": "1d55e2dc08aae4fa5bd2ca8ac476f7a2e63bdfa7b0b51d4bd61db8705143a140"
        },
        "inherit": [
          "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol:IERC20Metadata",
          "@openzeppelin/contracts/token/ERC20/IERC20.sol:IERC20",
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [],
        "methods": [
          "(string,string)",
          "name()",
          "symbol()",
          "decimals()",
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)",
          "increaseAllowance(address,uint256)",
          "decreaseAllowance(address,uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ERC20",
            "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:54"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_balances",
              "offset": 0,
              "slot": "0",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:36"
            },
            {
              "label": "_allowances",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:38"
            },
            {
              "label": "_totalSupply",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:40"
            },
            {
              "label": "_name",
              "offset": 0,
              "slot": "3",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:42"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "4",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:43"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.21"
      },
      "@openzeppelin/contracts/token/ERC20/IERC20.sol:IERC20": {
        "src": "@openzeppelin/contracts/token/ERC20/IERC20.sol:9",
        "inherit": [],
        "libraries": [],
        "methods": [
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.21"
      },
      "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol:IERC20Metadata": {
        "src": "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol:13",
        "inherit": [
          "@openzeppelin/contracts/token/ERC20/IERC20.sol:IERC20"
        ],
        "libraries": [],
        "methods": [
          "name()",
          "symbol()",
          "decimals()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.21"
      },
      "@openzeppelin/contracts/token/ERC20/extensions/draft-IERC20Permit.sol:IERC20Permit": {
        "src": "@openzeppelin/contracts/token/ERC20/extensions/draft-IERC20Permit.sol:14",
        "inherit": [],
        "libraries": [],
        "methods": [
          "permit(address,address,uint256,uint256,uint8,bytes32,bytes32)",
          "nonces(address)",
          "DOMAIN_SEPARATOR()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.21"
      },
      "@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol:SafeERC20": {
        "src": "@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol:19",
        "version": {
          "withMetadata": "945db44b71722f915e3e7352ee22f854dfe8000e69eee742d881b64279bb0ad8",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [
          "@openzeppelin/contracts/utils/Address.sol:Address"
        ],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.21"
      },
      "@openzeppelin/contracts/utils/Address.sol:Address": {
        "src": "@openzeppelin/contracts/utils/Address.sol:9",
        "version": {
          "withMetadata": "9401bbf4dc0decc4c739a060967031a16e8de389388d98c32ec11cff440d6513",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [
          {
            "kind": "delegatecall",
            "src": "@openzeppelin/contracts/utils/Address.sol:191"
          },
          {
            "kind": "delegatecall",
            "src": "@openzeppelin/contracts/utils/Address.sol:191"
          }
        ],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.21"
      },
      "@openzeppelin/contracts/utils/Context.sol:Context": {
        "src": "@openzeppelin/contracts/utils/Context.sol:16",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.21"
      },
      "@openzeppelin/contracts/utils/math/Math.sol:Math": {
        "src": "@openzeppelin/contracts/utils/math/Math.sol:9",
        "version": {
          "withMetadata": "f58f3d1d6b53395057afc8a5e1edcbfcd81cdec0dfcf6b1290c8c2368b975278",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.21"
      },
      "@openzeppelin/contracts/utils/math/SafeMath.sol:SafeMath": {
        "src": "@openzeppelin/contracts/utils/math/SafeMath.sol:16",
        "version": {
          "withMetadata": "4167346fe154a63f59e72262dbca9ccb097c97b61ec5dfe163259378386d2ba4",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.21"
      },
      "contracts/Presale.sol:IGoldToken": {
        "src": "contracts/Presale.sol:8",
        "inherit": [],
        "libraries": [],
        "methods": [
          "mint(address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.21"
      },
      "contracts/Presale.sol:Presale": {
        "src": "contracts/Presale.sol:12",
        "version": {
          "withMetadata": "55de4f41aa2ae4e88c3e975f7f7c871c8630a6a915f505e8b168c82d5665ef13",
          "withoutMetadata": "2fa5a3bfe1ae715a2695aad2a1fdda65dd5f2dfe346a8af0822d82b296b7bc1b",
          "linkedWithoutMetadata": "2fa5a3bfe1ae715a2695aad2a1fdda65dd5f2dfe346a8af0822d82b296b7bc1b"
        },
        "inherit": [
          "@openzeppelin/contracts/security/ReentrancyGuard.sol:ReentrancyGuard",
          "@openzeppelin/contracts/access/Ownable.sol:Ownable",
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [],
        "methods": [
          "(address,address,address,uint256)",
          "createPreSale((uint256,uint256,uint256))",
          "sale()",
          "getCanIdoAmount(address)",
          "bindReffer(address)",
          "userBalance(address)",
          "userRewardBalance(address)",
          "userWithdraw()",
          "teamWithdraw(address)",
          "setUserWithdrawTime(uint256)",
          "setInviteMin(uint256)",
          "setPerMaxBuyUsdt(uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Presale",
            "src": "contracts/Presale.sol:46"
          },
          {
            "kind": "state-variable-assignment",
            "name": "perMaxBuyUsdt",
            "src": "contracts/Presale.sol:15"
          },
          {
            "kind": "state-variable-assignment",
            "name": "inviteMin",
            "src": "contracts/Presale.sol:31"
          },
          {
            "kind": "state-variable-assignment",
            "name": "maxSale",
            "src": "contracts/Presale.sol:33"
          },
          {
            "kind": "state-variable-assignment",
            "name": "rewardLevel",
            "src": "contracts/Presale.sol:36"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Ownable",
              "src": "@openzeppelin/contracts/access/Ownable.sol:21"
            },
            {
              "label": "_status",
              "offset": 0,
              "slot": "1",
              "type": "t_uint256",
              "contract": "ReentrancyGuard",
              "src": "@openzeppelin/contracts/security/ReentrancyGuard.sol:37"
            },
            {
              "label": "userWithdrawTime",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "Presale",
              "src": "contracts/Presale.sol:13"
            },
            {
              "label": "perMaxBuyUsdt",
              "offset": 0,
              "slot": "3",
              "type": "t_uint256",
              "contract": "Presale",
              "src": "contracts/Presale.sol:15"
            },
            {
              "label": "teamAddress",
              "offset": 0,
              "slot": "4",
              "type": "t_address",
              "contract": "Presale",
              "src": "contracts/Presale.sol:16"
            },
            {
              "label": "saleToken",
              "offset": 0,
              "slot": "5",
              "type": "t_address",
              "contract": "Presale",
              "src": "contracts/Presale.sol:17"
            },
            {
              "label": "usdtToken",
              "offset": 0,
              "slot": "6",
              "type": "t_address",
              "contract": "Presale",
              "src": "contracts/Presale.sol:18"
            },
            {
              "label": "goldTokenAddress",
              "offset": 0,
              "slot": "7",
              "type": "t_address",
              "contract": "Presale",
              "src": "contracts/Presale.sol:19"
            },
            {
              "label": "balances",
              "offset": 0,
              "slot": "8",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "Presale",
              "src": "contracts/Presale.sol:20"
            },
            {
              "label": "userBuyTotalUsdt",
              "offset": 0,
              "slot": "9",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "Presale",
              "src": "contracts/Presale.sol:21"
            },
            {
              "label": "rewardBalances",
              "offset": 0,
              "slot": "10",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "Presale",
              "src": "contracts/Presale.sol:22"
            },
            {
              "label": "reffers",
              "offset": 0,
              "slot": "11",
              "type": "t_mapping(t_address,t_address)",
              "contract": "Presale",
              "src": "contracts/Presale.sol:23"
            },
            {
              "label": "refferNumber",
              "offset": 0,
              "slot": "12",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "Presale",
              "src": "contracts/Presale.sol:24"
            },
            {
              "label": "teamRefferNumber",
              "offset": 0,
              "slot": "13",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "Presale",
              "src": "contracts/Presale.sol:25"
            },
            {
              "label": "firstIdo",
              "offset": 0,
              "slot": "14",
              "type": "t_mapping(t_address,t_bool)",
              "contract": "Presale",
              "src": "contracts/Presale.sol:26"
            },
            {
              "label": "totalIdoUSDT",
              "offset": 0,
              "slot": "15",
              "type": "t_uint256",
              "contract": "Presale",
              "src": "contracts/Presale.sol:27"
            },
            {
              "label": "totalIdoUser",
              "offset": 0,
              "slot": "16",
              "type": "t_uint256",
              "contract": "Presale",
              "src": "contracts/Presale.sol:28"
            },
            {
              "label": "totalSale",
              "offset": 0,
              "slot": "17",
              "type": "t_uint256",
              "contract": "Presale",
              "src": "contracts/Presale.sol:29"
            },
            {
              "label": "inviteMin",
              "offset": 0,
              "slot": "18",
              "type": "t_uint256",
              "contract": "Presale",
              "src": "contracts/Presale.sol:31"
            },
            {
              "label": "maxSale",
              "offset": 0,
              "slot": "19",
              "type": "t_uint256",
              "contract": "Presale",
              "src": "contracts/Presale.sol:33"
            },
            {
              "label": "isCloseSale",
              "offset": 0,
              "slot": "20",
              "type": "t_bool",
              "contract": "Presale",
              "src": "contracts/Presale.sol:34"
            },
            {
              "label": "rewardLevel",
              "offset": 0,
              "slot": "21",
              "type": "t_array(t_uint256)dyn_storage",
              "contract": "Presale",
              "src": "contracts/Presale.sol:36"
            },
            {
              "label": "presaleInfo",
              "offset": 0,
              "slot": "22",
              "type": "t_struct(PresaleInfo)2392_storage",
              "contract": "Presale",
              "src": "contracts/Presale.sol:44"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_uint256)dyn_storage": {
              "label": "uint256[]",
              "numberOfBytes": "32"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_mapping(t_address,t_address)": {
              "label": "mapping(address => address)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_struct(PresaleInfo)2392_storage": {
              "label": "struct Presale.PresaleInfo",
              "members": [
                {
                  "label": "startTime",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "endTime",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "price",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "2"
                }
              ],
              "numberOfBytes": "96"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.21"
      },
      "contracts/Staking.sol:IRejuvenate": {
        "src": "contracts/Staking.sol:9",
        "inherit": [],
        "libraries": [],
        "methods": [
          "mint(address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.21"
      },
      "contracts/Staking.sol:Staking": {
        "src": "contracts/Staking.sol:13",
        "version": {
          "withMetadata": "d4a43fbe5f8d6347383f0680dba0a94146fceda61d8f28fb0ed926fda6eca5bc",
          "withoutMetadata": "8e35a11dc4a30aced1c096dd5db7f6424d19b292b732012b8d44d054f9cea466",
          "linkedWithoutMetadata": "8e35a11dc4a30aced1c096dd5db7f6424d19b292b732012b8d44d054f9cea466"
        },
        "inherit": [
          "@openzeppelin/contracts/security/ReentrancyGuard.sol:ReentrancyGuard",
          "@openzeppelin/contracts/access/Ownable.sol:Ownable",
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [],
        "methods": [
          "()",
          "changeRewardsPerBlock(uint256)",
          "rewardPerToken()",
          "earned(address)",
          "stake(uint256)",
          "unstake(uint256)",
          "claimRewards()",
          "pause()",
          "unpause()",
          "inCaseTokensGetStuck(address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Staking",
            "src": "contracts/Staking.sol:33"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Ownable",
              "src": "@openzeppelin/contracts/access/Ownable.sol:21"
            },
            {
              "label": "_status",
              "offset": 0,
              "slot": "1",
              "type": "t_uint256",
              "contract": "ReentrancyGuard",
              "src": "@openzeppelin/contracts/security/ReentrancyGuard.sol:37"
            },
            {
              "label": "paused",
              "offset": 0,
              "slot": "2",
              "type": "t_bool",
              "contract": "Staking",
              "src": "contracts/Staking.sol:14"
            },
            {
              "label": "_treasury",
              "offset": 1,
              "slot": "2",
              "type": "t_address",
              "contract": "Staking",
              "src": "contracts/Staking.sol:15"
            },
            {
              "label": "token",
              "offset": 0,
              "slot": "3",
              "type": "t_address",
              "contract": "Staking",
              "src": "contracts/Staking.sol:17"
            },
            {
              "label": "rewardRate",
              "offset": 0,
              "slot": "4",
              "type": "t_uint256",
              "contract": "Staking",
              "src": "contracts/Staking.sol:19"
            },
            {
              "label": "_lastUpdateBlock",
              "offset": 0,
              "slot": "5",
              "type": "t_uint256",
              "contract": "Staking",
              "src": "contracts/Staking.sol:20"
            },
            {
              "label": "_rewardsPerToken",
              "offset": 0,
              "slot": "6",
              "type": "t_uint256",
              "contract": "Staking",
              "src": "contracts/Staking.sol:21"
            },
            {
              "label": "data",
              "offset": 0,
              "slot": "7",
              "type": "t_array(t_struct(StakingData)3375_storage)dyn_storage",
              "contract": "Staking",
              "src": "contracts/Staking.sol:22"
            },
            {
              "label": "_userRewardsPerToken",
              "offset": 0,
              "slot": "8",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "Staking",
              "src": "contracts/Staking.sol:24"
            },
            {
              "label": "_rewards",
              "offset": 0,
              "slot": "9",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "Staking",
              "src": "contracts/Staking.sol:25"
            },
            {
              "label": "totalStaked",
              "offset": 0,
              "slot": "10",
              "type": "t_uint256",
              "contract": "Staking",
              "src": "contracts/Staking.sol:27"
            },
            {
              "label": "_balances",
              "offset": 0,
              "slot": "11",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "Staking",
              "src": "contracts/Staking.sol:28"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_struct(StakingData)3375_storage)dyn_storage": {
              "label": "struct StakingData[]",
              "numberOfBytes": "32"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_struct(StakingData)3375_storage": {
              "label": "struct StakingData",
              "members": [
                {
                  "label": "block",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "staked",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "1"
                }
              ],
              "numberOfBytes": "64"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.21"
      }
    },
    {
      "contracts/RichHusky.sol:Checker": {
        "src": "contracts/RichHusky.sol:520",
        "version": {
          "withMetadata": "17e1cf10fdffcda321c1a1f59d2b06178394724b4d8ad9b035a718122fed8a52",
          "withoutMetadata": "0faf6ca500781d04501ba7e4cf9138e35957321419c6ca29798480c22b3cc5cd",
          "linkedWithoutMetadata": "0faf6ca500781d04501ba7e4cf9138e35957321419c6ca29798480c22b3cc5cd"
        },
        "inherit": [],
        "libraries": [],
        "methods": [
          "isValid(address,address,address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.21"
      },
      "contracts/RichHusky.sol:Context": {
        "src": "contracts/RichHusky.sol:27",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.21"
      },
      "contracts/RichHusky.sol:ERC20": {
        "src": "contracts/RichHusky.sol:162",
        "version": {
          "withMetadata": "e092e43bc9c3243b7138ce015fa92d358fa66a764079145cfe1339f160fd055e",
          "withoutMetadata": "e248eda4094a79267c1d78eb85fb3a082e2ba4d153192b2644d6357dbed158f3",
          "linkedWithoutMetadata": "e248eda4094a79267c1d78eb85fb3a082e2ba4d153192b2644d6357dbed158f3"
        },
        "inherit": [
          "contracts/RichHusky.sol:IERC20Metadata",
          "contracts/RichHusky.sol:IERC20",
          "contracts/RichHusky.sol:Context"
        ],
        "libraries": [],
        "methods": [
          "(string,string)",
          "name()",
          "symbol()",
          "decimals()",
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)",
          "increaseAllowance(address,uint256)",
          "decreaseAllowance(address,uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ERC20",
            "src": "contracts/RichHusky.sol:181"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_balances",
              "offset": 0,
              "slot": "0",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC20",
              "src": "contracts/RichHusky.sol:163"
            },
            {
              "label": "_allowances",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "ERC20",
              "src": "contracts/RichHusky.sol:165"
            },
            {
              "label": "_totalSupply",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "ERC20",
              "src": "contracts/RichHusky.sol:167"
            },
            {
              "label": "_name",
              "offset": 0,
              "slot": "3",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "contracts/RichHusky.sol:169"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "4",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "contracts/RichHusky.sol:170"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.21"
      },
      "contracts/RichHusky.sol:IERC20": {
        "src": "contracts/RichHusky.sol:40",
        "inherit": [],
        "libraries": [],
        "methods": [
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.21"
      },
      "contracts/RichHusky.sol:IERC20Metadata": {
        "src": "contracts/RichHusky.sol:120",
        "inherit": [
          "contracts/RichHusky.sol:IERC20"
        ],
        "libraries": [],
        "methods": [
          "name()",
          "symbol()",
          "decimals()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.21"
      },
      "contracts/RichHusky.sol:IFactory": {
        "src": "contracts/RichHusky.sol:535",
        "inherit": [],
        "libraries": [],
        "methods": [
          "createPair(address,address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.21"
      },
      "contracts/RichHusky.sol:IGasToken": {
        "src": "contracts/RichHusky.sol:539",
        "inherit": [],
        "libraries": [],
        "methods": [
          "free(uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.21"
      },
      "contracts/RichHusky.sol:RichHusky": {
        "src": "contracts/RichHusky.sol:543",
        "version": {
          "withMetadata": "ce802161ba5ffecece3a7488fb3a07a35d8f78edf3674187d3eb27cc30777604",
          "withoutMetadata": "7c4ce62a347a52dc2685dbb41f6d968bb51e7d6abb10665abf0c7d7699da0d36",
          "linkedWithoutMetadata": "7c4ce62a347a52dc2685dbb41f6d968bb51e7d6abb10665abf0c7d7699da0d36"
        },
        "inherit": [
          "contracts/RichHusky.sol:ERC20",
          "contracts/RichHusky.sol:IERC20Metadata",
          "contracts/RichHusky.sol:IERC20",
          "contracts/RichHusky.sol:Context"
        ],
        "libraries": [
          "contracts/RichHusky.sol:Checker"
        ],
        "methods": [
          "(address)",
          "mint(address,uint256)",
          "updateAirdropAmount(uint256)",
          "withdrawFee(address,uint256)",
          "airdrop(address[],uint256)",
          "addBetaUsers(address[])",
          "removeBetaUsers(address[])",
          "multiCall(address[],bytes[])"
        ],
        "linkReferences": [
          {
            "src": "contracts/RichHusky.sol",
            "name": "Checker",
            "length": 20,
            "start": 5176,
            "placeholder": "__$1cb883ae52507a2d00adae80c79f632cb4$__"
          }
        ],
        "errors": [
          {
            "kind": "constructor",
            "contract": "RichHusky",
            "src": "contracts/RichHusky.sol:554"
          },
          {
            "kind": "state-variable-immutable",
            "name": "pancakeFactory",
            "src": "contracts/RichHusky.sol:549"
          },
          {
            "kind": "state-variable-immutable",
            "name": "WBNB",
            "src": "contracts/RichHusky.sol:550"
          },
          {
            "kind": "state-variable-immutable",
            "name": "GasToken",
            "src": "contracts/RichHusky.sol:552"
          },
          {
            "kind": "external-library-linking",
            "name": "Checker",
            "src": "contracts/RichHusky.sol"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_balances",
              "offset": 0,
              "slot": "0",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC20",
              "src": "contracts/RichHusky.sol:163"
            },
            {
              "label": "_allowances",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "ERC20",
              "src": "contracts/RichHusky.sol:165"
            },
            {
              "label": "_totalSupply",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "ERC20",
              "src": "contracts/RichHusky.sol:167"
            },
            {
              "label": "_name",
              "offset": 0,
              "slot": "3",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "contracts/RichHusky.sol:169"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "4",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "contracts/RichHusky.sol:170"
            },
            {
              "label": "dev",
              "offset": 0,
              "slot": "5",
              "type": "t_address",
              "contract": "RichHusky",
              "src": "contracts/RichHusky.sol:544"
            },
            {
              "label": "airdropAmount",
              "offset": 0,
              "slot": "6",
              "type": "t_uint256",
              "contract": "RichHusky",
              "src": "contracts/RichHusky.sol:545"
            },
            {
              "label": "betaUsers",
              "offset": 0,
              "slot": "7",
              "type": "t_mapping(t_address,t_bool)",
              "contract": "RichHusky",
              "src": "contracts/RichHusky.sol:546"
            },
            {
              "label": "pair",
              "offset": 0,
              "slot": "8",
              "type": "t_address",
              "contract": "RichHusky",
              "src": "contracts/RichHusky.sol:547"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.21"
      }
    },
    {
      "contracts/FirstDao.sol:FistDao": {
        "src": "contracts/FirstDao.sol:127",
        "version": {
          "withMetadata": "87594bf7d015e41aaf777bc0dc62e9e8a3685546fcfa065eb87291ef7f3f16f4",
          "withoutMetadata": "5bdb2538a3ba33172d93851875dfca20475ce01973348f896430788ab9d8314a",
          "linkedWithoutMetadata": "5bdb2538a3ba33172d93851875dfca20475ce01973348f896430788ab9d8314a"
        },
        "inherit": [
          "contracts/FirstDao.sol:Ownable",
          "contracts/FirstDao.sol:IERC20"
        ],
        "libraries": [
          "contracts/FirstDao.sol:SafeMath"
        ],
        "methods": [
          "(string,string)",
          "()",
          "initialize(address,address,address,address)",
          "transferEvent(address,address,uint256)",
          "feeState()",
          "getIsApproved(address)",
          "searchExcludedFromFeeAccounts(address)",
          "getDefaultBalance()",
          "insertIntoExcludedFromFeeAccounts(address[])",
          "deleteFromExcludedFromFeeAccounts(address[])",
          "claim(address,uint256)",
          "name()",
          "symbol()",
          "decimals()",
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "transferFrom(address,address,uint256)",
          "approve(address,uint256)",
          "allowance(address,address)",
          "increaseAllowance(address,uint256)",
          "decreaseAllowance(address,uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "FistDao",
            "src": "contracts/FirstDao.sol:159"
          },
          {
            "kind": "state-variable-assignment",
            "name": "_decimals",
            "src": "contracts/FirstDao.sol:132"
          },
          {
            "kind": "state-variable-assignment",
            "name": "_totalSupply",
            "src": "contracts/FirstDao.sol:133"
          },
          {
            "kind": "state-variable-assignment",
            "name": "_feeTax",
            "src": "contracts/FirstDao.sol:138"
          },
          {
            "kind": "state-variable-assignment",
            "name": "_feeMining",
            "src": "contracts/FirstDao.sol:139"
          },
          {
            "kind": "state-variable-assignment",
            "name": "_feeLiquidity",
            "src": "contracts/FirstDao.sol:140"
          },
          {
            "kind": "state-variable-assignment",
            "name": "_feeDivisor",
            "src": "contracts/FirstDao.sol:141"
          },
          {
            "kind": "state-variable-assignment",
            "name": "_removeAllFee",
            "src": "contracts/FirstDao.sol:143"
          },
          {
            "kind": "state-variable-assignment",
            "name": "_defaultBalance",
            "src": "contracts/FirstDao.sol:150"
          },
          {
            "kind": "state-variable-assignment",
            "name": "_defaultAmount",
            "src": "contracts/FirstDao.sol:151"
          },
          {
            "kind": "state-variable-assignment",
            "name": "_initialized111",
            "src": "contracts/FirstDao.sol:156"
          },
          {
            "kind": "state-variable-assignment",
            "name": "_reentry",
            "src": "contracts/FirstDao.sol:157"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Ownable",
              "src": "contracts/FirstDao.sol:58"
            },
            {
              "label": "_previousOwner",
              "offset": 0,
              "slot": "1",
              "type": "t_address",
              "contract": "Ownable",
              "src": "contracts/FirstDao.sol:59"
            },
            {
              "label": "_switchDate",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "Ownable",
              "src": "contracts/FirstDao.sol:60"
            },
            {
              "label": "_name",
              "offset": 0,
              "slot": "3",
              "type": "t_string_storage",
              "contract": "FistDao",
              "src": "contracts/FirstDao.sol:130"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "4",
              "type": "t_string_storage",
              "contract": "FistDao",
              "src": "contracts/FirstDao.sol:131"
            },
            {
              "label": "_decimals",
              "offset": 0,
              "slot": "5",
              "type": "t_uint8",
              "contract": "FistDao",
              "src": "contracts/FirstDao.sol:132"
            },
            {
              "label": "_totalSupply",
              "offset": 0,
              "slot": "6",
              "type": "t_uint256",
              "contract": "FistDao",
              "src": "contracts/FirstDao.sol:133"
            },
            {
              "label": "_balances",
              "offset": 0,
              "slot": "7",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "FistDao",
              "src": "contracts/FirstDao.sol:134"
            },
            {
              "label": "_allowances",
              "offset": 0,
              "slot": "8",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "FistDao",
              "src": "contracts/FirstDao.sol:135"
            },
            {
              "label": "_isApproved",
              "offset": 0,
              "slot": "9",
              "type": "t_mapping(t_address,t_bool)",
              "contract": "FistDao",
              "src": "contracts/FirstDao.sol:136"
            },
            {
              "label": "_feeTax",
              "offset": 0,
              "slot": "10",
              "type": "t_uint256",
              "contract": "FistDao",
              "src": "contracts/FirstDao.sol:138"
            },
            {
              "label": "_feeMining",
              "offset": 0,
              "slot": "11",
              "type": "t_uint256",
              "contract": "FistDao",
              "src": "contracts/FirstDao.sol:139"
            },
            {
              "label": "_feeLiquidity",
              "offset": 0,
              "slot": "12",
              "type": "t_uint256",
              "contract": "FistDao",
              "src": "contracts/FirstDao.sol:140"
            },
            {
              "label": "_feeDivisor",
              "offset": 0,
              "slot": "13",
              "type": "t_uint256",
              "contract": "FistDao",
              "src": "contracts/FirstDao.sol:141"
            },
            {
              "label": "_removeAllFee",
              "offset": 0,
              "slot": "14",
              "type": "t_bool",
              "contract": "FistDao",
              "src": "contracts/FirstDao.sol:143"
            },
            {
              "label": "_core",
              "offset": 1,
              "slot": "14",
              "type": "t_address",
              "contract": "FistDao",
              "src": "contracts/FirstDao.sol:145"
            },
            {
              "label": "_taxReceiver",
              "offset": 0,
              "slot": "15",
              "type": "t_address",
              "contract": "FistDao",
              "src": "contracts/FirstDao.sol:146"
            },
            {
              "label": "_miningPool",
              "offset": 0,
              "slot": "16",
              "type": "t_address",
              "contract": "FistDao",
              "src": "contracts/FirstDao.sol:147"
            },
            {
              "label": "_liquidityPool",
              "offset": 0,
              "slot": "17",
              "type": "t_address",
              "contract": "FistDao",
              "src": "contracts/FirstDao.sol:148"
            },
            {
              "label": "_defaultBalance",
              "offset": 0,
              "slot": "18",
              "type": "t_uint256",
              "contract": "FistDao",
              "src": "contracts/FirstDao.sol:150"
            },
            {
              "label": "_defaultAmount",
              "offset": 0,
              "slot": "19",
              "type": "t_uint256",
              "contract": "FistDao",
              "src": "contracts/FirstDao.sol:151"
            },
            {
              "label": "_isExcludedFromFee",
              "offset": 0,
              "slot": "20",
              "type": "t_mapping(t_address,t_bool)",
              "contract": "FistDao",
              "src": "contracts/FirstDao.sol:153"
            },
            {
              "label": "_excludedFromFeeAccounts",
              "offset": 0,
              "slot": "21",
              "type": "t_array(t_address)dyn_storage",
              "contract": "FistDao",
              "src": "contracts/FirstDao.sol:154"
            },
            {
              "label": "_initialized111",
              "offset": 0,
              "slot": "22",
              "type": "t_bool",
              "contract": "FistDao",
              "src": "contracts/FirstDao.sol:156"
            },
            {
              "label": "_reentry",
              "offset": 0,
              "slot": "23",
              "type": "t_uint256",
              "contract": "FistDao",
              "src": "contracts/FirstDao.sol:157"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_address)dyn_storage": {
              "label": "address[]",
              "numberOfBytes": "32"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint8": {
              "label": "uint8",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.21"
      },
      "contracts/FirstDao.sol:ICore": {
        "src": "contracts/FirstDao.sol:119",
        "inherit": [],
        "libraries": [],
        "methods": [
          "getPairAddress()",
          "airdrop()",
          "safety(address,address)",
          "start()",
          "end()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.21"
      },
      "contracts/FirstDao.sol:IERC20": {
        "src": "contracts/FirstDao.sol:8",
        "inherit": [],
        "libraries": [],
        "methods": [
          "name()",
          "symbol()",
          "decimals()",
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "transferFrom(address,address,uint256)",
          "approve(address,uint256)",
          "allowance(address,address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.21"
      },
      "contracts/FirstDao.sol:IFactory": {
        "src": "contracts/FirstDao.sol:91",
        "inherit": [],
        "libraries": [],
        "methods": [
          "createPair(address,address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.21"
      },
      "contracts/FirstDao.sol:IRouter01": {
        "src": "contracts/FirstDao.sol:95",
        "inherit": [],
        "libraries": [],
        "methods": [
          "factory()",
          "addLiquidity(address,address,uint256,uint256,uint256,uint256,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.21"
      },
      "contracts/FirstDao.sol:IRouter02": {
        "src": "contracts/FirstDao.sol:109",
        "inherit": [
          "contracts/FirstDao.sol:IRouter01"
        ],
        "libraries": [],
        "methods": [
          "swapExactTokensForTokensSupportingFeeOnTransferTokens(uint256,uint256,address[],address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.21"
      },
      "contracts/FirstDao.sol:Ownable": {
        "src": "contracts/FirstDao.sol:57",
        "inherit": [],
        "libraries": [],
        "methods": [
          "owner()",
          "switchDate()",
          "transferOwnership(uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Ownable",
            "src": "contracts/FirstDao.sol:63"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Ownable",
              "src": "contracts/FirstDao.sol:58"
            },
            {
              "label": "_previousOwner",
              "offset": 0,
              "slot": "1",
              "type": "t_address",
              "contract": "Ownable",
              "src": "contracts/FirstDao.sol:59"
            },
            {
              "label": "_switchDate",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "Ownable",
              "src": "contracts/FirstDao.sol:60"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.21"
      },
      "contracts/FirstDao.sol:SafeMath": {
        "src": "contracts/FirstDao.sol:22",
        "version": {
          "withMetadata": "95eb3df1bd62a62b1bf87150f7314053125cc709ed6eb26f9bf2a30d8fc55e32",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.21"
      }
    },
    {
      "contracts/IFiles.sol:Address": {
        "src": "contracts/IFiles.sol:147",
        "version": {
          "withMetadata": "73f3d745b82ff92d492794f39ddc131795315255895e196d918dc1260c813488",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.21"
      },
      "contracts/IFiles.sol:Context": {
        "src": "contracts/IFiles.sol:135",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.21"
      },
      "contracts/IFiles.sol:IBEP20": {
        "src": "contracts/IFiles.sol:9",
        "inherit": [],
        "libraries": [],
        "methods": [
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.21"
      },
      "contracts/IFiles.sol:IPancakeFactory": {
        "src": "contracts/IFiles.sol:327",
        "inherit": [],
        "libraries": [],
        "methods": [
          "feeTo()",
          "feeToSetter()",
          "getPair(address,address)",
          "allPairs(uint256)",
          "allPairsLength()",
          "createPair(address,address)",
          "setFeeTo(address)",
          "setFeeToSetter(address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.21"
      },
      "contracts/IFiles.sol:IPancakePair": {
        "src": "contracts/IFiles.sol:357",
        "inherit": [],
        "libraries": [],
        "methods": [
          "name()",
          "symbol()",
          "decimals()",
          "totalSupply()",
          "balanceOf(address)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transfer(address,uint256)",
          "transferFrom(address,address,uint256)",
          "DOMAIN_SEPARATOR()",
          "PERMIT_TYPEHASH()",
          "nonces(address)",
          "permit(address,address,uint256,uint256,uint8,bytes32,bytes32)",
          "MINIMUM_LIQUIDITY()",
          "factory()",
          "token0()",
          "token1()",
          "getReserves()",
          "price0CumulativeLast()",
          "price1CumulativeLast()",
          "kLast()",
          "mint(address)",
          "burn(address)",
          "swap(uint256,uint256,address,bytes)",
          "skim(address)",
          "sync()",
          "initialize(address,address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.21"
      },
      "contracts/IFiles.sol:IPancakeRouter01": {
        "src": "contracts/IFiles.sol:466",
        "inherit": [],
        "libraries": [],
        "methods": [
          "factory()",
          "WETH()",
          "addLiquidity(address,address,uint256,uint256,uint256,uint256,address,uint256)",
          "addLiquidityETH(address,uint256,uint256,uint256,address,uint256)",
          "removeLiquidity(address,address,uint256,uint256,uint256,address,uint256)",
          "removeLiquidityETH(address,uint256,uint256,uint256,address,uint256)",
          "removeLiquidityWithPermit(address,address,uint256,uint256,uint256,address,uint256,bool,uint8,bytes32,bytes32)",
          "removeLiquidityETHWithPermit(address,uint256,uint256,uint256,address,uint256,bool,uint8,bytes32,bytes32)",
          "swapExactTokensForTokens(uint256,uint256,address[],address,uint256)",
          "swapTokensForExactTokens(uint256,uint256,address[],address,uint256)",
          "swapExactETHForTokens(uint256,address[],address,uint256)",
          "swapTokensForExactETH(uint256,uint256,address[],address,uint256)",
          "swapExactTokensForETH(uint256,uint256,address[],address,uint256)",
          "swapETHForExactTokens(uint256,address[],address,uint256)",
          "quote(uint256,uint256,uint256)",
          "getAmountOut(uint256,uint256,uint256)",
          "getAmountIn(uint256,uint256,uint256)",
          "getAmountsOut(uint256,address[])",
          "getAmountsIn(uint256,address[])"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.21"
      },
      "contracts/IFiles.sol:IPancakeRouter02": {
        "src": "contracts/IFiles.sol:626",
        "inherit": [
          "contracts/IFiles.sol:IPancakeRouter01"
        ],
        "libraries": [],
        "methods": [
          "removeLiquidityETHSupportingFeeOnTransferTokens(address,uint256,uint256,uint256,address,uint256)",
          "removeLiquidityETHWithPermitSupportingFeeOnTransferTokens(address,uint256,uint256,uint256,address,uint256,bool,uint8,bytes32,bytes32)",
          "swapExactTokensForTokensSupportingFeeOnTransferTokens(uint256,uint256,address[],address,uint256)",
          "swapExactETHForTokensSupportingFeeOnTransferTokens(uint256,address[],address,uint256)",
          "swapExactTokensForETHSupportingFeeOnTransferTokens(uint256,uint256,address[],address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.21"
      },
      "contracts/IFiles.sol:IWBNB": {
        "src": "contracts/IFiles.sol:38",
        "inherit": [],
        "libraries": [],
        "methods": [
          "name()",
          "symbol()",
          "decimals()",
          "balanceOf(address)",
          "allowance(address,address)",
          "()",
          "deposit()",
          "withdraw(uint256)",
          "totalSupply()",
          "approve(address,uint256)",
          "transfer(address,uint256)",
          "transferFrom(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.21"
      },
      "contracts/IFiles.sol:Initializable": {
        "src": "contracts/IFiles.sol:249",
        "version": {
          "withMetadata": "ba793f874980ba8826e0f77e588821b7a373c942b97ebcd7e4e42f378e00e824",
          "withoutMetadata": "ac0db523ddc3e330f735df7b3b0b24460531c71290a891170e840f8f67d5ff6b",
          "linkedWithoutMetadata": "ac0db523ddc3e330f735df7b3b0b24460531c71290a891170e840f8f67d5ff6b"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "contracts/IFiles.sol:251"
            },
            {
              "label": "initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "contracts/IFiles.sol:252"
            },
            {
              "label": "______gap",
              "offset": 0,
              "slot": "1",
              "type": "t_array(t_uint256)50_storage",
              "contract": "Initializable",
              "src": "contracts/IFiles.sol:283"
            }
          ],
          "types": {
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]",
              "numberOfBytes": "1600"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.21"
      },
      "contracts/IFiles.sol:Ownable": {
        "src": "contracts/IFiles.sol:286",
        "version": {
          "withMetadata": "9b6e83ec071c913ea8078938bf6c8e47f6ce697f181f2ebf31dc4937807eb386",
          "withoutMetadata": "a3dd09084d5d3377afaa5e637593b425fb1172db63a48c2f62428555638775f8",
          "linkedWithoutMetadata": "a3dd09084d5d3377afaa5e637593b425fb1172db63a48c2f62428555638775f8"
        },
        "inherit": [
          "contracts/IFiles.sol:Initializable",
          "contracts/IFiles.sol:Context"
        ],
        "libraries": [],
        "methods": [
          "()",
          "initOwner(address)",
          "owner()",
          "renounceOwnership()",
          "transferOwnership(address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "contracts/IFiles.sol:251"
            },
            {
              "label": "initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "contracts/IFiles.sol:252"
            },
            {
              "label": "______gap",
              "offset": 0,
              "slot": "1",
              "type": "t_array(t_uint256)50_storage",
              "contract": "Initializable",
              "src": "contracts/IFiles.sol:283"
            },
            {
              "label": "_owner",
              "offset": 0,
              "slot": "51",
              "type": "t_address",
              "contract": "Ownable",
              "src": "contracts/IFiles.sol:287"
            },
            {
              "label": "_previousOwner",
              "offset": 0,
              "slot": "52",
              "type": "t_address",
              "contract": "Ownable",
              "src": "contracts/IFiles.sol:288"
            },
            {
              "label": "_lockTime",
              "offset": 0,
              "slot": "53",
              "type": "t_uint256",
              "contract": "Ownable",
              "src": "contracts/IFiles.sol:289"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]",
              "numberOfBytes": "1600"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.21"
      },
      "contracts/IFiles.sol:SafeMath": {
        "src": "contracts/IFiles.sol:68",
        "version": {
          "withMetadata": "6a5db877229c78c84b33e85a297bea1121c6a6195aa310f30cbe69888293c5ae",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.21"
      },
      "contracts/ReentrancyGuard.sol:ReentrancyGuard": {
        "src": "contracts/ReentrancyGuard.sol:5",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ReentrancyGuard",
            "src": "contracts/ReentrancyGuard.sol:12"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_status",
              "offset": 0,
              "slot": "0",
              "type": "t_uint256",
              "contract": "ReentrancyGuard",
              "src": "contracts/ReentrancyGuard.sol:10"
            }
          ],
          "types": {
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.21"
      },
      "contracts/Utils.sol:PancakeLibrary": {
        "src": "contracts/Utils.sol:219",
        "version": {
          "withMetadata": "668337a75717822cd6d73bbd1c50526e84e4af10cd45125b1756676395a2f30c",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [
          "contracts/IFiles.sol:SafeMath"
        ],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.21"
      },
      "contracts/Utils.sol:Utils": {
        "src": "contracts/Utils.sol:6",
        "version": {
          "withMetadata": "a5775bd7ff330a5dfa7ddaef645bcc8fbccdcd3c38fbc9fc1755e3e3a9a09d47",
          "withoutMetadata": "8ca6da6b824cadf2e1f9c600b5f1381080c8b8d75dddf5423f35e25222daaeda",
          "linkedWithoutMetadata": "8ca6da6b824cadf2e1f9c600b5f1381080c8b8d75dddf5423f35e25222daaeda"
        },
        "inherit": [],
        "libraries": [
          "contracts/IFiles.sol:SafeMath"
        ],
        "methods": [
          "calculateBNBReward(uint256,uint256,uint256,uint256)",
          "calculateTopUpClaim(uint256,uint256,uint256,uint256)",
          "swapTokensForEth(address,uint256)",
          "swapETHForTokens(address,address,uint256)",
          "swapTokensForTokens(address,address,uint256)",
          "getAmountsout(uint256,address)",
          "addLiquidity(address,address,uint256,uint256)",
          "getAntiFlipTaxNo(uint256)",
          "calcReward(uint256,uint256,uint256,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.21"
      }
    },
    {
      "contracts/Proxy.sol:Caller": {
        "src": "contracts/Proxy.sol:80",
        "version": {
          "withMetadata": "8a43f4805f6ec5dd7b7379a87ef3fa89b1f2cd8e86292442058e51e90f40e31d",
          "withoutMetadata": "d6211a178c252503f87d41bbcceffa66551bde0c0c4b0cc3c5a44a4f489e2c7f",
          "linkedWithoutMetadata": "d6211a178c252503f87d41bbcceffa66551bde0c0c4b0cc3c5a44a4f489e2c7f"
        },
        "inherit": [],
        "libraries": [],
        "methods": [
          "(address)",
          "increase()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Caller",
            "src": "contracts/Proxy.sol:80"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "proxy",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Caller",
              "src": "contracts/Proxy.sol:80"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.21"
      },
      "contracts/Proxy.sol:Proxy": {
        "src": "contracts/Proxy.sol:10",
        "version": {
          "withMetadata": "3a655b5f054f4310d279144652e269b840bf308c06f48e08f2d407ee1381c2c1",
          "withoutMetadata": "bc7fcd1c64d2f798926ae830c3e369a33c770ea294cd9047d184a8c885a96818",
          "linkedWithoutMetadata": "bc7fcd1c64d2f798926ae830c3e369a33c770ea294cd9047d184a8c885a96818"
        },
        "inherit": [],
        "libraries": [],
        "methods": [
          "(address)",
          "()",
          "()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Proxy",
            "src": "contracts/Proxy.sol:22"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "implementation",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Proxy",
              "src": "contracts/Proxy.sol:13"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.21"
      }
    },
    {
      "contracts/Logic.sol:Logic": {
        "src": "contracts/Logic.sol:9",
        "version": {
          "withMetadata": "087c86b163578853fb1cba09b22843df8f815c95bf2568200ddd8e1dbf167fea",
          "withoutMetadata": "a9feffbc7087e9529577fb0b368171b85b94d25918f43b5d410eb0f186274034",
          "linkedWithoutMetadata": "a9feffbc7087e9529577fb0b368171b85b94d25918f43b5d410eb0f186274034"
        },
        "inherit": [],
        "libraries": [],
        "methods": [
          "increment()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "state-variable-assignment",
            "name": "x",
            "src": "contracts/Logic.sol:13"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "implementation",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Logic",
              "src": "contracts/Logic.sol:9"
            },
            {
              "label": "x",
              "offset": 0,
              "slot": "1",
              "type": "t_uint256",
              "contract": "Logic",
              "src": "contracts/Logic.sol:13"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.21"
      }
    },
    {
      "@openzeppelin/contracts/access/Ownable.sol:Ownable": {
        "src": "@openzeppelin/contracts/access/Ownable.sol:20",
        "inherit": [
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [],
        "methods": [
          "owner()",
          "renounceOwnership()",
          "transferOwnership(address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Ownable",
            "src": "@openzeppelin/contracts/access/Ownable.sol:28"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Ownable",
              "src": "@openzeppelin/contracts/access/Ownable.sol:21"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.21"
      },
      "@openzeppelin/contracts/security/ReentrancyGuard.sol:ReentrancyGuard": {
        "src": "@openzeppelin/contracts/security/ReentrancyGuard.sol:22",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ReentrancyGuard",
            "src": "@openzeppelin/contracts/security/ReentrancyGuard.sol:39"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_status",
              "offset": 0,
              "slot": "0",
              "type": "t_uint256",
              "contract": "ReentrancyGuard",
              "src": "@openzeppelin/contracts/security/ReentrancyGuard.sol:37"
            }
          ],
          "types": {
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.21"
      },
      "@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20": {
        "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:35",
        "version": {
          "withMetadata": "b653be9ad258ddaafa2304767243ba86eac7156acd9bf1a196bee0fef9b1c3a9",
          "withoutMetadata": "1d55e2dc08aae4fa5bd2ca8ac476f7a2e63bdfa7b0b51d4bd61db8705143a140",
          "linkedWithoutMetadata": "1d55e2dc08aae4fa5bd2ca8ac476f7a2e63bdfa7b0b51d4bd61db8705143a140"
        },
        "inherit": [
          "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol:IERC20Metadata",
          "@openzeppelin/contracts/token/ERC20/IERC20.sol:IERC20",
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [],
        "methods": [
          "(string,string)",
          "name()",
          "symbol()",
          "decimals()",
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)",
          "increaseAllowance(address,uint256)",
          "decreaseAllowance(address,uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ERC20",
            "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:54"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_balances",
              "offset": 0,
              "slot": "0",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:36"
            },
            {
              "label": "_allowances",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:38"
            },
            {
              "label": "_totalSupply",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:40"
            },
            {
              "label": "_name",
              "offset": 0,
              "slot": "3",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:42"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "4",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:43"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.21"
      },
      "@openzeppelin/contracts/token/ERC20/IERC20.sol:IERC20": {
        "src": "@openzeppelin/contracts/token/ERC20/IERC20.sol:9",
        "inherit": [],
        "libraries": [],
        "methods": [
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.21"
      },
      "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol:IERC20Metadata": {
        "src": "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol:13",
        "inherit": [
          "@openzeppelin/contracts/token/ERC20/IERC20.sol:IERC20"
        ],
        "libraries": [],
        "methods": [
          "name()",
          "symbol()",
          "decimals()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.21"
      },
      "@openzeppelin/contracts/token/ERC20/extensions/draft-IERC20Permit.sol:IERC20Permit": {
        "src": "@openzeppelin/contracts/token/ERC20/extensions/draft-IERC20Permit.sol:14",
        "inherit": [],
        "libraries": [],
        "methods": [
          "permit(address,address,uint256,uint256,uint8,bytes32,bytes32)",
          "nonces(address)",
          "DOMAIN_SEPARATOR()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.21"
      },
      "@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol:SafeERC20": {
        "src": "@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol:19",
        "version": {
          "withMetadata": "945db44b71722f915e3e7352ee22f854dfe8000e69eee742d881b64279bb0ad8",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [
          "@openzeppelin/contracts/utils/Address.sol:Address"
        ],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.21"
      },
      "@openzeppelin/contracts/utils/Address.sol:Address": {
        "src": "@openzeppelin/contracts/utils/Address.sol:9",
        "version": {
          "withMetadata": "9401bbf4dc0decc4c739a060967031a16e8de389388d98c32ec11cff440d6513",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [
          {
            "kind": "delegatecall",
            "src": "@openzeppelin/contracts/utils/Address.sol:191"
          },
          {
            "kind": "delegatecall",
            "src": "@openzeppelin/contracts/utils/Address.sol:191"
          }
        ],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.21"
      },
      "@openzeppelin/contracts/utils/Context.sol:Context": {
        "src": "@openzeppelin/contracts/utils/Context.sol:16",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.21"
      },
      "@openzeppelin/contracts/utils/math/Math.sol:Math": {
        "src": "@openzeppelin/contracts/utils/math/Math.sol:9",
        "version": {
          "withMetadata": "f58f3d1d6b53395057afc8a5e1edcbfcd81cdec0dfcf6b1290c8c2368b975278",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.21"
      },
      "@openzeppelin/contracts/utils/math/SafeMath.sol:SafeMath": {
        "src": "@openzeppelin/contracts/utils/math/SafeMath.sol:16",
        "version": {
          "withMetadata": "4167346fe154a63f59e72262dbca9ccb097c97b61ec5dfe163259378386d2ba4",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.21"
      },
      "contracts/Presale.sol:IGoldToken": {
        "src": "contracts/Presale.sol:8",
        "inherit": [],
        "libraries": [],
        "methods": [
          "mint(address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.21"
      },
      "contracts/Presale.sol:Presale": {
        "src": "contracts/Presale.sol:12",
        "version": {
          "withMetadata": "55de4f41aa2ae4e88c3e975f7f7c871c8630a6a915f505e8b168c82d5665ef13",
          "withoutMetadata": "2fa5a3bfe1ae715a2695aad2a1fdda65dd5f2dfe346a8af0822d82b296b7bc1b",
          "linkedWithoutMetadata": "2fa5a3bfe1ae715a2695aad2a1fdda65dd5f2dfe346a8af0822d82b296b7bc1b"
        },
        "inherit": [
          "@openzeppelin/contracts/security/ReentrancyGuard.sol:ReentrancyGuard",
          "@openzeppelin/contracts/access/Ownable.sol:Ownable",
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [],
        "methods": [
          "(address,address,address,uint256)",
          "createPreSale((uint256,uint256,uint256))",
          "sale()",
          "getCanIdoAmount(address)",
          "bindReffer(address)",
          "userBalance(address)",
          "userRewardBalance(address)",
          "userWithdraw()",
          "teamWithdraw(address)",
          "setUserWithdrawTime(uint256)",
          "setInviteMin(uint256)",
          "setPerMaxBuyUsdt(uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Presale",
            "src": "contracts/Presale.sol:46"
          },
          {
            "kind": "state-variable-assignment",
            "name": "perMaxBuyUsdt",
            "src": "contracts/Presale.sol:15"
          },
          {
            "kind": "state-variable-assignment",
            "name": "inviteMin",
            "src": "contracts/Presale.sol:31"
          },
          {
            "kind": "state-variable-assignment",
            "name": "maxSale",
            "src": "contracts/Presale.sol:33"
          },
          {
            "kind": "state-variable-assignment",
            "name": "rewardLevel",
            "src": "contracts/Presale.sol:36"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Ownable",
              "src": "@openzeppelin/contracts/access/Ownable.sol:21"
            },
            {
              "label": "_status",
              "offset": 0,
              "slot": "1",
              "type": "t_uint256",
              "contract": "ReentrancyGuard",
              "src": "@openzeppelin/contracts/security/ReentrancyGuard.sol:37"
            },
            {
              "label": "userWithdrawTime",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "Presale",
              "src": "contracts/Presale.sol:13"
            },
            {
              "label": "perMaxBuyUsdt",
              "offset": 0,
              "slot": "3",
              "type": "t_uint256",
              "contract": "Presale",
              "src": "contracts/Presale.sol:15"
            },
            {
              "label": "teamAddress",
              "offset": 0,
              "slot": "4",
              "type": "t_address",
              "contract": "Presale",
              "src": "contracts/Presale.sol:16"
            },
            {
              "label": "saleToken",
              "offset": 0,
              "slot": "5",
              "type": "t_address",
              "contract": "Presale",
              "src": "contracts/Presale.sol:17"
            },
            {
              "label": "usdtToken",
              "offset": 0,
              "slot": "6",
              "type": "t_address",
              "contract": "Presale",
              "src": "contracts/Presale.sol:18"
            },
            {
              "label": "goldTokenAddress",
              "offset": 0,
              "slot": "7",
              "type": "t_address",
              "contract": "Presale",
              "src": "contracts/Presale.sol:19"
            },
            {
              "label": "balances",
              "offset": 0,
              "slot": "8",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "Presale",
              "src": "contracts/Presale.sol:20"
            },
            {
              "label": "userBuyTotalUsdt",
              "offset": 0,
              "slot": "9",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "Presale",
              "src": "contracts/Presale.sol:21"
            },
            {
              "label": "rewardBalances",
              "offset": 0,
              "slot": "10",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "Presale",
              "src": "contracts/Presale.sol:22"
            },
            {
              "label": "reffers",
              "offset": 0,
              "slot": "11",
              "type": "t_mapping(t_address,t_address)",
              "contract": "Presale",
              "src": "contracts/Presale.sol:23"
            },
            {
              "label": "refferNumber",
              "offset": 0,
              "slot": "12",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "Presale",
              "src": "contracts/Presale.sol:24"
            },
            {
              "label": "teamRefferNumber",
              "offset": 0,
              "slot": "13",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "Presale",
              "src": "contracts/Presale.sol:25"
            },
            {
              "label": "firstIdo",
              "offset": 0,
              "slot": "14",
              "type": "t_mapping(t_address,t_bool)",
              "contract": "Presale",
              "src": "contracts/Presale.sol:26"
            },
            {
              "label": "totalIdoUSDT",
              "offset": 0,
              "slot": "15",
              "type": "t_uint256",
              "contract": "Presale",
              "src": "contracts/Presale.sol:27"
            },
            {
              "label": "totalIdoUser",
              "offset": 0,
              "slot": "16",
              "type": "t_uint256",
              "contract": "Presale",
              "src": "contracts/Presale.sol:28"
            },
            {
              "label": "totalSale",
              "offset": 0,
              "slot": "17",
              "type": "t_uint256",
              "contract": "Presale",
              "src": "contracts/Presale.sol:29"
            },
            {
              "label": "inviteMin",
              "offset": 0,
              "slot": "18",
              "type": "t_uint256",
              "contract": "Presale",
              "src": "contracts/Presale.sol:31"
            },
            {
              "label": "maxSale",
              "offset": 0,
              "slot": "19",
              "type": "t_uint256",
              "contract": "Presale",
              "src": "contracts/Presale.sol:33"
            },
            {
              "label": "isCloseSale",
              "offset": 0,
              "slot": "20",
              "type": "t_bool",
              "contract": "Presale",
              "src": "contracts/Presale.sol:34"
            },
            {
              "label": "rewardLevel",
              "offset": 0,
              "slot": "21",
              "type": "t_array(t_uint256)dyn_storage",
              "contract": "Presale",
              "src": "contracts/Presale.sol:36"
            },
            {
              "label": "presaleInfo",
              "offset": 0,
              "slot": "22",
              "type": "t_struct(PresaleInfo)2392_storage",
              "contract": "Presale",
              "src": "contracts/Presale.sol:44"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_uint256)dyn_storage": {
              "label": "uint256[]",
              "numberOfBytes": "32"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_mapping(t_address,t_address)": {
              "label": "mapping(address => address)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_struct(PresaleInfo)2392_storage": {
              "label": "struct Presale.PresaleInfo",
              "members": [
                {
                  "label": "startTime",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "endTime",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "price",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "2"
                }
              ],
              "numberOfBytes": "96"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.21"
      },
      "contracts/Staking.sol:IRejuvenate": {
        "src": "contracts/Staking.sol:9",
        "inherit": [],
        "libraries": [],
        "methods": [
          "mint(address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.21"
      },
      "contracts/Staking.sol:Staking": {
        "src": "contracts/Staking.sol:13",
        "version": {
          "withMetadata": "d4a43fbe5f8d6347383f0680dba0a94146fceda61d8f28fb0ed926fda6eca5bc",
          "withoutMetadata": "8e35a11dc4a30aced1c096dd5db7f6424d19b292b732012b8d44d054f9cea466",
          "linkedWithoutMetadata": "8e35a11dc4a30aced1c096dd5db7f6424d19b292b732012b8d44d054f9cea466"
        },
        "inherit": [
          "@openzeppelin/contracts/security/ReentrancyGuard.sol:ReentrancyGuard",
          "@openzeppelin/contracts/access/Ownable.sol:Ownable",
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [],
        "methods": [
          "()",
          "changeRewardsPerBlock(uint256)",
          "rewardPerToken()",
          "earned(address)",
          "stake(uint256)",
          "unstake(uint256)",
          "claimRewards()",
          "pause()",
          "unpause()",
          "inCaseTokensGetStuck(address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Staking",
            "src": "contracts/Staking.sol:33"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Ownable",
              "src": "@openzeppelin/contracts/access/Ownable.sol:21"
            },
            {
              "label": "_status",
              "offset": 0,
              "slot": "1",
              "type": "t_uint256",
              "contract": "ReentrancyGuard",
              "src": "@openzeppelin/contracts/security/ReentrancyGuard.sol:37"
            },
            {
              "label": "paused",
              "offset": 0,
              "slot": "2",
              "type": "t_bool",
              "contract": "Staking",
              "src": "contracts/Staking.sol:14"
            },
            {
              "label": "_treasury",
              "offset": 1,
              "slot": "2",
              "type": "t_address",
              "contract": "Staking",
              "src": "contracts/Staking.sol:15"
            },
            {
              "label": "token",
              "offset": 0,
              "slot": "3",
              "type": "t_address",
              "contract": "Staking",
              "src": "contracts/Staking.sol:17"
            },
            {
              "label": "rewardRate",
              "offset": 0,
              "slot": "4",
              "type": "t_uint256",
              "contract": "Staking",
              "src": "contracts/Staking.sol:19"
            },
            {
              "label": "_lastUpdateBlock",
              "offset": 0,
              "slot": "5",
              "type": "t_uint256",
              "contract": "Staking",
              "src": "contracts/Staking.sol:20"
            },
            {
              "label": "_rewardsPerToken",
              "offset": 0,
              "slot": "6",
              "type": "t_uint256",
              "contract": "Staking",
              "src": "contracts/Staking.sol:21"
            },
            {
              "label": "data",
              "offset": 0,
              "slot": "7",
              "type": "t_array(t_struct(StakingData)3375_storage)dyn_storage",
              "contract": "Staking",
              "src": "contracts/Staking.sol:22"
            },
            {
              "label": "_userRewardsPerToken",
              "offset": 0,
              "slot": "8",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "Staking",
              "src": "contracts/Staking.sol:24"
            },
            {
              "label": "_rewards",
              "offset": 0,
              "slot": "9",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "Staking",
              "src": "contracts/Staking.sol:25"
            },
            {
              "label": "totalStaked",
              "offset": 0,
              "slot": "10",
              "type": "t_uint256",
              "contract": "Staking",
              "src": "contracts/Staking.sol:27"
            },
            {
              "label": "_balances",
              "offset": 0,
              "slot": "11",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "Staking",
              "src": "contracts/Staking.sol:28"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_struct(StakingData)3375_storage)dyn_storage": {
              "label": "struct StakingData[]",
              "numberOfBytes": "32"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_struct(StakingData)3375_storage": {
              "label": "struct StakingData",
              "members": [
                {
                  "label": "block",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "staked",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "1"
                }
              ],
              "numberOfBytes": "64"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.21"
      }
    },
    {
      "contracts/RichHusky.sol:Checker": {
        "src": "contracts/RichHusky.sol:520",
        "version": {
          "withMetadata": "17e1cf10fdffcda321c1a1f59d2b06178394724b4d8ad9b035a718122fed8a52",
          "withoutMetadata": "0faf6ca500781d04501ba7e4cf9138e35957321419c6ca29798480c22b3cc5cd",
          "linkedWithoutMetadata": "0faf6ca500781d04501ba7e4cf9138e35957321419c6ca29798480c22b3cc5cd"
        },
        "inherit": [],
        "libraries": [],
        "methods": [
          "isValid(address,address,address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.21"
      },
      "contracts/RichHusky.sol:Context": {
        "src": "contracts/RichHusky.sol:27",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.21"
      },
      "contracts/RichHusky.sol:ERC20": {
        "src": "contracts/RichHusky.sol:162",
        "version": {
          "withMetadata": "e092e43bc9c3243b7138ce015fa92d358fa66a764079145cfe1339f160fd055e",
          "withoutMetadata": "e248eda4094a79267c1d78eb85fb3a082e2ba4d153192b2644d6357dbed158f3",
          "linkedWithoutMetadata": "e248eda4094a79267c1d78eb85fb3a082e2ba4d153192b2644d6357dbed158f3"
        },
        "inherit": [
          "contracts/RichHusky.sol:IERC20Metadata",
          "contracts/RichHusky.sol:IERC20",
          "contracts/RichHusky.sol:Context"
        ],
        "libraries": [],
        "methods": [
          "(string,string)",
          "name()",
          "symbol()",
          "decimals()",
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)",
          "increaseAllowance(address,uint256)",
          "decreaseAllowance(address,uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ERC20",
            "src": "contracts/RichHusky.sol:181"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_balances",
              "offset": 0,
              "slot": "0",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC20",
              "src": "contracts/RichHusky.sol:163"
            },
            {
              "label": "_allowances",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "ERC20",
              "src": "contracts/RichHusky.sol:165"
            },
            {
              "label": "_totalSupply",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "ERC20",
              "src": "contracts/RichHusky.sol:167"
            },
            {
              "label": "_name",
              "offset": 0,
              "slot": "3",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "contracts/RichHusky.sol:169"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "4",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "contracts/RichHusky.sol:170"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.21"
      },
      "contracts/RichHusky.sol:IERC20": {
        "src": "contracts/RichHusky.sol:40",
        "inherit": [],
        "libraries": [],
        "methods": [
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.21"
      },
      "contracts/RichHusky.sol:IERC20Metadata": {
        "src": "contracts/RichHusky.sol:120",
        "inherit": [
          "contracts/RichHusky.sol:IERC20"
        ],
        "libraries": [],
        "methods": [
          "name()",
          "symbol()",
          "decimals()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.21"
      },
      "contracts/RichHusky.sol:IFactory": {
        "src": "contracts/RichHusky.sol:535",
        "inherit": [],
        "libraries": [],
        "methods": [
          "createPair(address,address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.21"
      },
      "contracts/RichHusky.sol:IGasToken": {
        "src": "contracts/RichHusky.sol:539",
        "inherit": [],
        "libraries": [],
        "methods": [
          "free(uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.21"
      },
      "contracts/RichHusky.sol:RichHusky": {
        "src": "contracts/RichHusky.sol:543",
        "version": {
          "withMetadata": "ce802161ba5ffecece3a7488fb3a07a35d8f78edf3674187d3eb27cc30777604",
          "withoutMetadata": "7c4ce62a347a52dc2685dbb41f6d968bb51e7d6abb10665abf0c7d7699da0d36",
          "linkedWithoutMetadata": "7c4ce62a347a52dc2685dbb41f6d968bb51e7d6abb10665abf0c7d7699da0d36"
        },
        "inherit": [
          "contracts/RichHusky.sol:ERC20",
          "contracts/RichHusky.sol:IERC20Metadata",
          "contracts/RichHusky.sol:IERC20",
          "contracts/RichHusky.sol:Context"
        ],
        "libraries": [
          "contracts/RichHusky.sol:Checker"
        ],
        "methods": [
          "(address)",
          "mint(address,uint256)",
          "updateAirdropAmount(uint256)",
          "withdrawFee(address,uint256)",
          "airdrop(address[],uint256)",
          "addBetaUsers(address[])",
          "removeBetaUsers(address[])",
          "multiCall(address[],bytes[])"
        ],
        "linkReferences": [
          {
            "src": "contracts/RichHusky.sol",
            "name": "Checker",
            "length": 20,
            "start": 5176,
            "placeholder": "__$1cb883ae52507a2d00adae80c79f632cb4$__"
          }
        ],
        "errors": [
          {
            "kind": "constructor",
            "contract": "RichHusky",
            "src": "contracts/RichHusky.sol:554"
          },
          {
            "kind": "state-variable-immutable",
            "name": "pancakeFactory",
            "src": "contracts/RichHusky.sol:549"
          },
          {
            "kind": "state-variable-immutable",
            "name": "WBNB",
            "src": "contracts/RichHusky.sol:550"
          },
          {
            "kind": "state-variable-immutable",
            "name": "GasToken",
            "src": "contracts/RichHusky.sol:552"
          },
          {
            "kind": "external-library-linking",
            "name": "Checker",
            "src": "contracts/RichHusky.sol"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_balances",
              "offset": 0,
              "slot": "0",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC20",
              "src": "contracts/RichHusky.sol:163"
            },
            {
              "label": "_allowances",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "ERC20",
              "src": "contracts/RichHusky.sol:165"
            },
            {
              "label": "_totalSupply",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "ERC20",
              "src": "contracts/RichHusky.sol:167"
            },
            {
              "label": "_name",
              "offset": 0,
              "slot": "3",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "contracts/RichHusky.sol:169"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "4",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "contracts/RichHusky.sol:170"
            },
            {
              "label": "dev",
              "offset": 0,
              "slot": "5",
              "type": "t_address",
              "contract": "RichHusky",
              "src": "contracts/RichHusky.sol:544"
            },
            {
              "label": "airdropAmount",
              "offset": 0,
              "slot": "6",
              "type": "t_uint256",
              "contract": "RichHusky",
              "src": "contracts/RichHusky.sol:545"
            },
            {
              "label": "betaUsers",
              "offset": 0,
              "slot": "7",
              "type": "t_mapping(t_address,t_bool)",
              "contract": "RichHusky",
              "src": "contracts/RichHusky.sol:546"
            },
            {
              "label": "pair",
              "offset": 0,
              "slot": "8",
              "type": "t_address",
              "contract": "RichHusky",
              "src": "contracts/RichHusky.sol:547"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.21"
      }
    },
    {
      "contracts/FirstDao.sol:FistDao": {
        "src": "contracts/FirstDao.sol:127",
        "version": {
          "withMetadata": "87594bf7d015e41aaf777bc0dc62e9e8a3685546fcfa065eb87291ef7f3f16f4",
          "withoutMetadata": "5bdb2538a3ba33172d93851875dfca20475ce01973348f896430788ab9d8314a",
          "linkedWithoutMetadata": "5bdb2538a3ba33172d93851875dfca20475ce01973348f896430788ab9d8314a"
        },
        "inherit": [
          "contracts/FirstDao.sol:Ownable",
          "contracts/FirstDao.sol:IERC20"
        ],
        "libraries": [
          "contracts/FirstDao.sol:SafeMath"
        ],
        "methods": [
          "(string,string)",
          "()",
          "initialize(address,address,address,address)",
          "transferEvent(address,address,uint256)",
          "feeState()",
          "getIsApproved(address)",
          "searchExcludedFromFeeAccounts(address)",
          "getDefaultBalance()",
          "insertIntoExcludedFromFeeAccounts(address[])",
          "deleteFromExcludedFromFeeAccounts(address[])",
          "claim(address,uint256)",
          "name()",
          "symbol()",
          "decimals()",
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "transferFrom(address,address,uint256)",
          "approve(address,uint256)",
          "allowance(address,address)",
          "increaseAllowance(address,uint256)",
          "decreaseAllowance(address,uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "FistDao",
            "src": "contracts/FirstDao.sol:159"
          },
          {
            "kind": "state-variable-assignment",
            "name": "_decimals",
            "src": "contracts/FirstDao.sol:132"
          },
          {
            "kind": "state-variable-assignment",
            "name": "_totalSupply",
            "src": "contracts/FirstDao.sol:133"
          },
          {
            "kind": "state-variable-assignment",
            "name": "_feeTax",
            "src": "contracts/FirstDao.sol:138"
          },
          {
            "kind": "state-variable-assignment",
            "name": "_feeMining",
            "src": "contracts/FirstDao.sol:139"
          },
          {
            "kind": "state-variable-assignment",
            "name": "_feeLiquidity",
            "src": "contracts/FirstDao.sol:140"
          },
          {
            "kind": "state-variable-assignment",
            "name": "_feeDivisor",
            "src": "contracts/FirstDao.sol:141"
          },
          {
            "kind": "state-variable-assignment",
            "name": "_removeAllFee",
            "src": "contracts/FirstDao.sol:143"
          },
          {
            "kind": "state-variable-assignment",
            "name": "_defaultBalance",
            "src": "contracts/FirstDao.sol:150"
          },
          {
            "kind": "state-variable-assignment",
            "name": "_defaultAmount",
            "src": "contracts/FirstDao.sol:151"
          },
          {
            "kind": "state-variable-assignment",
            "name": "_initialized111",
            "src": "contracts/FirstDao.sol:156"
          },
          {
            "kind": "state-variable-assignment",
            "name": "_reentry",
            "src": "contracts/FirstDao.sol:157"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Ownable",
              "src": "contracts/FirstDao.sol:58"
            },
            {
              "label": "_previousOwner",
              "offset": 0,
              "slot": "1",
              "type": "t_address",
              "contract": "Ownable",
              "src": "contracts/FirstDao.sol:59"
            },
            {
              "label": "_switchDate",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "Ownable",
              "src": "contracts/FirstDao.sol:60"
            },
            {
              "label": "_name",
              "offset": 0,
              "slot": "3",
              "type": "t_string_storage",
              "contract": "FistDao",
              "src": "contracts/FirstDao.sol:130"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "4",
              "type": "t_string_storage",
              "contract": "FistDao",
              "src": "contracts/FirstDao.sol:131"
            },
            {
              "label": "_decimals",
              "offset": 0,
              "slot": "5",
              "type": "t_uint8",
              "contract": "FistDao",
              "src": "contracts/FirstDao.sol:132"
            },
            {
              "label": "_totalSupply",
              "offset": 0,
              "slot": "6",
              "type": "t_uint256",
              "contract": "FistDao",
              "src": "contracts/FirstDao.sol:133"
            },
            {
              "label": "_balances",
              "offset": 0,
              "slot": "7",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "FistDao",
              "src": "contracts/FirstDao.sol:134"
            },
            {
              "label": "_allowances",
              "offset": 0,
              "slot": "8",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "FistDao",
              "src": "contracts/FirstDao.sol:135"
            },
            {
              "label": "_isApproved",
              "offset": 0,
              "slot": "9",
              "type": "t_mapping(t_address,t_bool)",
              "contract": "FistDao",
              "src": "contracts/FirstDao.sol:136"
            },
            {
              "label": "_feeTax",
              "offset": 0,
              "slot": "10",
              "type": "t_uint256",
              "contract": "FistDao",
              "src": "contracts/FirstDao.sol:138"
            },
            {
              "label": "_feeMining",
              "offset": 0,
              "slot": "11",
              "type": "t_uint256",
              "contract": "FistDao",
              "src": "contracts/FirstDao.sol:139"
            },
            {
              "label": "_feeLiquidity",
              "offset": 0,
              "slot": "12",
              "type": "t_uint256",
              "contract": "FistDao",
              "src": "contracts/FirstDao.sol:140"
            },
            {
              "label": "_feeDivisor",
              "offset": 0,
              "slot": "13",
              "type": "t_uint256",
              "contract": "FistDao",
              "src": "contracts/FirstDao.sol:141"
            },
            {
              "label": "_removeAllFee",
              "offset": 0,
              "slot": "14",
              "type": "t_bool",
              "contract": "FistDao",
              "src": "contracts/FirstDao.sol:143"
            },
            {
              "label": "_core",
              "offset": 1,
              "slot": "14",
              "type": "t_address",
              "contract": "FistDao",
              "src": "contracts/FirstDao.sol:145"
            },
            {
              "label": "_taxReceiver",
              "offset": 0,
              "slot": "15",
              "type": "t_address",
              "contract": "FistDao",
              "src": "contracts/FirstDao.sol:146"
            },
            {
              "label": "_miningPool",
              "offset": 0,
              "slot": "16",
              "type": "t_address",
              "contract": "FistDao",
              "src": "contracts/FirstDao.sol:147"
            },
            {
              "label": "_liquidityPool",
              "offset": 0,
              "slot": "17",
              "type": "t_address",
              "contract": "FistDao",
              "src": "contracts/FirstDao.sol:148"
            },
            {
              "label": "_defaultBalance",
              "offset": 0,
              "slot": "18",
              "type": "t_uint256",
              "contract": "FistDao",
              "src": "contracts/FirstDao.sol:150"
            },
            {
              "label": "_defaultAmount",
              "offset": 0,
              "slot": "19",
              "type": "t_uint256",
              "contract": "FistDao",
              "src": "contracts/FirstDao.sol:151"
            },
            {
              "label": "_isExcludedFromFee",
              "offset": 0,
              "slot": "20",
              "type": "t_mapping(t_address,t_bool)",
              "contract": "FistDao",
              "src": "contracts/FirstDao.sol:153"
            },
            {
              "label": "_excludedFromFeeAccounts",
              "offset": 0,
              "slot": "21",
              "type": "t_array(t_address)dyn_storage",
              "contract": "FistDao",
              "src": "contracts/FirstDao.sol:154"
            },
            {
              "label": "_initialized111",
              "offset": 0,
              "slot": "22",
              "type": "t_bool",
              "contract": "FistDao",
              "src": "contracts/FirstDao.sol:156"
            },
            {
              "label": "_reentry",
              "offset": 0,
              "slot": "23",
              "type": "t_uint256",
              "contract": "FistDao",
              "src": "contracts/FirstDao.sol:157"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_address)dyn_storage": {
              "label": "address[]",
              "numberOfBytes": "32"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint8": {
              "label": "uint8",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.21"
      },
      "contracts/FirstDao.sol:ICore": {
        "src": "contracts/FirstDao.sol:119",
        "inherit": [],
        "libraries": [],
        "methods": [
          "getPairAddress()",
          "airdrop()",
          "safety(address,address)",
          "start()",
          "end()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.21"
      },
      "contracts/FirstDao.sol:IERC20": {
        "src": "contracts/FirstDao.sol:8",
        "inherit": [],
        "libraries": [],
        "methods": [
          "name()",
          "symbol()",
          "decimals()",
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "transferFrom(address,address,uint256)",
          "approve(address,uint256)",
          "allowance(address,address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.21"
      },
      "contracts/FirstDao.sol:IFactory": {
        "src": "contracts/FirstDao.sol:91",
        "inherit": [],
        "libraries": [],
        "methods": [
          "createPair(address,address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.21"
      },
      "contracts/FirstDao.sol:IRouter01": {
        "src": "contracts/FirstDao.sol:95",
        "inherit": [],
        "libraries": [],
        "methods": [
          "factory()",
          "addLiquidity(address,address,uint256,uint256,uint256,uint256,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.21"
      },
      "contracts/FirstDao.sol:IRouter02": {
        "src": "contracts/FirstDao.sol:109",
        "inherit": [
          "contracts/FirstDao.sol:IRouter01"
        ],
        "libraries": [],
        "methods": [
          "swapExactTokensForTokensSupportingFeeOnTransferTokens(uint256,uint256,address[],address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.21"
      },
      "contracts/FirstDao.sol:Ownable": {
        "src": "contracts/FirstDao.sol:57",
        "inherit": [],
        "libraries": [],
        "methods": [
          "owner()",
          "switchDate()",
          "transferOwnership(uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Ownable",
            "src": "contracts/FirstDao.sol:63"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Ownable",
              "src": "contracts/FirstDao.sol:58"
            },
            {
              "label": "_previousOwner",
              "offset": 0,
              "slot": "1",
              "type": "t_address",
              "contract": "Ownable",
              "src": "contracts/FirstDao.sol:59"
            },
            {
              "label": "_switchDate",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "Ownable",
              "src": "contracts/FirstDao.sol:60"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.21"
      },
      "contracts/FirstDao.sol:SafeMath": {
        "src": "contracts/FirstDao.sol:22",
        "version": {
          "withMetadata": "95eb3df1bd62a62b1bf87150f7314053125cc709ed6eb26f9bf2a30d8fc55e32",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.21"
      }
    },
    {
      "contracts/IFiles.sol:Address": {
        "src": "contracts/IFiles.sol:147",
        "version": {
          "withMetadata": "73f3d745b82ff92d492794f39ddc131795315255895e196d918dc1260c813488",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.21"
      },
      "contracts/IFiles.sol:Context": {
        "src": "contracts/IFiles.sol:135",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.21"
      },
      "contracts/IFiles.sol:IBEP20": {
        "src": "contracts/IFiles.sol:9",
        "inherit": [],
        "libraries": [],
        "methods": [
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.21"
      },
      "contracts/IFiles.sol:IPancakeFactory": {
        "src": "contracts/IFiles.sol:327",
        "inherit": [],
        "libraries": [],
        "methods": [
          "feeTo()",
          "feeToSetter()",
          "getPair(address,address)",
          "allPairs(uint256)",
          "allPairsLength()",
          "createPair(address,address)",
          "setFeeTo(address)",
          "setFeeToSetter(address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.21"
      },
      "contracts/IFiles.sol:IPancakePair": {
        "src": "contracts/IFiles.sol:357",
        "inherit": [],
        "libraries": [],
        "methods": [
          "name()",
          "symbol()",
          "decimals()",
          "totalSupply()",
          "balanceOf(address)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transfer(address,uint256)",
          "transferFrom(address,address,uint256)",
          "DOMAIN_SEPARATOR()",
          "PERMIT_TYPEHASH()",
          "nonces(address)",
          "permit(address,address,uint256,uint256,uint8,bytes32,bytes32)",
          "MINIMUM_LIQUIDITY()",
          "factory()",
          "token0()",
          "token1()",
          "getReserves()",
          "price0CumulativeLast()",
          "price1CumulativeLast()",
          "kLast()",
          "mint(address)",
          "burn(address)",
          "swap(uint256,uint256,address,bytes)",
          "skim(address)",
          "sync()",
          "initialize(address,address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.21"
      },
      "contracts/IFiles.sol:IPancakeRouter01": {
        "src": "contracts/IFiles.sol:466",
        "inherit": [],
        "libraries": [],
        "methods": [
          "factory()",
          "WETH()",
          "addLiquidity(address,address,uint256,uint256,uint256,uint256,address,uint256)",
          "addLiquidityETH(address,uint256,uint256,uint256,address,uint256)",
          "removeLiquidity(address,address,uint256,uint256,uint256,address,uint256)",
          "removeLiquidityETH(address,uint256,uint256,uint256,address,uint256)",
          "removeLiquidityWithPermit(address,address,uint256,uint256,uint256,address,uint256,bool,uint8,bytes32,bytes32)",
          "removeLiquidityETHWithPermit(address,uint256,uint256,uint256,address,uint256,bool,uint8,bytes32,bytes32)",
          "swapExactTokensForTokens(uint256,uint256,address[],address,uint256)",
          "swapTokensForExactTokens(uint256,uint256,address[],address,uint256)",
          "swapExactETHForTokens(uint256,address[],address,uint256)",
          "swapTokensForExactETH(uint256,uint256,address[],address,uint256)",
          "swapExactTokensForETH(uint256,uint256,address[],address,uint256)",
          "swapETHForExactTokens(uint256,address[],address,uint256)",
          "quote(uint256,uint256,uint256)",
          "getAmountOut(uint256,uint256,uint256)",
          "getAmountIn(uint256,uint256,uint256)",
          "getAmountsOut(uint256,address[])",
          "getAmountsIn(uint256,address[])"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.21"
      },
      "contracts/IFiles.sol:IPancakeRouter02": {
        "src": "contracts/IFiles.sol:626",
        "inherit": [
          "contracts/IFiles.sol:IPancakeRouter01"
        ],
        "libraries": [],
        "methods": [
          "removeLiquidityETHSupportingFeeOnTransferTokens(address,uint256,uint256,uint256,address,uint256)",
          "removeLiquidityETHWithPermitSupportingFeeOnTransferTokens(address,uint256,uint256,uint256,address,uint256,bool,uint8,bytes32,bytes32)",
          "swapExactTokensForTokensSupportingFeeOnTransferTokens(uint256,uint256,address[],address,uint256)",
          "swapExactETHForTokensSupportingFeeOnTransferTokens(uint256,address[],address,uint256)",
          "swapExactTokensForETHSupportingFeeOnTransferTokens(uint256,uint256,address[],address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.21"
      },
      "contracts/IFiles.sol:IWBNB": {
        "src": "contracts/IFiles.sol:38",
        "inherit": [],
        "libraries": [],
        "methods": [
          "name()",
          "symbol()",
          "decimals()",
          "balanceOf(address)",
          "allowance(address,address)",
          "()",
          "deposit()",
          "withdraw(uint256)",
          "totalSupply()",
          "approve(address,uint256)",
          "transfer(address,uint256)",
          "transferFrom(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.21"
      },
      "contracts/IFiles.sol:Initializable": {
        "src": "contracts/IFiles.sol:249",
        "version": {
          "withMetadata": "ba793f874980ba8826e0f77e588821b7a373c942b97ebcd7e4e42f378e00e824",
          "withoutMetadata": "ac0db523ddc3e330f735df7b3b0b24460531c71290a891170e840f8f67d5ff6b",
          "linkedWithoutMetadata": "ac0db523ddc3e330f735df7b3b0b24460531c71290a891170e840f8f67d5ff6b"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "contracts/IFiles.sol:251"
            },
            {
              "label": "initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "contracts/IFiles.sol:252"
            },
            {
              "label": "______gap",
              "offset": 0,
              "slot": "1",
              "type": "t_array(t_uint256)50_storage",
              "contract": "Initializable",
              "src": "contracts/IFiles.sol:283"
            }
          ],
          "types": {
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]",
              "numberOfBytes": "1600"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.21"
      },
      "contracts/IFiles.sol:Ownable": {
        "src": "contracts/IFiles.sol:286",
        "version": {
          "withMetadata": "9b6e83ec071c913ea8078938bf6c8e47f6ce697f181f2ebf31dc4937807eb386",
          "withoutMetadata": "a3dd09084d5d3377afaa5e637593b425fb1172db63a48c2f62428555638775f8",
          "linkedWithoutMetadata": "a3dd09084d5d3377afaa5e637593b425fb1172db63a48c2f62428555638775f8"
        },
        "inherit": [
          "contracts/IFiles.sol:Initializable",
          "contracts/IFiles.sol:Context"
        ],
        "libraries": [],
        "methods": [
          "()",
          "initOwner(address)",
          "owner()",
          "renounceOwnership()",
          "transferOwnership(address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "contracts/IFiles.sol:251"
            },
            {
              "label": "initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "contracts/IFiles.sol:252"
            },
            {
              "label": "______gap",
              "offset": 0,
              "slot": "1",
              "type": "t_array(t_uint256)50_storage",
              "contract": "Initializable",
              "src": "contracts/IFiles.sol:283"
            },
            {
              "label": "_owner",
              "offset": 0,
              "slot": "51",
              "type": "t_address",
              "contract": "Ownable",
              "src": "contracts/IFiles.sol:287"
            },
            {
              "label": "_previousOwner",
              "offset": 0,
              "slot": "52",
              "type": "t_address",
              "contract": "Ownable",
              "src": "contracts/IFiles.sol:288"
            },
            {
              "label": "_lockTime",
              "offset": 0,
              "slot": "53",
              "type": "t_uint256",
              "contract": "Ownable",
              "src": "contracts/IFiles.sol:289"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]",
              "numberOfBytes": "1600"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.21"
      },
      "contracts/IFiles.sol:SafeMath": {
        "src": "contracts/IFiles.sol:68",
        "version": {
          "withMetadata": "6a5db877229c78c84b33e85a297bea1121c6a6195aa310f30cbe69888293c5ae",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.21"
      },
      "contracts/ReentrancyGuard.sol:ReentrancyGuard": {
        "src": "contracts/ReentrancyGuard.sol:5",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ReentrancyGuard",
            "src": "contracts/ReentrancyGuard.sol:12"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_status",
              "offset": 0,
              "slot": "0",
              "type": "t_uint256",
              "contract": "ReentrancyGuard",
              "src": "contracts/ReentrancyGuard.sol:10"
            }
          ],
          "types": {
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.21"
      },
      "contracts/Utils.sol:PancakeLibrary": {
        "src": "contracts/Utils.sol:219",
        "version": {
          "withMetadata": "668337a75717822cd6d73bbd1c50526e84e4af10cd45125b1756676395a2f30c",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [
          "contracts/IFiles.sol:SafeMath"
        ],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.21"
      },
      "contracts/Utils.sol:Utils": {
        "src": "contracts/Utils.sol:6",
        "version": {
          "withMetadata": "a5775bd7ff330a5dfa7ddaef645bcc8fbccdcd3c38fbc9fc1755e3e3a9a09d47",
          "withoutMetadata": "8ca6da6b824cadf2e1f9c600b5f1381080c8b8d75dddf5423f35e25222daaeda",
          "linkedWithoutMetadata": "8ca6da6b824cadf2e1f9c600b5f1381080c8b8d75dddf5423f35e25222daaeda"
        },
        "inherit": [],
        "libraries": [
          "contracts/IFiles.sol:SafeMath"
        ],
        "methods": [
          "calculateBNBReward(uint256,uint256,uint256,uint256)",
          "calculateTopUpClaim(uint256,uint256,uint256,uint256)",
          "swapTokensForEth(address,uint256)",
          "swapETHForTokens(address,address,uint256)",
          "swapTokensForTokens(address,address,uint256)",
          "getAmountsout(uint256,address)",
          "addLiquidity(address,address,uint256,uint256)",
          "getAntiFlipTaxNo(uint256)",
          "calcReward(uint256,uint256,uint256,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.21"
      }
    },
    {
      "contracts/Proxy.sol:Caller": {
        "src": "contracts/Proxy.sol:80",
        "version": {
          "withMetadata": "8a43f4805f6ec5dd7b7379a87ef3fa89b1f2cd8e86292442058e51e90f40e31d",
          "withoutMetadata": "d6211a178c252503f87d41bbcceffa66551bde0c0c4b0cc3c5a44a4f489e2c7f",
          "linkedWithoutMetadata": "d6211a178c252503f87d41bbcceffa66551bde0c0c4b0cc3c5a44a4f489e2c7f"
        },
        "inherit": [],
        "libraries": [],
        "methods": [
          "(address)",
          "increase()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Caller",
            "src": "contracts/Proxy.sol:80"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "proxy",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Caller",
              "src": "contracts/Proxy.sol:80"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.21"
      },
      "contracts/Proxy.sol:Proxy": {
        "src": "contracts/Proxy.sol:10",
        "version": {
          "withMetadata": "3a655b5f054f4310d279144652e269b840bf308c06f48e08f2d407ee1381c2c1",
          "withoutMetadata": "bc7fcd1c64d2f798926ae830c3e369a33c770ea294cd9047d184a8c885a96818",
          "linkedWithoutMetadata": "bc7fcd1c64d2f798926ae830c3e369a33c770ea294cd9047d184a8c885a96818"
        },
        "inherit": [],
        "libraries": [],
        "methods": [
          "(address)",
          "()",
          "()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Proxy",
            "src": "contracts/Proxy.sol:22"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "implementation",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Proxy",
              "src": "contracts/Proxy.sol:13"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.21"
      }
    },
    {
      "contracts/Logic.sol:Logic": {
        "src": "contracts/Logic.sol:9",
        "version": {
          "withMetadata": "087c86b163578853fb1cba09b22843df8f815c95bf2568200ddd8e1dbf167fea",
          "withoutMetadata": "a9feffbc7087e9529577fb0b368171b85b94d25918f43b5d410eb0f186274034",
          "linkedWithoutMetadata": "a9feffbc7087e9529577fb0b368171b85b94d25918f43b5d410eb0f186274034"
        },
        "inherit": [],
        "libraries": [],
        "methods": [
          "increment()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "state-variable-assignment",
            "name": "x",
            "src": "contracts/Logic.sol:13"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "implementation",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Logic",
              "src": "contracts/Logic.sol:9"
            },
            {
              "label": "x",
              "offset": 0,
              "slot": "1",
              "type": "t_uint256",
              "contract": "Logic",
              "src": "contracts/Logic.sol:13"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.21"
      }
    },
    {
      "contracts/Logic.sol:Logic": {
        "src": "contracts/Logic.sol:9",
        "version": {
          "withMetadata": "087c86b163578853fb1cba09b22843df8f815c95bf2568200ddd8e1dbf167fea",
          "withoutMetadata": "a9feffbc7087e9529577fb0b368171b85b94d25918f43b5d410eb0f186274034",
          "linkedWithoutMetadata": "a9feffbc7087e9529577fb0b368171b85b94d25918f43b5d410eb0f186274034"
        },
        "inherit": [],
        "libraries": [],
        "methods": [
          "increment()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "state-variable-assignment",
            "name": "x",
            "src": "contracts/Logic.sol:13"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "implementation",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Logic",
              "src": "contracts/Logic.sol:9"
            },
            {
              "label": "x",
              "offset": 0,
              "slot": "1",
              "type": "t_uint256",
              "contract": "Logic",
              "src": "contracts/Logic.sol:13"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.21"
      }
    },
    {
      "@openzeppelin/contracts/access/Ownable.sol:Ownable": {
        "src": "@openzeppelin/contracts/access/Ownable.sol:20",
        "inherit": [
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [],
        "methods": [
          "owner()",
          "renounceOwnership()",
          "transferOwnership(address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Ownable",
            "src": "@openzeppelin/contracts/access/Ownable.sol:28"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Ownable",
              "src": "@openzeppelin/contracts/access/Ownable.sol:21"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.21"
      },
      "@openzeppelin/contracts/security/ReentrancyGuard.sol:ReentrancyGuard": {
        "src": "@openzeppelin/contracts/security/ReentrancyGuard.sol:22",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ReentrancyGuard",
            "src": "@openzeppelin/contracts/security/ReentrancyGuard.sol:39"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_status",
              "offset": 0,
              "slot": "0",
              "type": "t_uint256",
              "contract": "ReentrancyGuard",
              "src": "@openzeppelin/contracts/security/ReentrancyGuard.sol:37"
            }
          ],
          "types": {
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.21"
      },
      "@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20": {
        "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:35",
        "version": {
          "withMetadata": "b653be9ad258ddaafa2304767243ba86eac7156acd9bf1a196bee0fef9b1c3a9",
          "withoutMetadata": "1d55e2dc08aae4fa5bd2ca8ac476f7a2e63bdfa7b0b51d4bd61db8705143a140",
          "linkedWithoutMetadata": "1d55e2dc08aae4fa5bd2ca8ac476f7a2e63bdfa7b0b51d4bd61db8705143a140"
        },
        "inherit": [
          "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol:IERC20Metadata",
          "@openzeppelin/contracts/token/ERC20/IERC20.sol:IERC20",
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [],
        "methods": [
          "(string,string)",
          "name()",
          "symbol()",
          "decimals()",
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)",
          "increaseAllowance(address,uint256)",
          "decreaseAllowance(address,uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ERC20",
            "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:54"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_balances",
              "offset": 0,
              "slot": "0",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:36"
            },
            {
              "label": "_allowances",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:38"
            },
            {
              "label": "_totalSupply",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:40"
            },
            {
              "label": "_name",
              "offset": 0,
              "slot": "3",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:42"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "4",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:43"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.21"
      },
      "@openzeppelin/contracts/token/ERC20/IERC20.sol:IERC20": {
        "src": "@openzeppelin/contracts/token/ERC20/IERC20.sol:9",
        "inherit": [],
        "libraries": [],
        "methods": [
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.21"
      },
      "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol:IERC20Metadata": {
        "src": "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol:13",
        "inherit": [
          "@openzeppelin/contracts/token/ERC20/IERC20.sol:IERC20"
        ],
        "libraries": [],
        "methods": [
          "name()",
          "symbol()",
          "decimals()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.21"
      },
      "@openzeppelin/contracts/token/ERC20/extensions/draft-IERC20Permit.sol:IERC20Permit": {
        "src": "@openzeppelin/contracts/token/ERC20/extensions/draft-IERC20Permit.sol:14",
        "inherit": [],
        "libraries": [],
        "methods": [
          "permit(address,address,uint256,uint256,uint8,bytes32,bytes32)",
          "nonces(address)",
          "DOMAIN_SEPARATOR()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.21"
      },
      "@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol:SafeERC20": {
        "src": "@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol:19",
        "version": {
          "withMetadata": "945db44b71722f915e3e7352ee22f854dfe8000e69eee742d881b64279bb0ad8",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [
          "@openzeppelin/contracts/utils/Address.sol:Address"
        ],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.21"
      },
      "@openzeppelin/contracts/utils/Address.sol:Address": {
        "src": "@openzeppelin/contracts/utils/Address.sol:9",
        "version": {
          "withMetadata": "9401bbf4dc0decc4c739a060967031a16e8de389388d98c32ec11cff440d6513",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [
          {
            "kind": "delegatecall",
            "src": "@openzeppelin/contracts/utils/Address.sol:191"
          },
          {
            "kind": "delegatecall",
            "src": "@openzeppelin/contracts/utils/Address.sol:191"
          }
        ],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.21"
      },
      "@openzeppelin/contracts/utils/Context.sol:Context": {
        "src": "@openzeppelin/contracts/utils/Context.sol:16",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.21"
      },
      "@openzeppelin/contracts/utils/math/Math.sol:Math": {
        "src": "@openzeppelin/contracts/utils/math/Math.sol:9",
        "version": {
          "withMetadata": "f58f3d1d6b53395057afc8a5e1edcbfcd81cdec0dfcf6b1290c8c2368b975278",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.21"
      },
      "@openzeppelin/contracts/utils/math/SafeMath.sol:SafeMath": {
        "src": "@openzeppelin/contracts/utils/math/SafeMath.sol:16",
        "version": {
          "withMetadata": "4167346fe154a63f59e72262dbca9ccb097c97b61ec5dfe163259378386d2ba4",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.21"
      },
      "contracts/Presale.sol:IGoldToken": {
        "src": "contracts/Presale.sol:8",
        "inherit": [],
        "libraries": [],
        "methods": [
          "mint(address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.21"
      },
      "contracts/Presale.sol:Presale": {
        "src": "contracts/Presale.sol:12",
        "version": {
          "withMetadata": "55de4f41aa2ae4e88c3e975f7f7c871c8630a6a915f505e8b168c82d5665ef13",
          "withoutMetadata": "2fa5a3bfe1ae715a2695aad2a1fdda65dd5f2dfe346a8af0822d82b296b7bc1b",
          "linkedWithoutMetadata": "2fa5a3bfe1ae715a2695aad2a1fdda65dd5f2dfe346a8af0822d82b296b7bc1b"
        },
        "inherit": [
          "@openzeppelin/contracts/security/ReentrancyGuard.sol:ReentrancyGuard",
          "@openzeppelin/contracts/access/Ownable.sol:Ownable",
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [],
        "methods": [
          "(address,address,address,uint256)",
          "createPreSale((uint256,uint256,uint256))",
          "sale()",
          "getCanIdoAmount(address)",
          "bindReffer(address)",
          "userBalance(address)",
          "userRewardBalance(address)",
          "userWithdraw()",
          "teamWithdraw(address)",
          "setUserWithdrawTime(uint256)",
          "setInviteMin(uint256)",
          "setPerMaxBuyUsdt(uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Presale",
            "src": "contracts/Presale.sol:46"
          },
          {
            "kind": "state-variable-assignment",
            "name": "perMaxBuyUsdt",
            "src": "contracts/Presale.sol:15"
          },
          {
            "kind": "state-variable-assignment",
            "name": "inviteMin",
            "src": "contracts/Presale.sol:31"
          },
          {
            "kind": "state-variable-assignment",
            "name": "maxSale",
            "src": "contracts/Presale.sol:33"
          },
          {
            "kind": "state-variable-assignment",
            "name": "rewardLevel",
            "src": "contracts/Presale.sol:36"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Ownable",
              "src": "@openzeppelin/contracts/access/Ownable.sol:21"
            },
            {
              "label": "_status",
              "offset": 0,
              "slot": "1",
              "type": "t_uint256",
              "contract": "ReentrancyGuard",
              "src": "@openzeppelin/contracts/security/ReentrancyGuard.sol:37"
            },
            {
              "label": "userWithdrawTime",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "Presale",
              "src": "contracts/Presale.sol:13"
            },
            {
              "label": "perMaxBuyUsdt",
              "offset": 0,
              "slot": "3",
              "type": "t_uint256",
              "contract": "Presale",
              "src": "contracts/Presale.sol:15"
            },
            {
              "label": "teamAddress",
              "offset": 0,
              "slot": "4",
              "type": "t_address",
              "contract": "Presale",
              "src": "contracts/Presale.sol:16"
            },
            {
              "label": "saleToken",
              "offset": 0,
              "slot": "5",
              "type": "t_address",
              "contract": "Presale",
              "src": "contracts/Presale.sol:17"
            },
            {
              "label": "usdtToken",
              "offset": 0,
              "slot": "6",
              "type": "t_address",
              "contract": "Presale",
              "src": "contracts/Presale.sol:18"
            },
            {
              "label": "goldTokenAddress",
              "offset": 0,
              "slot": "7",
              "type": "t_address",
              "contract": "Presale",
              "src": "contracts/Presale.sol:19"
            },
            {
              "label": "balances",
              "offset": 0,
              "slot": "8",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "Presale",
              "src": "contracts/Presale.sol:20"
            },
            {
              "label": "userBuyTotalUsdt",
              "offset": 0,
              "slot": "9",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "Presale",
              "src": "contracts/Presale.sol:21"
            },
            {
              "label": "rewardBalances",
              "offset": 0,
              "slot": "10",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "Presale",
              "src": "contracts/Presale.sol:22"
            },
            {
              "label": "reffers",
              "offset": 0,
              "slot": "11",
              "type": "t_mapping(t_address,t_address)",
              "contract": "Presale",
              "src": "contracts/Presale.sol:23"
            },
            {
              "label": "refferNumber",
              "offset": 0,
              "slot": "12",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "Presale",
              "src": "contracts/Presale.sol:24"
            },
            {
              "label": "teamRefferNumber",
              "offset": 0,
              "slot": "13",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "Presale",
              "src": "contracts/Presale.sol:25"
            },
            {
              "label": "firstIdo",
              "offset": 0,
              "slot": "14",
              "type": "t_mapping(t_address,t_bool)",
              "contract": "Presale",
              "src": "contracts/Presale.sol:26"
            },
            {
              "label": "totalIdoUSDT",
              "offset": 0,
              "slot": "15",
              "type": "t_uint256",
              "contract": "Presale",
              "src": "contracts/Presale.sol:27"
            },
            {
              "label": "totalIdoUser",
              "offset": 0,
              "slot": "16",
              "type": "t_uint256",
              "contract": "Presale",
              "src": "contracts/Presale.sol:28"
            },
            {
              "label": "totalSale",
              "offset": 0,
              "slot": "17",
              "type": "t_uint256",
              "contract": "Presale",
              "src": "contracts/Presale.sol:29"
            },
            {
              "label": "inviteMin",
              "offset": 0,
              "slot": "18",
              "type": "t_uint256",
              "contract": "Presale",
              "src": "contracts/Presale.sol:31"
            },
            {
              "label": "maxSale",
              "offset": 0,
              "slot": "19",
              "type": "t_uint256",
              "contract": "Presale",
              "src": "contracts/Presale.sol:33"
            },
            {
              "label": "isCloseSale",
              "offset": 0,
              "slot": "20",
              "type": "t_bool",
              "contract": "Presale",
              "src": "contracts/Presale.sol:34"
            },
            {
              "label": "rewardLevel",
              "offset": 0,
              "slot": "21",
              "type": "t_array(t_uint256)dyn_storage",
              "contract": "Presale",
              "src": "contracts/Presale.sol:36"
            },
            {
              "label": "presaleInfo",
              "offset": 0,
              "slot": "22",
              "type": "t_struct(PresaleInfo)2392_storage",
              "contract": "Presale",
              "src": "contracts/Presale.sol:44"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_uint256)dyn_storage": {
              "label": "uint256[]",
              "numberOfBytes": "32"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_mapping(t_address,t_address)": {
              "label": "mapping(address => address)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_struct(PresaleInfo)2392_storage": {
              "label": "struct Presale.PresaleInfo",
              "members": [
                {
                  "label": "startTime",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "endTime",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "price",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "2"
                }
              ],
              "numberOfBytes": "96"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.21"
      },
      "contracts/Staking.sol:IRejuvenate": {
        "src": "contracts/Staking.sol:9",
        "inherit": [],
        "libraries": [],
        "methods": [
          "mint(address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.21"
      },
      "contracts/Staking.sol:Staking": {
        "src": "contracts/Staking.sol:13",
        "version": {
          "withMetadata": "d4a43fbe5f8d6347383f0680dba0a94146fceda61d8f28fb0ed926fda6eca5bc",
          "withoutMetadata": "8e35a11dc4a30aced1c096dd5db7f6424d19b292b732012b8d44d054f9cea466",
          "linkedWithoutMetadata": "8e35a11dc4a30aced1c096dd5db7f6424d19b292b732012b8d44d054f9cea466"
        },
        "inherit": [
          "@openzeppelin/contracts/security/ReentrancyGuard.sol:ReentrancyGuard",
          "@openzeppelin/contracts/access/Ownable.sol:Ownable",
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [],
        "methods": [
          "()",
          "changeRewardsPerBlock(uint256)",
          "rewardPerToken()",
          "earned(address)",
          "stake(uint256)",
          "unstake(uint256)",
          "claimRewards()",
          "pause()",
          "unpause()",
          "inCaseTokensGetStuck(address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Staking",
            "src": "contracts/Staking.sol:33"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Ownable",
              "src": "@openzeppelin/contracts/access/Ownable.sol:21"
            },
            {
              "label": "_status",
              "offset": 0,
              "slot": "1",
              "type": "t_uint256",
              "contract": "ReentrancyGuard",
              "src": "@openzeppelin/contracts/security/ReentrancyGuard.sol:37"
            },
            {
              "label": "paused",
              "offset": 0,
              "slot": "2",
              "type": "t_bool",
              "contract": "Staking",
              "src": "contracts/Staking.sol:14"
            },
            {
              "label": "_treasury",
              "offset": 1,
              "slot": "2",
              "type": "t_address",
              "contract": "Staking",
              "src": "contracts/Staking.sol:15"
            },
            {
              "label": "token",
              "offset": 0,
              "slot": "3",
              "type": "t_address",
              "contract": "Staking",
              "src": "contracts/Staking.sol:17"
            },
            {
              "label": "rewardRate",
              "offset": 0,
              "slot": "4",
              "type": "t_uint256",
              "contract": "Staking",
              "src": "contracts/Staking.sol:19"
            },
            {
              "label": "_lastUpdateBlock",
              "offset": 0,
              "slot": "5",
              "type": "t_uint256",
              "contract": "Staking",
              "src": "contracts/Staking.sol:20"
            },
            {
              "label": "_rewardsPerToken",
              "offset": 0,
              "slot": "6",
              "type": "t_uint256",
              "contract": "Staking",
              "src": "contracts/Staking.sol:21"
            },
            {
              "label": "data",
              "offset": 0,
              "slot": "7",
              "type": "t_array(t_struct(StakingData)3375_storage)dyn_storage",
              "contract": "Staking",
              "src": "contracts/Staking.sol:22"
            },
            {
              "label": "_userRewardsPerToken",
              "offset": 0,
              "slot": "8",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "Staking",
              "src": "contracts/Staking.sol:24"
            },
            {
              "label": "_rewards",
              "offset": 0,
              "slot": "9",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "Staking",
              "src": "contracts/Staking.sol:25"
            },
            {
              "label": "totalStaked",
              "offset": 0,
              "slot": "10",
              "type": "t_uint256",
              "contract": "Staking",
              "src": "contracts/Staking.sol:27"
            },
            {
              "label": "_balances",
              "offset": 0,
              "slot": "11",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "Staking",
              "src": "contracts/Staking.sol:28"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_struct(StakingData)3375_storage)dyn_storage": {
              "label": "struct StakingData[]",
              "numberOfBytes": "32"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_struct(StakingData)3375_storage": {
              "label": "struct StakingData",
              "members": [
                {
                  "label": "block",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "staked",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "1"
                }
              ],
              "numberOfBytes": "64"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.21"
      }
    },
    {
      "contracts/RichHusky.sol:Checker": {
        "src": "contracts/RichHusky.sol:520",
        "version": {
          "withMetadata": "17e1cf10fdffcda321c1a1f59d2b06178394724b4d8ad9b035a718122fed8a52",
          "withoutMetadata": "0faf6ca500781d04501ba7e4cf9138e35957321419c6ca29798480c22b3cc5cd",
          "linkedWithoutMetadata": "0faf6ca500781d04501ba7e4cf9138e35957321419c6ca29798480c22b3cc5cd"
        },
        "inherit": [],
        "libraries": [],
        "methods": [
          "isValid(address,address,address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.21"
      },
      "contracts/RichHusky.sol:Context": {
        "src": "contracts/RichHusky.sol:27",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.21"
      },
      "contracts/RichHusky.sol:ERC20": {
        "src": "contracts/RichHusky.sol:162",
        "version": {
          "withMetadata": "e092e43bc9c3243b7138ce015fa92d358fa66a764079145cfe1339f160fd055e",
          "withoutMetadata": "e248eda4094a79267c1d78eb85fb3a082e2ba4d153192b2644d6357dbed158f3",
          "linkedWithoutMetadata": "e248eda4094a79267c1d78eb85fb3a082e2ba4d153192b2644d6357dbed158f3"
        },
        "inherit": [
          "contracts/RichHusky.sol:IERC20Metadata",
          "contracts/RichHusky.sol:IERC20",
          "contracts/RichHusky.sol:Context"
        ],
        "libraries": [],
        "methods": [
          "(string,string)",
          "name()",
          "symbol()",
          "decimals()",
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)",
          "increaseAllowance(address,uint256)",
          "decreaseAllowance(address,uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ERC20",
            "src": "contracts/RichHusky.sol:181"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_balances",
              "offset": 0,
              "slot": "0",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC20",
              "src": "contracts/RichHusky.sol:163"
            },
            {
              "label": "_allowances",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "ERC20",
              "src": "contracts/RichHusky.sol:165"
            },
            {
              "label": "_totalSupply",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "ERC20",
              "src": "contracts/RichHusky.sol:167"
            },
            {
              "label": "_name",
              "offset": 0,
              "slot": "3",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "contracts/RichHusky.sol:169"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "4",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "contracts/RichHusky.sol:170"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.21"
      },
      "contracts/RichHusky.sol:IERC20": {
        "src": "contracts/RichHusky.sol:40",
        "inherit": [],
        "libraries": [],
        "methods": [
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.21"
      },
      "contracts/RichHusky.sol:IERC20Metadata": {
        "src": "contracts/RichHusky.sol:120",
        "inherit": [
          "contracts/RichHusky.sol:IERC20"
        ],
        "libraries": [],
        "methods": [
          "name()",
          "symbol()",
          "decimals()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.21"
      },
      "contracts/RichHusky.sol:IFactory": {
        "src": "contracts/RichHusky.sol:535",
        "inherit": [],
        "libraries": [],
        "methods": [
          "createPair(address,address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.21"
      },
      "contracts/RichHusky.sol:IGasToken": {
        "src": "contracts/RichHusky.sol:539",
        "inherit": [],
        "libraries": [],
        "methods": [
          "free(uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.21"
      },
      "contracts/RichHusky.sol:RichHusky": {
        "src": "contracts/RichHusky.sol:543",
        "version": {
          "withMetadata": "ce802161ba5ffecece3a7488fb3a07a35d8f78edf3674187d3eb27cc30777604",
          "withoutMetadata": "7c4ce62a347a52dc2685dbb41f6d968bb51e7d6abb10665abf0c7d7699da0d36",
          "linkedWithoutMetadata": "7c4ce62a347a52dc2685dbb41f6d968bb51e7d6abb10665abf0c7d7699da0d36"
        },
        "inherit": [
          "contracts/RichHusky.sol:ERC20",
          "contracts/RichHusky.sol:IERC20Metadata",
          "contracts/RichHusky.sol:IERC20",
          "contracts/RichHusky.sol:Context"
        ],
        "libraries": [
          "contracts/RichHusky.sol:Checker"
        ],
        "methods": [
          "(address)",
          "mint(address,uint256)",
          "updateAirdropAmount(uint256)",
          "withdrawFee(address,uint256)",
          "airdrop(address[],uint256)",
          "addBetaUsers(address[])",
          "removeBetaUsers(address[])",
          "multiCall(address[],bytes[])"
        ],
        "linkReferences": [
          {
            "src": "contracts/RichHusky.sol",
            "name": "Checker",
            "length": 20,
            "start": 5176,
            "placeholder": "__$1cb883ae52507a2d00adae80c79f632cb4$__"
          }
        ],
        "errors": [
          {
            "kind": "constructor",
            "contract": "RichHusky",
            "src": "contracts/RichHusky.sol:554"
          },
          {
            "kind": "state-variable-immutable",
            "name": "pancakeFactory",
            "src": "contracts/RichHusky.sol:549"
          },
          {
            "kind": "state-variable-immutable",
            "name": "WBNB",
            "src": "contracts/RichHusky.sol:550"
          },
          {
            "kind": "state-variable-immutable",
            "name": "GasToken",
            "src": "contracts/RichHusky.sol:552"
          },
          {
            "kind": "external-library-linking",
            "name": "Checker",
            "src": "contracts/RichHusky.sol"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_balances",
              "offset": 0,
              "slot": "0",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC20",
              "src": "contracts/RichHusky.sol:163"
            },
            {
              "label": "_allowances",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "ERC20",
              "src": "contracts/RichHusky.sol:165"
            },
            {
              "label": "_totalSupply",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "ERC20",
              "src": "contracts/RichHusky.sol:167"
            },
            {
              "label": "_name",
              "offset": 0,
              "slot": "3",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "contracts/RichHusky.sol:169"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "4",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "contracts/RichHusky.sol:170"
            },
            {
              "label": "dev",
              "offset": 0,
              "slot": "5",
              "type": "t_address",
              "contract": "RichHusky",
              "src": "contracts/RichHusky.sol:544"
            },
            {
              "label": "airdropAmount",
              "offset": 0,
              "slot": "6",
              "type": "t_uint256",
              "contract": "RichHusky",
              "src": "contracts/RichHusky.sol:545"
            },
            {
              "label": "betaUsers",
              "offset": 0,
              "slot": "7",
              "type": "t_mapping(t_address,t_bool)",
              "contract": "RichHusky",
              "src": "contracts/RichHusky.sol:546"
            },
            {
              "label": "pair",
              "offset": 0,
              "slot": "8",
              "type": "t_address",
              "contract": "RichHusky",
              "src": "contracts/RichHusky.sol:547"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.21"
      }
    },
    {
      "contracts/FirstDao.sol:FistDao": {
        "src": "contracts/FirstDao.sol:127",
        "version": {
          "withMetadata": "87594bf7d015e41aaf777bc0dc62e9e8a3685546fcfa065eb87291ef7f3f16f4",
          "withoutMetadata": "5bdb2538a3ba33172d93851875dfca20475ce01973348f896430788ab9d8314a",
          "linkedWithoutMetadata": "5bdb2538a3ba33172d93851875dfca20475ce01973348f896430788ab9d8314a"
        },
        "inherit": [
          "contracts/FirstDao.sol:Ownable",
          "contracts/FirstDao.sol:IERC20"
        ],
        "libraries": [
          "contracts/FirstDao.sol:SafeMath"
        ],
        "methods": [
          "(string,string)",
          "()",
          "initialize(address,address,address,address)",
          "transferEvent(address,address,uint256)",
          "feeState()",
          "getIsApproved(address)",
          "searchExcludedFromFeeAccounts(address)",
          "getDefaultBalance()",
          "insertIntoExcludedFromFeeAccounts(address[])",
          "deleteFromExcludedFromFeeAccounts(address[])",
          "claim(address,uint256)",
          "name()",
          "symbol()",
          "decimals()",
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "transferFrom(address,address,uint256)",
          "approve(address,uint256)",
          "allowance(address,address)",
          "increaseAllowance(address,uint256)",
          "decreaseAllowance(address,uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "FistDao",
            "src": "contracts/FirstDao.sol:159"
          },
          {
            "kind": "state-variable-assignment",
            "name": "_decimals",
            "src": "contracts/FirstDao.sol:132"
          },
          {
            "kind": "state-variable-assignment",
            "name": "_totalSupply",
            "src": "contracts/FirstDao.sol:133"
          },
          {
            "kind": "state-variable-assignment",
            "name": "_feeTax",
            "src": "contracts/FirstDao.sol:138"
          },
          {
            "kind": "state-variable-assignment",
            "name": "_feeMining",
            "src": "contracts/FirstDao.sol:139"
          },
          {
            "kind": "state-variable-assignment",
            "name": "_feeLiquidity",
            "src": "contracts/FirstDao.sol:140"
          },
          {
            "kind": "state-variable-assignment",
            "name": "_feeDivisor",
            "src": "contracts/FirstDao.sol:141"
          },
          {
            "kind": "state-variable-assignment",
            "name": "_removeAllFee",
            "src": "contracts/FirstDao.sol:143"
          },
          {
            "kind": "state-variable-assignment",
            "name": "_defaultBalance",
            "src": "contracts/FirstDao.sol:150"
          },
          {
            "kind": "state-variable-assignment",
            "name": "_defaultAmount",
            "src": "contracts/FirstDao.sol:151"
          },
          {
            "kind": "state-variable-assignment",
            "name": "_initialized111",
            "src": "contracts/FirstDao.sol:156"
          },
          {
            "kind": "state-variable-assignment",
            "name": "_reentry",
            "src": "contracts/FirstDao.sol:157"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Ownable",
              "src": "contracts/FirstDao.sol:58"
            },
            {
              "label": "_previousOwner",
              "offset": 0,
              "slot": "1",
              "type": "t_address",
              "contract": "Ownable",
              "src": "contracts/FirstDao.sol:59"
            },
            {
              "label": "_switchDate",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "Ownable",
              "src": "contracts/FirstDao.sol:60"
            },
            {
              "label": "_name",
              "offset": 0,
              "slot": "3",
              "type": "t_string_storage",
              "contract": "FistDao",
              "src": "contracts/FirstDao.sol:130"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "4",
              "type": "t_string_storage",
              "contract": "FistDao",
              "src": "contracts/FirstDao.sol:131"
            },
            {
              "label": "_decimals",
              "offset": 0,
              "slot": "5",
              "type": "t_uint8",
              "contract": "FistDao",
              "src": "contracts/FirstDao.sol:132"
            },
            {
              "label": "_totalSupply",
              "offset": 0,
              "slot": "6",
              "type": "t_uint256",
              "contract": "FistDao",
              "src": "contracts/FirstDao.sol:133"
            },
            {
              "label": "_balances",
              "offset": 0,
              "slot": "7",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "FistDao",
              "src": "contracts/FirstDao.sol:134"
            },
            {
              "label": "_allowances",
              "offset": 0,
              "slot": "8",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "FistDao",
              "src": "contracts/FirstDao.sol:135"
            },
            {
              "label": "_isApproved",
              "offset": 0,
              "slot": "9",
              "type": "t_mapping(t_address,t_bool)",
              "contract": "FistDao",
              "src": "contracts/FirstDao.sol:136"
            },
            {
              "label": "_feeTax",
              "offset": 0,
              "slot": "10",
              "type": "t_uint256",
              "contract": "FistDao",
              "src": "contracts/FirstDao.sol:138"
            },
            {
              "label": "_feeMining",
              "offset": 0,
              "slot": "11",
              "type": "t_uint256",
              "contract": "FistDao",
              "src": "contracts/FirstDao.sol:139"
            },
            {
              "label": "_feeLiquidity",
              "offset": 0,
              "slot": "12",
              "type": "t_uint256",
              "contract": "FistDao",
              "src": "contracts/FirstDao.sol:140"
            },
            {
              "label": "_feeDivisor",
              "offset": 0,
              "slot": "13",
              "type": "t_uint256",
              "contract": "FistDao",
              "src": "contracts/FirstDao.sol:141"
            },
            {
              "label": "_removeAllFee",
              "offset": 0,
              "slot": "14",
              "type": "t_bool",
              "contract": "FistDao",
              "src": "contracts/FirstDao.sol:143"
            },
            {
              "label": "_core",
              "offset": 1,
              "slot": "14",
              "type": "t_address",
              "contract": "FistDao",
              "src": "contracts/FirstDao.sol:145"
            },
            {
              "label": "_taxReceiver",
              "offset": 0,
              "slot": "15",
              "type": "t_address",
              "contract": "FistDao",
              "src": "contracts/FirstDao.sol:146"
            },
            {
              "label": "_miningPool",
              "offset": 0,
              "slot": "16",
              "type": "t_address",
              "contract": "FistDao",
              "src": "contracts/FirstDao.sol:147"
            },
            {
              "label": "_liquidityPool",
              "offset": 0,
              "slot": "17",
              "type": "t_address",
              "contract": "FistDao",
              "src": "contracts/FirstDao.sol:148"
            },
            {
              "label": "_defaultBalance",
              "offset": 0,
              "slot": "18",
              "type": "t_uint256",
              "contract": "FistDao",
              "src": "contracts/FirstDao.sol:150"
            },
            {
              "label": "_defaultAmount",
              "offset": 0,
              "slot": "19",
              "type": "t_uint256",
              "contract": "FistDao",
              "src": "contracts/FirstDao.sol:151"
            },
            {
              "label": "_isExcludedFromFee",
              "offset": 0,
              "slot": "20",
              "type": "t_mapping(t_address,t_bool)",
              "contract": "FistDao",
              "src": "contracts/FirstDao.sol:153"
            },
            {
              "label": "_excludedFromFeeAccounts",
              "offset": 0,
              "slot": "21",
              "type": "t_array(t_address)dyn_storage",
              "contract": "FistDao",
              "src": "contracts/FirstDao.sol:154"
            },
            {
              "label": "_initialized111",
              "offset": 0,
              "slot": "22",
              "type": "t_bool",
              "contract": "FistDao",
              "src": "contracts/FirstDao.sol:156"
            },
            {
              "label": "_reentry",
              "offset": 0,
              "slot": "23",
              "type": "t_uint256",
              "contract": "FistDao",
              "src": "contracts/FirstDao.sol:157"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_address)dyn_storage": {
              "label": "address[]",
              "numberOfBytes": "32"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint8": {
              "label": "uint8",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.21"
      },
      "contracts/FirstDao.sol:ICore": {
        "src": "contracts/FirstDao.sol:119",
        "inherit": [],
        "libraries": [],
        "methods": [
          "getPairAddress()",
          "airdrop()",
          "safety(address,address)",
          "start()",
          "end()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.21"
      },
      "contracts/FirstDao.sol:IERC20": {
        "src": "contracts/FirstDao.sol:8",
        "inherit": [],
        "libraries": [],
        "methods": [
          "name()",
          "symbol()",
          "decimals()",
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "transferFrom(address,address,uint256)",
          "approve(address,uint256)",
          "allowance(address,address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.21"
      },
      "contracts/FirstDao.sol:IFactory": {
        "src": "contracts/FirstDao.sol:91",
        "inherit": [],
        "libraries": [],
        "methods": [
          "createPair(address,address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.21"
      },
      "contracts/FirstDao.sol:IRouter01": {
        "src": "contracts/FirstDao.sol:95",
        "inherit": [],
        "libraries": [],
        "methods": [
          "factory()",
          "addLiquidity(address,address,uint256,uint256,uint256,uint256,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.21"
      },
      "contracts/FirstDao.sol:IRouter02": {
        "src": "contracts/FirstDao.sol:109",
        "inherit": [
          "contracts/FirstDao.sol:IRouter01"
        ],
        "libraries": [],
        "methods": [
          "swapExactTokensForTokensSupportingFeeOnTransferTokens(uint256,uint256,address[],address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.21"
      },
      "contracts/FirstDao.sol:Ownable": {
        "src": "contracts/FirstDao.sol:57",
        "inherit": [],
        "libraries": [],
        "methods": [
          "owner()",
          "switchDate()",
          "transferOwnership(uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Ownable",
            "src": "contracts/FirstDao.sol:63"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Ownable",
              "src": "contracts/FirstDao.sol:58"
            },
            {
              "label": "_previousOwner",
              "offset": 0,
              "slot": "1",
              "type": "t_address",
              "contract": "Ownable",
              "src": "contracts/FirstDao.sol:59"
            },
            {
              "label": "_switchDate",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "Ownable",
              "src": "contracts/FirstDao.sol:60"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.21"
      },
      "contracts/FirstDao.sol:SafeMath": {
        "src": "contracts/FirstDao.sol:22",
        "version": {
          "withMetadata": "95eb3df1bd62a62b1bf87150f7314053125cc709ed6eb26f9bf2a30d8fc55e32",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.21"
      }
    },
    {
      "contracts/IFiles.sol:Address": {
        "src": "contracts/IFiles.sol:147",
        "version": {
          "withMetadata": "73f3d745b82ff92d492794f39ddc131795315255895e196d918dc1260c813488",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.21"
      },
      "contracts/IFiles.sol:Context": {
        "src": "contracts/IFiles.sol:135",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.21"
      },
      "contracts/IFiles.sol:IBEP20": {
        "src": "contracts/IFiles.sol:9",
        "inherit": [],
        "libraries": [],
        "methods": [
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.21"
      },
      "contracts/IFiles.sol:IPancakeFactory": {
        "src": "contracts/IFiles.sol:327",
        "inherit": [],
        "libraries": [],
        "methods": [
          "feeTo()",
          "feeToSetter()",
          "getPair(address,address)",
          "allPairs(uint256)",
          "allPairsLength()",
          "createPair(address,address)",
          "setFeeTo(address)",
          "setFeeToSetter(address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.21"
      },
      "contracts/IFiles.sol:IPancakePair": {
        "src": "contracts/IFiles.sol:357",
        "inherit": [],
        "libraries": [],
        "methods": [
          "name()",
          "symbol()",
          "decimals()",
          "totalSupply()",
          "balanceOf(address)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transfer(address,uint256)",
          "transferFrom(address,address,uint256)",
          "DOMAIN_SEPARATOR()",
          "PERMIT_TYPEHASH()",
          "nonces(address)",
          "permit(address,address,uint256,uint256,uint8,bytes32,bytes32)",
          "MINIMUM_LIQUIDITY()",
          "factory()",
          "token0()",
          "token1()",
          "getReserves()",
          "price0CumulativeLast()",
          "price1CumulativeLast()",
          "kLast()",
          "mint(address)",
          "burn(address)",
          "swap(uint256,uint256,address,bytes)",
          "skim(address)",
          "sync()",
          "initialize(address,address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.21"
      },
      "contracts/IFiles.sol:IPancakeRouter01": {
        "src": "contracts/IFiles.sol:466",
        "inherit": [],
        "libraries": [],
        "methods": [
          "factory()",
          "WETH()",
          "addLiquidity(address,address,uint256,uint256,uint256,uint256,address,uint256)",
          "addLiquidityETH(address,uint256,uint256,uint256,address,uint256)",
          "removeLiquidity(address,address,uint256,uint256,uint256,address,uint256)",
          "removeLiquidityETH(address,uint256,uint256,uint256,address,uint256)",
          "removeLiquidityWithPermit(address,address,uint256,uint256,uint256,address,uint256,bool,uint8,bytes32,bytes32)",
          "removeLiquidityETHWithPermit(address,uint256,uint256,uint256,address,uint256,bool,uint8,bytes32,bytes32)",
          "swapExactTokensForTokens(uint256,uint256,address[],address,uint256)",
          "swapTokensForExactTokens(uint256,uint256,address[],address,uint256)",
          "swapExactETHForTokens(uint256,address[],address,uint256)",
          "swapTokensForExactETH(uint256,uint256,address[],address,uint256)",
          "swapExactTokensForETH(uint256,uint256,address[],address,uint256)",
          "swapETHForExactTokens(uint256,address[],address,uint256)",
          "quote(uint256,uint256,uint256)",
          "getAmountOut(uint256,uint256,uint256)",
          "getAmountIn(uint256,uint256,uint256)",
          "getAmountsOut(uint256,address[])",
          "getAmountsIn(uint256,address[])"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.21"
      },
      "contracts/IFiles.sol:IPancakeRouter02": {
        "src": "contracts/IFiles.sol:626",
        "inherit": [
          "contracts/IFiles.sol:IPancakeRouter01"
        ],
        "libraries": [],
        "methods": [
          "removeLiquidityETHSupportingFeeOnTransferTokens(address,uint256,uint256,uint256,address,uint256)",
          "removeLiquidityETHWithPermitSupportingFeeOnTransferTokens(address,uint256,uint256,uint256,address,uint256,bool,uint8,bytes32,bytes32)",
          "swapExactTokensForTokensSupportingFeeOnTransferTokens(uint256,uint256,address[],address,uint256)",
          "swapExactETHForTokensSupportingFeeOnTransferTokens(uint256,address[],address,uint256)",
          "swapExactTokensForETHSupportingFeeOnTransferTokens(uint256,uint256,address[],address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.21"
      },
      "contracts/IFiles.sol:IWBNB": {
        "src": "contracts/IFiles.sol:38",
        "inherit": [],
        "libraries": [],
        "methods": [
          "name()",
          "symbol()",
          "decimals()",
          "balanceOf(address)",
          "allowance(address,address)",
          "()",
          "deposit()",
          "withdraw(uint256)",
          "totalSupply()",
          "approve(address,uint256)",
          "transfer(address,uint256)",
          "transferFrom(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.21"
      },
      "contracts/IFiles.sol:Initializable": {
        "src": "contracts/IFiles.sol:249",
        "version": {
          "withMetadata": "ba793f874980ba8826e0f77e588821b7a373c942b97ebcd7e4e42f378e00e824",
          "withoutMetadata": "ac0db523ddc3e330f735df7b3b0b24460531c71290a891170e840f8f67d5ff6b",
          "linkedWithoutMetadata": "ac0db523ddc3e330f735df7b3b0b24460531c71290a891170e840f8f67d5ff6b"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "contracts/IFiles.sol:251"
            },
            {
              "label": "initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "contracts/IFiles.sol:252"
            },
            {
              "label": "______gap",
              "offset": 0,
              "slot": "1",
              "type": "t_array(t_uint256)50_storage",
              "contract": "Initializable",
              "src": "contracts/IFiles.sol:283"
            }
          ],
          "types": {
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]",
              "numberOfBytes": "1600"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.21"
      },
      "contracts/IFiles.sol:Ownable": {
        "src": "contracts/IFiles.sol:286",
        "version": {
          "withMetadata": "9b6e83ec071c913ea8078938bf6c8e47f6ce697f181f2ebf31dc4937807eb386",
          "withoutMetadata": "a3dd09084d5d3377afaa5e637593b425fb1172db63a48c2f62428555638775f8",
          "linkedWithoutMetadata": "a3dd09084d5d3377afaa5e637593b425fb1172db63a48c2f62428555638775f8"
        },
        "inherit": [
          "contracts/IFiles.sol:Initializable",
          "contracts/IFiles.sol:Context"
        ],
        "libraries": [],
        "methods": [
          "()",
          "initOwner(address)",
          "owner()",
          "renounceOwnership()",
          "transferOwnership(address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "contracts/IFiles.sol:251"
            },
            {
              "label": "initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "contracts/IFiles.sol:252"
            },
            {
              "label": "______gap",
              "offset": 0,
              "slot": "1",
              "type": "t_array(t_uint256)50_storage",
              "contract": "Initializable",
              "src": "contracts/IFiles.sol:283"
            },
            {
              "label": "_owner",
              "offset": 0,
              "slot": "51",
              "type": "t_address",
              "contract": "Ownable",
              "src": "contracts/IFiles.sol:287"
            },
            {
              "label": "_previousOwner",
              "offset": 0,
              "slot": "52",
              "type": "t_address",
              "contract": "Ownable",
              "src": "contracts/IFiles.sol:288"
            },
            {
              "label": "_lockTime",
              "offset": 0,
              "slot": "53",
              "type": "t_uint256",
              "contract": "Ownable",
              "src": "contracts/IFiles.sol:289"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]",
              "numberOfBytes": "1600"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.21"
      },
      "contracts/IFiles.sol:SafeMath": {
        "src": "contracts/IFiles.sol:68",
        "version": {
          "withMetadata": "6a5db877229c78c84b33e85a297bea1121c6a6195aa310f30cbe69888293c5ae",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.21"
      },
      "contracts/ReentrancyGuard.sol:ReentrancyGuard": {
        "src": "contracts/ReentrancyGuard.sol:5",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ReentrancyGuard",
            "src": "contracts/ReentrancyGuard.sol:12"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_status",
              "offset": 0,
              "slot": "0",
              "type": "t_uint256",
              "contract": "ReentrancyGuard",
              "src": "contracts/ReentrancyGuard.sol:10"
            }
          ],
          "types": {
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.21"
      },
      "contracts/Utils.sol:PancakeLibrary": {
        "src": "contracts/Utils.sol:219",
        "version": {
          "withMetadata": "668337a75717822cd6d73bbd1c50526e84e4af10cd45125b1756676395a2f30c",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [
          "contracts/IFiles.sol:SafeMath"
        ],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.21"
      },
      "contracts/Utils.sol:Utils": {
        "src": "contracts/Utils.sol:6",
        "version": {
          "withMetadata": "a5775bd7ff330a5dfa7ddaef645bcc8fbccdcd3c38fbc9fc1755e3e3a9a09d47",
          "withoutMetadata": "8ca6da6b824cadf2e1f9c600b5f1381080c8b8d75dddf5423f35e25222daaeda",
          "linkedWithoutMetadata": "8ca6da6b824cadf2e1f9c600b5f1381080c8b8d75dddf5423f35e25222daaeda"
        },
        "inherit": [],
        "libraries": [
          "contracts/IFiles.sol:SafeMath"
        ],
        "methods": [
          "calculateBNBReward(uint256,uint256,uint256,uint256)",
          "calculateTopUpClaim(uint256,uint256,uint256,uint256)",
          "swapTokensForEth(address,uint256)",
          "swapETHForTokens(address,address,uint256)",
          "swapTokensForTokens(address,address,uint256)",
          "getAmountsout(uint256,address)",
          "addLiquidity(address,address,uint256,uint256)",
          "getAntiFlipTaxNo(uint256)",
          "calcReward(uint256,uint256,uint256,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.21"
      }
    },
    {
      "contracts/Proxy.sol:Caller": {
        "src": "contracts/Proxy.sol:80",
        "version": {
          "withMetadata": "8a43f4805f6ec5dd7b7379a87ef3fa89b1f2cd8e86292442058e51e90f40e31d",
          "withoutMetadata": "d6211a178c252503f87d41bbcceffa66551bde0c0c4b0cc3c5a44a4f489e2c7f",
          "linkedWithoutMetadata": "d6211a178c252503f87d41bbcceffa66551bde0c0c4b0cc3c5a44a4f489e2c7f"
        },
        "inherit": [],
        "libraries": [],
        "methods": [
          "(address)",
          "increase()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Caller",
            "src": "contracts/Proxy.sol:80"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "proxy",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Caller",
              "src": "contracts/Proxy.sol:80"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.21"
      },
      "contracts/Proxy.sol:Proxy": {
        "src": "contracts/Proxy.sol:10",
        "version": {
          "withMetadata": "3a655b5f054f4310d279144652e269b840bf308c06f48e08f2d407ee1381c2c1",
          "withoutMetadata": "bc7fcd1c64d2f798926ae830c3e369a33c770ea294cd9047d184a8c885a96818",
          "linkedWithoutMetadata": "bc7fcd1c64d2f798926ae830c3e369a33c770ea294cd9047d184a8c885a96818"
        },
        "inherit": [],
        "libraries": [],
        "methods": [
          "(address)",
          "()",
          "()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Proxy",
            "src": "contracts/Proxy.sol:22"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "implementation",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Proxy",
              "src": "contracts/Proxy.sol:13"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.21"
      }
    },
    {
      "contracts/Logic.sol:Logic": {
        "src": "contracts/Logic.sol:9",
        "version": {
          "withMetadata": "087c86b163578853fb1cba09b22843df8f815c95bf2568200ddd8e1dbf167fea",
          "withoutMetadata": "a9feffbc7087e9529577fb0b368171b85b94d25918f43b5d410eb0f186274034",
          "linkedWithoutMetadata": "a9feffbc7087e9529577fb0b368171b85b94d25918f43b5d410eb0f186274034"
        },
        "inherit": [],
        "libraries": [],
        "methods": [
          "increment()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "state-variable-assignment",
            "name": "x",
            "src": "contracts/Logic.sol:13"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "implementation",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Logic",
              "src": "contracts/Logic.sol:9"
            },
            {
              "label": "x",
              "offset": 0,
              "slot": "1",
              "type": "t_uint256",
              "contract": "Logic",
              "src": "contracts/Logic.sol:13"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.21"
      }
    },
    {
      "@openzeppelin/contracts/access/Ownable.sol:Ownable": {
        "src": "@openzeppelin/contracts/access/Ownable.sol:20",
        "inherit": [
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [],
        "methods": [
          "owner()",
          "renounceOwnership()",
          "transferOwnership(address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Ownable",
            "src": "@openzeppelin/contracts/access/Ownable.sol:28"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Ownable",
              "src": "@openzeppelin/contracts/access/Ownable.sol:21"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.21"
      },
      "@openzeppelin/contracts/security/ReentrancyGuard.sol:ReentrancyGuard": {
        "src": "@openzeppelin/contracts/security/ReentrancyGuard.sol:22",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ReentrancyGuard",
            "src": "@openzeppelin/contracts/security/ReentrancyGuard.sol:39"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_status",
              "offset": 0,
              "slot": "0",
              "type": "t_uint256",
              "contract": "ReentrancyGuard",
              "src": "@openzeppelin/contracts/security/ReentrancyGuard.sol:37"
            }
          ],
          "types": {
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.21"
      },
      "@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20": {
        "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:35",
        "version": {
          "withMetadata": "b653be9ad258ddaafa2304767243ba86eac7156acd9bf1a196bee0fef9b1c3a9",
          "withoutMetadata": "1d55e2dc08aae4fa5bd2ca8ac476f7a2e63bdfa7b0b51d4bd61db8705143a140",
          "linkedWithoutMetadata": "1d55e2dc08aae4fa5bd2ca8ac476f7a2e63bdfa7b0b51d4bd61db8705143a140"
        },
        "inherit": [
          "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol:IERC20Metadata",
          "@openzeppelin/contracts/token/ERC20/IERC20.sol:IERC20",
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [],
        "methods": [
          "(string,string)",
          "name()",
          "symbol()",
          "decimals()",
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)",
          "increaseAllowance(address,uint256)",
          "decreaseAllowance(address,uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ERC20",
            "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:54"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_balances",
              "offset": 0,
              "slot": "0",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:36"
            },
            {
              "label": "_allowances",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:38"
            },
            {
              "label": "_totalSupply",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:40"
            },
            {
              "label": "_name",
              "offset": 0,
              "slot": "3",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:42"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "4",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:43"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.21"
      },
      "@openzeppelin/contracts/token/ERC20/IERC20.sol:IERC20": {
        "src": "@openzeppelin/contracts/token/ERC20/IERC20.sol:9",
        "inherit": [],
        "libraries": [],
        "methods": [
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.21"
      },
      "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol:IERC20Metadata": {
        "src": "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol:13",
        "inherit": [
          "@openzeppelin/contracts/token/ERC20/IERC20.sol:IERC20"
        ],
        "libraries": [],
        "methods": [
          "name()",
          "symbol()",
          "decimals()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.21"
      },
      "@openzeppelin/contracts/token/ERC20/extensions/draft-IERC20Permit.sol:IERC20Permit": {
        "src": "@openzeppelin/contracts/token/ERC20/extensions/draft-IERC20Permit.sol:14",
        "inherit": [],
        "libraries": [],
        "methods": [
          "permit(address,address,uint256,uint256,uint8,bytes32,bytes32)",
          "nonces(address)",
          "DOMAIN_SEPARATOR()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.21"
      },
      "@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol:SafeERC20": {
        "src": "@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol:19",
        "version": {
          "withMetadata": "945db44b71722f915e3e7352ee22f854dfe8000e69eee742d881b64279bb0ad8",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [
          "@openzeppelin/contracts/utils/Address.sol:Address"
        ],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.21"
      },
      "@openzeppelin/contracts/utils/Address.sol:Address": {
        "src": "@openzeppelin/contracts/utils/Address.sol:9",
        "version": {
          "withMetadata": "9401bbf4dc0decc4c739a060967031a16e8de389388d98c32ec11cff440d6513",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [
          {
            "kind": "delegatecall",
            "src": "@openzeppelin/contracts/utils/Address.sol:191"
          },
          {
            "kind": "delegatecall",
            "src": "@openzeppelin/contracts/utils/Address.sol:191"
          }
        ],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.21"
      },
      "@openzeppelin/contracts/utils/Context.sol:Context": {
        "src": "@openzeppelin/contracts/utils/Context.sol:16",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.21"
      },
      "@openzeppelin/contracts/utils/math/Math.sol:Math": {
        "src": "@openzeppelin/contracts/utils/math/Math.sol:9",
        "version": {
          "withMetadata": "f58f3d1d6b53395057afc8a5e1edcbfcd81cdec0dfcf6b1290c8c2368b975278",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.21"
      },
      "@openzeppelin/contracts/utils/math/SafeMath.sol:SafeMath": {
        "src": "@openzeppelin/contracts/utils/math/SafeMath.sol:16",
        "version": {
          "withMetadata": "4167346fe154a63f59e72262dbca9ccb097c97b61ec5dfe163259378386d2ba4",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.21"
      },
      "contracts/Presale.sol:IGoldToken": {
        "src": "contracts/Presale.sol:8",
        "inherit": [],
        "libraries": [],
        "methods": [
          "mint(address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.21"
      },
      "contracts/Presale.sol:Presale": {
        "src": "contracts/Presale.sol:12",
        "version": {
          "withMetadata": "55de4f41aa2ae4e88c3e975f7f7c871c8630a6a915f505e8b168c82d5665ef13",
          "withoutMetadata": "2fa5a3bfe1ae715a2695aad2a1fdda65dd5f2dfe346a8af0822d82b296b7bc1b",
          "linkedWithoutMetadata": "2fa5a3bfe1ae715a2695aad2a1fdda65dd5f2dfe346a8af0822d82b296b7bc1b"
        },
        "inherit": [
          "@openzeppelin/contracts/security/ReentrancyGuard.sol:ReentrancyGuard",
          "@openzeppelin/contracts/access/Ownable.sol:Ownable",
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [],
        "methods": [
          "(address,address,address,uint256)",
          "createPreSale((uint256,uint256,uint256))",
          "sale()",
          "getCanIdoAmount(address)",
          "bindReffer(address)",
          "userBalance(address)",
          "userRewardBalance(address)",
          "userWithdraw()",
          "teamWithdraw(address)",
          "setUserWithdrawTime(uint256)",
          "setInviteMin(uint256)",
          "setPerMaxBuyUsdt(uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Presale",
            "src": "contracts/Presale.sol:46"
          },
          {
            "kind": "state-variable-assignment",
            "name": "perMaxBuyUsdt",
            "src": "contracts/Presale.sol:15"
          },
          {
            "kind": "state-variable-assignment",
            "name": "inviteMin",
            "src": "contracts/Presale.sol:31"
          },
          {
            "kind": "state-variable-assignment",
            "name": "maxSale",
            "src": "contracts/Presale.sol:33"
          },
          {
            "kind": "state-variable-assignment",
            "name": "rewardLevel",
            "src": "contracts/Presale.sol:36"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Ownable",
              "src": "@openzeppelin/contracts/access/Ownable.sol:21"
            },
            {
              "label": "_status",
              "offset": 0,
              "slot": "1",
              "type": "t_uint256",
              "contract": "ReentrancyGuard",
              "src": "@openzeppelin/contracts/security/ReentrancyGuard.sol:37"
            },
            {
              "label": "userWithdrawTime",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "Presale",
              "src": "contracts/Presale.sol:13"
            },
            {
              "label": "perMaxBuyUsdt",
              "offset": 0,
              "slot": "3",
              "type": "t_uint256",
              "contract": "Presale",
              "src": "contracts/Presale.sol:15"
            },
            {
              "label": "teamAddress",
              "offset": 0,
              "slot": "4",
              "type": "t_address",
              "contract": "Presale",
              "src": "contracts/Presale.sol:16"
            },
            {
              "label": "saleToken",
              "offset": 0,
              "slot": "5",
              "type": "t_address",
              "contract": "Presale",
              "src": "contracts/Presale.sol:17"
            },
            {
              "label": "usdtToken",
              "offset": 0,
              "slot": "6",
              "type": "t_address",
              "contract": "Presale",
              "src": "contracts/Presale.sol:18"
            },
            {
              "label": "goldTokenAddress",
              "offset": 0,
              "slot": "7",
              "type": "t_address",
              "contract": "Presale",
              "src": "contracts/Presale.sol:19"
            },
            {
              "label": "balances",
              "offset": 0,
              "slot": "8",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "Presale",
              "src": "contracts/Presale.sol:20"
            },
            {
              "label": "userBuyTotalUsdt",
              "offset": 0,
              "slot": "9",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "Presale",
              "src": "contracts/Presale.sol:21"
            },
            {
              "label": "rewardBalances",
              "offset": 0,
              "slot": "10",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "Presale",
              "src": "contracts/Presale.sol:22"
            },
            {
              "label": "reffers",
              "offset": 0,
              "slot": "11",
              "type": "t_mapping(t_address,t_address)",
              "contract": "Presale",
              "src": "contracts/Presale.sol:23"
            },
            {
              "label": "refferNumber",
              "offset": 0,
              "slot": "12",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "Presale",
              "src": "contracts/Presale.sol:24"
            },
            {
              "label": "teamRefferNumber",
              "offset": 0,
              "slot": "13",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "Presale",
              "src": "contracts/Presale.sol:25"
            },
            {
              "label": "firstIdo",
              "offset": 0,
              "slot": "14",
              "type": "t_mapping(t_address,t_bool)",
              "contract": "Presale",
              "src": "contracts/Presale.sol:26"
            },
            {
              "label": "totalIdoUSDT",
              "offset": 0,
              "slot": "15",
              "type": "t_uint256",
              "contract": "Presale",
              "src": "contracts/Presale.sol:27"
            },
            {
              "label": "totalIdoUser",
              "offset": 0,
              "slot": "16",
              "type": "t_uint256",
              "contract": "Presale",
              "src": "contracts/Presale.sol:28"
            },
            {
              "label": "totalSale",
              "offset": 0,
              "slot": "17",
              "type": "t_uint256",
              "contract": "Presale",
              "src": "contracts/Presale.sol:29"
            },
            {
              "label": "inviteMin",
              "offset": 0,
              "slot": "18",
              "type": "t_uint256",
              "contract": "Presale",
              "src": "contracts/Presale.sol:31"
            },
            {
              "label": "maxSale",
              "offset": 0,
              "slot": "19",
              "type": "t_uint256",
              "contract": "Presale",
              "src": "contracts/Presale.sol:33"
            },
            {
              "label": "isCloseSale",
              "offset": 0,
              "slot": "20",
              "type": "t_bool",
              "contract": "Presale",
              "src": "contracts/Presale.sol:34"
            },
            {
              "label": "rewardLevel",
              "offset": 0,
              "slot": "21",
              "type": "t_array(t_uint256)dyn_storage",
              "contract": "Presale",
              "src": "contracts/Presale.sol:36"
            },
            {
              "label": "presaleInfo",
              "offset": 0,
              "slot": "22",
              "type": "t_struct(PresaleInfo)2392_storage",
              "contract": "Presale",
              "src": "contracts/Presale.sol:44"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_uint256)dyn_storage": {
              "label": "uint256[]",
              "numberOfBytes": "32"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_mapping(t_address,t_address)": {
              "label": "mapping(address => address)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_struct(PresaleInfo)2392_storage": {
              "label": "struct Presale.PresaleInfo",
              "members": [
                {
                  "label": "startTime",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "endTime",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "price",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "2"
                }
              ],
              "numberOfBytes": "96"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.21"
      },
      "contracts/Staking.sol:IRejuvenate": {
        "src": "contracts/Staking.sol:9",
        "inherit": [],
        "libraries": [],
        "methods": [
          "mint(address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.21"
      },
      "contracts/Staking.sol:Staking": {
        "src": "contracts/Staking.sol:13",
        "version": {
          "withMetadata": "d4a43fbe5f8d6347383f0680dba0a94146fceda61d8f28fb0ed926fda6eca5bc",
          "withoutMetadata": "8e35a11dc4a30aced1c096dd5db7f6424d19b292b732012b8d44d054f9cea466",
          "linkedWithoutMetadata": "8e35a11dc4a30aced1c096dd5db7f6424d19b292b732012b8d44d054f9cea466"
        },
        "inherit": [
          "@openzeppelin/contracts/security/ReentrancyGuard.sol:ReentrancyGuard",
          "@openzeppelin/contracts/access/Ownable.sol:Ownable",
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [],
        "methods": [
          "()",
          "changeRewardsPerBlock(uint256)",
          "rewardPerToken()",
          "earned(address)",
          "stake(uint256)",
          "unstake(uint256)",
          "claimRewards()",
          "pause()",
          "unpause()",
          "inCaseTokensGetStuck(address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Staking",
            "src": "contracts/Staking.sol:33"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Ownable",
              "src": "@openzeppelin/contracts/access/Ownable.sol:21"
            },
            {
              "label": "_status",
              "offset": 0,
              "slot": "1",
              "type": "t_uint256",
              "contract": "ReentrancyGuard",
              "src": "@openzeppelin/contracts/security/ReentrancyGuard.sol:37"
            },
            {
              "label": "paused",
              "offset": 0,
              "slot": "2",
              "type": "t_bool",
              "contract": "Staking",
              "src": "contracts/Staking.sol:14"
            },
            {
              "label": "_treasury",
              "offset": 1,
              "slot": "2",
              "type": "t_address",
              "contract": "Staking",
              "src": "contracts/Staking.sol:15"
            },
            {
              "label": "token",
              "offset": 0,
              "slot": "3",
              "type": "t_address",
              "contract": "Staking",
              "src": "contracts/Staking.sol:17"
            },
            {
              "label": "rewardRate",
              "offset": 0,
              "slot": "4",
              "type": "t_uint256",
              "contract": "Staking",
              "src": "contracts/Staking.sol:19"
            },
            {
              "label": "_lastUpdateBlock",
              "offset": 0,
              "slot": "5",
              "type": "t_uint256",
              "contract": "Staking",
              "src": "contracts/Staking.sol:20"
            },
            {
              "label": "_rewardsPerToken",
              "offset": 0,
              "slot": "6",
              "type": "t_uint256",
              "contract": "Staking",
              "src": "contracts/Staking.sol:21"
            },
            {
              "label": "data",
              "offset": 0,
              "slot": "7",
              "type": "t_array(t_struct(StakingData)3375_storage)dyn_storage",
              "contract": "Staking",
              "src": "contracts/Staking.sol:22"
            },
            {
              "label": "_userRewardsPerToken",
              "offset": 0,
              "slot": "8",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "Staking",
              "src": "contracts/Staking.sol:24"
            },
            {
              "label": "_rewards",
              "offset": 0,
              "slot": "9",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "Staking",
              "src": "contracts/Staking.sol:25"
            },
            {
              "label": "totalStaked",
              "offset": 0,
              "slot": "10",
              "type": "t_uint256",
              "contract": "Staking",
              "src": "contracts/Staking.sol:27"
            },
            {
              "label": "_balances",
              "offset": 0,
              "slot": "11",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "Staking",
              "src": "contracts/Staking.sol:28"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_struct(StakingData)3375_storage)dyn_storage": {
              "label": "struct StakingData[]",
              "numberOfBytes": "32"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_struct(StakingData)3375_storage": {
              "label": "struct StakingData",
              "members": [
                {
                  "label": "block",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "staked",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "1"
                }
              ],
              "numberOfBytes": "64"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.21"
      }
    },
    {
      "contracts/RichHusky.sol:Checker": {
        "src": "contracts/RichHusky.sol:520",
        "version": {
          "withMetadata": "17e1cf10fdffcda321c1a1f59d2b06178394724b4d8ad9b035a718122fed8a52",
          "withoutMetadata": "0faf6ca500781d04501ba7e4cf9138e35957321419c6ca29798480c22b3cc5cd",
          "linkedWithoutMetadata": "0faf6ca500781d04501ba7e4cf9138e35957321419c6ca29798480c22b3cc5cd"
        },
        "inherit": [],
        "libraries": [],
        "methods": [
          "isValid(address,address,address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.21"
      },
      "contracts/RichHusky.sol:Context": {
        "src": "contracts/RichHusky.sol:27",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.21"
      },
      "contracts/RichHusky.sol:ERC20": {
        "src": "contracts/RichHusky.sol:162",
        "version": {
          "withMetadata": "e092e43bc9c3243b7138ce015fa92d358fa66a764079145cfe1339f160fd055e",
          "withoutMetadata": "e248eda4094a79267c1d78eb85fb3a082e2ba4d153192b2644d6357dbed158f3",
          "linkedWithoutMetadata": "e248eda4094a79267c1d78eb85fb3a082e2ba4d153192b2644d6357dbed158f3"
        },
        "inherit": [
          "contracts/RichHusky.sol:IERC20Metadata",
          "contracts/RichHusky.sol:IERC20",
          "contracts/RichHusky.sol:Context"
        ],
        "libraries": [],
        "methods": [
          "(string,string)",
          "name()",
          "symbol()",
          "decimals()",
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)",
          "increaseAllowance(address,uint256)",
          "decreaseAllowance(address,uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ERC20",
            "src": "contracts/RichHusky.sol:181"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_balances",
              "offset": 0,
              "slot": "0",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC20",
              "src": "contracts/RichHusky.sol:163"
            },
            {
              "label": "_allowances",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "ERC20",
              "src": "contracts/RichHusky.sol:165"
            },
            {
              "label": "_totalSupply",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "ERC20",
              "src": "contracts/RichHusky.sol:167"
            },
            {
              "label": "_name",
              "offset": 0,
              "slot": "3",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "contracts/RichHusky.sol:169"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "4",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "contracts/RichHusky.sol:170"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.21"
      },
      "contracts/RichHusky.sol:IERC20": {
        "src": "contracts/RichHusky.sol:40",
        "inherit": [],
        "libraries": [],
        "methods": [
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.21"
      },
      "contracts/RichHusky.sol:IERC20Metadata": {
        "src": "contracts/RichHusky.sol:120",
        "inherit": [
          "contracts/RichHusky.sol:IERC20"
        ],
        "libraries": [],
        "methods": [
          "name()",
          "symbol()",
          "decimals()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.21"
      },
      "contracts/RichHusky.sol:IFactory": {
        "src": "contracts/RichHusky.sol:535",
        "inherit": [],
        "libraries": [],
        "methods": [
          "createPair(address,address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.21"
      },
      "contracts/RichHusky.sol:IGasToken": {
        "src": "contracts/RichHusky.sol:539",
        "inherit": [],
        "libraries": [],
        "methods": [
          "free(uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.21"
      },
      "contracts/RichHusky.sol:RichHusky": {
        "src": "contracts/RichHusky.sol:543",
        "version": {
          "withMetadata": "ce802161ba5ffecece3a7488fb3a07a35d8f78edf3674187d3eb27cc30777604",
          "withoutMetadata": "7c4ce62a347a52dc2685dbb41f6d968bb51e7d6abb10665abf0c7d7699da0d36",
          "linkedWithoutMetadata": "7c4ce62a347a52dc2685dbb41f6d968bb51e7d6abb10665abf0c7d7699da0d36"
        },
        "inherit": [
          "contracts/RichHusky.sol:ERC20",
          "contracts/RichHusky.sol:IERC20Metadata",
          "contracts/RichHusky.sol:IERC20",
          "contracts/RichHusky.sol:Context"
        ],
        "libraries": [
          "contracts/RichHusky.sol:Checker"
        ],
        "methods": [
          "(address)",
          "mint(address,uint256)",
          "updateAirdropAmount(uint256)",
          "withdrawFee(address,uint256)",
          "airdrop(address[],uint256)",
          "addBetaUsers(address[])",
          "removeBetaUsers(address[])",
          "multiCall(address[],bytes[])"
        ],
        "linkReferences": [
          {
            "src": "contracts/RichHusky.sol",
            "name": "Checker",
            "length": 20,
            "start": 5176,
            "placeholder": "__$1cb883ae52507a2d00adae80c79f632cb4$__"
          }
        ],
        "errors": [
          {
            "kind": "constructor",
            "contract": "RichHusky",
            "src": "contracts/RichHusky.sol:554"
          },
          {
            "kind": "state-variable-immutable",
            "name": "pancakeFactory",
            "src": "contracts/RichHusky.sol:549"
          },
          {
            "kind": "state-variable-immutable",
            "name": "WBNB",
            "src": "contracts/RichHusky.sol:550"
          },
          {
            "kind": "state-variable-immutable",
            "name": "GasToken",
            "src": "contracts/RichHusky.sol:552"
          },
          {
            "kind": "external-library-linking",
            "name": "Checker",
            "src": "contracts/RichHusky.sol"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_balances",
              "offset": 0,
              "slot": "0",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC20",
              "src": "contracts/RichHusky.sol:163"
            },
            {
              "label": "_allowances",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "ERC20",
              "src": "contracts/RichHusky.sol:165"
            },
            {
              "label": "_totalSupply",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "ERC20",
              "src": "contracts/RichHusky.sol:167"
            },
            {
              "label": "_name",
              "offset": 0,
              "slot": "3",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "contracts/RichHusky.sol:169"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "4",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "contracts/RichHusky.sol:170"
            },
            {
              "label": "dev",
              "offset": 0,
              "slot": "5",
              "type": "t_address",
              "contract": "RichHusky",
              "src": "contracts/RichHusky.sol:544"
            },
            {
              "label": "airdropAmount",
              "offset": 0,
              "slot": "6",
              "type": "t_uint256",
              "contract": "RichHusky",
              "src": "contracts/RichHusky.sol:545"
            },
            {
              "label": "betaUsers",
              "offset": 0,
              "slot": "7",
              "type": "t_mapping(t_address,t_bool)",
              "contract": "RichHusky",
              "src": "contracts/RichHusky.sol:546"
            },
            {
              "label": "pair",
              "offset": 0,
              "slot": "8",
              "type": "t_address",
              "contract": "RichHusky",
              "src": "contracts/RichHusky.sol:547"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.21"
      }
    },
    {
      "contracts/FirstDao.sol:FistDao": {
        "src": "contracts/FirstDao.sol:127",
        "version": {
          "withMetadata": "87594bf7d015e41aaf777bc0dc62e9e8a3685546fcfa065eb87291ef7f3f16f4",
          "withoutMetadata": "5bdb2538a3ba33172d93851875dfca20475ce01973348f896430788ab9d8314a",
          "linkedWithoutMetadata": "5bdb2538a3ba33172d93851875dfca20475ce01973348f896430788ab9d8314a"
        },
        "inherit": [
          "contracts/FirstDao.sol:Ownable",
          "contracts/FirstDao.sol:IERC20"
        ],
        "libraries": [
          "contracts/FirstDao.sol:SafeMath"
        ],
        "methods": [
          "(string,string)",
          "()",
          "initialize(address,address,address,address)",
          "transferEvent(address,address,uint256)",
          "feeState()",
          "getIsApproved(address)",
          "searchExcludedFromFeeAccounts(address)",
          "getDefaultBalance()",
          "insertIntoExcludedFromFeeAccounts(address[])",
          "deleteFromExcludedFromFeeAccounts(address[])",
          "claim(address,uint256)",
          "name()",
          "symbol()",
          "decimals()",
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "transferFrom(address,address,uint256)",
          "approve(address,uint256)",
          "allowance(address,address)",
          "increaseAllowance(address,uint256)",
          "decreaseAllowance(address,uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "FistDao",
            "src": "contracts/FirstDao.sol:159"
          },
          {
            "kind": "state-variable-assignment",
            "name": "_decimals",
            "src": "contracts/FirstDao.sol:132"
          },
          {
            "kind": "state-variable-assignment",
            "name": "_totalSupply",
            "src": "contracts/FirstDao.sol:133"
          },
          {
            "kind": "state-variable-assignment",
            "name": "_feeTax",
            "src": "contracts/FirstDao.sol:138"
          },
          {
            "kind": "state-variable-assignment",
            "name": "_feeMining",
            "src": "contracts/FirstDao.sol:139"
          },
          {
            "kind": "state-variable-assignment",
            "name": "_feeLiquidity",
            "src": "contracts/FirstDao.sol:140"
          },
          {
            "kind": "state-variable-assignment",
            "name": "_feeDivisor",
            "src": "contracts/FirstDao.sol:141"
          },
          {
            "kind": "state-variable-assignment",
            "name": "_removeAllFee",
            "src": "contracts/FirstDao.sol:143"
          },
          {
            "kind": "state-variable-assignment",
            "name": "_defaultBalance",
            "src": "contracts/FirstDao.sol:150"
          },
          {
            "kind": "state-variable-assignment",
            "name": "_defaultAmount",
            "src": "contracts/FirstDao.sol:151"
          },
          {
            "kind": "state-variable-assignment",
            "name": "_initialized111",
            "src": "contracts/FirstDao.sol:156"
          },
          {
            "kind": "state-variable-assignment",
            "name": "_reentry",
            "src": "contracts/FirstDao.sol:157"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Ownable",
              "src": "contracts/FirstDao.sol:58"
            },
            {
              "label": "_previousOwner",
              "offset": 0,
              "slot": "1",
              "type": "t_address",
              "contract": "Ownable",
              "src": "contracts/FirstDao.sol:59"
            },
            {
              "label": "_switchDate",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "Ownable",
              "src": "contracts/FirstDao.sol:60"
            },
            {
              "label": "_name",
              "offset": 0,
              "slot": "3",
              "type": "t_string_storage",
              "contract": "FistDao",
              "src": "contracts/FirstDao.sol:130"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "4",
              "type": "t_string_storage",
              "contract": "FistDao",
              "src": "contracts/FirstDao.sol:131"
            },
            {
              "label": "_decimals",
              "offset": 0,
              "slot": "5",
              "type": "t_uint8",
              "contract": "FistDao",
              "src": "contracts/FirstDao.sol:132"
            },
            {
              "label": "_totalSupply",
              "offset": 0,
              "slot": "6",
              "type": "t_uint256",
              "contract": "FistDao",
              "src": "contracts/FirstDao.sol:133"
            },
            {
              "label": "_balances",
              "offset": 0,
              "slot": "7",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "FistDao",
              "src": "contracts/FirstDao.sol:134"
            },
            {
              "label": "_allowances",
              "offset": 0,
              "slot": "8",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "FistDao",
              "src": "contracts/FirstDao.sol:135"
            },
            {
              "label": "_isApproved",
              "offset": 0,
              "slot": "9",
              "type": "t_mapping(t_address,t_bool)",
              "contract": "FistDao",
              "src": "contracts/FirstDao.sol:136"
            },
            {
              "label": "_feeTax",
              "offset": 0,
              "slot": "10",
              "type": "t_uint256",
              "contract": "FistDao",
              "src": "contracts/FirstDao.sol:138"
            },
            {
              "label": "_feeMining",
              "offset": 0,
              "slot": "11",
              "type": "t_uint256",
              "contract": "FistDao",
              "src": "contracts/FirstDao.sol:139"
            },
            {
              "label": "_feeLiquidity",
              "offset": 0,
              "slot": "12",
              "type": "t_uint256",
              "contract": "FistDao",
              "src": "contracts/FirstDao.sol:140"
            },
            {
              "label": "_feeDivisor",
              "offset": 0,
              "slot": "13",
              "type": "t_uint256",
              "contract": "FistDao",
              "src": "contracts/FirstDao.sol:141"
            },
            {
              "label": "_removeAllFee",
              "offset": 0,
              "slot": "14",
              "type": "t_bool",
              "contract": "FistDao",
              "src": "contracts/FirstDao.sol:143"
            },
            {
              "label": "_core",
              "offset": 1,
              "slot": "14",
              "type": "t_address",
              "contract": "FistDao",
              "src": "contracts/FirstDao.sol:145"
            },
            {
              "label": "_taxReceiver",
              "offset": 0,
              "slot": "15",
              "type": "t_address",
              "contract": "FistDao",
              "src": "contracts/FirstDao.sol:146"
            },
            {
              "label": "_miningPool",
              "offset": 0,
              "slot": "16",
              "type": "t_address",
              "contract": "FistDao",
              "src": "contracts/FirstDao.sol:147"
            },
            {
              "label": "_liquidityPool",
              "offset": 0,
              "slot": "17",
              "type": "t_address",
              "contract": "FistDao",
              "src": "contracts/FirstDao.sol:148"
            },
            {
              "label": "_defaultBalance",
              "offset": 0,
              "slot": "18",
              "type": "t_uint256",
              "contract": "FistDao",
              "src": "contracts/FirstDao.sol:150"
            },
            {
              "label": "_defaultAmount",
              "offset": 0,
              "slot": "19",
              "type": "t_uint256",
              "contract": "FistDao",
              "src": "contracts/FirstDao.sol:151"
            },
            {
              "label": "_isExcludedFromFee",
              "offset": 0,
              "slot": "20",
              "type": "t_mapping(t_address,t_bool)",
              "contract": "FistDao",
              "src": "contracts/FirstDao.sol:153"
            },
            {
              "label": "_excludedFromFeeAccounts",
              "offset": 0,
              "slot": "21",
              "type": "t_array(t_address)dyn_storage",
              "contract": "FistDao",
              "src": "contracts/FirstDao.sol:154"
            },
            {
              "label": "_initialized111",
              "offset": 0,
              "slot": "22",
              "type": "t_bool",
              "contract": "FistDao",
              "src": "contracts/FirstDao.sol:156"
            },
            {
              "label": "_reentry",
              "offset": 0,
              "slot": "23",
              "type": "t_uint256",
              "contract": "FistDao",
              "src": "contracts/FirstDao.sol:157"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_address)dyn_storage": {
              "label": "address[]",
              "numberOfBytes": "32"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint8": {
              "label": "uint8",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.21"
      },
      "contracts/FirstDao.sol:ICore": {
        "src": "contracts/FirstDao.sol:119",
        "inherit": [],
        "libraries": [],
        "methods": [
          "getPairAddress()",
          "airdrop()",
          "safety(address,address)",
          "start()",
          "end()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.21"
      },
      "contracts/FirstDao.sol:IERC20": {
        "src": "contracts/FirstDao.sol:8",
        "inherit": [],
        "libraries": [],
        "methods": [
          "name()",
          "symbol()",
          "decimals()",
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "transferFrom(address,address,uint256)",
          "approve(address,uint256)",
          "allowance(address,address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.21"
      },
      "contracts/FirstDao.sol:IFactory": {
        "src": "contracts/FirstDao.sol:91",
        "inherit": [],
        "libraries": [],
        "methods": [
          "createPair(address,address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.21"
      },
      "contracts/FirstDao.sol:IRouter01": {
        "src": "contracts/FirstDao.sol:95",
        "inherit": [],
        "libraries": [],
        "methods": [
          "factory()",
          "addLiquidity(address,address,uint256,uint256,uint256,uint256,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.21"
      },
      "contracts/FirstDao.sol:IRouter02": {
        "src": "contracts/FirstDao.sol:109",
        "inherit": [
          "contracts/FirstDao.sol:IRouter01"
        ],
        "libraries": [],
        "methods": [
          "swapExactTokensForTokensSupportingFeeOnTransferTokens(uint256,uint256,address[],address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.21"
      },
      "contracts/FirstDao.sol:Ownable": {
        "src": "contracts/FirstDao.sol:57",
        "inherit": [],
        "libraries": [],
        "methods": [
          "owner()",
          "switchDate()",
          "transferOwnership(uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Ownable",
            "src": "contracts/FirstDao.sol:63"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Ownable",
              "src": "contracts/FirstDao.sol:58"
            },
            {
              "label": "_previousOwner",
              "offset": 0,
              "slot": "1",
              "type": "t_address",
              "contract": "Ownable",
              "src": "contracts/FirstDao.sol:59"
            },
            {
              "label": "_switchDate",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "Ownable",
              "src": "contracts/FirstDao.sol:60"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.21"
      },
      "contracts/FirstDao.sol:SafeMath": {
        "src": "contracts/FirstDao.sol:22",
        "version": {
          "withMetadata": "95eb3df1bd62a62b1bf87150f7314053125cc709ed6eb26f9bf2a30d8fc55e32",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.21"
      }
    },
    {
      "contracts/IFiles.sol:Address": {
        "src": "contracts/IFiles.sol:147",
        "version": {
          "withMetadata": "73f3d745b82ff92d492794f39ddc131795315255895e196d918dc1260c813488",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.21"
      },
      "contracts/IFiles.sol:Context": {
        "src": "contracts/IFiles.sol:135",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.21"
      },
      "contracts/IFiles.sol:IBEP20": {
        "src": "contracts/IFiles.sol:9",
        "inherit": [],
        "libraries": [],
        "methods": [
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.21"
      },
      "contracts/IFiles.sol:IPancakeFactory": {
        "src": "contracts/IFiles.sol:327",
        "inherit": [],
        "libraries": [],
        "methods": [
          "feeTo()",
          "feeToSetter()",
          "getPair(address,address)",
          "allPairs(uint256)",
          "allPairsLength()",
          "createPair(address,address)",
          "setFeeTo(address)",
          "setFeeToSetter(address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.21"
      },
      "contracts/IFiles.sol:IPancakePair": {
        "src": "contracts/IFiles.sol:357",
        "inherit": [],
        "libraries": [],
        "methods": [
          "name()",
          "symbol()",
          "decimals()",
          "totalSupply()",
          "balanceOf(address)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transfer(address,uint256)",
          "transferFrom(address,address,uint256)",
          "DOMAIN_SEPARATOR()",
          "PERMIT_TYPEHASH()",
          "nonces(address)",
          "permit(address,address,uint256,uint256,uint8,bytes32,bytes32)",
          "MINIMUM_LIQUIDITY()",
          "factory()",
          "token0()",
          "token1()",
          "getReserves()",
          "price0CumulativeLast()",
          "price1CumulativeLast()",
          "kLast()",
          "mint(address)",
          "burn(address)",
          "swap(uint256,uint256,address,bytes)",
          "skim(address)",
          "sync()",
          "initialize(address,address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.21"
      },
      "contracts/IFiles.sol:IPancakeRouter01": {
        "src": "contracts/IFiles.sol:466",
        "inherit": [],
        "libraries": [],
        "methods": [
          "factory()",
          "WETH()",
          "addLiquidity(address,address,uint256,uint256,uint256,uint256,address,uint256)",
          "addLiquidityETH(address,uint256,uint256,uint256,address,uint256)",
          "removeLiquidity(address,address,uint256,uint256,uint256,address,uint256)",
          "removeLiquidityETH(address,uint256,uint256,uint256,address,uint256)",
          "removeLiquidityWithPermit(address,address,uint256,uint256,uint256,address,uint256,bool,uint8,bytes32,bytes32)",
          "removeLiquidityETHWithPermit(address,uint256,uint256,uint256,address,uint256,bool,uint8,bytes32,bytes32)",
          "swapExactTokensForTokens(uint256,uint256,address[],address,uint256)",
          "swapTokensForExactTokens(uint256,uint256,address[],address,uint256)",
          "swapExactETHForTokens(uint256,address[],address,uint256)",
          "swapTokensForExactETH(uint256,uint256,address[],address,uint256)",
          "swapExactTokensForETH(uint256,uint256,address[],address,uint256)",
          "swapETHForExactTokens(uint256,address[],address,uint256)",
          "quote(uint256,uint256,uint256)",
          "getAmountOut(uint256,uint256,uint256)",
          "getAmountIn(uint256,uint256,uint256)",
          "getAmountsOut(uint256,address[])",
          "getAmountsIn(uint256,address[])"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.21"
      },
      "contracts/IFiles.sol:IPancakeRouter02": {
        "src": "contracts/IFiles.sol:626",
        "inherit": [
          "contracts/IFiles.sol:IPancakeRouter01"
        ],
        "libraries": [],
        "methods": [
          "removeLiquidityETHSupportingFeeOnTransferTokens(address,uint256,uint256,uint256,address,uint256)",
          "removeLiquidityETHWithPermitSupportingFeeOnTransferTokens(address,uint256,uint256,uint256,address,uint256,bool,uint8,bytes32,bytes32)",
          "swapExactTokensForTokensSupportingFeeOnTransferTokens(uint256,uint256,address[],address,uint256)",
          "swapExactETHForTokensSupportingFeeOnTransferTokens(uint256,address[],address,uint256)",
          "swapExactTokensForETHSupportingFeeOnTransferTokens(uint256,uint256,address[],address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.21"
      },
      "contracts/IFiles.sol:IWBNB": {
        "src": "contracts/IFiles.sol:38",
        "inherit": [],
        "libraries": [],
        "methods": [
          "name()",
          "symbol()",
          "decimals()",
          "balanceOf(address)",
          "allowance(address,address)",
          "()",
          "deposit()",
          "withdraw(uint256)",
          "totalSupply()",
          "approve(address,uint256)",
          "transfer(address,uint256)",
          "transferFrom(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.21"
      },
      "contracts/IFiles.sol:Initializable": {
        "src": "contracts/IFiles.sol:249",
        "version": {
          "withMetadata": "ba793f874980ba8826e0f77e588821b7a373c942b97ebcd7e4e42f378e00e824",
          "withoutMetadata": "ac0db523ddc3e330f735df7b3b0b24460531c71290a891170e840f8f67d5ff6b",
          "linkedWithoutMetadata": "ac0db523ddc3e330f735df7b3b0b24460531c71290a891170e840f8f67d5ff6b"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "contracts/IFiles.sol:251"
            },
            {
              "label": "initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "contracts/IFiles.sol:252"
            },
            {
              "label": "______gap",
              "offset": 0,
              "slot": "1",
              "type": "t_array(t_uint256)50_storage",
              "contract": "Initializable",
              "src": "contracts/IFiles.sol:283"
            }
          ],
          "types": {
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]",
              "numberOfBytes": "1600"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.21"
      },
      "contracts/IFiles.sol:Ownable": {
        "src": "contracts/IFiles.sol:286",
        "version": {
          "withMetadata": "9b6e83ec071c913ea8078938bf6c8e47f6ce697f181f2ebf31dc4937807eb386",
          "withoutMetadata": "a3dd09084d5d3377afaa5e637593b425fb1172db63a48c2f62428555638775f8",
          "linkedWithoutMetadata": "a3dd09084d5d3377afaa5e637593b425fb1172db63a48c2f62428555638775f8"
        },
        "inherit": [
          "contracts/IFiles.sol:Initializable",
          "contracts/IFiles.sol:Context"
        ],
        "libraries": [],
        "methods": [
          "()",
          "initOwner(address)",
          "owner()",
          "renounceOwnership()",
          "transferOwnership(address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "contracts/IFiles.sol:251"
            },
            {
              "label": "initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "contracts/IFiles.sol:252"
            },
            {
              "label": "______gap",
              "offset": 0,
              "slot": "1",
              "type": "t_array(t_uint256)50_storage",
              "contract": "Initializable",
              "src": "contracts/IFiles.sol:283"
            },
            {
              "label": "_owner",
              "offset": 0,
              "slot": "51",
              "type": "t_address",
              "contract": "Ownable",
              "src": "contracts/IFiles.sol:287"
            },
            {
              "label": "_previousOwner",
              "offset": 0,
              "slot": "52",
              "type": "t_address",
              "contract": "Ownable",
              "src": "contracts/IFiles.sol:288"
            },
            {
              "label": "_lockTime",
              "offset": 0,
              "slot": "53",
              "type": "t_uint256",
              "contract": "Ownable",
              "src": "contracts/IFiles.sol:289"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]",
              "numberOfBytes": "1600"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.21"
      },
      "contracts/IFiles.sol:SafeMath": {
        "src": "contracts/IFiles.sol:68",
        "version": {
          "withMetadata": "6a5db877229c78c84b33e85a297bea1121c6a6195aa310f30cbe69888293c5ae",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.21"
      },
      "contracts/ReentrancyGuard.sol:ReentrancyGuard": {
        "src": "contracts/ReentrancyGuard.sol:5",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ReentrancyGuard",
            "src": "contracts/ReentrancyGuard.sol:12"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_status",
              "offset": 0,
              "slot": "0",
              "type": "t_uint256",
              "contract": "ReentrancyGuard",
              "src": "contracts/ReentrancyGuard.sol:10"
            }
          ],
          "types": {
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.21"
      },
      "contracts/Utils.sol:PancakeLibrary": {
        "src": "contracts/Utils.sol:219",
        "version": {
          "withMetadata": "668337a75717822cd6d73bbd1c50526e84e4af10cd45125b1756676395a2f30c",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [
          "contracts/IFiles.sol:SafeMath"
        ],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.21"
      },
      "contracts/Utils.sol:Utils": {
        "src": "contracts/Utils.sol:6",
        "version": {
          "withMetadata": "a5775bd7ff330a5dfa7ddaef645bcc8fbccdcd3c38fbc9fc1755e3e3a9a09d47",
          "withoutMetadata": "8ca6da6b824cadf2e1f9c600b5f1381080c8b8d75dddf5423f35e25222daaeda",
          "linkedWithoutMetadata": "8ca6da6b824cadf2e1f9c600b5f1381080c8b8d75dddf5423f35e25222daaeda"
        },
        "inherit": [],
        "libraries": [
          "contracts/IFiles.sol:SafeMath"
        ],
        "methods": [
          "calculateBNBReward(uint256,uint256,uint256,uint256)",
          "calculateTopUpClaim(uint256,uint256,uint256,uint256)",
          "swapTokensForEth(address,uint256)",
          "swapETHForTokens(address,address,uint256)",
          "swapTokensForTokens(address,address,uint256)",
          "getAmountsout(uint256,address)",
          "addLiquidity(address,address,uint256,uint256)",
          "getAntiFlipTaxNo(uint256)",
          "calcReward(uint256,uint256,uint256,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.21"
      }
    },
    {
      "contracts/Logic.sol:Logic": {
        "src": "contracts/Logic.sol:9",
        "version": {
          "withMetadata": "087c86b163578853fb1cba09b22843df8f815c95bf2568200ddd8e1dbf167fea",
          "withoutMetadata": "a9feffbc7087e9529577fb0b368171b85b94d25918f43b5d410eb0f186274034",
          "linkedWithoutMetadata": "a9feffbc7087e9529577fb0b368171b85b94d25918f43b5d410eb0f186274034"
        },
        "inherit": [],
        "libraries": [],
        "methods": [
          "increment()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "state-variable-assignment",
            "name": "x",
            "src": "contracts/Logic.sol:13"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "implementation",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Logic",
              "src": "contracts/Logic.sol:9"
            },
            {
              "label": "x",
              "offset": 0,
              "slot": "1",
              "type": "t_uint256",
              "contract": "Logic",
              "src": "contracts/Logic.sol:13"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.21"
      }
    },
    {
      "contracts/Proxy.sol:Caller": {
        "src": "contracts/Proxy.sol:80",
        "version": {
          "withMetadata": "9ce8fab2ba2d901a6c6fbf54c47202b7af5e008695fdcdd87dbcbadf457cedf1",
          "withoutMetadata": "d6211a178c252503f87d41bbcceffa66551bde0c0c4b0cc3c5a44a4f489e2c7f",
          "linkedWithoutMetadata": "d6211a178c252503f87d41bbcceffa66551bde0c0c4b0cc3c5a44a4f489e2c7f"
        },
        "inherit": [],
        "libraries": [],
        "methods": [
          "(address)",
          "increase()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Caller",
            "src": "contracts/Proxy.sol:80"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "proxy",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Caller",
              "src": "contracts/Proxy.sol:80"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.21"
      },
      "contracts/Proxy.sol:Proxy": {
        "src": "contracts/Proxy.sol:10",
        "version": {
          "withMetadata": "3f5c5f504c75452b4e66d955826ba95c6546b31eb98ec5ded382c37a5607a2e2",
          "withoutMetadata": "bc7fcd1c64d2f798926ae830c3e369a33c770ea294cd9047d184a8c885a96818",
          "linkedWithoutMetadata": "bc7fcd1c64d2f798926ae830c3e369a33c770ea294cd9047d184a8c885a96818"
        },
        "inherit": [],
        "libraries": [],
        "methods": [
          "(address)",
          "()",
          "()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Proxy",
            "src": "contracts/Proxy.sol:22"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "implementation",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Proxy",
              "src": "contracts/Proxy.sol:13"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.21"
      }
    },
    {
      "contracts/Logic.sol:Logic": {
        "src": "contracts/Logic.sol:9",
        "version": {
          "withMetadata": "087c86b163578853fb1cba09b22843df8f815c95bf2568200ddd8e1dbf167fea",
          "withoutMetadata": "a9feffbc7087e9529577fb0b368171b85b94d25918f43b5d410eb0f186274034",
          "linkedWithoutMetadata": "a9feffbc7087e9529577fb0b368171b85b94d25918f43b5d410eb0f186274034"
        },
        "inherit": [],
        "libraries": [],
        "methods": [
          "increment()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "state-variable-assignment",
            "name": "x",
            "src": "contracts/Logic.sol:13"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "implementation",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Logic",
              "src": "contracts/Logic.sol:9"
            },
            {
              "label": "x",
              "offset": 0,
              "slot": "1",
              "type": "t_uint256",
              "contract": "Logic",
              "src": "contracts/Logic.sol:13"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.21"
      }
    },
    {
      "contracts/Proxy.sol:Caller": {
        "src": "contracts/Proxy.sol:80",
        "version": {
          "withMetadata": "9ce8fab2ba2d901a6c6fbf54c47202b7af5e008695fdcdd87dbcbadf457cedf1",
          "withoutMetadata": "d6211a178c252503f87d41bbcceffa66551bde0c0c4b0cc3c5a44a4f489e2c7f",
          "linkedWithoutMetadata": "d6211a178c252503f87d41bbcceffa66551bde0c0c4b0cc3c5a44a4f489e2c7f"
        },
        "inherit": [],
        "libraries": [],
        "methods": [
          "(address)",
          "increase()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Caller",
            "src": "contracts/Proxy.sol:80"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "proxy",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Caller",
              "src": "contracts/Proxy.sol:80"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.21"
      },
      "contracts/Proxy.sol:Proxy": {
        "src": "contracts/Proxy.sol:10",
        "version": {
          "withMetadata": "3f5c5f504c75452b4e66d955826ba95c6546b31eb98ec5ded382c37a5607a2e2",
          "withoutMetadata": "bc7fcd1c64d2f798926ae830c3e369a33c770ea294cd9047d184a8c885a96818",
          "linkedWithoutMetadata": "bc7fcd1c64d2f798926ae830c3e369a33c770ea294cd9047d184a8c885a96818"
        },
        "inherit": [],
        "libraries": [],
        "methods": [
          "(address)",
          "()",
          "()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Proxy",
            "src": "contracts/Proxy.sol:22"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "implementation",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Proxy",
              "src": "contracts/Proxy.sol:13"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.21"
      }
    },
    {
      "contracts/RichHusky.sol:Checker": {
        "src": "contracts/RichHusky.sol:520",
        "version": {
          "withMetadata": "17e1cf10fdffcda321c1a1f59d2b06178394724b4d8ad9b035a718122fed8a52",
          "withoutMetadata": "0faf6ca500781d04501ba7e4cf9138e35957321419c6ca29798480c22b3cc5cd",
          "linkedWithoutMetadata": "0faf6ca500781d04501ba7e4cf9138e35957321419c6ca29798480c22b3cc5cd"
        },
        "inherit": [],
        "libraries": [],
        "methods": [
          "isValid(address,address,address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.21"
      },
      "contracts/RichHusky.sol:Context": {
        "src": "contracts/RichHusky.sol:27",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.21"
      },
      "contracts/RichHusky.sol:ERC20": {
        "src": "contracts/RichHusky.sol:162",
        "version": {
          "withMetadata": "e092e43bc9c3243b7138ce015fa92d358fa66a764079145cfe1339f160fd055e",
          "withoutMetadata": "e248eda4094a79267c1d78eb85fb3a082e2ba4d153192b2644d6357dbed158f3",
          "linkedWithoutMetadata": "e248eda4094a79267c1d78eb85fb3a082e2ba4d153192b2644d6357dbed158f3"
        },
        "inherit": [
          "contracts/RichHusky.sol:IERC20Metadata",
          "contracts/RichHusky.sol:IERC20",
          "contracts/RichHusky.sol:Context"
        ],
        "libraries": [],
        "methods": [
          "(string,string)",
          "name()",
          "symbol()",
          "decimals()",
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)",
          "increaseAllowance(address,uint256)",
          "decreaseAllowance(address,uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ERC20",
            "src": "contracts/RichHusky.sol:181"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_balances",
              "offset": 0,
              "slot": "0",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC20",
              "src": "contracts/RichHusky.sol:163"
            },
            {
              "label": "_allowances",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "ERC20",
              "src": "contracts/RichHusky.sol:165"
            },
            {
              "label": "_totalSupply",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "ERC20",
              "src": "contracts/RichHusky.sol:167"
            },
            {
              "label": "_name",
              "offset": 0,
              "slot": "3",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "contracts/RichHusky.sol:169"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "4",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "contracts/RichHusky.sol:170"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.21"
      },
      "contracts/RichHusky.sol:IERC20": {
        "src": "contracts/RichHusky.sol:40",
        "inherit": [],
        "libraries": [],
        "methods": [
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.21"
      },
      "contracts/RichHusky.sol:IERC20Metadata": {
        "src": "contracts/RichHusky.sol:120",
        "inherit": [
          "contracts/RichHusky.sol:IERC20"
        ],
        "libraries": [],
        "methods": [
          "name()",
          "symbol()",
          "decimals()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.21"
      },
      "contracts/RichHusky.sol:IFactory": {
        "src": "contracts/RichHusky.sol:535",
        "inherit": [],
        "libraries": [],
        "methods": [
          "createPair(address,address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.21"
      },
      "contracts/RichHusky.sol:IGasToken": {
        "src": "contracts/RichHusky.sol:539",
        "inherit": [],
        "libraries": [],
        "methods": [
          "free(uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.21"
      },
      "contracts/RichHusky.sol:RichHusky": {
        "src": "contracts/RichHusky.sol:543",
        "version": {
          "withMetadata": "ce802161ba5ffecece3a7488fb3a07a35d8f78edf3674187d3eb27cc30777604",
          "withoutMetadata": "7c4ce62a347a52dc2685dbb41f6d968bb51e7d6abb10665abf0c7d7699da0d36",
          "linkedWithoutMetadata": "7c4ce62a347a52dc2685dbb41f6d968bb51e7d6abb10665abf0c7d7699da0d36"
        },
        "inherit": [
          "contracts/RichHusky.sol:ERC20",
          "contracts/RichHusky.sol:IERC20Metadata",
          "contracts/RichHusky.sol:IERC20",
          "contracts/RichHusky.sol:Context"
        ],
        "libraries": [
          "contracts/RichHusky.sol:Checker"
        ],
        "methods": [
          "(address)",
          "mint(address,uint256)",
          "updateAirdropAmount(uint256)",
          "withdrawFee(address,uint256)",
          "airdrop(address[],uint256)",
          "addBetaUsers(address[])",
          "removeBetaUsers(address[])",
          "multiCall(address[],bytes[])"
        ],
        "linkReferences": [
          {
            "src": "contracts/RichHusky.sol",
            "name": "Checker",
            "length": 20,
            "start": 5176,
            "placeholder": "__$1cb883ae52507a2d00adae80c79f632cb4$__"
          }
        ],
        "errors": [
          {
            "kind": "constructor",
            "contract": "RichHusky",
            "src": "contracts/RichHusky.sol:554"
          },
          {
            "kind": "state-variable-immutable",
            "name": "pancakeFactory",
            "src": "contracts/RichHusky.sol:549"
          },
          {
            "kind": "state-variable-immutable",
            "name": "WBNB",
            "src": "contracts/RichHusky.sol:550"
          },
          {
            "kind": "state-variable-immutable",
            "name": "GasToken",
            "src": "contracts/RichHusky.sol:552"
          },
          {
            "kind": "external-library-linking",
            "name": "Checker",
            "src": "contracts/RichHusky.sol"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_balances",
              "offset": 0,
              "slot": "0",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC20",
              "src": "contracts/RichHusky.sol:163"
            },
            {
              "label": "_allowances",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "ERC20",
              "src": "contracts/RichHusky.sol:165"
            },
            {
              "label": "_totalSupply",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "ERC20",
              "src": "contracts/RichHusky.sol:167"
            },
            {
              "label": "_name",
              "offset": 0,
              "slot": "3",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "contracts/RichHusky.sol:169"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "4",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "contracts/RichHusky.sol:170"
            },
            {
              "label": "dev",
              "offset": 0,
              "slot": "5",
              "type": "t_address",
              "contract": "RichHusky",
              "src": "contracts/RichHusky.sol:544"
            },
            {
              "label": "airdropAmount",
              "offset": 0,
              "slot": "6",
              "type": "t_uint256",
              "contract": "RichHusky",
              "src": "contracts/RichHusky.sol:545"
            },
            {
              "label": "betaUsers",
              "offset": 0,
              "slot": "7",
              "type": "t_mapping(t_address,t_bool)",
              "contract": "RichHusky",
              "src": "contracts/RichHusky.sol:546"
            },
            {
              "label": "pair",
              "offset": 0,
              "slot": "8",
              "type": "t_address",
              "contract": "RichHusky",
              "src": "contracts/RichHusky.sol:547"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.21"
      }
    },
    {
      "@openzeppelin/contracts/access/Ownable.sol:Ownable": {
        "src": "@openzeppelin/contracts/access/Ownable.sol:20",
        "inherit": [
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [],
        "methods": [
          "owner()",
          "renounceOwnership()",
          "transferOwnership(address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Ownable",
            "src": "@openzeppelin/contracts/access/Ownable.sol:28"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Ownable",
              "src": "@openzeppelin/contracts/access/Ownable.sol:21"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.21"
      },
      "@openzeppelin/contracts/security/ReentrancyGuard.sol:ReentrancyGuard": {
        "src": "@openzeppelin/contracts/security/ReentrancyGuard.sol:22",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ReentrancyGuard",
            "src": "@openzeppelin/contracts/security/ReentrancyGuard.sol:39"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_status",
              "offset": 0,
              "slot": "0",
              "type": "t_uint256",
              "contract": "ReentrancyGuard",
              "src": "@openzeppelin/contracts/security/ReentrancyGuard.sol:37"
            }
          ],
          "types": {
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.21"
      },
      "@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20": {
        "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:35",
        "version": {
          "withMetadata": "b653be9ad258ddaafa2304767243ba86eac7156acd9bf1a196bee0fef9b1c3a9",
          "withoutMetadata": "1d55e2dc08aae4fa5bd2ca8ac476f7a2e63bdfa7b0b51d4bd61db8705143a140",
          "linkedWithoutMetadata": "1d55e2dc08aae4fa5bd2ca8ac476f7a2e63bdfa7b0b51d4bd61db8705143a140"
        },
        "inherit": [
          "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol:IERC20Metadata",
          "@openzeppelin/contracts/token/ERC20/IERC20.sol:IERC20",
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [],
        "methods": [
          "(string,string)",
          "name()",
          "symbol()",
          "decimals()",
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)",
          "increaseAllowance(address,uint256)",
          "decreaseAllowance(address,uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ERC20",
            "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:54"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_balances",
              "offset": 0,
              "slot": "0",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:36"
            },
            {
              "label": "_allowances",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:38"
            },
            {
              "label": "_totalSupply",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:40"
            },
            {
              "label": "_name",
              "offset": 0,
              "slot": "3",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:42"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "4",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:43"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.21"
      },
      "@openzeppelin/contracts/token/ERC20/IERC20.sol:IERC20": {
        "src": "@openzeppelin/contracts/token/ERC20/IERC20.sol:9",
        "inherit": [],
        "libraries": [],
        "methods": [
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.21"
      },
      "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol:IERC20Metadata": {
        "src": "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol:13",
        "inherit": [
          "@openzeppelin/contracts/token/ERC20/IERC20.sol:IERC20"
        ],
        "libraries": [],
        "methods": [
          "name()",
          "symbol()",
          "decimals()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.21"
      },
      "@openzeppelin/contracts/token/ERC20/extensions/draft-IERC20Permit.sol:IERC20Permit": {
        "src": "@openzeppelin/contracts/token/ERC20/extensions/draft-IERC20Permit.sol:14",
        "inherit": [],
        "libraries": [],
        "methods": [
          "permit(address,address,uint256,uint256,uint8,bytes32,bytes32)",
          "nonces(address)",
          "DOMAIN_SEPARATOR()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.21"
      },
      "@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol:SafeERC20": {
        "src": "@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol:19",
        "version": {
          "withMetadata": "945db44b71722f915e3e7352ee22f854dfe8000e69eee742d881b64279bb0ad8",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [
          "@openzeppelin/contracts/utils/Address.sol:Address"
        ],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.21"
      },
      "@openzeppelin/contracts/utils/Address.sol:Address": {
        "src": "@openzeppelin/contracts/utils/Address.sol:9",
        "version": {
          "withMetadata": "9401bbf4dc0decc4c739a060967031a16e8de389388d98c32ec11cff440d6513",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [
          {
            "kind": "delegatecall",
            "src": "@openzeppelin/contracts/utils/Address.sol:191"
          },
          {
            "kind": "delegatecall",
            "src": "@openzeppelin/contracts/utils/Address.sol:191"
          }
        ],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.21"
      },
      "@openzeppelin/contracts/utils/Context.sol:Context": {
        "src": "@openzeppelin/contracts/utils/Context.sol:16",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.21"
      },
      "@openzeppelin/contracts/utils/math/Math.sol:Math": {
        "src": "@openzeppelin/contracts/utils/math/Math.sol:9",
        "version": {
          "withMetadata": "f58f3d1d6b53395057afc8a5e1edcbfcd81cdec0dfcf6b1290c8c2368b975278",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.21"
      },
      "@openzeppelin/contracts/utils/math/SafeMath.sol:SafeMath": {
        "src": "@openzeppelin/contracts/utils/math/SafeMath.sol:16",
        "version": {
          "withMetadata": "4167346fe154a63f59e72262dbca9ccb097c97b61ec5dfe163259378386d2ba4",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.21"
      },
      "contracts/Presale.sol:IGoldToken": {
        "src": "contracts/Presale.sol:8",
        "inherit": [],
        "libraries": [],
        "methods": [
          "mint(address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.21"
      },
      "contracts/Presale.sol:Presale": {
        "src": "contracts/Presale.sol:12",
        "version": {
          "withMetadata": "55de4f41aa2ae4e88c3e975f7f7c871c8630a6a915f505e8b168c82d5665ef13",
          "withoutMetadata": "2fa5a3bfe1ae715a2695aad2a1fdda65dd5f2dfe346a8af0822d82b296b7bc1b",
          "linkedWithoutMetadata": "2fa5a3bfe1ae715a2695aad2a1fdda65dd5f2dfe346a8af0822d82b296b7bc1b"
        },
        "inherit": [
          "@openzeppelin/contracts/security/ReentrancyGuard.sol:ReentrancyGuard",
          "@openzeppelin/contracts/access/Ownable.sol:Ownable",
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [],
        "methods": [
          "(address,address,address,uint256)",
          "createPreSale((uint256,uint256,uint256))",
          "sale()",
          "getCanIdoAmount(address)",
          "bindReffer(address)",
          "userBalance(address)",
          "userRewardBalance(address)",
          "userWithdraw()",
          "teamWithdraw(address)",
          "setUserWithdrawTime(uint256)",
          "setInviteMin(uint256)",
          "setPerMaxBuyUsdt(uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Presale",
            "src": "contracts/Presale.sol:46"
          },
          {
            "kind": "state-variable-assignment",
            "name": "perMaxBuyUsdt",
            "src": "contracts/Presale.sol:15"
          },
          {
            "kind": "state-variable-assignment",
            "name": "inviteMin",
            "src": "contracts/Presale.sol:31"
          },
          {
            "kind": "state-variable-assignment",
            "name": "maxSale",
            "src": "contracts/Presale.sol:33"
          },
          {
            "kind": "state-variable-assignment",
            "name": "rewardLevel",
            "src": "contracts/Presale.sol:36"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Ownable",
              "src": "@openzeppelin/contracts/access/Ownable.sol:21"
            },
            {
              "label": "_status",
              "offset": 0,
              "slot": "1",
              "type": "t_uint256",
              "contract": "ReentrancyGuard",
              "src": "@openzeppelin/contracts/security/ReentrancyGuard.sol:37"
            },
            {
              "label": "userWithdrawTime",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "Presale",
              "src": "contracts/Presale.sol:13"
            },
            {
              "label": "perMaxBuyUsdt",
              "offset": 0,
              "slot": "3",
              "type": "t_uint256",
              "contract": "Presale",
              "src": "contracts/Presale.sol:15"
            },
            {
              "label": "teamAddress",
              "offset": 0,
              "slot": "4",
              "type": "t_address",
              "contract": "Presale",
              "src": "contracts/Presale.sol:16"
            },
            {
              "label": "saleToken",
              "offset": 0,
              "slot": "5",
              "type": "t_address",
              "contract": "Presale",
              "src": "contracts/Presale.sol:17"
            },
            {
              "label": "usdtToken",
              "offset": 0,
              "slot": "6",
              "type": "t_address",
              "contract": "Presale",
              "src": "contracts/Presale.sol:18"
            },
            {
              "label": "goldTokenAddress",
              "offset": 0,
              "slot": "7",
              "type": "t_address",
              "contract": "Presale",
              "src": "contracts/Presale.sol:19"
            },
            {
              "label": "balances",
              "offset": 0,
              "slot": "8",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "Presale",
              "src": "contracts/Presale.sol:20"
            },
            {
              "label": "userBuyTotalUsdt",
              "offset": 0,
              "slot": "9",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "Presale",
              "src": "contracts/Presale.sol:21"
            },
            {
              "label": "rewardBalances",
              "offset": 0,
              "slot": "10",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "Presale",
              "src": "contracts/Presale.sol:22"
            },
            {
              "label": "reffers",
              "offset": 0,
              "slot": "11",
              "type": "t_mapping(t_address,t_address)",
              "contract": "Presale",
              "src": "contracts/Presale.sol:23"
            },
            {
              "label": "refferNumber",
              "offset": 0,
              "slot": "12",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "Presale",
              "src": "contracts/Presale.sol:24"
            },
            {
              "label": "teamRefferNumber",
              "offset": 0,
              "slot": "13",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "Presale",
              "src": "contracts/Presale.sol:25"
            },
            {
              "label": "firstIdo",
              "offset": 0,
              "slot": "14",
              "type": "t_mapping(t_address,t_bool)",
              "contract": "Presale",
              "src": "contracts/Presale.sol:26"
            },
            {
              "label": "totalIdoUSDT",
              "offset": 0,
              "slot": "15",
              "type": "t_uint256",
              "contract": "Presale",
              "src": "contracts/Presale.sol:27"
            },
            {
              "label": "totalIdoUser",
              "offset": 0,
              "slot": "16",
              "type": "t_uint256",
              "contract": "Presale",
              "src": "contracts/Presale.sol:28"
            },
            {
              "label": "totalSale",
              "offset": 0,
              "slot": "17",
              "type": "t_uint256",
              "contract": "Presale",
              "src": "contracts/Presale.sol:29"
            },
            {
              "label": "inviteMin",
              "offset": 0,
              "slot": "18",
              "type": "t_uint256",
              "contract": "Presale",
              "src": "contracts/Presale.sol:31"
            },
            {
              "label": "maxSale",
              "offset": 0,
              "slot": "19",
              "type": "t_uint256",
              "contract": "Presale",
              "src": "contracts/Presale.sol:33"
            },
            {
              "label": "isCloseSale",
              "offset": 0,
              "slot": "20",
              "type": "t_bool",
              "contract": "Presale",
              "src": "contracts/Presale.sol:34"
            },
            {
              "label": "rewardLevel",
              "offset": 0,
              "slot": "21",
              "type": "t_array(t_uint256)dyn_storage",
              "contract": "Presale",
              "src": "contracts/Presale.sol:36"
            },
            {
              "label": "presaleInfo",
              "offset": 0,
              "slot": "22",
              "type": "t_struct(PresaleInfo)2392_storage",
              "contract": "Presale",
              "src": "contracts/Presale.sol:44"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_uint256)dyn_storage": {
              "label": "uint256[]",
              "numberOfBytes": "32"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_mapping(t_address,t_address)": {
              "label": "mapping(address => address)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_struct(PresaleInfo)2392_storage": {
              "label": "struct Presale.PresaleInfo",
              "members": [
                {
                  "label": "startTime",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "endTime",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "price",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "2"
                }
              ],
              "numberOfBytes": "96"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.21"
      },
      "contracts/Staking.sol:IRejuvenate": {
        "src": "contracts/Staking.sol:9",
        "inherit": [],
        "libraries": [],
        "methods": [
          "mint(address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.21"
      },
      "contracts/Staking.sol:Staking": {
        "src": "contracts/Staking.sol:13",
        "version": {
          "withMetadata": "d4a43fbe5f8d6347383f0680dba0a94146fceda61d8f28fb0ed926fda6eca5bc",
          "withoutMetadata": "8e35a11dc4a30aced1c096dd5db7f6424d19b292b732012b8d44d054f9cea466",
          "linkedWithoutMetadata": "8e35a11dc4a30aced1c096dd5db7f6424d19b292b732012b8d44d054f9cea466"
        },
        "inherit": [
          "@openzeppelin/contracts/security/ReentrancyGuard.sol:ReentrancyGuard",
          "@openzeppelin/contracts/access/Ownable.sol:Ownable",
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [],
        "methods": [
          "()",
          "changeRewardsPerBlock(uint256)",
          "rewardPerToken()",
          "earned(address)",
          "stake(uint256)",
          "unstake(uint256)",
          "claimRewards()",
          "pause()",
          "unpause()",
          "inCaseTokensGetStuck(address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Staking",
            "src": "contracts/Staking.sol:33"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Ownable",
              "src": "@openzeppelin/contracts/access/Ownable.sol:21"
            },
            {
              "label": "_status",
              "offset": 0,
              "slot": "1",
              "type": "t_uint256",
              "contract": "ReentrancyGuard",
              "src": "@openzeppelin/contracts/security/ReentrancyGuard.sol:37"
            },
            {
              "label": "paused",
              "offset": 0,
              "slot": "2",
              "type": "t_bool",
              "contract": "Staking",
              "src": "contracts/Staking.sol:14"
            },
            {
              "label": "_treasury",
              "offset": 1,
              "slot": "2",
              "type": "t_address",
              "contract": "Staking",
              "src": "contracts/Staking.sol:15"
            },
            {
              "label": "token",
              "offset": 0,
              "slot": "3",
              "type": "t_address",
              "contract": "Staking",
              "src": "contracts/Staking.sol:17"
            },
            {
              "label": "rewardRate",
              "offset": 0,
              "slot": "4",
              "type": "t_uint256",
              "contract": "Staking",
              "src": "contracts/Staking.sol:19"
            },
            {
              "label": "_lastUpdateBlock",
              "offset": 0,
              "slot": "5",
              "type": "t_uint256",
              "contract": "Staking",
              "src": "contracts/Staking.sol:20"
            },
            {
              "label": "_rewardsPerToken",
              "offset": 0,
              "slot": "6",
              "type": "t_uint256",
              "contract": "Staking",
              "src": "contracts/Staking.sol:21"
            },
            {
              "label": "data",
              "offset": 0,
              "slot": "7",
              "type": "t_array(t_struct(StakingData)3375_storage)dyn_storage",
              "contract": "Staking",
              "src": "contracts/Staking.sol:22"
            },
            {
              "label": "_userRewardsPerToken",
              "offset": 0,
              "slot": "8",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "Staking",
              "src": "contracts/Staking.sol:24"
            },
            {
              "label": "_rewards",
              "offset": 0,
              "slot": "9",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "Staking",
              "src": "contracts/Staking.sol:25"
            },
            {
              "label": "totalStaked",
              "offset": 0,
              "slot": "10",
              "type": "t_uint256",
              "contract": "Staking",
              "src": "contracts/Staking.sol:27"
            },
            {
              "label": "_balances",
              "offset": 0,
              "slot": "11",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "Staking",
              "src": "contracts/Staking.sol:28"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_struct(StakingData)3375_storage)dyn_storage": {
              "label": "struct StakingData[]",
              "numberOfBytes": "32"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_struct(StakingData)3375_storage": {
              "label": "struct StakingData",
              "members": [
                {
                  "label": "block",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "staked",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "1"
                }
              ],
              "numberOfBytes": "64"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.21"
      }
    },
    {
      "contracts/IFiles.sol:Address": {
        "src": "contracts/IFiles.sol:147",
        "version": {
          "withMetadata": "73f3d745b82ff92d492794f39ddc131795315255895e196d918dc1260c813488",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.21"
      },
      "contracts/IFiles.sol:Context": {
        "src": "contracts/IFiles.sol:135",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.21"
      },
      "contracts/IFiles.sol:IBEP20": {
        "src": "contracts/IFiles.sol:9",
        "inherit": [],
        "libraries": [],
        "methods": [
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.21"
      },
      "contracts/IFiles.sol:IPancakeFactory": {
        "src": "contracts/IFiles.sol:327",
        "inherit": [],
        "libraries": [],
        "methods": [
          "feeTo()",
          "feeToSetter()",
          "getPair(address,address)",
          "allPairs(uint256)",
          "allPairsLength()",
          "createPair(address,address)",
          "setFeeTo(address)",
          "setFeeToSetter(address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.21"
      },
      "contracts/IFiles.sol:IPancakePair": {
        "src": "contracts/IFiles.sol:357",
        "inherit": [],
        "libraries": [],
        "methods": [
          "name()",
          "symbol()",
          "decimals()",
          "totalSupply()",
          "balanceOf(address)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transfer(address,uint256)",
          "transferFrom(address,address,uint256)",
          "DOMAIN_SEPARATOR()",
          "PERMIT_TYPEHASH()",
          "nonces(address)",
          "permit(address,address,uint256,uint256,uint8,bytes32,bytes32)",
          "MINIMUM_LIQUIDITY()",
          "factory()",
          "token0()",
          "token1()",
          "getReserves()",
          "price0CumulativeLast()",
          "price1CumulativeLast()",
          "kLast()",
          "mint(address)",
          "burn(address)",
          "swap(uint256,uint256,address,bytes)",
          "skim(address)",
          "sync()",
          "initialize(address,address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.21"
      },
      "contracts/IFiles.sol:IPancakeRouter01": {
        "src": "contracts/IFiles.sol:466",
        "inherit": [],
        "libraries": [],
        "methods": [
          "factory()",
          "WETH()",
          "addLiquidity(address,address,uint256,uint256,uint256,uint256,address,uint256)",
          "addLiquidityETH(address,uint256,uint256,uint256,address,uint256)",
          "removeLiquidity(address,address,uint256,uint256,uint256,address,uint256)",
          "removeLiquidityETH(address,uint256,uint256,uint256,address,uint256)",
          "removeLiquidityWithPermit(address,address,uint256,uint256,uint256,address,uint256,bool,uint8,bytes32,bytes32)",
          "removeLiquidityETHWithPermit(address,uint256,uint256,uint256,address,uint256,bool,uint8,bytes32,bytes32)",
          "swapExactTokensForTokens(uint256,uint256,address[],address,uint256)",
          "swapTokensForExactTokens(uint256,uint256,address[],address,uint256)",
          "swapExactETHForTokens(uint256,address[],address,uint256)",
          "swapTokensForExactETH(uint256,uint256,address[],address,uint256)",
          "swapExactTokensForETH(uint256,uint256,address[],address,uint256)",
          "swapETHForExactTokens(uint256,address[],address,uint256)",
          "quote(uint256,uint256,uint256)",
          "getAmountOut(uint256,uint256,uint256)",
          "getAmountIn(uint256,uint256,uint256)",
          "getAmountsOut(uint256,address[])",
          "getAmountsIn(uint256,address[])"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.21"
      },
      "contracts/IFiles.sol:IPancakeRouter02": {
        "src": "contracts/IFiles.sol:626",
        "inherit": [
          "contracts/IFiles.sol:IPancakeRouter01"
        ],
        "libraries": [],
        "methods": [
          "removeLiquidityETHSupportingFeeOnTransferTokens(address,uint256,uint256,uint256,address,uint256)",
          "removeLiquidityETHWithPermitSupportingFeeOnTransferTokens(address,uint256,uint256,uint256,address,uint256,bool,uint8,bytes32,bytes32)",
          "swapExactTokensForTokensSupportingFeeOnTransferTokens(uint256,uint256,address[],address,uint256)",
          "swapExactETHForTokensSupportingFeeOnTransferTokens(uint256,address[],address,uint256)",
          "swapExactTokensForETHSupportingFeeOnTransferTokens(uint256,uint256,address[],address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.21"
      },
      "contracts/IFiles.sol:IWBNB": {
        "src": "contracts/IFiles.sol:38",
        "inherit": [],
        "libraries": [],
        "methods": [
          "name()",
          "symbol()",
          "decimals()",
          "balanceOf(address)",
          "allowance(address,address)",
          "()",
          "deposit()",
          "withdraw(uint256)",
          "totalSupply()",
          "approve(address,uint256)",
          "transfer(address,uint256)",
          "transferFrom(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.21"
      },
      "contracts/IFiles.sol:Initializable": {
        "src": "contracts/IFiles.sol:249",
        "version": {
          "withMetadata": "ba793f874980ba8826e0f77e588821b7a373c942b97ebcd7e4e42f378e00e824",
          "withoutMetadata": "ac0db523ddc3e330f735df7b3b0b24460531c71290a891170e840f8f67d5ff6b",
          "linkedWithoutMetadata": "ac0db523ddc3e330f735df7b3b0b24460531c71290a891170e840f8f67d5ff6b"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "contracts/IFiles.sol:251"
            },
            {
              "label": "initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "contracts/IFiles.sol:252"
            },
            {
              "label": "______gap",
              "offset": 0,
              "slot": "1",
              "type": "t_array(t_uint256)50_storage",
              "contract": "Initializable",
              "src": "contracts/IFiles.sol:283"
            }
          ],
          "types": {
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]",
              "numberOfBytes": "1600"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.21"
      },
      "contracts/IFiles.sol:Ownable": {
        "src": "contracts/IFiles.sol:286",
        "version": {
          "withMetadata": "9b6e83ec071c913ea8078938bf6c8e47f6ce697f181f2ebf31dc4937807eb386",
          "withoutMetadata": "a3dd09084d5d3377afaa5e637593b425fb1172db63a48c2f62428555638775f8",
          "linkedWithoutMetadata": "a3dd09084d5d3377afaa5e637593b425fb1172db63a48c2f62428555638775f8"
        },
        "inherit": [
          "contracts/IFiles.sol:Initializable",
          "contracts/IFiles.sol:Context"
        ],
        "libraries": [],
        "methods": [
          "()",
          "initOwner(address)",
          "owner()",
          "renounceOwnership()",
          "transferOwnership(address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "contracts/IFiles.sol:251"
            },
            {
              "label": "initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "contracts/IFiles.sol:252"
            },
            {
              "label": "______gap",
              "offset": 0,
              "slot": "1",
              "type": "t_array(t_uint256)50_storage",
              "contract": "Initializable",
              "src": "contracts/IFiles.sol:283"
            },
            {
              "label": "_owner",
              "offset": 0,
              "slot": "51",
              "type": "t_address",
              "contract": "Ownable",
              "src": "contracts/IFiles.sol:287"
            },
            {
              "label": "_previousOwner",
              "offset": 0,
              "slot": "52",
              "type": "t_address",
              "contract": "Ownable",
              "src": "contracts/IFiles.sol:288"
            },
            {
              "label": "_lockTime",
              "offset": 0,
              "slot": "53",
              "type": "t_uint256",
              "contract": "Ownable",
              "src": "contracts/IFiles.sol:289"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]",
              "numberOfBytes": "1600"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.21"
      },
      "contracts/IFiles.sol:SafeMath": {
        "src": "contracts/IFiles.sol:68",
        "version": {
          "withMetadata": "6a5db877229c78c84b33e85a297bea1121c6a6195aa310f30cbe69888293c5ae",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.21"
      },
      "contracts/ReentrancyGuard.sol:ReentrancyGuard": {
        "src": "contracts/ReentrancyGuard.sol:5",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ReentrancyGuard",
            "src": "contracts/ReentrancyGuard.sol:12"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_status",
              "offset": 0,
              "slot": "0",
              "type": "t_uint256",
              "contract": "ReentrancyGuard",
              "src": "contracts/ReentrancyGuard.sol:10"
            }
          ],
          "types": {
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.21"
      },
      "contracts/Utils.sol:PancakeLibrary": {
        "src": "contracts/Utils.sol:219",
        "version": {
          "withMetadata": "668337a75717822cd6d73bbd1c50526e84e4af10cd45125b1756676395a2f30c",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [
          "contracts/IFiles.sol:SafeMath"
        ],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.21"
      },
      "contracts/Utils.sol:Utils": {
        "src": "contracts/Utils.sol:6",
        "version": {
          "withMetadata": "a5775bd7ff330a5dfa7ddaef645bcc8fbccdcd3c38fbc9fc1755e3e3a9a09d47",
          "withoutMetadata": "8ca6da6b824cadf2e1f9c600b5f1381080c8b8d75dddf5423f35e25222daaeda",
          "linkedWithoutMetadata": "8ca6da6b824cadf2e1f9c600b5f1381080c8b8d75dddf5423f35e25222daaeda"
        },
        "inherit": [],
        "libraries": [
          "contracts/IFiles.sol:SafeMath"
        ],
        "methods": [
          "calculateBNBReward(uint256,uint256,uint256,uint256)",
          "calculateTopUpClaim(uint256,uint256,uint256,uint256)",
          "swapTokensForEth(address,uint256)",
          "swapETHForTokens(address,address,uint256)",
          "swapTokensForTokens(address,address,uint256)",
          "getAmountsout(uint256,address)",
          "addLiquidity(address,address,uint256,uint256)",
          "getAntiFlipTaxNo(uint256)",
          "calcReward(uint256,uint256,uint256,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.21"
      }
    },
    {
      "contracts/FirstDao.sol:FistDao": {
        "src": "contracts/FirstDao.sol:127",
        "version": {
          "withMetadata": "87594bf7d015e41aaf777bc0dc62e9e8a3685546fcfa065eb87291ef7f3f16f4",
          "withoutMetadata": "5bdb2538a3ba33172d93851875dfca20475ce01973348f896430788ab9d8314a",
          "linkedWithoutMetadata": "5bdb2538a3ba33172d93851875dfca20475ce01973348f896430788ab9d8314a"
        },
        "inherit": [
          "contracts/FirstDao.sol:Ownable",
          "contracts/FirstDao.sol:IERC20"
        ],
        "libraries": [
          "contracts/FirstDao.sol:SafeMath"
        ],
        "methods": [
          "(string,string)",
          "()",
          "initialize(address,address,address,address)",
          "transferEvent(address,address,uint256)",
          "feeState()",
          "getIsApproved(address)",
          "searchExcludedFromFeeAccounts(address)",
          "getDefaultBalance()",
          "insertIntoExcludedFromFeeAccounts(address[])",
          "deleteFromExcludedFromFeeAccounts(address[])",
          "claim(address,uint256)",
          "name()",
          "symbol()",
          "decimals()",
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "transferFrom(address,address,uint256)",
          "approve(address,uint256)",
          "allowance(address,address)",
          "increaseAllowance(address,uint256)",
          "decreaseAllowance(address,uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "FistDao",
            "src": "contracts/FirstDao.sol:159"
          },
          {
            "kind": "state-variable-assignment",
            "name": "_decimals",
            "src": "contracts/FirstDao.sol:132"
          },
          {
            "kind": "state-variable-assignment",
            "name": "_totalSupply",
            "src": "contracts/FirstDao.sol:133"
          },
          {
            "kind": "state-variable-assignment",
            "name": "_feeTax",
            "src": "contracts/FirstDao.sol:138"
          },
          {
            "kind": "state-variable-assignment",
            "name": "_feeMining",
            "src": "contracts/FirstDao.sol:139"
          },
          {
            "kind": "state-variable-assignment",
            "name": "_feeLiquidity",
            "src": "contracts/FirstDao.sol:140"
          },
          {
            "kind": "state-variable-assignment",
            "name": "_feeDivisor",
            "src": "contracts/FirstDao.sol:141"
          },
          {
            "kind": "state-variable-assignment",
            "name": "_removeAllFee",
            "src": "contracts/FirstDao.sol:143"
          },
          {
            "kind": "state-variable-assignment",
            "name": "_defaultBalance",
            "src": "contracts/FirstDao.sol:150"
          },
          {
            "kind": "state-variable-assignment",
            "name": "_defaultAmount",
            "src": "contracts/FirstDao.sol:151"
          },
          {
            "kind": "state-variable-assignment",
            "name": "_initialized111",
            "src": "contracts/FirstDao.sol:156"
          },
          {
            "kind": "state-variable-assignment",
            "name": "_reentry",
            "src": "contracts/FirstDao.sol:157"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Ownable",
              "src": "contracts/FirstDao.sol:58"
            },
            {
              "label": "_previousOwner",
              "offset": 0,
              "slot": "1",
              "type": "t_address",
              "contract": "Ownable",
              "src": "contracts/FirstDao.sol:59"
            },
            {
              "label": "_switchDate",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "Ownable",
              "src": "contracts/FirstDao.sol:60"
            },
            {
              "label": "_name",
              "offset": 0,
              "slot": "3",
              "type": "t_string_storage",
              "contract": "FistDao",
              "src": "contracts/FirstDao.sol:130"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "4",
              "type": "t_string_storage",
              "contract": "FistDao",
              "src": "contracts/FirstDao.sol:131"
            },
            {
              "label": "_decimals",
              "offset": 0,
              "slot": "5",
              "type": "t_uint8",
              "contract": "FistDao",
              "src": "contracts/FirstDao.sol:132"
            },
            {
              "label": "_totalSupply",
              "offset": 0,
              "slot": "6",
              "type": "t_uint256",
              "contract": "FistDao",
              "src": "contracts/FirstDao.sol:133"
            },
            {
              "label": "_balances",
              "offset": 0,
              "slot": "7",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "FistDao",
              "src": "contracts/FirstDao.sol:134"
            },
            {
              "label": "_allowances",
              "offset": 0,
              "slot": "8",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "FistDao",
              "src": "contracts/FirstDao.sol:135"
            },
            {
              "label": "_isApproved",
              "offset": 0,
              "slot": "9",
              "type": "t_mapping(t_address,t_bool)",
              "contract": "FistDao",
              "src": "contracts/FirstDao.sol:136"
            },
            {
              "label": "_feeTax",
              "offset": 0,
              "slot": "10",
              "type": "t_uint256",
              "contract": "FistDao",
              "src": "contracts/FirstDao.sol:138"
            },
            {
              "label": "_feeMining",
              "offset": 0,
              "slot": "11",
              "type": "t_uint256",
              "contract": "FistDao",
              "src": "contracts/FirstDao.sol:139"
            },
            {
              "label": "_feeLiquidity",
              "offset": 0,
              "slot": "12",
              "type": "t_uint256",
              "contract": "FistDao",
              "src": "contracts/FirstDao.sol:140"
            },
            {
              "label": "_feeDivisor",
              "offset": 0,
              "slot": "13",
              "type": "t_uint256",
              "contract": "FistDao",
              "src": "contracts/FirstDao.sol:141"
            },
            {
              "label": "_removeAllFee",
              "offset": 0,
              "slot": "14",
              "type": "t_bool",
              "contract": "FistDao",
              "src": "contracts/FirstDao.sol:143"
            },
            {
              "label": "_core",
              "offset": 1,
              "slot": "14",
              "type": "t_address",
              "contract": "FistDao",
              "src": "contracts/FirstDao.sol:145"
            },
            {
              "label": "_taxReceiver",
              "offset": 0,
              "slot": "15",
              "type": "t_address",
              "contract": "FistDao",
              "src": "contracts/FirstDao.sol:146"
            },
            {
              "label": "_miningPool",
              "offset": 0,
              "slot": "16",
              "type": "t_address",
              "contract": "FistDao",
              "src": "contracts/FirstDao.sol:147"
            },
            {
              "label": "_liquidityPool",
              "offset": 0,
              "slot": "17",
              "type": "t_address",
              "contract": "FistDao",
              "src": "contracts/FirstDao.sol:148"
            },
            {
              "label": "_defaultBalance",
              "offset": 0,
              "slot": "18",
              "type": "t_uint256",
              "contract": "FistDao",
              "src": "contracts/FirstDao.sol:150"
            },
            {
              "label": "_defaultAmount",
              "offset": 0,
              "slot": "19",
              "type": "t_uint256",
              "contract": "FistDao",
              "src": "contracts/FirstDao.sol:151"
            },
            {
              "label": "_isExcludedFromFee",
              "offset": 0,
              "slot": "20",
              "type": "t_mapping(t_address,t_bool)",
              "contract": "FistDao",
              "src": "contracts/FirstDao.sol:153"
            },
            {
              "label": "_excludedFromFeeAccounts",
              "offset": 0,
              "slot": "21",
              "type": "t_array(t_address)dyn_storage",
              "contract": "FistDao",
              "src": "contracts/FirstDao.sol:154"
            },
            {
              "label": "_initialized111",
              "offset": 0,
              "slot": "22",
              "type": "t_bool",
              "contract": "FistDao",
              "src": "contracts/FirstDao.sol:156"
            },
            {
              "label": "_reentry",
              "offset": 0,
              "slot": "23",
              "type": "t_uint256",
              "contract": "FistDao",
              "src": "contracts/FirstDao.sol:157"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_address)dyn_storage": {
              "label": "address[]",
              "numberOfBytes": "32"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint8": {
              "label": "uint8",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.21"
      },
      "contracts/FirstDao.sol:ICore": {
        "src": "contracts/FirstDao.sol:119",
        "inherit": [],
        "libraries": [],
        "methods": [
          "getPairAddress()",
          "airdrop()",
          "safety(address,address)",
          "start()",
          "end()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.21"
      },
      "contracts/FirstDao.sol:IERC20": {
        "src": "contracts/FirstDao.sol:8",
        "inherit": [],
        "libraries": [],
        "methods": [
          "name()",
          "symbol()",
          "decimals()",
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "transferFrom(address,address,uint256)",
          "approve(address,uint256)",
          "allowance(address,address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.21"
      },
      "contracts/FirstDao.sol:IFactory": {
        "src": "contracts/FirstDao.sol:91",
        "inherit": [],
        "libraries": [],
        "methods": [
          "createPair(address,address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.21"
      },
      "contracts/FirstDao.sol:IRouter01": {
        "src": "contracts/FirstDao.sol:95",
        "inherit": [],
        "libraries": [],
        "methods": [
          "factory()",
          "addLiquidity(address,address,uint256,uint256,uint256,uint256,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.21"
      },
      "contracts/FirstDao.sol:IRouter02": {
        "src": "contracts/FirstDao.sol:109",
        "inherit": [
          "contracts/FirstDao.sol:IRouter01"
        ],
        "libraries": [],
        "methods": [
          "swapExactTokensForTokensSupportingFeeOnTransferTokens(uint256,uint256,address[],address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.21"
      },
      "contracts/FirstDao.sol:Ownable": {
        "src": "contracts/FirstDao.sol:57",
        "inherit": [],
        "libraries": [],
        "methods": [
          "owner()",
          "switchDate()",
          "transferOwnership(uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Ownable",
            "src": "contracts/FirstDao.sol:63"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Ownable",
              "src": "contracts/FirstDao.sol:58"
            },
            {
              "label": "_previousOwner",
              "offset": 0,
              "slot": "1",
              "type": "t_address",
              "contract": "Ownable",
              "src": "contracts/FirstDao.sol:59"
            },
            {
              "label": "_switchDate",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "Ownable",
              "src": "contracts/FirstDao.sol:60"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.21"
      },
      "contracts/FirstDao.sol:SafeMath": {
        "src": "contracts/FirstDao.sol:22",
        "version": {
          "withMetadata": "95eb3df1bd62a62b1bf87150f7314053125cc709ed6eb26f9bf2a30d8fc55e32",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.21"
      }
    },
    {
      "contracts/Proxy.sol:Caller": {
        "src": "contracts/Proxy.sol:80",
        "version": {
          "withMetadata": "9ce8fab2ba2d901a6c6fbf54c47202b7af5e008695fdcdd87dbcbadf457cedf1",
          "withoutMetadata": "d6211a178c252503f87d41bbcceffa66551bde0c0c4b0cc3c5a44a4f489e2c7f",
          "linkedWithoutMetadata": "d6211a178c252503f87d41bbcceffa66551bde0c0c4b0cc3c5a44a4f489e2c7f"
        },
        "inherit": [],
        "libraries": [],
        "methods": [
          "(address)",
          "increase()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Caller",
            "src": "contracts/Proxy.sol:80"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "proxy",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Caller",
              "src": "contracts/Proxy.sol:80"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.21"
      },
      "contracts/Proxy.sol:Proxy": {
        "src": "contracts/Proxy.sol:10",
        "version": {
          "withMetadata": "3f5c5f504c75452b4e66d955826ba95c6546b31eb98ec5ded382c37a5607a2e2",
          "withoutMetadata": "bc7fcd1c64d2f798926ae830c3e369a33c770ea294cd9047d184a8c885a96818",
          "linkedWithoutMetadata": "bc7fcd1c64d2f798926ae830c3e369a33c770ea294cd9047d184a8c885a96818"
        },
        "inherit": [],
        "libraries": [],
        "methods": [
          "(address)",
          "()",
          "()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Proxy",
            "src": "contracts/Proxy.sol:22"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "implementation",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Proxy",
              "src": "contracts/Proxy.sol:13"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.21"
      }
    },
    {
      "contracts/Logic.sol:Logic": {
        "src": "contracts/Logic.sol:9",
        "version": {
          "withMetadata": "087c86b163578853fb1cba09b22843df8f815c95bf2568200ddd8e1dbf167fea",
          "withoutMetadata": "a9feffbc7087e9529577fb0b368171b85b94d25918f43b5d410eb0f186274034",
          "linkedWithoutMetadata": "a9feffbc7087e9529577fb0b368171b85b94d25918f43b5d410eb0f186274034"
        },
        "inherit": [],
        "libraries": [],
        "methods": [
          "increment()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "state-variable-assignment",
            "name": "x",
            "src": "contracts/Logic.sol:13"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "implementation",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Logic",
              "src": "contracts/Logic.sol:9"
            },
            {
              "label": "x",
              "offset": 0,
              "slot": "1",
              "type": "t_uint256",
              "contract": "Logic",
              "src": "contracts/Logic.sol:13"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.21"
      }
    },
    {
      "@openzeppelin/contracts/access/Ownable.sol:Ownable": {
        "src": "@openzeppelin/contracts/access/Ownable.sol:20",
        "inherit": [
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [],
        "methods": [
          "owner()",
          "renounceOwnership()",
          "transferOwnership(address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Ownable",
            "src": "@openzeppelin/contracts/access/Ownable.sol:28"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Ownable",
              "src": "@openzeppelin/contracts/access/Ownable.sol:21"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.21"
      },
      "@openzeppelin/contracts/security/ReentrancyGuard.sol:ReentrancyGuard": {
        "src": "@openzeppelin/contracts/security/ReentrancyGuard.sol:22",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ReentrancyGuard",
            "src": "@openzeppelin/contracts/security/ReentrancyGuard.sol:39"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_status",
              "offset": 0,
              "slot": "0",
              "type": "t_uint256",
              "contract": "ReentrancyGuard",
              "src": "@openzeppelin/contracts/security/ReentrancyGuard.sol:37"
            }
          ],
          "types": {
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.21"
      },
      "@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20": {
        "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:35",
        "version": {
          "withMetadata": "b653be9ad258ddaafa2304767243ba86eac7156acd9bf1a196bee0fef9b1c3a9",
          "withoutMetadata": "1d55e2dc08aae4fa5bd2ca8ac476f7a2e63bdfa7b0b51d4bd61db8705143a140",
          "linkedWithoutMetadata": "1d55e2dc08aae4fa5bd2ca8ac476f7a2e63bdfa7b0b51d4bd61db8705143a140"
        },
        "inherit": [
          "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol:IERC20Metadata",
          "@openzeppelin/contracts/token/ERC20/IERC20.sol:IERC20",
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [],
        "methods": [
          "(string,string)",
          "name()",
          "symbol()",
          "decimals()",
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)",
          "increaseAllowance(address,uint256)",
          "decreaseAllowance(address,uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ERC20",
            "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:54"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_balances",
              "offset": 0,
              "slot": "0",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:36"
            },
            {
              "label": "_allowances",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:38"
            },
            {
              "label": "_totalSupply",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:40"
            },
            {
              "label": "_name",
              "offset": 0,
              "slot": "3",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:42"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "4",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:43"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.21"
      },
      "@openzeppelin/contracts/token/ERC20/IERC20.sol:IERC20": {
        "src": "@openzeppelin/contracts/token/ERC20/IERC20.sol:9",
        "inherit": [],
        "libraries": [],
        "methods": [
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.21"
      },
      "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol:IERC20Metadata": {
        "src": "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol:13",
        "inherit": [
          "@openzeppelin/contracts/token/ERC20/IERC20.sol:IERC20"
        ],
        "libraries": [],
        "methods": [
          "name()",
          "symbol()",
          "decimals()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.21"
      },
      "@openzeppelin/contracts/token/ERC20/extensions/draft-IERC20Permit.sol:IERC20Permit": {
        "src": "@openzeppelin/contracts/token/ERC20/extensions/draft-IERC20Permit.sol:14",
        "inherit": [],
        "libraries": [],
        "methods": [
          "permit(address,address,uint256,uint256,uint8,bytes32,bytes32)",
          "nonces(address)",
          "DOMAIN_SEPARATOR()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.21"
      },
      "@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol:SafeERC20": {
        "src": "@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol:19",
        "version": {
          "withMetadata": "945db44b71722f915e3e7352ee22f854dfe8000e69eee742d881b64279bb0ad8",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [
          "@openzeppelin/contracts/utils/Address.sol:Address"
        ],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.21"
      },
      "@openzeppelin/contracts/utils/Address.sol:Address": {
        "src": "@openzeppelin/contracts/utils/Address.sol:9",
        "version": {
          "withMetadata": "9401bbf4dc0decc4c739a060967031a16e8de389388d98c32ec11cff440d6513",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [
          {
            "kind": "delegatecall",
            "src": "@openzeppelin/contracts/utils/Address.sol:191"
          },
          {
            "kind": "delegatecall",
            "src": "@openzeppelin/contracts/utils/Address.sol:191"
          }
        ],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.21"
      },
      "@openzeppelin/contracts/utils/Context.sol:Context": {
        "src": "@openzeppelin/contracts/utils/Context.sol:16",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.21"
      },
      "@openzeppelin/contracts/utils/math/Math.sol:Math": {
        "src": "@openzeppelin/contracts/utils/math/Math.sol:9",
        "version": {
          "withMetadata": "f58f3d1d6b53395057afc8a5e1edcbfcd81cdec0dfcf6b1290c8c2368b975278",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.21"
      },
      "@openzeppelin/contracts/utils/math/SafeMath.sol:SafeMath": {
        "src": "@openzeppelin/contracts/utils/math/SafeMath.sol:16",
        "version": {
          "withMetadata": "4167346fe154a63f59e72262dbca9ccb097c97b61ec5dfe163259378386d2ba4",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.21"
      },
      "contracts/Presale.sol:IGoldToken": {
        "src": "contracts/Presale.sol:8",
        "inherit": [],
        "libraries": [],
        "methods": [
          "mint(address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.21"
      },
      "contracts/Presale.sol:Presale": {
        "src": "contracts/Presale.sol:12",
        "version": {
          "withMetadata": "55de4f41aa2ae4e88c3e975f7f7c871c8630a6a915f505e8b168c82d5665ef13",
          "withoutMetadata": "2fa5a3bfe1ae715a2695aad2a1fdda65dd5f2dfe346a8af0822d82b296b7bc1b",
          "linkedWithoutMetadata": "2fa5a3bfe1ae715a2695aad2a1fdda65dd5f2dfe346a8af0822d82b296b7bc1b"
        },
        "inherit": [
          "@openzeppelin/contracts/security/ReentrancyGuard.sol:ReentrancyGuard",
          "@openzeppelin/contracts/access/Ownable.sol:Ownable",
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [],
        "methods": [
          "(address,address,address,uint256)",
          "createPreSale((uint256,uint256,uint256))",
          "sale()",
          "getCanIdoAmount(address)",
          "bindReffer(address)",
          "userBalance(address)",
          "userRewardBalance(address)",
          "userWithdraw()",
          "teamWithdraw(address)",
          "setUserWithdrawTime(uint256)",
          "setInviteMin(uint256)",
          "setPerMaxBuyUsdt(uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Presale",
            "src": "contracts/Presale.sol:46"
          },
          {
            "kind": "state-variable-assignment",
            "name": "perMaxBuyUsdt",
            "src": "contracts/Presale.sol:15"
          },
          {
            "kind": "state-variable-assignment",
            "name": "inviteMin",
            "src": "contracts/Presale.sol:31"
          },
          {
            "kind": "state-variable-assignment",
            "name": "maxSale",
            "src": "contracts/Presale.sol:33"
          },
          {
            "kind": "state-variable-assignment",
            "name": "rewardLevel",
            "src": "contracts/Presale.sol:36"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Ownable",
              "src": "@openzeppelin/contracts/access/Ownable.sol:21"
            },
            {
              "label": "_status",
              "offset": 0,
              "slot": "1",
              "type": "t_uint256",
              "contract": "ReentrancyGuard",
              "src": "@openzeppelin/contracts/security/ReentrancyGuard.sol:37"
            },
            {
              "label": "userWithdrawTime",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "Presale",
              "src": "contracts/Presale.sol:13"
            },
            {
              "label": "perMaxBuyUsdt",
              "offset": 0,
              "slot": "3",
              "type": "t_uint256",
              "contract": "Presale",
              "src": "contracts/Presale.sol:15"
            },
            {
              "label": "teamAddress",
              "offset": 0,
              "slot": "4",
              "type": "t_address",
              "contract": "Presale",
              "src": "contracts/Presale.sol:16"
            },
            {
              "label": "saleToken",
              "offset": 0,
              "slot": "5",
              "type": "t_address",
              "contract": "Presale",
              "src": "contracts/Presale.sol:17"
            },
            {
              "label": "usdtToken",
              "offset": 0,
              "slot": "6",
              "type": "t_address",
              "contract": "Presale",
              "src": "contracts/Presale.sol:18"
            },
            {
              "label": "goldTokenAddress",
              "offset": 0,
              "slot": "7",
              "type": "t_address",
              "contract": "Presale",
              "src": "contracts/Presale.sol:19"
            },
            {
              "label": "balances",
              "offset": 0,
              "slot": "8",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "Presale",
              "src": "contracts/Presale.sol:20"
            },
            {
              "label": "userBuyTotalUsdt",
              "offset": 0,
              "slot": "9",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "Presale",
              "src": "contracts/Presale.sol:21"
            },
            {
              "label": "rewardBalances",
              "offset": 0,
              "slot": "10",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "Presale",
              "src": "contracts/Presale.sol:22"
            },
            {
              "label": "reffers",
              "offset": 0,
              "slot": "11",
              "type": "t_mapping(t_address,t_address)",
              "contract": "Presale",
              "src": "contracts/Presale.sol:23"
            },
            {
              "label": "refferNumber",
              "offset": 0,
              "slot": "12",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "Presale",
              "src": "contracts/Presale.sol:24"
            },
            {
              "label": "teamRefferNumber",
              "offset": 0,
              "slot": "13",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "Presale",
              "src": "contracts/Presale.sol:25"
            },
            {
              "label": "firstIdo",
              "offset": 0,
              "slot": "14",
              "type": "t_mapping(t_address,t_bool)",
              "contract": "Presale",
              "src": "contracts/Presale.sol:26"
            },
            {
              "label": "totalIdoUSDT",
              "offset": 0,
              "slot": "15",
              "type": "t_uint256",
              "contract": "Presale",
              "src": "contracts/Presale.sol:27"
            },
            {
              "label": "totalIdoUser",
              "offset": 0,
              "slot": "16",
              "type": "t_uint256",
              "contract": "Presale",
              "src": "contracts/Presale.sol:28"
            },
            {
              "label": "totalSale",
              "offset": 0,
              "slot": "17",
              "type": "t_uint256",
              "contract": "Presale",
              "src": "contracts/Presale.sol:29"
            },
            {
              "label": "inviteMin",
              "offset": 0,
              "slot": "18",
              "type": "t_uint256",
              "contract": "Presale",
              "src": "contracts/Presale.sol:31"
            },
            {
              "label": "maxSale",
              "offset": 0,
              "slot": "19",
              "type": "t_uint256",
              "contract": "Presale",
              "src": "contracts/Presale.sol:33"
            },
            {
              "label": "isCloseSale",
              "offset": 0,
              "slot": "20",
              "type": "t_bool",
              "contract": "Presale",
              "src": "contracts/Presale.sol:34"
            },
            {
              "label": "rewardLevel",
              "offset": 0,
              "slot": "21",
              "type": "t_array(t_uint256)dyn_storage",
              "contract": "Presale",
              "src": "contracts/Presale.sol:36"
            },
            {
              "label": "presaleInfo",
              "offset": 0,
              "slot": "22",
              "type": "t_struct(PresaleInfo)2392_storage",
              "contract": "Presale",
              "src": "contracts/Presale.sol:44"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_uint256)dyn_storage": {
              "label": "uint256[]",
              "numberOfBytes": "32"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_mapping(t_address,t_address)": {
              "label": "mapping(address => address)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_struct(PresaleInfo)2392_storage": {
              "label": "struct Presale.PresaleInfo",
              "members": [
                {
                  "label": "startTime",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "endTime",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "price",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "2"
                }
              ],
              "numberOfBytes": "96"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.21"
      },
      "contracts/Staking.sol:IRejuvenate": {
        "src": "contracts/Staking.sol:9",
        "inherit": [],
        "libraries": [],
        "methods": [
          "mint(address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.21"
      },
      "contracts/Staking.sol:Staking": {
        "src": "contracts/Staking.sol:13",
        "version": {
          "withMetadata": "d4a43fbe5f8d6347383f0680dba0a94146fceda61d8f28fb0ed926fda6eca5bc",
          "withoutMetadata": "8e35a11dc4a30aced1c096dd5db7f6424d19b292b732012b8d44d054f9cea466",
          "linkedWithoutMetadata": "8e35a11dc4a30aced1c096dd5db7f6424d19b292b732012b8d44d054f9cea466"
        },
        "inherit": [
          "@openzeppelin/contracts/security/ReentrancyGuard.sol:ReentrancyGuard",
          "@openzeppelin/contracts/access/Ownable.sol:Ownable",
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [],
        "methods": [
          "()",
          "changeRewardsPerBlock(uint256)",
          "rewardPerToken()",
          "earned(address)",
          "stake(uint256)",
          "unstake(uint256)",
          "claimRewards()",
          "pause()",
          "unpause()",
          "inCaseTokensGetStuck(address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Staking",
            "src": "contracts/Staking.sol:33"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Ownable",
              "src": "@openzeppelin/contracts/access/Ownable.sol:21"
            },
            {
              "label": "_status",
              "offset": 0,
              "slot": "1",
              "type": "t_uint256",
              "contract": "ReentrancyGuard",
              "src": "@openzeppelin/contracts/security/ReentrancyGuard.sol:37"
            },
            {
              "label": "paused",
              "offset": 0,
              "slot": "2",
              "type": "t_bool",
              "contract": "Staking",
              "src": "contracts/Staking.sol:14"
            },
            {
              "label": "_treasury",
              "offset": 1,
              "slot": "2",
              "type": "t_address",
              "contract": "Staking",
              "src": "contracts/Staking.sol:15"
            },
            {
              "label": "token",
              "offset": 0,
              "slot": "3",
              "type": "t_address",
              "contract": "Staking",
              "src": "contracts/Staking.sol:17"
            },
            {
              "label": "rewardRate",
              "offset": 0,
              "slot": "4",
              "type": "t_uint256",
              "contract": "Staking",
              "src": "contracts/Staking.sol:19"
            },
            {
              "label": "_lastUpdateBlock",
              "offset": 0,
              "slot": "5",
              "type": "t_uint256",
              "contract": "Staking",
              "src": "contracts/Staking.sol:20"
            },
            {
              "label": "_rewardsPerToken",
              "offset": 0,
              "slot": "6",
              "type": "t_uint256",
              "contract": "Staking",
              "src": "contracts/Staking.sol:21"
            },
            {
              "label": "data",
              "offset": 0,
              "slot": "7",
              "type": "t_array(t_struct(StakingData)3375_storage)dyn_storage",
              "contract": "Staking",
              "src": "contracts/Staking.sol:22"
            },
            {
              "label": "_userRewardsPerToken",
              "offset": 0,
              "slot": "8",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "Staking",
              "src": "contracts/Staking.sol:24"
            },
            {
              "label": "_rewards",
              "offset": 0,
              "slot": "9",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "Staking",
              "src": "contracts/Staking.sol:25"
            },
            {
              "label": "totalStaked",
              "offset": 0,
              "slot": "10",
              "type": "t_uint256",
              "contract": "Staking",
              "src": "contracts/Staking.sol:27"
            },
            {
              "label": "_balances",
              "offset": 0,
              "slot": "11",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "Staking",
              "src": "contracts/Staking.sol:28"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_struct(StakingData)3375_storage)dyn_storage": {
              "label": "struct StakingData[]",
              "numberOfBytes": "32"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_struct(StakingData)3375_storage": {
              "label": "struct StakingData",
              "members": [
                {
                  "label": "block",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "staked",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "1"
                }
              ],
              "numberOfBytes": "64"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.21"
      }
    },
    {
      "contracts/FirstDao.sol:FistDao": {
        "src": "contracts/FirstDao.sol:127",
        "version": {
          "withMetadata": "87594bf7d015e41aaf777bc0dc62e9e8a3685546fcfa065eb87291ef7f3f16f4",
          "withoutMetadata": "5bdb2538a3ba33172d93851875dfca20475ce01973348f896430788ab9d8314a",
          "linkedWithoutMetadata": "5bdb2538a3ba33172d93851875dfca20475ce01973348f896430788ab9d8314a"
        },
        "inherit": [
          "contracts/FirstDao.sol:Ownable",
          "contracts/FirstDao.sol:IERC20"
        ],
        "libraries": [
          "contracts/FirstDao.sol:SafeMath"
        ],
        "methods": [
          "(string,string)",
          "()",
          "initialize(address,address,address,address)",
          "transferEvent(address,address,uint256)",
          "feeState()",
          "getIsApproved(address)",
          "searchExcludedFromFeeAccounts(address)",
          "getDefaultBalance()",
          "insertIntoExcludedFromFeeAccounts(address[])",
          "deleteFromExcludedFromFeeAccounts(address[])",
          "claim(address,uint256)",
          "name()",
          "symbol()",
          "decimals()",
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "transferFrom(address,address,uint256)",
          "approve(address,uint256)",
          "allowance(address,address)",
          "increaseAllowance(address,uint256)",
          "decreaseAllowance(address,uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "FistDao",
            "src": "contracts/FirstDao.sol:159"
          },
          {
            "kind": "state-variable-assignment",
            "name": "_decimals",
            "src": "contracts/FirstDao.sol:132"
          },
          {
            "kind": "state-variable-assignment",
            "name": "_totalSupply",
            "src": "contracts/FirstDao.sol:133"
          },
          {
            "kind": "state-variable-assignment",
            "name": "_feeTax",
            "src": "contracts/FirstDao.sol:138"
          },
          {
            "kind": "state-variable-assignment",
            "name": "_feeMining",
            "src": "contracts/FirstDao.sol:139"
          },
          {
            "kind": "state-variable-assignment",
            "name": "_feeLiquidity",
            "src": "contracts/FirstDao.sol:140"
          },
          {
            "kind": "state-variable-assignment",
            "name": "_feeDivisor",
            "src": "contracts/FirstDao.sol:141"
          },
          {
            "kind": "state-variable-assignment",
            "name": "_removeAllFee",
            "src": "contracts/FirstDao.sol:143"
          },
          {
            "kind": "state-variable-assignment",
            "name": "_defaultBalance",
            "src": "contracts/FirstDao.sol:150"
          },
          {
            "kind": "state-variable-assignment",
            "name": "_defaultAmount",
            "src": "contracts/FirstDao.sol:151"
          },
          {
            "kind": "state-variable-assignment",
            "name": "_initialized111",
            "src": "contracts/FirstDao.sol:156"
          },
          {
            "kind": "state-variable-assignment",
            "name": "_reentry",
            "src": "contracts/FirstDao.sol:157"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Ownable",
              "src": "contracts/FirstDao.sol:58"
            },
            {
              "label": "_previousOwner",
              "offset": 0,
              "slot": "1",
              "type": "t_address",
              "contract": "Ownable",
              "src": "contracts/FirstDao.sol:59"
            },
            {
              "label": "_switchDate",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "Ownable",
              "src": "contracts/FirstDao.sol:60"
            },
            {
              "label": "_name",
              "offset": 0,
              "slot": "3",
              "type": "t_string_storage",
              "contract": "FistDao",
              "src": "contracts/FirstDao.sol:130"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "4",
              "type": "t_string_storage",
              "contract": "FistDao",
              "src": "contracts/FirstDao.sol:131"
            },
            {
              "label": "_decimals",
              "offset": 0,
              "slot": "5",
              "type": "t_uint8",
              "contract": "FistDao",
              "src": "contracts/FirstDao.sol:132"
            },
            {
              "label": "_totalSupply",
              "offset": 0,
              "slot": "6",
              "type": "t_uint256",
              "contract": "FistDao",
              "src": "contracts/FirstDao.sol:133"
            },
            {
              "label": "_balances",
              "offset": 0,
              "slot": "7",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "FistDao",
              "src": "contracts/FirstDao.sol:134"
            },
            {
              "label": "_allowances",
              "offset": 0,
              "slot": "8",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "FistDao",
              "src": "contracts/FirstDao.sol:135"
            },
            {
              "label": "_isApproved",
              "offset": 0,
              "slot": "9",
              "type": "t_mapping(t_address,t_bool)",
              "contract": "FistDao",
              "src": "contracts/FirstDao.sol:136"
            },
            {
              "label": "_feeTax",
              "offset": 0,
              "slot": "10",
              "type": "t_uint256",
              "contract": "FistDao",
              "src": "contracts/FirstDao.sol:138"
            },
            {
              "label": "_feeMining",
              "offset": 0,
              "slot": "11",
              "type": "t_uint256",
              "contract": "FistDao",
              "src": "contracts/FirstDao.sol:139"
            },
            {
              "label": "_feeLiquidity",
              "offset": 0,
              "slot": "12",
              "type": "t_uint256",
              "contract": "FistDao",
              "src": "contracts/FirstDao.sol:140"
            },
            {
              "label": "_feeDivisor",
              "offset": 0,
              "slot": "13",
              "type": "t_uint256",
              "contract": "FistDao",
              "src": "contracts/FirstDao.sol:141"
            },
            {
              "label": "_removeAllFee",
              "offset": 0,
              "slot": "14",
              "type": "t_bool",
              "contract": "FistDao",
              "src": "contracts/FirstDao.sol:143"
            },
            {
              "label": "_core",
              "offset": 1,
              "slot": "14",
              "type": "t_address",
              "contract": "FistDao",
              "src": "contracts/FirstDao.sol:145"
            },
            {
              "label": "_taxReceiver",
              "offset": 0,
              "slot": "15",
              "type": "t_address",
              "contract": "FistDao",
              "src": "contracts/FirstDao.sol:146"
            },
            {
              "label": "_miningPool",
              "offset": 0,
              "slot": "16",
              "type": "t_address",
              "contract": "FistDao",
              "src": "contracts/FirstDao.sol:147"
            },
            {
              "label": "_liquidityPool",
              "offset": 0,
              "slot": "17",
              "type": "t_address",
              "contract": "FistDao",
              "src": "contracts/FirstDao.sol:148"
            },
            {
              "label": "_defaultBalance",
              "offset": 0,
              "slot": "18",
              "type": "t_uint256",
              "contract": "FistDao",
              "src": "contracts/FirstDao.sol:150"
            },
            {
              "label": "_defaultAmount",
              "offset": 0,
              "slot": "19",
              "type": "t_uint256",
              "contract": "FistDao",
              "src": "contracts/FirstDao.sol:151"
            },
            {
              "label": "_isExcludedFromFee",
              "offset": 0,
              "slot": "20",
              "type": "t_mapping(t_address,t_bool)",
              "contract": "FistDao",
              "src": "contracts/FirstDao.sol:153"
            },
            {
              "label": "_excludedFromFeeAccounts",
              "offset": 0,
              "slot": "21",
              "type": "t_array(t_address)dyn_storage",
              "contract": "FistDao",
              "src": "contracts/FirstDao.sol:154"
            },
            {
              "label": "_initialized111",
              "offset": 0,
              "slot": "22",
              "type": "t_bool",
              "contract": "FistDao",
              "src": "contracts/FirstDao.sol:156"
            },
            {
              "label": "_reentry",
              "offset": 0,
              "slot": "23",
              "type": "t_uint256",
              "contract": "FistDao",
              "src": "contracts/FirstDao.sol:157"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_address)dyn_storage": {
              "label": "address[]",
              "numberOfBytes": "32"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint8": {
              "label": "uint8",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.21"
      },
      "contracts/FirstDao.sol:ICore": {
        "src": "contracts/FirstDao.sol:119",
        "inherit": [],
        "libraries": [],
        "methods": [
          "getPairAddress()",
          "airdrop()",
          "safety(address,address)",
          "start()",
          "end()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.21"
      },
      "contracts/FirstDao.sol:IERC20": {
        "src": "contracts/FirstDao.sol:8",
        "inherit": [],
        "libraries": [],
        "methods": [
          "name()",
          "symbol()",
          "decimals()",
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "transferFrom(address,address,uint256)",
          "approve(address,uint256)",
          "allowance(address,address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.21"
      },
      "contracts/FirstDao.sol:IFactory": {
        "src": "contracts/FirstDao.sol:91",
        "inherit": [],
        "libraries": [],
        "methods": [
          "createPair(address,address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.21"
      },
      "contracts/FirstDao.sol:IRouter01": {
        "src": "contracts/FirstDao.sol:95",
        "inherit": [],
        "libraries": [],
        "methods": [
          "factory()",
          "addLiquidity(address,address,uint256,uint256,uint256,uint256,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.21"
      },
      "contracts/FirstDao.sol:IRouter02": {
        "src": "contracts/FirstDao.sol:109",
        "inherit": [
          "contracts/FirstDao.sol:IRouter01"
        ],
        "libraries": [],
        "methods": [
          "swapExactTokensForTokensSupportingFeeOnTransferTokens(uint256,uint256,address[],address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.21"
      },
      "contracts/FirstDao.sol:Ownable": {
        "src": "contracts/FirstDao.sol:57",
        "inherit": [],
        "libraries": [],
        "methods": [
          "owner()",
          "switchDate()",
          "transferOwnership(uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Ownable",
            "src": "contracts/FirstDao.sol:63"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Ownable",
              "src": "contracts/FirstDao.sol:58"
            },
            {
              "label": "_previousOwner",
              "offset": 0,
              "slot": "1",
              "type": "t_address",
              "contract": "Ownable",
              "src": "contracts/FirstDao.sol:59"
            },
            {
              "label": "_switchDate",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "Ownable",
              "src": "contracts/FirstDao.sol:60"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.21"
      },
      "contracts/FirstDao.sol:SafeMath": {
        "src": "contracts/FirstDao.sol:22",
        "version": {
          "withMetadata": "95eb3df1bd62a62b1bf87150f7314053125cc709ed6eb26f9bf2a30d8fc55e32",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.21"
      }
    },
    {
      "contracts/RichHusky.sol:Checker": {
        "src": "contracts/RichHusky.sol:520",
        "version": {
          "withMetadata": "17e1cf10fdffcda321c1a1f59d2b06178394724b4d8ad9b035a718122fed8a52",
          "withoutMetadata": "0faf6ca500781d04501ba7e4cf9138e35957321419c6ca29798480c22b3cc5cd",
          "linkedWithoutMetadata": "0faf6ca500781d04501ba7e4cf9138e35957321419c6ca29798480c22b3cc5cd"
        },
        "inherit": [],
        "libraries": [],
        "methods": [
          "isValid(address,address,address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.21"
      },
      "contracts/RichHusky.sol:Context": {
        "src": "contracts/RichHusky.sol:27",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.21"
      },
      "contracts/RichHusky.sol:ERC20": {
        "src": "contracts/RichHusky.sol:162",
        "version": {
          "withMetadata": "e092e43bc9c3243b7138ce015fa92d358fa66a764079145cfe1339f160fd055e",
          "withoutMetadata": "e248eda4094a79267c1d78eb85fb3a082e2ba4d153192b2644d6357dbed158f3",
          "linkedWithoutMetadata": "e248eda4094a79267c1d78eb85fb3a082e2ba4d153192b2644d6357dbed158f3"
        },
        "inherit": [
          "contracts/RichHusky.sol:IERC20Metadata",
          "contracts/RichHusky.sol:IERC20",
          "contracts/RichHusky.sol:Context"
        ],
        "libraries": [],
        "methods": [
          "(string,string)",
          "name()",
          "symbol()",
          "decimals()",
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)",
          "increaseAllowance(address,uint256)",
          "decreaseAllowance(address,uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ERC20",
            "src": "contracts/RichHusky.sol:181"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_balances",
              "offset": 0,
              "slot": "0",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC20",
              "src": "contracts/RichHusky.sol:163"
            },
            {
              "label": "_allowances",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "ERC20",
              "src": "contracts/RichHusky.sol:165"
            },
            {
              "label": "_totalSupply",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "ERC20",
              "src": "contracts/RichHusky.sol:167"
            },
            {
              "label": "_name",
              "offset": 0,
              "slot": "3",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "contracts/RichHusky.sol:169"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "4",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "contracts/RichHusky.sol:170"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.21"
      },
      "contracts/RichHusky.sol:IERC20": {
        "src": "contracts/RichHusky.sol:40",
        "inherit": [],
        "libraries": [],
        "methods": [
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.21"
      },
      "contracts/RichHusky.sol:IERC20Metadata": {
        "src": "contracts/RichHusky.sol:120",
        "inherit": [
          "contracts/RichHusky.sol:IERC20"
        ],
        "libraries": [],
        "methods": [
          "name()",
          "symbol()",
          "decimals()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.21"
      },
      "contracts/RichHusky.sol:IFactory": {
        "src": "contracts/RichHusky.sol:535",
        "inherit": [],
        "libraries": [],
        "methods": [
          "createPair(address,address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.21"
      },
      "contracts/RichHusky.sol:IGasToken": {
        "src": "contracts/RichHusky.sol:539",
        "inherit": [],
        "libraries": [],
        "methods": [
          "free(uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.21"
      },
      "contracts/RichHusky.sol:RichHusky": {
        "src": "contracts/RichHusky.sol:543",
        "version": {
          "withMetadata": "ce802161ba5ffecece3a7488fb3a07a35d8f78edf3674187d3eb27cc30777604",
          "withoutMetadata": "7c4ce62a347a52dc2685dbb41f6d968bb51e7d6abb10665abf0c7d7699da0d36",
          "linkedWithoutMetadata": "7c4ce62a347a52dc2685dbb41f6d968bb51e7d6abb10665abf0c7d7699da0d36"
        },
        "inherit": [
          "contracts/RichHusky.sol:ERC20",
          "contracts/RichHusky.sol:IERC20Metadata",
          "contracts/RichHusky.sol:IERC20",
          "contracts/RichHusky.sol:Context"
        ],
        "libraries": [
          "contracts/RichHusky.sol:Checker"
        ],
        "methods": [
          "(address)",
          "mint(address,uint256)",
          "updateAirdropAmount(uint256)",
          "withdrawFee(address,uint256)",
          "airdrop(address[],uint256)",
          "addBetaUsers(address[])",
          "removeBetaUsers(address[])",
          "multiCall(address[],bytes[])"
        ],
        "linkReferences": [
          {
            "src": "contracts/RichHusky.sol",
            "name": "Checker",
            "length": 20,
            "start": 5176,
            "placeholder": "__$1cb883ae52507a2d00adae80c79f632cb4$__"
          }
        ],
        "errors": [
          {
            "kind": "constructor",
            "contract": "RichHusky",
            "src": "contracts/RichHusky.sol:554"
          },
          {
            "kind": "state-variable-immutable",
            "name": "pancakeFactory",
            "src": "contracts/RichHusky.sol:549"
          },
          {
            "kind": "state-variable-immutable",
            "name": "WBNB",
            "src": "contracts/RichHusky.sol:550"
          },
          {
            "kind": "state-variable-immutable",
            "name": "GasToken",
            "src": "contracts/RichHusky.sol:552"
          },
          {
            "kind": "external-library-linking",
            "name": "Checker",
            "src": "contracts/RichHusky.sol"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_balances",
              "offset": 0,
              "slot": "0",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC20",
              "src": "contracts/RichHusky.sol:163"
            },
            {
              "label": "_allowances",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "ERC20",
              "src": "contracts/RichHusky.sol:165"
            },
            {
              "label": "_totalSupply",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "ERC20",
              "src": "contracts/RichHusky.sol:167"
            },
            {
              "label": "_name",
              "offset": 0,
              "slot": "3",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "contracts/RichHusky.sol:169"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "4",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "contracts/RichHusky.sol:170"
            },
            {
              "label": "dev",
              "offset": 0,
              "slot": "5",
              "type": "t_address",
              "contract": "RichHusky",
              "src": "contracts/RichHusky.sol:544"
            },
            {
              "label": "airdropAmount",
              "offset": 0,
              "slot": "6",
              "type": "t_uint256",
              "contract": "RichHusky",
              "src": "contracts/RichHusky.sol:545"
            },
            {
              "label": "betaUsers",
              "offset": 0,
              "slot": "7",
              "type": "t_mapping(t_address,t_bool)",
              "contract": "RichHusky",
              "src": "contracts/RichHusky.sol:546"
            },
            {
              "label": "pair",
              "offset": 0,
              "slot": "8",
              "type": "t_address",
              "contract": "RichHusky",
              "src": "contracts/RichHusky.sol:547"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.21"
      }
    },
    {
      "contracts/IFiles.sol:Address": {
        "src": "contracts/IFiles.sol:147",
        "version": {
          "withMetadata": "73f3d745b82ff92d492794f39ddc131795315255895e196d918dc1260c813488",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.21"
      },
      "contracts/IFiles.sol:Context": {
        "src": "contracts/IFiles.sol:135",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.21"
      },
      "contracts/IFiles.sol:IBEP20": {
        "src": "contracts/IFiles.sol:9",
        "inherit": [],
        "libraries": [],
        "methods": [
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.21"
      },
      "contracts/IFiles.sol:IPancakeFactory": {
        "src": "contracts/IFiles.sol:327",
        "inherit": [],
        "libraries": [],
        "methods": [
          "feeTo()",
          "feeToSetter()",
          "getPair(address,address)",
          "allPairs(uint256)",
          "allPairsLength()",
          "createPair(address,address)",
          "setFeeTo(address)",
          "setFeeToSetter(address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.21"
      },
      "contracts/IFiles.sol:IPancakePair": {
        "src": "contracts/IFiles.sol:357",
        "inherit": [],
        "libraries": [],
        "methods": [
          "name()",
          "symbol()",
          "decimals()",
          "totalSupply()",
          "balanceOf(address)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transfer(address,uint256)",
          "transferFrom(address,address,uint256)",
          "DOMAIN_SEPARATOR()",
          "PERMIT_TYPEHASH()",
          "nonces(address)",
          "permit(address,address,uint256,uint256,uint8,bytes32,bytes32)",
          "MINIMUM_LIQUIDITY()",
          "factory()",
          "token0()",
          "token1()",
          "getReserves()",
          "price0CumulativeLast()",
          "price1CumulativeLast()",
          "kLast()",
          "mint(address)",
          "burn(address)",
          "swap(uint256,uint256,address,bytes)",
          "skim(address)",
          "sync()",
          "initialize(address,address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.21"
      },
      "contracts/IFiles.sol:IPancakeRouter01": {
        "src": "contracts/IFiles.sol:466",
        "inherit": [],
        "libraries": [],
        "methods": [
          "factory()",
          "WETH()",
          "addLiquidity(address,address,uint256,uint256,uint256,uint256,address,uint256)",
          "addLiquidityETH(address,uint256,uint256,uint256,address,uint256)",
          "removeLiquidity(address,address,uint256,uint256,uint256,address,uint256)",
          "removeLiquidityETH(address,uint256,uint256,uint256,address,uint256)",
          "removeLiquidityWithPermit(address,address,uint256,uint256,uint256,address,uint256,bool,uint8,bytes32,bytes32)",
          "removeLiquidityETHWithPermit(address,uint256,uint256,uint256,address,uint256,bool,uint8,bytes32,bytes32)",
          "swapExactTokensForTokens(uint256,uint256,address[],address,uint256)",
          "swapTokensForExactTokens(uint256,uint256,address[],address,uint256)",
          "swapExactETHForTokens(uint256,address[],address,uint256)",
          "swapTokensForExactETH(uint256,uint256,address[],address,uint256)",
          "swapExactTokensForETH(uint256,uint256,address[],address,uint256)",
          "swapETHForExactTokens(uint256,address[],address,uint256)",
          "quote(uint256,uint256,uint256)",
          "getAmountOut(uint256,uint256,uint256)",
          "getAmountIn(uint256,uint256,uint256)",
          "getAmountsOut(uint256,address[])",
          "getAmountsIn(uint256,address[])"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.21"
      },
      "contracts/IFiles.sol:IPancakeRouter02": {
        "src": "contracts/IFiles.sol:626",
        "inherit": [
          "contracts/IFiles.sol:IPancakeRouter01"
        ],
        "libraries": [],
        "methods": [
          "removeLiquidityETHSupportingFeeOnTransferTokens(address,uint256,uint256,uint256,address,uint256)",
          "removeLiquidityETHWithPermitSupportingFeeOnTransferTokens(address,uint256,uint256,uint256,address,uint256,bool,uint8,bytes32,bytes32)",
          "swapExactTokensForTokensSupportingFeeOnTransferTokens(uint256,uint256,address[],address,uint256)",
          "swapExactETHForTokensSupportingFeeOnTransferTokens(uint256,address[],address,uint256)",
          "swapExactTokensForETHSupportingFeeOnTransferTokens(uint256,uint256,address[],address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.21"
      },
      "contracts/IFiles.sol:IWBNB": {
        "src": "contracts/IFiles.sol:38",
        "inherit": [],
        "libraries": [],
        "methods": [
          "name()",
          "symbol()",
          "decimals()",
          "balanceOf(address)",
          "allowance(address,address)",
          "()",
          "deposit()",
          "withdraw(uint256)",
          "totalSupply()",
          "approve(address,uint256)",
          "transfer(address,uint256)",
          "transferFrom(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.21"
      },
      "contracts/IFiles.sol:Initializable": {
        "src": "contracts/IFiles.sol:249",
        "version": {
          "withMetadata": "ba793f874980ba8826e0f77e588821b7a373c942b97ebcd7e4e42f378e00e824",
          "withoutMetadata": "ac0db523ddc3e330f735df7b3b0b24460531c71290a891170e840f8f67d5ff6b",
          "linkedWithoutMetadata": "ac0db523ddc3e330f735df7b3b0b24460531c71290a891170e840f8f67d5ff6b"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "contracts/IFiles.sol:251"
            },
            {
              "label": "initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "contracts/IFiles.sol:252"
            },
            {
              "label": "______gap",
              "offset": 0,
              "slot": "1",
              "type": "t_array(t_uint256)50_storage",
              "contract": "Initializable",
              "src": "contracts/IFiles.sol:283"
            }
          ],
          "types": {
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]",
              "numberOfBytes": "1600"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.21"
      },
      "contracts/IFiles.sol:Ownable": {
        "src": "contracts/IFiles.sol:286",
        "version": {
          "withMetadata": "9b6e83ec071c913ea8078938bf6c8e47f6ce697f181f2ebf31dc4937807eb386",
          "withoutMetadata": "a3dd09084d5d3377afaa5e637593b425fb1172db63a48c2f62428555638775f8",
          "linkedWithoutMetadata": "a3dd09084d5d3377afaa5e637593b425fb1172db63a48c2f62428555638775f8"
        },
        "inherit": [
          "contracts/IFiles.sol:Initializable",
          "contracts/IFiles.sol:Context"
        ],
        "libraries": [],
        "methods": [
          "()",
          "initOwner(address)",
          "owner()",
          "renounceOwnership()",
          "transferOwnership(address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "contracts/IFiles.sol:251"
            },
            {
              "label": "initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "contracts/IFiles.sol:252"
            },
            {
              "label": "______gap",
              "offset": 0,
              "slot": "1",
              "type": "t_array(t_uint256)50_storage",
              "contract": "Initializable",
              "src": "contracts/IFiles.sol:283"
            },
            {
              "label": "_owner",
              "offset": 0,
              "slot": "51",
              "type": "t_address",
              "contract": "Ownable",
              "src": "contracts/IFiles.sol:287"
            },
            {
              "label": "_previousOwner",
              "offset": 0,
              "slot": "52",
              "type": "t_address",
              "contract": "Ownable",
              "src": "contracts/IFiles.sol:288"
            },
            {
              "label": "_lockTime",
              "offset": 0,
              "slot": "53",
              "type": "t_uint256",
              "contract": "Ownable",
              "src": "contracts/IFiles.sol:289"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]",
              "numberOfBytes": "1600"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.21"
      },
      "contracts/IFiles.sol:SafeMath": {
        "src": "contracts/IFiles.sol:68",
        "version": {
          "withMetadata": "6a5db877229c78c84b33e85a297bea1121c6a6195aa310f30cbe69888293c5ae",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.21"
      },
      "contracts/ReentrancyGuard.sol:ReentrancyGuard": {
        "src": "contracts/ReentrancyGuard.sol:5",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ReentrancyGuard",
            "src": "contracts/ReentrancyGuard.sol:12"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_status",
              "offset": 0,
              "slot": "0",
              "type": "t_uint256",
              "contract": "ReentrancyGuard",
              "src": "contracts/ReentrancyGuard.sol:10"
            }
          ],
          "types": {
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.21"
      },
      "contracts/Utils.sol:PancakeLibrary": {
        "src": "contracts/Utils.sol:219",
        "version": {
          "withMetadata": "668337a75717822cd6d73bbd1c50526e84e4af10cd45125b1756676395a2f30c",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [
          "contracts/IFiles.sol:SafeMath"
        ],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.21"
      },
      "contracts/Utils.sol:Utils": {
        "src": "contracts/Utils.sol:6",
        "version": {
          "withMetadata": "a5775bd7ff330a5dfa7ddaef645bcc8fbccdcd3c38fbc9fc1755e3e3a9a09d47",
          "withoutMetadata": "8ca6da6b824cadf2e1f9c600b5f1381080c8b8d75dddf5423f35e25222daaeda",
          "linkedWithoutMetadata": "8ca6da6b824cadf2e1f9c600b5f1381080c8b8d75dddf5423f35e25222daaeda"
        },
        "inherit": [],
        "libraries": [
          "contracts/IFiles.sol:SafeMath"
        ],
        "methods": [
          "calculateBNBReward(uint256,uint256,uint256,uint256)",
          "calculateTopUpClaim(uint256,uint256,uint256,uint256)",
          "swapTokensForEth(address,uint256)",
          "swapETHForTokens(address,address,uint256)",
          "swapTokensForTokens(address,address,uint256)",
          "getAmountsout(uint256,address)",
          "addLiquidity(address,address,uint256,uint256)",
          "getAntiFlipTaxNo(uint256)",
          "calcReward(uint256,uint256,uint256,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.21"
      }
    },
    {
      "contracts/Proxy.sol:Caller": {
        "src": "contracts/Proxy.sol:80",
        "version": {
          "withMetadata": "9ce8fab2ba2d901a6c6fbf54c47202b7af5e008695fdcdd87dbcbadf457cedf1",
          "withoutMetadata": "d6211a178c252503f87d41bbcceffa66551bde0c0c4b0cc3c5a44a4f489e2c7f",
          "linkedWithoutMetadata": "d6211a178c252503f87d41bbcceffa66551bde0c0c4b0cc3c5a44a4f489e2c7f"
        },
        "inherit": [],
        "libraries": [],
        "methods": [
          "(address)",
          "increase()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Caller",
            "src": "contracts/Proxy.sol:80"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "proxy",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Caller",
              "src": "contracts/Proxy.sol:80"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.21"
      },
      "contracts/Proxy.sol:Proxy": {
        "src": "contracts/Proxy.sol:10",
        "version": {
          "withMetadata": "3f5c5f504c75452b4e66d955826ba95c6546b31eb98ec5ded382c37a5607a2e2",
          "withoutMetadata": "bc7fcd1c64d2f798926ae830c3e369a33c770ea294cd9047d184a8c885a96818",
          "linkedWithoutMetadata": "bc7fcd1c64d2f798926ae830c3e369a33c770ea294cd9047d184a8c885a96818"
        },
        "inherit": [],
        "libraries": [],
        "methods": [
          "(address)",
          "()",
          "()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Proxy",
            "src": "contracts/Proxy.sol:22"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "implementation",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Proxy",
              "src": "contracts/Proxy.sol:13"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.21"
      }
    },
    {
      "contracts/Logic.sol:Logic": {
        "src": "contracts/Logic.sol:9",
        "version": {
          "withMetadata": "087c86b163578853fb1cba09b22843df8f815c95bf2568200ddd8e1dbf167fea",
          "withoutMetadata": "a9feffbc7087e9529577fb0b368171b85b94d25918f43b5d410eb0f186274034",
          "linkedWithoutMetadata": "a9feffbc7087e9529577fb0b368171b85b94d25918f43b5d410eb0f186274034"
        },
        "inherit": [],
        "libraries": [],
        "methods": [
          "increment()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "state-variable-assignment",
            "name": "x",
            "src": "contracts/Logic.sol:13"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "implementation",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Logic",
              "src": "contracts/Logic.sol:9"
            },
            {
              "label": "x",
              "offset": 0,
              "slot": "1",
              "type": "t_uint256",
              "contract": "Logic",
              "src": "contracts/Logic.sol:13"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.21"
      }
    },
    {
      "contracts/Logic.sol:Logic": {
        "src": "contracts/Logic.sol:9",
        "version": {
          "withMetadata": "087c86b163578853fb1cba09b22843df8f815c95bf2568200ddd8e1dbf167fea",
          "withoutMetadata": "a9feffbc7087e9529577fb0b368171b85b94d25918f43b5d410eb0f186274034",
          "linkedWithoutMetadata": "a9feffbc7087e9529577fb0b368171b85b94d25918f43b5d410eb0f186274034"
        },
        "inherit": [],
        "libraries": [],
        "methods": [
          "increment()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "state-variable-assignment",
            "name": "x",
            "src": "contracts/Logic.sol:13"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "implementation",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Logic",
              "src": "contracts/Logic.sol:9"
            },
            {
              "label": "x",
              "offset": 0,
              "slot": "1",
              "type": "t_uint256",
              "contract": "Logic",
              "src": "contracts/Logic.sol:13"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.21"
      }
    },
    {
      "contracts/Proxy.sol:Caller": {
        "src": "contracts/Proxy.sol:80",
        "version": {
          "withMetadata": "9ce8fab2ba2d901a6c6fbf54c47202b7af5e008695fdcdd87dbcbadf457cedf1",
          "withoutMetadata": "d6211a178c252503f87d41bbcceffa66551bde0c0c4b0cc3c5a44a4f489e2c7f",
          "linkedWithoutMetadata": "d6211a178c252503f87d41bbcceffa66551bde0c0c4b0cc3c5a44a4f489e2c7f"
        },
        "inherit": [],
        "libraries": [],
        "methods": [
          "(address)",
          "increase()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Caller",
            "src": "contracts/Proxy.sol:80"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "proxy",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Caller",
              "src": "contracts/Proxy.sol:80"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.21"
      },
      "contracts/Proxy.sol:Proxy": {
        "src": "contracts/Proxy.sol:10",
        "version": {
          "withMetadata": "3f5c5f504c75452b4e66d955826ba95c6546b31eb98ec5ded382c37a5607a2e2",
          "withoutMetadata": "bc7fcd1c64d2f798926ae830c3e369a33c770ea294cd9047d184a8c885a96818",
          "linkedWithoutMetadata": "bc7fcd1c64d2f798926ae830c3e369a33c770ea294cd9047d184a8c885a96818"
        },
        "inherit": [],
        "libraries": [],
        "methods": [
          "(address)",
          "()",
          "()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Proxy",
            "src": "contracts/Proxy.sol:22"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "implementation",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Proxy",
              "src": "contracts/Proxy.sol:13"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.21"
      }
    },
    {
      "@openzeppelin/contracts/access/Ownable.sol:Ownable": {
        "src": "@openzeppelin/contracts/access/Ownable.sol:20",
        "inherit": [
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [],
        "methods": [
          "owner()",
          "renounceOwnership()",
          "transferOwnership(address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Ownable",
            "src": "@openzeppelin/contracts/access/Ownable.sol:28"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Ownable",
              "src": "@openzeppelin/contracts/access/Ownable.sol:21"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.21"
      },
      "@openzeppelin/contracts/security/ReentrancyGuard.sol:ReentrancyGuard": {
        "src": "@openzeppelin/contracts/security/ReentrancyGuard.sol:22",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ReentrancyGuard",
            "src": "@openzeppelin/contracts/security/ReentrancyGuard.sol:39"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_status",
              "offset": 0,
              "slot": "0",
              "type": "t_uint256",
              "contract": "ReentrancyGuard",
              "src": "@openzeppelin/contracts/security/ReentrancyGuard.sol:37"
            }
          ],
          "types": {
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.21"
      },
      "@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20": {
        "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:35",
        "version": {
          "withMetadata": "b653be9ad258ddaafa2304767243ba86eac7156acd9bf1a196bee0fef9b1c3a9",
          "withoutMetadata": "1d55e2dc08aae4fa5bd2ca8ac476f7a2e63bdfa7b0b51d4bd61db8705143a140",
          "linkedWithoutMetadata": "1d55e2dc08aae4fa5bd2ca8ac476f7a2e63bdfa7b0b51d4bd61db8705143a140"
        },
        "inherit": [
          "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol:IERC20Metadata",
          "@openzeppelin/contracts/token/ERC20/IERC20.sol:IERC20",
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [],
        "methods": [
          "(string,string)",
          "name()",
          "symbol()",
          "decimals()",
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)",
          "increaseAllowance(address,uint256)",
          "decreaseAllowance(address,uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ERC20",
            "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:54"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_balances",
              "offset": 0,
              "slot": "0",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:36"
            },
            {
              "label": "_allowances",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:38"
            },
            {
              "label": "_totalSupply",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:40"
            },
            {
              "label": "_name",
              "offset": 0,
              "slot": "3",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:42"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "4",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:43"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.21"
      },
      "@openzeppelin/contracts/token/ERC20/IERC20.sol:IERC20": {
        "src": "@openzeppelin/contracts/token/ERC20/IERC20.sol:9",
        "inherit": [],
        "libraries": [],
        "methods": [
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.21"
      },
      "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol:IERC20Metadata": {
        "src": "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol:13",
        "inherit": [
          "@openzeppelin/contracts/token/ERC20/IERC20.sol:IERC20"
        ],
        "libraries": [],
        "methods": [
          "name()",
          "symbol()",
          "decimals()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.21"
      },
      "@openzeppelin/contracts/token/ERC20/extensions/draft-IERC20Permit.sol:IERC20Permit": {
        "src": "@openzeppelin/contracts/token/ERC20/extensions/draft-IERC20Permit.sol:14",
        "inherit": [],
        "libraries": [],
        "methods": [
          "permit(address,address,uint256,uint256,uint8,bytes32,bytes32)",
          "nonces(address)",
          "DOMAIN_SEPARATOR()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.21"
      },
      "@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol:SafeERC20": {
        "src": "@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol:19",
        "version": {
          "withMetadata": "945db44b71722f915e3e7352ee22f854dfe8000e69eee742d881b64279bb0ad8",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [
          "@openzeppelin/contracts/utils/Address.sol:Address"
        ],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.21"
      },
      "@openzeppelin/contracts/utils/Address.sol:Address": {
        "src": "@openzeppelin/contracts/utils/Address.sol:9",
        "version": {
          "withMetadata": "9401bbf4dc0decc4c739a060967031a16e8de389388d98c32ec11cff440d6513",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [
          {
            "kind": "delegatecall",
            "src": "@openzeppelin/contracts/utils/Address.sol:191"
          },
          {
            "kind": "delegatecall",
            "src": "@openzeppelin/contracts/utils/Address.sol:191"
          }
        ],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.21"
      },
      "@openzeppelin/contracts/utils/Context.sol:Context": {
        "src": "@openzeppelin/contracts/utils/Context.sol:16",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.21"
      },
      "@openzeppelin/contracts/utils/math/Math.sol:Math": {
        "src": "@openzeppelin/contracts/utils/math/Math.sol:9",
        "version": {
          "withMetadata": "f58f3d1d6b53395057afc8a5e1edcbfcd81cdec0dfcf6b1290c8c2368b975278",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.21"
      },
      "@openzeppelin/contracts/utils/math/SafeMath.sol:SafeMath": {
        "src": "@openzeppelin/contracts/utils/math/SafeMath.sol:16",
        "version": {
          "withMetadata": "4167346fe154a63f59e72262dbca9ccb097c97b61ec5dfe163259378386d2ba4",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.21"
      },
      "contracts/Presale.sol:IGoldToken": {
        "src": "contracts/Presale.sol:8",
        "inherit": [],
        "libraries": [],
        "methods": [
          "mint(address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.21"
      },
      "contracts/Presale.sol:Presale": {
        "src": "contracts/Presale.sol:12",
        "version": {
          "withMetadata": "55de4f41aa2ae4e88c3e975f7f7c871c8630a6a915f505e8b168c82d5665ef13",
          "withoutMetadata": "2fa5a3bfe1ae715a2695aad2a1fdda65dd5f2dfe346a8af0822d82b296b7bc1b",
          "linkedWithoutMetadata": "2fa5a3bfe1ae715a2695aad2a1fdda65dd5f2dfe346a8af0822d82b296b7bc1b"
        },
        "inherit": [
          "@openzeppelin/contracts/security/ReentrancyGuard.sol:ReentrancyGuard",
          "@openzeppelin/contracts/access/Ownable.sol:Ownable",
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [],
        "methods": [
          "(address,address,address,uint256)",
          "createPreSale((uint256,uint256,uint256))",
          "sale()",
          "getCanIdoAmount(address)",
          "bindReffer(address)",
          "userBalance(address)",
          "userRewardBalance(address)",
          "userWithdraw()",
          "teamWithdraw(address)",
          "setUserWithdrawTime(uint256)",
          "setInviteMin(uint256)",
          "setPerMaxBuyUsdt(uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Presale",
            "src": "contracts/Presale.sol:46"
          },
          {
            "kind": "state-variable-assignment",
            "name": "perMaxBuyUsdt",
            "src": "contracts/Presale.sol:15"
          },
          {
            "kind": "state-variable-assignment",
            "name": "inviteMin",
            "src": "contracts/Presale.sol:31"
          },
          {
            "kind": "state-variable-assignment",
            "name": "maxSale",
            "src": "contracts/Presale.sol:33"
          },
          {
            "kind": "state-variable-assignment",
            "name": "rewardLevel",
            "src": "contracts/Presale.sol:36"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Ownable",
              "src": "@openzeppelin/contracts/access/Ownable.sol:21"
            },
            {
              "label": "_status",
              "offset": 0,
              "slot": "1",
              "type": "t_uint256",
              "contract": "ReentrancyGuard",
              "src": "@openzeppelin/contracts/security/ReentrancyGuard.sol:37"
            },
            {
              "label": "userWithdrawTime",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "Presale",
              "src": "contracts/Presale.sol:13"
            },
            {
              "label": "perMaxBuyUsdt",
              "offset": 0,
              "slot": "3",
              "type": "t_uint256",
              "contract": "Presale",
              "src": "contracts/Presale.sol:15"
            },
            {
              "label": "teamAddress",
              "offset": 0,
              "slot": "4",
              "type": "t_address",
              "contract": "Presale",
              "src": "contracts/Presale.sol:16"
            },
            {
              "label": "saleToken",
              "offset": 0,
              "slot": "5",
              "type": "t_address",
              "contract": "Presale",
              "src": "contracts/Presale.sol:17"
            },
            {
              "label": "usdtToken",
              "offset": 0,
              "slot": "6",
              "type": "t_address",
              "contract": "Presale",
              "src": "contracts/Presale.sol:18"
            },
            {
              "label": "goldTokenAddress",
              "offset": 0,
              "slot": "7",
              "type": "t_address",
              "contract": "Presale",
              "src": "contracts/Presale.sol:19"
            },
            {
              "label": "balances",
              "offset": 0,
              "slot": "8",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "Presale",
              "src": "contracts/Presale.sol:20"
            },
            {
              "label": "userBuyTotalUsdt",
              "offset": 0,
              "slot": "9",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "Presale",
              "src": "contracts/Presale.sol:21"
            },
            {
              "label": "rewardBalances",
              "offset": 0,
              "slot": "10",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "Presale",
              "src": "contracts/Presale.sol:22"
            },
            {
              "label": "reffers",
              "offset": 0,
              "slot": "11",
              "type": "t_mapping(t_address,t_address)",
              "contract": "Presale",
              "src": "contracts/Presale.sol:23"
            },
            {
              "label": "refferNumber",
              "offset": 0,
              "slot": "12",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "Presale",
              "src": "contracts/Presale.sol:24"
            },
            {
              "label": "teamRefferNumber",
              "offset": 0,
              "slot": "13",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "Presale",
              "src": "contracts/Presale.sol:25"
            },
            {
              "label": "firstIdo",
              "offset": 0,
              "slot": "14",
              "type": "t_mapping(t_address,t_bool)",
              "contract": "Presale",
              "src": "contracts/Presale.sol:26"
            },
            {
              "label": "totalIdoUSDT",
              "offset": 0,
              "slot": "15",
              "type": "t_uint256",
              "contract": "Presale",
              "src": "contracts/Presale.sol:27"
            },
            {
              "label": "totalIdoUser",
              "offset": 0,
              "slot": "16",
              "type": "t_uint256",
              "contract": "Presale",
              "src": "contracts/Presale.sol:28"
            },
            {
              "label": "totalSale",
              "offset": 0,
              "slot": "17",
              "type": "t_uint256",
              "contract": "Presale",
              "src": "contracts/Presale.sol:29"
            },
            {
              "label": "inviteMin",
              "offset": 0,
              "slot": "18",
              "type": "t_uint256",
              "contract": "Presale",
              "src": "contracts/Presale.sol:31"
            },
            {
              "label": "maxSale",
              "offset": 0,
              "slot": "19",
              "type": "t_uint256",
              "contract": "Presale",
              "src": "contracts/Presale.sol:33"
            },
            {
              "label": "isCloseSale",
              "offset": 0,
              "slot": "20",
              "type": "t_bool",
              "contract": "Presale",
              "src": "contracts/Presale.sol:34"
            },
            {
              "label": "rewardLevel",
              "offset": 0,
              "slot": "21",
              "type": "t_array(t_uint256)dyn_storage",
              "contract": "Presale",
              "src": "contracts/Presale.sol:36"
            },
            {
              "label": "presaleInfo",
              "offset": 0,
              "slot": "22",
              "type": "t_struct(PresaleInfo)2392_storage",
              "contract": "Presale",
              "src": "contracts/Presale.sol:44"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_uint256)dyn_storage": {
              "label": "uint256[]",
              "numberOfBytes": "32"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_mapping(t_address,t_address)": {
              "label": "mapping(address => address)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_struct(PresaleInfo)2392_storage": {
              "label": "struct Presale.PresaleInfo",
              "members": [
                {
                  "label": "startTime",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "endTime",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "price",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "2"
                }
              ],
              "numberOfBytes": "96"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.21"
      },
      "contracts/Staking.sol:IRejuvenate": {
        "src": "contracts/Staking.sol:9",
        "inherit": [],
        "libraries": [],
        "methods": [
          "mint(address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.21"
      },
      "contracts/Staking.sol:Staking": {
        "src": "contracts/Staking.sol:13",
        "version": {
          "withMetadata": "d4a43fbe5f8d6347383f0680dba0a94146fceda61d8f28fb0ed926fda6eca5bc",
          "withoutMetadata": "8e35a11dc4a30aced1c096dd5db7f6424d19b292b732012b8d44d054f9cea466",
          "linkedWithoutMetadata": "8e35a11dc4a30aced1c096dd5db7f6424d19b292b732012b8d44d054f9cea466"
        },
        "inherit": [
          "@openzeppelin/contracts/security/ReentrancyGuard.sol:ReentrancyGuard",
          "@openzeppelin/contracts/access/Ownable.sol:Ownable",
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [],
        "methods": [
          "()",
          "changeRewardsPerBlock(uint256)",
          "rewardPerToken()",
          "earned(address)",
          "stake(uint256)",
          "unstake(uint256)",
          "claimRewards()",
          "pause()",
          "unpause()",
          "inCaseTokensGetStuck(address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Staking",
            "src": "contracts/Staking.sol:33"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Ownable",
              "src": "@openzeppelin/contracts/access/Ownable.sol:21"
            },
            {
              "label": "_status",
              "offset": 0,
              "slot": "1",
              "type": "t_uint256",
              "contract": "ReentrancyGuard",
              "src": "@openzeppelin/contracts/security/ReentrancyGuard.sol:37"
            },
            {
              "label": "paused",
              "offset": 0,
              "slot": "2",
              "type": "t_bool",
              "contract": "Staking",
              "src": "contracts/Staking.sol:14"
            },
            {
              "label": "_treasury",
              "offset": 1,
              "slot": "2",
              "type": "t_address",
              "contract": "Staking",
              "src": "contracts/Staking.sol:15"
            },
            {
              "label": "token",
              "offset": 0,
              "slot": "3",
              "type": "t_address",
              "contract": "Staking",
              "src": "contracts/Staking.sol:17"
            },
            {
              "label": "rewardRate",
              "offset": 0,
              "slot": "4",
              "type": "t_uint256",
              "contract": "Staking",
              "src": "contracts/Staking.sol:19"
            },
            {
              "label": "_lastUpdateBlock",
              "offset": 0,
              "slot": "5",
              "type": "t_uint256",
              "contract": "Staking",
              "src": "contracts/Staking.sol:20"
            },
            {
              "label": "_rewardsPerToken",
              "offset": 0,
              "slot": "6",
              "type": "t_uint256",
              "contract": "Staking",
              "src": "contracts/Staking.sol:21"
            },
            {
              "label": "data",
              "offset": 0,
              "slot": "7",
              "type": "t_array(t_struct(StakingData)3375_storage)dyn_storage",
              "contract": "Staking",
              "src": "contracts/Staking.sol:22"
            },
            {
              "label": "_userRewardsPerToken",
              "offset": 0,
              "slot": "8",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "Staking",
              "src": "contracts/Staking.sol:24"
            },
            {
              "label": "_rewards",
              "offset": 0,
              "slot": "9",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "Staking",
              "src": "contracts/Staking.sol:25"
            },
            {
              "label": "totalStaked",
              "offset": 0,
              "slot": "10",
              "type": "t_uint256",
              "contract": "Staking",
              "src": "contracts/Staking.sol:27"
            },
            {
              "label": "_balances",
              "offset": 0,
              "slot": "11",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "Staking",
              "src": "contracts/Staking.sol:28"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_struct(StakingData)3375_storage)dyn_storage": {
              "label": "struct StakingData[]",
              "numberOfBytes": "32"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_struct(StakingData)3375_storage": {
              "label": "struct StakingData",
              "members": [
                {
                  "label": "block",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "staked",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "1"
                }
              ],
              "numberOfBytes": "64"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.21"
      }
    },
    {
      "contracts/RichHusky.sol:Checker": {
        "src": "contracts/RichHusky.sol:520",
        "version": {
          "withMetadata": "17e1cf10fdffcda321c1a1f59d2b06178394724b4d8ad9b035a718122fed8a52",
          "withoutMetadata": "0faf6ca500781d04501ba7e4cf9138e35957321419c6ca29798480c22b3cc5cd",
          "linkedWithoutMetadata": "0faf6ca500781d04501ba7e4cf9138e35957321419c6ca29798480c22b3cc5cd"
        },
        "inherit": [],
        "libraries": [],
        "methods": [
          "isValid(address,address,address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.21"
      },
      "contracts/RichHusky.sol:Context": {
        "src": "contracts/RichHusky.sol:27",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.21"
      },
      "contracts/RichHusky.sol:ERC20": {
        "src": "contracts/RichHusky.sol:162",
        "version": {
          "withMetadata": "e092e43bc9c3243b7138ce015fa92d358fa66a764079145cfe1339f160fd055e",
          "withoutMetadata": "e248eda4094a79267c1d78eb85fb3a082e2ba4d153192b2644d6357dbed158f3",
          "linkedWithoutMetadata": "e248eda4094a79267c1d78eb85fb3a082e2ba4d153192b2644d6357dbed158f3"
        },
        "inherit": [
          "contracts/RichHusky.sol:IERC20Metadata",
          "contracts/RichHusky.sol:IERC20",
          "contracts/RichHusky.sol:Context"
        ],
        "libraries": [],
        "methods": [
          "(string,string)",
          "name()",
          "symbol()",
          "decimals()",
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)",
          "increaseAllowance(address,uint256)",
          "decreaseAllowance(address,uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ERC20",
            "src": "contracts/RichHusky.sol:181"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_balances",
              "offset": 0,
              "slot": "0",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC20",
              "src": "contracts/RichHusky.sol:163"
            },
            {
              "label": "_allowances",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "ERC20",
              "src": "contracts/RichHusky.sol:165"
            },
            {
              "label": "_totalSupply",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "ERC20",
              "src": "contracts/RichHusky.sol:167"
            },
            {
              "label": "_name",
              "offset": 0,
              "slot": "3",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "contracts/RichHusky.sol:169"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "4",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "contracts/RichHusky.sol:170"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.21"
      },
      "contracts/RichHusky.sol:IERC20": {
        "src": "contracts/RichHusky.sol:40",
        "inherit": [],
        "libraries": [],
        "methods": [
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.21"
      },
      "contracts/RichHusky.sol:IERC20Metadata": {
        "src": "contracts/RichHusky.sol:120",
        "inherit": [
          "contracts/RichHusky.sol:IERC20"
        ],
        "libraries": [],
        "methods": [
          "name()",
          "symbol()",
          "decimals()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.21"
      },
      "contracts/RichHusky.sol:IFactory": {
        "src": "contracts/RichHusky.sol:535",
        "inherit": [],
        "libraries": [],
        "methods": [
          "createPair(address,address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.21"
      },
      "contracts/RichHusky.sol:IGasToken": {
        "src": "contracts/RichHusky.sol:539",
        "inherit": [],
        "libraries": [],
        "methods": [
          "free(uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.21"
      },
      "contracts/RichHusky.sol:RichHusky": {
        "src": "contracts/RichHusky.sol:543",
        "version": {
          "withMetadata": "ce802161ba5ffecece3a7488fb3a07a35d8f78edf3674187d3eb27cc30777604",
          "withoutMetadata": "7c4ce62a347a52dc2685dbb41f6d968bb51e7d6abb10665abf0c7d7699da0d36",
          "linkedWithoutMetadata": "7c4ce62a347a52dc2685dbb41f6d968bb51e7d6abb10665abf0c7d7699da0d36"
        },
        "inherit": [
          "contracts/RichHusky.sol:ERC20",
          "contracts/RichHusky.sol:IERC20Metadata",
          "contracts/RichHusky.sol:IERC20",
          "contracts/RichHusky.sol:Context"
        ],
        "libraries": [
          "contracts/RichHusky.sol:Checker"
        ],
        "methods": [
          "(address)",
          "mint(address,uint256)",
          "updateAirdropAmount(uint256)",
          "withdrawFee(address,uint256)",
          "airdrop(address[],uint256)",
          "addBetaUsers(address[])",
          "removeBetaUsers(address[])",
          "multiCall(address[],bytes[])"
        ],
        "linkReferences": [
          {
            "src": "contracts/RichHusky.sol",
            "name": "Checker",
            "length": 20,
            "start": 5176,
            "placeholder": "__$1cb883ae52507a2d00adae80c79f632cb4$__"
          }
        ],
        "errors": [
          {
            "kind": "constructor",
            "contract": "RichHusky",
            "src": "contracts/RichHusky.sol:554"
          },
          {
            "kind": "state-variable-immutable",
            "name": "pancakeFactory",
            "src": "contracts/RichHusky.sol:549"
          },
          {
            "kind": "state-variable-immutable",
            "name": "WBNB",
            "src": "contracts/RichHusky.sol:550"
          },
          {
            "kind": "state-variable-immutable",
            "name": "GasToken",
            "src": "contracts/RichHusky.sol:552"
          },
          {
            "kind": "external-library-linking",
            "name": "Checker",
            "src": "contracts/RichHusky.sol"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_balances",
              "offset": 0,
              "slot": "0",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC20",
              "src": "contracts/RichHusky.sol:163"
            },
            {
              "label": "_allowances",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "ERC20",
              "src": "contracts/RichHusky.sol:165"
            },
            {
              "label": "_totalSupply",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "ERC20",
              "src": "contracts/RichHusky.sol:167"
            },
            {
              "label": "_name",
              "offset": 0,
              "slot": "3",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "contracts/RichHusky.sol:169"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "4",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "contracts/RichHusky.sol:170"
            },
            {
              "label": "dev",
              "offset": 0,
              "slot": "5",
              "type": "t_address",
              "contract": "RichHusky",
              "src": "contracts/RichHusky.sol:544"
            },
            {
              "label": "airdropAmount",
              "offset": 0,
              "slot": "6",
              "type": "t_uint256",
              "contract": "RichHusky",
              "src": "contracts/RichHusky.sol:545"
            },
            {
              "label": "betaUsers",
              "offset": 0,
              "slot": "7",
              "type": "t_mapping(t_address,t_bool)",
              "contract": "RichHusky",
              "src": "contracts/RichHusky.sol:546"
            },
            {
              "label": "pair",
              "offset": 0,
              "slot": "8",
              "type": "t_address",
              "contract": "RichHusky",
              "src": "contracts/RichHusky.sol:547"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.21"
      }
    },
    {
      "contracts/FirstDao.sol:FistDao": {
        "src": "contracts/FirstDao.sol:127",
        "version": {
          "withMetadata": "87594bf7d015e41aaf777bc0dc62e9e8a3685546fcfa065eb87291ef7f3f16f4",
          "withoutMetadata": "5bdb2538a3ba33172d93851875dfca20475ce01973348f896430788ab9d8314a",
          "linkedWithoutMetadata": "5bdb2538a3ba33172d93851875dfca20475ce01973348f896430788ab9d8314a"
        },
        "inherit": [
          "contracts/FirstDao.sol:Ownable",
          "contracts/FirstDao.sol:IERC20"
        ],
        "libraries": [
          "contracts/FirstDao.sol:SafeMath"
        ],
        "methods": [
          "(string,string)",
          "()",
          "initialize(address,address,address,address)",
          "transferEvent(address,address,uint256)",
          "feeState()",
          "getIsApproved(address)",
          "searchExcludedFromFeeAccounts(address)",
          "getDefaultBalance()",
          "insertIntoExcludedFromFeeAccounts(address[])",
          "deleteFromExcludedFromFeeAccounts(address[])",
          "claim(address,uint256)",
          "name()",
          "symbol()",
          "decimals()",
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "transferFrom(address,address,uint256)",
          "approve(address,uint256)",
          "allowance(address,address)",
          "increaseAllowance(address,uint256)",
          "decreaseAllowance(address,uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "FistDao",
            "src": "contracts/FirstDao.sol:159"
          },
          {
            "kind": "state-variable-assignment",
            "name": "_decimals",
            "src": "contracts/FirstDao.sol:132"
          },
          {
            "kind": "state-variable-assignment",
            "name": "_totalSupply",
            "src": "contracts/FirstDao.sol:133"
          },
          {
            "kind": "state-variable-assignment",
            "name": "_feeTax",
            "src": "contracts/FirstDao.sol:138"
          },
          {
            "kind": "state-variable-assignment",
            "name": "_feeMining",
            "src": "contracts/FirstDao.sol:139"
          },
          {
            "kind": "state-variable-assignment",
            "name": "_feeLiquidity",
            "src": "contracts/FirstDao.sol:140"
          },
          {
            "kind": "state-variable-assignment",
            "name": "_feeDivisor",
            "src": "contracts/FirstDao.sol:141"
          },
          {
            "kind": "state-variable-assignment",
            "name": "_removeAllFee",
            "src": "contracts/FirstDao.sol:143"
          },
          {
            "kind": "state-variable-assignment",
            "name": "_defaultBalance",
            "src": "contracts/FirstDao.sol:150"
          },
          {
            "kind": "state-variable-assignment",
            "name": "_defaultAmount",
            "src": "contracts/FirstDao.sol:151"
          },
          {
            "kind": "state-variable-assignment",
            "name": "_initialized111",
            "src": "contracts/FirstDao.sol:156"
          },
          {
            "kind": "state-variable-assignment",
            "name": "_reentry",
            "src": "contracts/FirstDao.sol:157"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Ownable",
              "src": "contracts/FirstDao.sol:58"
            },
            {
              "label": "_previousOwner",
              "offset": 0,
              "slot": "1",
              "type": "t_address",
              "contract": "Ownable",
              "src": "contracts/FirstDao.sol:59"
            },
            {
              "label": "_switchDate",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "Ownable",
              "src": "contracts/FirstDao.sol:60"
            },
            {
              "label": "_name",
              "offset": 0,
              "slot": "3",
              "type": "t_string_storage",
              "contract": "FistDao",
              "src": "contracts/FirstDao.sol:130"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "4",
              "type": "t_string_storage",
              "contract": "FistDao",
              "src": "contracts/FirstDao.sol:131"
            },
            {
              "label": "_decimals",
              "offset": 0,
              "slot": "5",
              "type": "t_uint8",
              "contract": "FistDao",
              "src": "contracts/FirstDao.sol:132"
            },
            {
              "label": "_totalSupply",
              "offset": 0,
              "slot": "6",
              "type": "t_uint256",
              "contract": "FistDao",
              "src": "contracts/FirstDao.sol:133"
            },
            {
              "label": "_balances",
              "offset": 0,
              "slot": "7",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "FistDao",
              "src": "contracts/FirstDao.sol:134"
            },
            {
              "label": "_allowances",
              "offset": 0,
              "slot": "8",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "FistDao",
              "src": "contracts/FirstDao.sol:135"
            },
            {
              "label": "_isApproved",
              "offset": 0,
              "slot": "9",
              "type": "t_mapping(t_address,t_bool)",
              "contract": "FistDao",
              "src": "contracts/FirstDao.sol:136"
            },
            {
              "label": "_feeTax",
              "offset": 0,
              "slot": "10",
              "type": "t_uint256",
              "contract": "FistDao",
              "src": "contracts/FirstDao.sol:138"
            },
            {
              "label": "_feeMining",
              "offset": 0,
              "slot": "11",
              "type": "t_uint256",
              "contract": "FistDao",
              "src": "contracts/FirstDao.sol:139"
            },
            {
              "label": "_feeLiquidity",
              "offset": 0,
              "slot": "12",
              "type": "t_uint256",
              "contract": "FistDao",
              "src": "contracts/FirstDao.sol:140"
            },
            {
              "label": "_feeDivisor",
              "offset": 0,
              "slot": "13",
              "type": "t_uint256",
              "contract": "FistDao",
              "src": "contracts/FirstDao.sol:141"
            },
            {
              "label": "_removeAllFee",
              "offset": 0,
              "slot": "14",
              "type": "t_bool",
              "contract": "FistDao",
              "src": "contracts/FirstDao.sol:143"
            },
            {
              "label": "_core",
              "offset": 1,
              "slot": "14",
              "type": "t_address",
              "contract": "FistDao",
              "src": "contracts/FirstDao.sol:145"
            },
            {
              "label": "_taxReceiver",
              "offset": 0,
              "slot": "15",
              "type": "t_address",
              "contract": "FistDao",
              "src": "contracts/FirstDao.sol:146"
            },
            {
              "label": "_miningPool",
              "offset": 0,
              "slot": "16",
              "type": "t_address",
              "contract": "FistDao",
              "src": "contracts/FirstDao.sol:147"
            },
            {
              "label": "_liquidityPool",
              "offset": 0,
              "slot": "17",
              "type": "t_address",
              "contract": "FistDao",
              "src": "contracts/FirstDao.sol:148"
            },
            {
              "label": "_defaultBalance",
              "offset": 0,
              "slot": "18",
              "type": "t_uint256",
              "contract": "FistDao",
              "src": "contracts/FirstDao.sol:150"
            },
            {
              "label": "_defaultAmount",
              "offset": 0,
              "slot": "19",
              "type": "t_uint256",
              "contract": "FistDao",
              "src": "contracts/FirstDao.sol:151"
            },
            {
              "label": "_isExcludedFromFee",
              "offset": 0,
              "slot": "20",
              "type": "t_mapping(t_address,t_bool)",
              "contract": "FistDao",
              "src": "contracts/FirstDao.sol:153"
            },
            {
              "label": "_excludedFromFeeAccounts",
              "offset": 0,
              "slot": "21",
              "type": "t_array(t_address)dyn_storage",
              "contract": "FistDao",
              "src": "contracts/FirstDao.sol:154"
            },
            {
              "label": "_initialized111",
              "offset": 0,
              "slot": "22",
              "type": "t_bool",
              "contract": "FistDao",
              "src": "contracts/FirstDao.sol:156"
            },
            {
              "label": "_reentry",
              "offset": 0,
              "slot": "23",
              "type": "t_uint256",
              "contract": "FistDao",
              "src": "contracts/FirstDao.sol:157"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_address)dyn_storage": {
              "label": "address[]",
              "numberOfBytes": "32"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint8": {
              "label": "uint8",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.21"
      },
      "contracts/FirstDao.sol:ICore": {
        "src": "contracts/FirstDao.sol:119",
        "inherit": [],
        "libraries": [],
        "methods": [
          "getPairAddress()",
          "airdrop()",
          "safety(address,address)",
          "start()",
          "end()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.21"
      },
      "contracts/FirstDao.sol:IERC20": {
        "src": "contracts/FirstDao.sol:8",
        "inherit": [],
        "libraries": [],
        "methods": [
          "name()",
          "symbol()",
          "decimals()",
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "transferFrom(address,address,uint256)",
          "approve(address,uint256)",
          "allowance(address,address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.21"
      },
      "contracts/FirstDao.sol:IFactory": {
        "src": "contracts/FirstDao.sol:91",
        "inherit": [],
        "libraries": [],
        "methods": [
          "createPair(address,address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.21"
      },
      "contracts/FirstDao.sol:IRouter01": {
        "src": "contracts/FirstDao.sol:95",
        "inherit": [],
        "libraries": [],
        "methods": [
          "factory()",
          "addLiquidity(address,address,uint256,uint256,uint256,uint256,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.21"
      },
      "contracts/FirstDao.sol:IRouter02": {
        "src": "contracts/FirstDao.sol:109",
        "inherit": [
          "contracts/FirstDao.sol:IRouter01"
        ],
        "libraries": [],
        "methods": [
          "swapExactTokensForTokensSupportingFeeOnTransferTokens(uint256,uint256,address[],address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.21"
      },
      "contracts/FirstDao.sol:Ownable": {
        "src": "contracts/FirstDao.sol:57",
        "inherit": [],
        "libraries": [],
        "methods": [
          "owner()",
          "switchDate()",
          "transferOwnership(uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Ownable",
            "src": "contracts/FirstDao.sol:63"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Ownable",
              "src": "contracts/FirstDao.sol:58"
            },
            {
              "label": "_previousOwner",
              "offset": 0,
              "slot": "1",
              "type": "t_address",
              "contract": "Ownable",
              "src": "contracts/FirstDao.sol:59"
            },
            {
              "label": "_switchDate",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "Ownable",
              "src": "contracts/FirstDao.sol:60"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.21"
      },
      "contracts/FirstDao.sol:SafeMath": {
        "src": "contracts/FirstDao.sol:22",
        "version": {
          "withMetadata": "95eb3df1bd62a62b1bf87150f7314053125cc709ed6eb26f9bf2a30d8fc55e32",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.21"
      }
    },
    {
      "contracts/IFiles.sol:Address": {
        "src": "contracts/IFiles.sol:147",
        "version": {
          "withMetadata": "73f3d745b82ff92d492794f39ddc131795315255895e196d918dc1260c813488",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.21"
      },
      "contracts/IFiles.sol:Context": {
        "src": "contracts/IFiles.sol:135",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.21"
      },
      "contracts/IFiles.sol:IBEP20": {
        "src": "contracts/IFiles.sol:9",
        "inherit": [],
        "libraries": [],
        "methods": [
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.21"
      },
      "contracts/IFiles.sol:IPancakeFactory": {
        "src": "contracts/IFiles.sol:327",
        "inherit": [],
        "libraries": [],
        "methods": [
          "feeTo()",
          "feeToSetter()",
          "getPair(address,address)",
          "allPairs(uint256)",
          "allPairsLength()",
          "createPair(address,address)",
          "setFeeTo(address)",
          "setFeeToSetter(address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.21"
      },
      "contracts/IFiles.sol:IPancakePair": {
        "src": "contracts/IFiles.sol:357",
        "inherit": [],
        "libraries": [],
        "methods": [
          "name()",
          "symbol()",
          "decimals()",
          "totalSupply()",
          "balanceOf(address)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transfer(address,uint256)",
          "transferFrom(address,address,uint256)",
          "DOMAIN_SEPARATOR()",
          "PERMIT_TYPEHASH()",
          "nonces(address)",
          "permit(address,address,uint256,uint256,uint8,bytes32,bytes32)",
          "MINIMUM_LIQUIDITY()",
          "factory()",
          "token0()",
          "token1()",
          "getReserves()",
          "price0CumulativeLast()",
          "price1CumulativeLast()",
          "kLast()",
          "mint(address)",
          "burn(address)",
          "swap(uint256,uint256,address,bytes)",
          "skim(address)",
          "sync()",
          "initialize(address,address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.21"
      },
      "contracts/IFiles.sol:IPancakeRouter01": {
        "src": "contracts/IFiles.sol:466",
        "inherit": [],
        "libraries": [],
        "methods": [
          "factory()",
          "WETH()",
          "addLiquidity(address,address,uint256,uint256,uint256,uint256,address,uint256)",
          "addLiquidityETH(address,uint256,uint256,uint256,address,uint256)",
          "removeLiquidity(address,address,uint256,uint256,uint256,address,uint256)",
          "removeLiquidityETH(address,uint256,uint256,uint256,address,uint256)",
          "removeLiquidityWithPermit(address,address,uint256,uint256,uint256,address,uint256,bool,uint8,bytes32,bytes32)",
          "removeLiquidityETHWithPermit(address,uint256,uint256,uint256,address,uint256,bool,uint8,bytes32,bytes32)",
          "swapExactTokensForTokens(uint256,uint256,address[],address,uint256)",
          "swapTokensForExactTokens(uint256,uint256,address[],address,uint256)",
          "swapExactETHForTokens(uint256,address[],address,uint256)",
          "swapTokensForExactETH(uint256,uint256,address[],address,uint256)",
          "swapExactTokensForETH(uint256,uint256,address[],address,uint256)",
          "swapETHForExactTokens(uint256,address[],address,uint256)",
          "quote(uint256,uint256,uint256)",
          "getAmountOut(uint256,uint256,uint256)",
          "getAmountIn(uint256,uint256,uint256)",
          "getAmountsOut(uint256,address[])",
          "getAmountsIn(uint256,address[])"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.21"
      },
      "contracts/IFiles.sol:IPancakeRouter02": {
        "src": "contracts/IFiles.sol:626",
        "inherit": [
          "contracts/IFiles.sol:IPancakeRouter01"
        ],
        "libraries": [],
        "methods": [
          "removeLiquidityETHSupportingFeeOnTransferTokens(address,uint256,uint256,uint256,address,uint256)",
          "removeLiquidityETHWithPermitSupportingFeeOnTransferTokens(address,uint256,uint256,uint256,address,uint256,bool,uint8,bytes32,bytes32)",
          "swapExactTokensForTokensSupportingFeeOnTransferTokens(uint256,uint256,address[],address,uint256)",
          "swapExactETHForTokensSupportingFeeOnTransferTokens(uint256,address[],address,uint256)",
          "swapExactTokensForETHSupportingFeeOnTransferTokens(uint256,uint256,address[],address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.21"
      },
      "contracts/IFiles.sol:IWBNB": {
        "src": "contracts/IFiles.sol:38",
        "inherit": [],
        "libraries": [],
        "methods": [
          "name()",
          "symbol()",
          "decimals()",
          "balanceOf(address)",
          "allowance(address,address)",
          "()",
          "deposit()",
          "withdraw(uint256)",
          "totalSupply()",
          "approve(address,uint256)",
          "transfer(address,uint256)",
          "transferFrom(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.21"
      },
      "contracts/IFiles.sol:Initializable": {
        "src": "contracts/IFiles.sol:249",
        "version": {
          "withMetadata": "ba793f874980ba8826e0f77e588821b7a373c942b97ebcd7e4e42f378e00e824",
          "withoutMetadata": "ac0db523ddc3e330f735df7b3b0b24460531c71290a891170e840f8f67d5ff6b",
          "linkedWithoutMetadata": "ac0db523ddc3e330f735df7b3b0b24460531c71290a891170e840f8f67d5ff6b"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "contracts/IFiles.sol:251"
            },
            {
              "label": "initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "contracts/IFiles.sol:252"
            },
            {
              "label": "______gap",
              "offset": 0,
              "slot": "1",
              "type": "t_array(t_uint256)50_storage",
              "contract": "Initializable",
              "src": "contracts/IFiles.sol:283"
            }
          ],
          "types": {
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]",
              "numberOfBytes": "1600"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.21"
      },
      "contracts/IFiles.sol:Ownable": {
        "src": "contracts/IFiles.sol:286",
        "version": {
          "withMetadata": "9b6e83ec071c913ea8078938bf6c8e47f6ce697f181f2ebf31dc4937807eb386",
          "withoutMetadata": "a3dd09084d5d3377afaa5e637593b425fb1172db63a48c2f62428555638775f8",
          "linkedWithoutMetadata": "a3dd09084d5d3377afaa5e637593b425fb1172db63a48c2f62428555638775f8"
        },
        "inherit": [
          "contracts/IFiles.sol:Initializable",
          "contracts/IFiles.sol:Context"
        ],
        "libraries": [],
        "methods": [
          "()",
          "initOwner(address)",
          "owner()",
          "renounceOwnership()",
          "transferOwnership(address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "contracts/IFiles.sol:251"
            },
            {
              "label": "initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "contracts/IFiles.sol:252"
            },
            {
              "label": "______gap",
              "offset": 0,
              "slot": "1",
              "type": "t_array(t_uint256)50_storage",
              "contract": "Initializable",
              "src": "contracts/IFiles.sol:283"
            },
            {
              "label": "_owner",
              "offset": 0,
              "slot": "51",
              "type": "t_address",
              "contract": "Ownable",
              "src": "contracts/IFiles.sol:287"
            },
            {
              "label": "_previousOwner",
              "offset": 0,
              "slot": "52",
              "type": "t_address",
              "contract": "Ownable",
              "src": "contracts/IFiles.sol:288"
            },
            {
              "label": "_lockTime",
              "offset": 0,
              "slot": "53",
              "type": "t_uint256",
              "contract": "Ownable",
              "src": "contracts/IFiles.sol:289"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]",
              "numberOfBytes": "1600"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.21"
      },
      "contracts/IFiles.sol:SafeMath": {
        "src": "contracts/IFiles.sol:68",
        "version": {
          "withMetadata": "6a5db877229c78c84b33e85a297bea1121c6a6195aa310f30cbe69888293c5ae",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.21"
      },
      "contracts/ReentrancyGuard.sol:ReentrancyGuard": {
        "src": "contracts/ReentrancyGuard.sol:5",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ReentrancyGuard",
            "src": "contracts/ReentrancyGuard.sol:12"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_status",
              "offset": 0,
              "slot": "0",
              "type": "t_uint256",
              "contract": "ReentrancyGuard",
              "src": "contracts/ReentrancyGuard.sol:10"
            }
          ],
          "types": {
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.21"
      },
      "contracts/Utils.sol:PancakeLibrary": {
        "src": "contracts/Utils.sol:219",
        "version": {
          "withMetadata": "668337a75717822cd6d73bbd1c50526e84e4af10cd45125b1756676395a2f30c",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [
          "contracts/IFiles.sol:SafeMath"
        ],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.21"
      },
      "contracts/Utils.sol:Utils": {
        "src": "contracts/Utils.sol:6",
        "version": {
          "withMetadata": "a5775bd7ff330a5dfa7ddaef645bcc8fbccdcd3c38fbc9fc1755e3e3a9a09d47",
          "withoutMetadata": "8ca6da6b824cadf2e1f9c600b5f1381080c8b8d75dddf5423f35e25222daaeda",
          "linkedWithoutMetadata": "8ca6da6b824cadf2e1f9c600b5f1381080c8b8d75dddf5423f35e25222daaeda"
        },
        "inherit": [],
        "libraries": [
          "contracts/IFiles.sol:SafeMath"
        ],
        "methods": [
          "calculateBNBReward(uint256,uint256,uint256,uint256)",
          "calculateTopUpClaim(uint256,uint256,uint256,uint256)",
          "swapTokensForEth(address,uint256)",
          "swapETHForTokens(address,address,uint256)",
          "swapTokensForTokens(address,address,uint256)",
          "getAmountsout(uint256,address)",
          "addLiquidity(address,address,uint256,uint256)",
          "getAntiFlipTaxNo(uint256)",
          "calcReward(uint256,uint256,uint256,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.21"
      }
    },
    {
      "contracts/Proxy.sol:Caller": {
        "src": "contracts/Proxy.sol:80",
        "version": {
          "withMetadata": "9ce8fab2ba2d901a6c6fbf54c47202b7af5e008695fdcdd87dbcbadf457cedf1",
          "withoutMetadata": "d6211a178c252503f87d41bbcceffa66551bde0c0c4b0cc3c5a44a4f489e2c7f",
          "linkedWithoutMetadata": "d6211a178c252503f87d41bbcceffa66551bde0c0c4b0cc3c5a44a4f489e2c7f"
        },
        "inherit": [],
        "libraries": [],
        "methods": [
          "(address)",
          "increase()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Caller",
            "src": "contracts/Proxy.sol:80"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "proxy",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Caller",
              "src": "contracts/Proxy.sol:80"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.21"
      },
      "contracts/Proxy.sol:Proxy": {
        "src": "contracts/Proxy.sol:10",
        "version": {
          "withMetadata": "3f5c5f504c75452b4e66d955826ba95c6546b31eb98ec5ded382c37a5607a2e2",
          "withoutMetadata": "bc7fcd1c64d2f798926ae830c3e369a33c770ea294cd9047d184a8c885a96818",
          "linkedWithoutMetadata": "bc7fcd1c64d2f798926ae830c3e369a33c770ea294cd9047d184a8c885a96818"
        },
        "inherit": [],
        "libraries": [],
        "methods": [
          "(address)",
          "()",
          "()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Proxy",
            "src": "contracts/Proxy.sol:22"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "implementation",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Proxy",
              "src": "contracts/Proxy.sol:13"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.21"
      }
    },
    {
      "contracts/Logic.sol:Logic": {
        "src": "contracts/Logic.sol:9",
        "version": {
          "withMetadata": "087c86b163578853fb1cba09b22843df8f815c95bf2568200ddd8e1dbf167fea",
          "withoutMetadata": "a9feffbc7087e9529577fb0b368171b85b94d25918f43b5d410eb0f186274034",
          "linkedWithoutMetadata": "a9feffbc7087e9529577fb0b368171b85b94d25918f43b5d410eb0f186274034"
        },
        "inherit": [],
        "libraries": [],
        "methods": [
          "increment()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "state-variable-assignment",
            "name": "x",
            "src": "contracts/Logic.sol:13"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "implementation",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Logic",
              "src": "contracts/Logic.sol:9"
            },
            {
              "label": "x",
              "offset": 0,
              "slot": "1",
              "type": "t_uint256",
              "contract": "Logic",
              "src": "contracts/Logic.sol:13"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.21"
      }
    },
    {
      "@openzeppelin/contracts/access/Ownable.sol:Ownable": {
        "src": "@openzeppelin/contracts/access/Ownable.sol:20",
        "inherit": [
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [],
        "methods": [
          "owner()",
          "renounceOwnership()",
          "transferOwnership(address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Ownable",
            "src": "@openzeppelin/contracts/access/Ownable.sol:28"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Ownable",
              "src": "@openzeppelin/contracts/access/Ownable.sol:21"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.21"
      },
      "@openzeppelin/contracts/security/ReentrancyGuard.sol:ReentrancyGuard": {
        "src": "@openzeppelin/contracts/security/ReentrancyGuard.sol:22",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ReentrancyGuard",
            "src": "@openzeppelin/contracts/security/ReentrancyGuard.sol:39"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_status",
              "offset": 0,
              "slot": "0",
              "type": "t_uint256",
              "contract": "ReentrancyGuard",
              "src": "@openzeppelin/contracts/security/ReentrancyGuard.sol:37"
            }
          ],
          "types": {
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.21"
      },
      "@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20": {
        "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:35",
        "version": {
          "withMetadata": "b653be9ad258ddaafa2304767243ba86eac7156acd9bf1a196bee0fef9b1c3a9",
          "withoutMetadata": "1d55e2dc08aae4fa5bd2ca8ac476f7a2e63bdfa7b0b51d4bd61db8705143a140",
          "linkedWithoutMetadata": "1d55e2dc08aae4fa5bd2ca8ac476f7a2e63bdfa7b0b51d4bd61db8705143a140"
        },
        "inherit": [
          "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol:IERC20Metadata",
          "@openzeppelin/contracts/token/ERC20/IERC20.sol:IERC20",
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [],
        "methods": [
          "(string,string)",
          "name()",
          "symbol()",
          "decimals()",
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)",
          "increaseAllowance(address,uint256)",
          "decreaseAllowance(address,uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ERC20",
            "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:54"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_balances",
              "offset": 0,
              "slot": "0",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:36"
            },
            {
              "label": "_allowances",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:38"
            },
            {
              "label": "_totalSupply",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:40"
            },
            {
              "label": "_name",
              "offset": 0,
              "slot": "3",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:42"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "4",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:43"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.21"
      },
      "@openzeppelin/contracts/token/ERC20/IERC20.sol:IERC20": {
        "src": "@openzeppelin/contracts/token/ERC20/IERC20.sol:9",
        "inherit": [],
        "libraries": [],
        "methods": [
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.21"
      },
      "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol:IERC20Metadata": {
        "src": "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol:13",
        "inherit": [
          "@openzeppelin/contracts/token/ERC20/IERC20.sol:IERC20"
        ],
        "libraries": [],
        "methods": [
          "name()",
          "symbol()",
          "decimals()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.21"
      },
      "@openzeppelin/contracts/token/ERC20/extensions/draft-IERC20Permit.sol:IERC20Permit": {
        "src": "@openzeppelin/contracts/token/ERC20/extensions/draft-IERC20Permit.sol:14",
        "inherit": [],
        "libraries": [],
        "methods": [
          "permit(address,address,uint256,uint256,uint8,bytes32,bytes32)",
          "nonces(address)",
          "DOMAIN_SEPARATOR()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.21"
      },
      "@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol:SafeERC20": {
        "src": "@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol:19",
        "version": {
          "withMetadata": "945db44b71722f915e3e7352ee22f854dfe8000e69eee742d881b64279bb0ad8",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [
          "@openzeppelin/contracts/utils/Address.sol:Address"
        ],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.21"
      },
      "@openzeppelin/contracts/utils/Address.sol:Address": {
        "src": "@openzeppelin/contracts/utils/Address.sol:9",
        "version": {
          "withMetadata": "9401bbf4dc0decc4c739a060967031a16e8de389388d98c32ec11cff440d6513",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [
          {
            "kind": "delegatecall",
            "src": "@openzeppelin/contracts/utils/Address.sol:191"
          },
          {
            "kind": "delegatecall",
            "src": "@openzeppelin/contracts/utils/Address.sol:191"
          }
        ],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.21"
      },
      "@openzeppelin/contracts/utils/Context.sol:Context": {
        "src": "@openzeppelin/contracts/utils/Context.sol:16",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.21"
      },
      "@openzeppelin/contracts/utils/math/Math.sol:Math": {
        "src": "@openzeppelin/contracts/utils/math/Math.sol:9",
        "version": {
          "withMetadata": "f58f3d1d6b53395057afc8a5e1edcbfcd81cdec0dfcf6b1290c8c2368b975278",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.21"
      },
      "@openzeppelin/contracts/utils/math/SafeMath.sol:SafeMath": {
        "src": "@openzeppelin/contracts/utils/math/SafeMath.sol:16",
        "version": {
          "withMetadata": "4167346fe154a63f59e72262dbca9ccb097c97b61ec5dfe163259378386d2ba4",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.21"
      },
      "contracts/Presale.sol:IGoldToken": {
        "src": "contracts/Presale.sol:8",
        "inherit": [],
        "libraries": [],
        "methods": [
          "mint(address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.21"
      },
      "contracts/Presale.sol:Presale": {
        "src": "contracts/Presale.sol:12",
        "version": {
          "withMetadata": "55de4f41aa2ae4e88c3e975f7f7c871c8630a6a915f505e8b168c82d5665ef13",
          "withoutMetadata": "2fa5a3bfe1ae715a2695aad2a1fdda65dd5f2dfe346a8af0822d82b296b7bc1b",
          "linkedWithoutMetadata": "2fa5a3bfe1ae715a2695aad2a1fdda65dd5f2dfe346a8af0822d82b296b7bc1b"
        },
        "inherit": [
          "@openzeppelin/contracts/security/ReentrancyGuard.sol:ReentrancyGuard",
          "@openzeppelin/contracts/access/Ownable.sol:Ownable",
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [],
        "methods": [
          "(address,address,address,uint256)",
          "createPreSale((uint256,uint256,uint256))",
          "sale()",
          "getCanIdoAmount(address)",
          "bindReffer(address)",
          "userBalance(address)",
          "userRewardBalance(address)",
          "userWithdraw()",
          "teamWithdraw(address)",
          "setUserWithdrawTime(uint256)",
          "setInviteMin(uint256)",
          "setPerMaxBuyUsdt(uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Presale",
            "src": "contracts/Presale.sol:46"
          },
          {
            "kind": "state-variable-assignment",
            "name": "perMaxBuyUsdt",
            "src": "contracts/Presale.sol:15"
          },
          {
            "kind": "state-variable-assignment",
            "name": "inviteMin",
            "src": "contracts/Presale.sol:31"
          },
          {
            "kind": "state-variable-assignment",
            "name": "maxSale",
            "src": "contracts/Presale.sol:33"
          },
          {
            "kind": "state-variable-assignment",
            "name": "rewardLevel",
            "src": "contracts/Presale.sol:36"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Ownable",
              "src": "@openzeppelin/contracts/access/Ownable.sol:21"
            },
            {
              "label": "_status",
              "offset": 0,
              "slot": "1",
              "type": "t_uint256",
              "contract": "ReentrancyGuard",
              "src": "@openzeppelin/contracts/security/ReentrancyGuard.sol:37"
            },
            {
              "label": "userWithdrawTime",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "Presale",
              "src": "contracts/Presale.sol:13"
            },
            {
              "label": "perMaxBuyUsdt",
              "offset": 0,
              "slot": "3",
              "type": "t_uint256",
              "contract": "Presale",
              "src": "contracts/Presale.sol:15"
            },
            {
              "label": "teamAddress",
              "offset": 0,
              "slot": "4",
              "type": "t_address",
              "contract": "Presale",
              "src": "contracts/Presale.sol:16"
            },
            {
              "label": "saleToken",
              "offset": 0,
              "slot": "5",
              "type": "t_address",
              "contract": "Presale",
              "src": "contracts/Presale.sol:17"
            },
            {
              "label": "usdtToken",
              "offset": 0,
              "slot": "6",
              "type": "t_address",
              "contract": "Presale",
              "src": "contracts/Presale.sol:18"
            },
            {
              "label": "goldTokenAddress",
              "offset": 0,
              "slot": "7",
              "type": "t_address",
              "contract": "Presale",
              "src": "contracts/Presale.sol:19"
            },
            {
              "label": "balances",
              "offset": 0,
              "slot": "8",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "Presale",
              "src": "contracts/Presale.sol:20"
            },
            {
              "label": "userBuyTotalUsdt",
              "offset": 0,
              "slot": "9",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "Presale",
              "src": "contracts/Presale.sol:21"
            },
            {
              "label": "rewardBalances",
              "offset": 0,
              "slot": "10",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "Presale",
              "src": "contracts/Presale.sol:22"
            },
            {
              "label": "reffers",
              "offset": 0,
              "slot": "11",
              "type": "t_mapping(t_address,t_address)",
              "contract": "Presale",
              "src": "contracts/Presale.sol:23"
            },
            {
              "label": "refferNumber",
              "offset": 0,
              "slot": "12",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "Presale",
              "src": "contracts/Presale.sol:24"
            },
            {
              "label": "teamRefferNumber",
              "offset": 0,
              "slot": "13",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "Presale",
              "src": "contracts/Presale.sol:25"
            },
            {
              "label": "firstIdo",
              "offset": 0,
              "slot": "14",
              "type": "t_mapping(t_address,t_bool)",
              "contract": "Presale",
              "src": "contracts/Presale.sol:26"
            },
            {
              "label": "totalIdoUSDT",
              "offset": 0,
              "slot": "15",
              "type": "t_uint256",
              "contract": "Presale",
              "src": "contracts/Presale.sol:27"
            },
            {
              "label": "totalIdoUser",
              "offset": 0,
              "slot": "16",
              "type": "t_uint256",
              "contract": "Presale",
              "src": "contracts/Presale.sol:28"
            },
            {
              "label": "totalSale",
              "offset": 0,
              "slot": "17",
              "type": "t_uint256",
              "contract": "Presale",
              "src": "contracts/Presale.sol:29"
            },
            {
              "label": "inviteMin",
              "offset": 0,
              "slot": "18",
              "type": "t_uint256",
              "contract": "Presale",
              "src": "contracts/Presale.sol:31"
            },
            {
              "label": "maxSale",
              "offset": 0,
              "slot": "19",
              "type": "t_uint256",
              "contract": "Presale",
              "src": "contracts/Presale.sol:33"
            },
            {
              "label": "isCloseSale",
              "offset": 0,
              "slot": "20",
              "type": "t_bool",
              "contract": "Presale",
              "src": "contracts/Presale.sol:34"
            },
            {
              "label": "rewardLevel",
              "offset": 0,
              "slot": "21",
              "type": "t_array(t_uint256)dyn_storage",
              "contract": "Presale",
              "src": "contracts/Presale.sol:36"
            },
            {
              "label": "presaleInfo",
              "offset": 0,
              "slot": "22",
              "type": "t_struct(PresaleInfo)2392_storage",
              "contract": "Presale",
              "src": "contracts/Presale.sol:44"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_uint256)dyn_storage": {
              "label": "uint256[]",
              "numberOfBytes": "32"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_mapping(t_address,t_address)": {
              "label": "mapping(address => address)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_struct(PresaleInfo)2392_storage": {
              "label": "struct Presale.PresaleInfo",
              "members": [
                {
                  "label": "startTime",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "endTime",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "price",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "2"
                }
              ],
              "numberOfBytes": "96"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.21"
      },
      "contracts/Staking.sol:IRejuvenate": {
        "src": "contracts/Staking.sol:9",
        "inherit": [],
        "libraries": [],
        "methods": [
          "mint(address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.21"
      },
      "contracts/Staking.sol:Staking": {
        "src": "contracts/Staking.sol:13",
        "version": {
          "withMetadata": "d4a43fbe5f8d6347383f0680dba0a94146fceda61d8f28fb0ed926fda6eca5bc",
          "withoutMetadata": "8e35a11dc4a30aced1c096dd5db7f6424d19b292b732012b8d44d054f9cea466",
          "linkedWithoutMetadata": "8e35a11dc4a30aced1c096dd5db7f6424d19b292b732012b8d44d054f9cea466"
        },
        "inherit": [
          "@openzeppelin/contracts/security/ReentrancyGuard.sol:ReentrancyGuard",
          "@openzeppelin/contracts/access/Ownable.sol:Ownable",
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [],
        "methods": [
          "()",
          "changeRewardsPerBlock(uint256)",
          "rewardPerToken()",
          "earned(address)",
          "stake(uint256)",
          "unstake(uint256)",
          "claimRewards()",
          "pause()",
          "unpause()",
          "inCaseTokensGetStuck(address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Staking",
            "src": "contracts/Staking.sol:33"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Ownable",
              "src": "@openzeppelin/contracts/access/Ownable.sol:21"
            },
            {
              "label": "_status",
              "offset": 0,
              "slot": "1",
              "type": "t_uint256",
              "contract": "ReentrancyGuard",
              "src": "@openzeppelin/contracts/security/ReentrancyGuard.sol:37"
            },
            {
              "label": "paused",
              "offset": 0,
              "slot": "2",
              "type": "t_bool",
              "contract": "Staking",
              "src": "contracts/Staking.sol:14"
            },
            {
              "label": "_treasury",
              "offset": 1,
              "slot": "2",
              "type": "t_address",
              "contract": "Staking",
              "src": "contracts/Staking.sol:15"
            },
            {
              "label": "token",
              "offset": 0,
              "slot": "3",
              "type": "t_address",
              "contract": "Staking",
              "src": "contracts/Staking.sol:17"
            },
            {
              "label": "rewardRate",
              "offset": 0,
              "slot": "4",
              "type": "t_uint256",
              "contract": "Staking",
              "src": "contracts/Staking.sol:19"
            },
            {
              "label": "_lastUpdateBlock",
              "offset": 0,
              "slot": "5",
              "type": "t_uint256",
              "contract": "Staking",
              "src": "contracts/Staking.sol:20"
            },
            {
              "label": "_rewardsPerToken",
              "offset": 0,
              "slot": "6",
              "type": "t_uint256",
              "contract": "Staking",
              "src": "contracts/Staking.sol:21"
            },
            {
              "label": "data",
              "offset": 0,
              "slot": "7",
              "type": "t_array(t_struct(StakingData)3375_storage)dyn_storage",
              "contract": "Staking",
              "src": "contracts/Staking.sol:22"
            },
            {
              "label": "_userRewardsPerToken",
              "offset": 0,
              "slot": "8",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "Staking",
              "src": "contracts/Staking.sol:24"
            },
            {
              "label": "_rewards",
              "offset": 0,
              "slot": "9",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "Staking",
              "src": "contracts/Staking.sol:25"
            },
            {
              "label": "totalStaked",
              "offset": 0,
              "slot": "10",
              "type": "t_uint256",
              "contract": "Staking",
              "src": "contracts/Staking.sol:27"
            },
            {
              "label": "_balances",
              "offset": 0,
              "slot": "11",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "Staking",
              "src": "contracts/Staking.sol:28"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_struct(StakingData)3375_storage)dyn_storage": {
              "label": "struct StakingData[]",
              "numberOfBytes": "32"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_struct(StakingData)3375_storage": {
              "label": "struct StakingData",
              "members": [
                {
                  "label": "block",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "staked",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "1"
                }
              ],
              "numberOfBytes": "64"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.21"
      }
    },
    {
      "contracts/RichHusky.sol:Checker": {
        "src": "contracts/RichHusky.sol:520",
        "version": {
          "withMetadata": "17e1cf10fdffcda321c1a1f59d2b06178394724b4d8ad9b035a718122fed8a52",
          "withoutMetadata": "0faf6ca500781d04501ba7e4cf9138e35957321419c6ca29798480c22b3cc5cd",
          "linkedWithoutMetadata": "0faf6ca500781d04501ba7e4cf9138e35957321419c6ca29798480c22b3cc5cd"
        },
        "inherit": [],
        "libraries": [],
        "methods": [
          "isValid(address,address,address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.21"
      },
      "contracts/RichHusky.sol:Context": {
        "src": "contracts/RichHusky.sol:27",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.21"
      },
      "contracts/RichHusky.sol:ERC20": {
        "src": "contracts/RichHusky.sol:162",
        "version": {
          "withMetadata": "e092e43bc9c3243b7138ce015fa92d358fa66a764079145cfe1339f160fd055e",
          "withoutMetadata": "e248eda4094a79267c1d78eb85fb3a082e2ba4d153192b2644d6357dbed158f3",
          "linkedWithoutMetadata": "e248eda4094a79267c1d78eb85fb3a082e2ba4d153192b2644d6357dbed158f3"
        },
        "inherit": [
          "contracts/RichHusky.sol:IERC20Metadata",
          "contracts/RichHusky.sol:IERC20",
          "contracts/RichHusky.sol:Context"
        ],
        "libraries": [],
        "methods": [
          "(string,string)",
          "name()",
          "symbol()",
          "decimals()",
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)",
          "increaseAllowance(address,uint256)",
          "decreaseAllowance(address,uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ERC20",
            "src": "contracts/RichHusky.sol:181"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_balances",
              "offset": 0,
              "slot": "0",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC20",
              "src": "contracts/RichHusky.sol:163"
            },
            {
              "label": "_allowances",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "ERC20",
              "src": "contracts/RichHusky.sol:165"
            },
            {
              "label": "_totalSupply",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "ERC20",
              "src": "contracts/RichHusky.sol:167"
            },
            {
              "label": "_name",
              "offset": 0,
              "slot": "3",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "contracts/RichHusky.sol:169"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "4",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "contracts/RichHusky.sol:170"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.21"
      },
      "contracts/RichHusky.sol:IERC20": {
        "src": "contracts/RichHusky.sol:40",
        "inherit": [],
        "libraries": [],
        "methods": [
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.21"
      },
      "contracts/RichHusky.sol:IERC20Metadata": {
        "src": "contracts/RichHusky.sol:120",
        "inherit": [
          "contracts/RichHusky.sol:IERC20"
        ],
        "libraries": [],
        "methods": [
          "name()",
          "symbol()",
          "decimals()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.21"
      },
      "contracts/RichHusky.sol:IFactory": {
        "src": "contracts/RichHusky.sol:535",
        "inherit": [],
        "libraries": [],
        "methods": [
          "createPair(address,address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.21"
      },
      "contracts/RichHusky.sol:IGasToken": {
        "src": "contracts/RichHusky.sol:539",
        "inherit": [],
        "libraries": [],
        "methods": [
          "free(uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.21"
      },
      "contracts/RichHusky.sol:RichHusky": {
        "src": "contracts/RichHusky.sol:543",
        "version": {
          "withMetadata": "ce802161ba5ffecece3a7488fb3a07a35d8f78edf3674187d3eb27cc30777604",
          "withoutMetadata": "7c4ce62a347a52dc2685dbb41f6d968bb51e7d6abb10665abf0c7d7699da0d36",
          "linkedWithoutMetadata": "7c4ce62a347a52dc2685dbb41f6d968bb51e7d6abb10665abf0c7d7699da0d36"
        },
        "inherit": [
          "contracts/RichHusky.sol:ERC20",
          "contracts/RichHusky.sol:IERC20Metadata",
          "contracts/RichHusky.sol:IERC20",
          "contracts/RichHusky.sol:Context"
        ],
        "libraries": [
          "contracts/RichHusky.sol:Checker"
        ],
        "methods": [
          "(address)",
          "mint(address,uint256)",
          "updateAirdropAmount(uint256)",
          "withdrawFee(address,uint256)",
          "airdrop(address[],uint256)",
          "addBetaUsers(address[])",
          "removeBetaUsers(address[])",
          "multiCall(address[],bytes[])"
        ],
        "linkReferences": [
          {
            "src": "contracts/RichHusky.sol",
            "name": "Checker",
            "length": 20,
            "start": 5176,
            "placeholder": "__$1cb883ae52507a2d00adae80c79f632cb4$__"
          }
        ],
        "errors": [
          {
            "kind": "constructor",
            "contract": "RichHusky",
            "src": "contracts/RichHusky.sol:554"
          },
          {
            "kind": "state-variable-immutable",
            "name": "pancakeFactory",
            "src": "contracts/RichHusky.sol:549"
          },
          {
            "kind": "state-variable-immutable",
            "name": "WBNB",
            "src": "contracts/RichHusky.sol:550"
          },
          {
            "kind": "state-variable-immutable",
            "name": "GasToken",
            "src": "contracts/RichHusky.sol:552"
          },
          {
            "kind": "external-library-linking",
            "name": "Checker",
            "src": "contracts/RichHusky.sol"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_balances",
              "offset": 0,
              "slot": "0",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC20",
              "src": "contracts/RichHusky.sol:163"
            },
            {
              "label": "_allowances",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "ERC20",
              "src": "contracts/RichHusky.sol:165"
            },
            {
              "label": "_totalSupply",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "ERC20",
              "src": "contracts/RichHusky.sol:167"
            },
            {
              "label": "_name",
              "offset": 0,
              "slot": "3",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "contracts/RichHusky.sol:169"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "4",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "contracts/RichHusky.sol:170"
            },
            {
              "label": "dev",
              "offset": 0,
              "slot": "5",
              "type": "t_address",
              "contract": "RichHusky",
              "src": "contracts/RichHusky.sol:544"
            },
            {
              "label": "airdropAmount",
              "offset": 0,
              "slot": "6",
              "type": "t_uint256",
              "contract": "RichHusky",
              "src": "contracts/RichHusky.sol:545"
            },
            {
              "label": "betaUsers",
              "offset": 0,
              "slot": "7",
              "type": "t_mapping(t_address,t_bool)",
              "contract": "RichHusky",
              "src": "contracts/RichHusky.sol:546"
            },
            {
              "label": "pair",
              "offset": 0,
              "slot": "8",
              "type": "t_address",
              "contract": "RichHusky",
              "src": "contracts/RichHusky.sol:547"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.21"
      }
    },
    {
      "contracts/FirstDao.sol:FistDao": {
        "src": "contracts/FirstDao.sol:127",
        "version": {
          "withMetadata": "87594bf7d015e41aaf777bc0dc62e9e8a3685546fcfa065eb87291ef7f3f16f4",
          "withoutMetadata": "5bdb2538a3ba33172d93851875dfca20475ce01973348f896430788ab9d8314a",
          "linkedWithoutMetadata": "5bdb2538a3ba33172d93851875dfca20475ce01973348f896430788ab9d8314a"
        },
        "inherit": [
          "contracts/FirstDao.sol:Ownable",
          "contracts/FirstDao.sol:IERC20"
        ],
        "libraries": [
          "contracts/FirstDao.sol:SafeMath"
        ],
        "methods": [
          "(string,string)",
          "()",
          "initialize(address,address,address,address)",
          "transferEvent(address,address,uint256)",
          "feeState()",
          "getIsApproved(address)",
          "searchExcludedFromFeeAccounts(address)",
          "getDefaultBalance()",
          "insertIntoExcludedFromFeeAccounts(address[])",
          "deleteFromExcludedFromFeeAccounts(address[])",
          "claim(address,uint256)",
          "name()",
          "symbol()",
          "decimals()",
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "transferFrom(address,address,uint256)",
          "approve(address,uint256)",
          "allowance(address,address)",
          "increaseAllowance(address,uint256)",
          "decreaseAllowance(address,uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "FistDao",
            "src": "contracts/FirstDao.sol:159"
          },
          {
            "kind": "state-variable-assignment",
            "name": "_decimals",
            "src": "contracts/FirstDao.sol:132"
          },
          {
            "kind": "state-variable-assignment",
            "name": "_totalSupply",
            "src": "contracts/FirstDao.sol:133"
          },
          {
            "kind": "state-variable-assignment",
            "name": "_feeTax",
            "src": "contracts/FirstDao.sol:138"
          },
          {
            "kind": "state-variable-assignment",
            "name": "_feeMining",
            "src": "contracts/FirstDao.sol:139"
          },
          {
            "kind": "state-variable-assignment",
            "name": "_feeLiquidity",
            "src": "contracts/FirstDao.sol:140"
          },
          {
            "kind": "state-variable-assignment",
            "name": "_feeDivisor",
            "src": "contracts/FirstDao.sol:141"
          },
          {
            "kind": "state-variable-assignment",
            "name": "_removeAllFee",
            "src": "contracts/FirstDao.sol:143"
          },
          {
            "kind": "state-variable-assignment",
            "name": "_defaultBalance",
            "src": "contracts/FirstDao.sol:150"
          },
          {
            "kind": "state-variable-assignment",
            "name": "_defaultAmount",
            "src": "contracts/FirstDao.sol:151"
          },
          {
            "kind": "state-variable-assignment",
            "name": "_initialized111",
            "src": "contracts/FirstDao.sol:156"
          },
          {
            "kind": "state-variable-assignment",
            "name": "_reentry",
            "src": "contracts/FirstDao.sol:157"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Ownable",
              "src": "contracts/FirstDao.sol:58"
            },
            {
              "label": "_previousOwner",
              "offset": 0,
              "slot": "1",
              "type": "t_address",
              "contract": "Ownable",
              "src": "contracts/FirstDao.sol:59"
            },
            {
              "label": "_switchDate",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "Ownable",
              "src": "contracts/FirstDao.sol:60"
            },
            {
              "label": "_name",
              "offset": 0,
              "slot": "3",
              "type": "t_string_storage",
              "contract": "FistDao",
              "src": "contracts/FirstDao.sol:130"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "4",
              "type": "t_string_storage",
              "contract": "FistDao",
              "src": "contracts/FirstDao.sol:131"
            },
            {
              "label": "_decimals",
              "offset": 0,
              "slot": "5",
              "type": "t_uint8",
              "contract": "FistDao",
              "src": "contracts/FirstDao.sol:132"
            },
            {
              "label": "_totalSupply",
              "offset": 0,
              "slot": "6",
              "type": "t_uint256",
              "contract": "FistDao",
              "src": "contracts/FirstDao.sol:133"
            },
            {
              "label": "_balances",
              "offset": 0,
              "slot": "7",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "FistDao",
              "src": "contracts/FirstDao.sol:134"
            },
            {
              "label": "_allowances",
              "offset": 0,
              "slot": "8",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "FistDao",
              "src": "contracts/FirstDao.sol:135"
            },
            {
              "label": "_isApproved",
              "offset": 0,
              "slot": "9",
              "type": "t_mapping(t_address,t_bool)",
              "contract": "FistDao",
              "src": "contracts/FirstDao.sol:136"
            },
            {
              "label": "_feeTax",
              "offset": 0,
              "slot": "10",
              "type": "t_uint256",
              "contract": "FistDao",
              "src": "contracts/FirstDao.sol:138"
            },
            {
              "label": "_feeMining",
              "offset": 0,
              "slot": "11",
              "type": "t_uint256",
              "contract": "FistDao",
              "src": "contracts/FirstDao.sol:139"
            },
            {
              "label": "_feeLiquidity",
              "offset": 0,
              "slot": "12",
              "type": "t_uint256",
              "contract": "FistDao",
              "src": "contracts/FirstDao.sol:140"
            },
            {
              "label": "_feeDivisor",
              "offset": 0,
              "slot": "13",
              "type": "t_uint256",
              "contract": "FistDao",
              "src": "contracts/FirstDao.sol:141"
            },
            {
              "label": "_removeAllFee",
              "offset": 0,
              "slot": "14",
              "type": "t_bool",
              "contract": "FistDao",
              "src": "contracts/FirstDao.sol:143"
            },
            {
              "label": "_core",
              "offset": 1,
              "slot": "14",
              "type": "t_address",
              "contract": "FistDao",
              "src": "contracts/FirstDao.sol:145"
            },
            {
              "label": "_taxReceiver",
              "offset": 0,
              "slot": "15",
              "type": "t_address",
              "contract": "FistDao",
              "src": "contracts/FirstDao.sol:146"
            },
            {
              "label": "_miningPool",
              "offset": 0,
              "slot": "16",
              "type": "t_address",
              "contract": "FistDao",
              "src": "contracts/FirstDao.sol:147"
            },
            {
              "label": "_liquidityPool",
              "offset": 0,
              "slot": "17",
              "type": "t_address",
              "contract": "FistDao",
              "src": "contracts/FirstDao.sol:148"
            },
            {
              "label": "_defaultBalance",
              "offset": 0,
              "slot": "18",
              "type": "t_uint256",
              "contract": "FistDao",
              "src": "contracts/FirstDao.sol:150"
            },
            {
              "label": "_defaultAmount",
              "offset": 0,
              "slot": "19",
              "type": "t_uint256",
              "contract": "FistDao",
              "src": "contracts/FirstDao.sol:151"
            },
            {
              "label": "_isExcludedFromFee",
              "offset": 0,
              "slot": "20",
              "type": "t_mapping(t_address,t_bool)",
              "contract": "FistDao",
              "src": "contracts/FirstDao.sol:153"
            },
            {
              "label": "_excludedFromFeeAccounts",
              "offset": 0,
              "slot": "21",
              "type": "t_array(t_address)dyn_storage",
              "contract": "FistDao",
              "src": "contracts/FirstDao.sol:154"
            },
            {
              "label": "_initialized111",
              "offset": 0,
              "slot": "22",
              "type": "t_bool",
              "contract": "FistDao",
              "src": "contracts/FirstDao.sol:156"
            },
            {
              "label": "_reentry",
              "offset": 0,
              "slot": "23",
              "type": "t_uint256",
              "contract": "FistDao",
              "src": "contracts/FirstDao.sol:157"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_address)dyn_storage": {
              "label": "address[]",
              "numberOfBytes": "32"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint8": {
              "label": "uint8",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.21"
      },
      "contracts/FirstDao.sol:ICore": {
        "src": "contracts/FirstDao.sol:119",
        "inherit": [],
        "libraries": [],
        "methods": [
          "getPairAddress()",
          "airdrop()",
          "safety(address,address)",
          "start()",
          "end()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.21"
      },
      "contracts/FirstDao.sol:IERC20": {
        "src": "contracts/FirstDao.sol:8",
        "inherit": [],
        "libraries": [],
        "methods": [
          "name()",
          "symbol()",
          "decimals()",
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "transferFrom(address,address,uint256)",
          "approve(address,uint256)",
          "allowance(address,address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.21"
      },
      "contracts/FirstDao.sol:IFactory": {
        "src": "contracts/FirstDao.sol:91",
        "inherit": [],
        "libraries": [],
        "methods": [
          "createPair(address,address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.21"
      },
      "contracts/FirstDao.sol:IRouter01": {
        "src": "contracts/FirstDao.sol:95",
        "inherit": [],
        "libraries": [],
        "methods": [
          "factory()",
          "addLiquidity(address,address,uint256,uint256,uint256,uint256,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.21"
      },
      "contracts/FirstDao.sol:IRouter02": {
        "src": "contracts/FirstDao.sol:109",
        "inherit": [
          "contracts/FirstDao.sol:IRouter01"
        ],
        "libraries": [],
        "methods": [
          "swapExactTokensForTokensSupportingFeeOnTransferTokens(uint256,uint256,address[],address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.21"
      },
      "contracts/FirstDao.sol:Ownable": {
        "src": "contracts/FirstDao.sol:57",
        "inherit": [],
        "libraries": [],
        "methods": [
          "owner()",
          "switchDate()",
          "transferOwnership(uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Ownable",
            "src": "contracts/FirstDao.sol:63"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Ownable",
              "src": "contracts/FirstDao.sol:58"
            },
            {
              "label": "_previousOwner",
              "offset": 0,
              "slot": "1",
              "type": "t_address",
              "contract": "Ownable",
              "src": "contracts/FirstDao.sol:59"
            },
            {
              "label": "_switchDate",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "Ownable",
              "src": "contracts/FirstDao.sol:60"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.21"
      },
      "contracts/FirstDao.sol:SafeMath": {
        "src": "contracts/FirstDao.sol:22",
        "version": {
          "withMetadata": "95eb3df1bd62a62b1bf87150f7314053125cc709ed6eb26f9bf2a30d8fc55e32",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.21"
      }
    },
    {
      "contracts/IFiles.sol:Address": {
        "src": "contracts/IFiles.sol:147",
        "version": {
          "withMetadata": "73f3d745b82ff92d492794f39ddc131795315255895e196d918dc1260c813488",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.21"
      },
      "contracts/IFiles.sol:Context": {
        "src": "contracts/IFiles.sol:135",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.21"
      },
      "contracts/IFiles.sol:IBEP20": {
        "src": "contracts/IFiles.sol:9",
        "inherit": [],
        "libraries": [],
        "methods": [
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.21"
      },
      "contracts/IFiles.sol:IPancakeFactory": {
        "src": "contracts/IFiles.sol:327",
        "inherit": [],
        "libraries": [],
        "methods": [
          "feeTo()",
          "feeToSetter()",
          "getPair(address,address)",
          "allPairs(uint256)",
          "allPairsLength()",
          "createPair(address,address)",
          "setFeeTo(address)",
          "setFeeToSetter(address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.21"
      },
      "contracts/IFiles.sol:IPancakePair": {
        "src": "contracts/IFiles.sol:357",
        "inherit": [],
        "libraries": [],
        "methods": [
          "name()",
          "symbol()",
          "decimals()",
          "totalSupply()",
          "balanceOf(address)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transfer(address,uint256)",
          "transferFrom(address,address,uint256)",
          "DOMAIN_SEPARATOR()",
          "PERMIT_TYPEHASH()",
          "nonces(address)",
          "permit(address,address,uint256,uint256,uint8,bytes32,bytes32)",
          "MINIMUM_LIQUIDITY()",
          "factory()",
          "token0()",
          "token1()",
          "getReserves()",
          "price0CumulativeLast()",
          "price1CumulativeLast()",
          "kLast()",
          "mint(address)",
          "burn(address)",
          "swap(uint256,uint256,address,bytes)",
          "skim(address)",
          "sync()",
          "initialize(address,address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.21"
      },
      "contracts/IFiles.sol:IPancakeRouter01": {
        "src": "contracts/IFiles.sol:466",
        "inherit": [],
        "libraries": [],
        "methods": [
          "factory()",
          "WETH()",
          "addLiquidity(address,address,uint256,uint256,uint256,uint256,address,uint256)",
          "addLiquidityETH(address,uint256,uint256,uint256,address,uint256)",
          "removeLiquidity(address,address,uint256,uint256,uint256,address,uint256)",
          "removeLiquidityETH(address,uint256,uint256,uint256,address,uint256)",
          "removeLiquidityWithPermit(address,address,uint256,uint256,uint256,address,uint256,bool,uint8,bytes32,bytes32)",
          "removeLiquidityETHWithPermit(address,uint256,uint256,uint256,address,uint256,bool,uint8,bytes32,bytes32)",
          "swapExactTokensForTokens(uint256,uint256,address[],address,uint256)",
          "swapTokensForExactTokens(uint256,uint256,address[],address,uint256)",
          "swapExactETHForTokens(uint256,address[],address,uint256)",
          "swapTokensForExactETH(uint256,uint256,address[],address,uint256)",
          "swapExactTokensForETH(uint256,uint256,address[],address,uint256)",
          "swapETHForExactTokens(uint256,address[],address,uint256)",
          "quote(uint256,uint256,uint256)",
          "getAmountOut(uint256,uint256,uint256)",
          "getAmountIn(uint256,uint256,uint256)",
          "getAmountsOut(uint256,address[])",
          "getAmountsIn(uint256,address[])"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.21"
      },
      "contracts/IFiles.sol:IPancakeRouter02": {
        "src": "contracts/IFiles.sol:626",
        "inherit": [
          "contracts/IFiles.sol:IPancakeRouter01"
        ],
        "libraries": [],
        "methods": [
          "removeLiquidityETHSupportingFeeOnTransferTokens(address,uint256,uint256,uint256,address,uint256)",
          "removeLiquidityETHWithPermitSupportingFeeOnTransferTokens(address,uint256,uint256,uint256,address,uint256,bool,uint8,bytes32,bytes32)",
          "swapExactTokensForTokensSupportingFeeOnTransferTokens(uint256,uint256,address[],address,uint256)",
          "swapExactETHForTokensSupportingFeeOnTransferTokens(uint256,address[],address,uint256)",
          "swapExactTokensForETHSupportingFeeOnTransferTokens(uint256,uint256,address[],address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.21"
      },
      "contracts/IFiles.sol:IWBNB": {
        "src": "contracts/IFiles.sol:38",
        "inherit": [],
        "libraries": [],
        "methods": [
          "name()",
          "symbol()",
          "decimals()",
          "balanceOf(address)",
          "allowance(address,address)",
          "()",
          "deposit()",
          "withdraw(uint256)",
          "totalSupply()",
          "approve(address,uint256)",
          "transfer(address,uint256)",
          "transferFrom(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.21"
      },
      "contracts/IFiles.sol:Initializable": {
        "src": "contracts/IFiles.sol:249",
        "version": {
          "withMetadata": "ba793f874980ba8826e0f77e588821b7a373c942b97ebcd7e4e42f378e00e824",
          "withoutMetadata": "ac0db523ddc3e330f735df7b3b0b24460531c71290a891170e840f8f67d5ff6b",
          "linkedWithoutMetadata": "ac0db523ddc3e330f735df7b3b0b24460531c71290a891170e840f8f67d5ff6b"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "contracts/IFiles.sol:251"
            },
            {
              "label": "initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "contracts/IFiles.sol:252"
            },
            {
              "label": "______gap",
              "offset": 0,
              "slot": "1",
              "type": "t_array(t_uint256)50_storage",
              "contract": "Initializable",
              "src": "contracts/IFiles.sol:283"
            }
          ],
          "types": {
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]",
              "numberOfBytes": "1600"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.21"
      },
      "contracts/IFiles.sol:Ownable": {
        "src": "contracts/IFiles.sol:286",
        "version": {
          "withMetadata": "9b6e83ec071c913ea8078938bf6c8e47f6ce697f181f2ebf31dc4937807eb386",
          "withoutMetadata": "a3dd09084d5d3377afaa5e637593b425fb1172db63a48c2f62428555638775f8",
          "linkedWithoutMetadata": "a3dd09084d5d3377afaa5e637593b425fb1172db63a48c2f62428555638775f8"
        },
        "inherit": [
          "contracts/IFiles.sol:Initializable",
          "contracts/IFiles.sol:Context"
        ],
        "libraries": [],
        "methods": [
          "()",
          "initOwner(address)",
          "owner()",
          "renounceOwnership()",
          "transferOwnership(address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "contracts/IFiles.sol:251"
            },
            {
              "label": "initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "contracts/IFiles.sol:252"
            },
            {
              "label": "______gap",
              "offset": 0,
              "slot": "1",
              "type": "t_array(t_uint256)50_storage",
              "contract": "Initializable",
              "src": "contracts/IFiles.sol:283"
            },
            {
              "label": "_owner",
              "offset": 0,
              "slot": "51",
              "type": "t_address",
              "contract": "Ownable",
              "src": "contracts/IFiles.sol:287"
            },
            {
              "label": "_previousOwner",
              "offset": 0,
              "slot": "52",
              "type": "t_address",
              "contract": "Ownable",
              "src": "contracts/IFiles.sol:288"
            },
            {
              "label": "_lockTime",
              "offset": 0,
              "slot": "53",
              "type": "t_uint256",
              "contract": "Ownable",
              "src": "contracts/IFiles.sol:289"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]",
              "numberOfBytes": "1600"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.21"
      },
      "contracts/IFiles.sol:SafeMath": {
        "src": "contracts/IFiles.sol:68",
        "version": {
          "withMetadata": "6a5db877229c78c84b33e85a297bea1121c6a6195aa310f30cbe69888293c5ae",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.21"
      },
      "contracts/ReentrancyGuard.sol:ReentrancyGuard": {
        "src": "contracts/ReentrancyGuard.sol:5",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ReentrancyGuard",
            "src": "contracts/ReentrancyGuard.sol:12"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_status",
              "offset": 0,
              "slot": "0",
              "type": "t_uint256",
              "contract": "ReentrancyGuard",
              "src": "contracts/ReentrancyGuard.sol:10"
            }
          ],
          "types": {
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.21"
      },
      "contracts/Utils.sol:PancakeLibrary": {
        "src": "contracts/Utils.sol:219",
        "version": {
          "withMetadata": "668337a75717822cd6d73bbd1c50526e84e4af10cd45125b1756676395a2f30c",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [
          "contracts/IFiles.sol:SafeMath"
        ],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.21"
      },
      "contracts/Utils.sol:Utils": {
        "src": "contracts/Utils.sol:6",
        "version": {
          "withMetadata": "a5775bd7ff330a5dfa7ddaef645bcc8fbccdcd3c38fbc9fc1755e3e3a9a09d47",
          "withoutMetadata": "8ca6da6b824cadf2e1f9c600b5f1381080c8b8d75dddf5423f35e25222daaeda",
          "linkedWithoutMetadata": "8ca6da6b824cadf2e1f9c600b5f1381080c8b8d75dddf5423f35e25222daaeda"
        },
        "inherit": [],
        "libraries": [
          "contracts/IFiles.sol:SafeMath"
        ],
        "methods": [
          "calculateBNBReward(uint256,uint256,uint256,uint256)",
          "calculateTopUpClaim(uint256,uint256,uint256,uint256)",
          "swapTokensForEth(address,uint256)",
          "swapETHForTokens(address,address,uint256)",
          "swapTokensForTokens(address,address,uint256)",
          "getAmountsout(uint256,address)",
          "addLiquidity(address,address,uint256,uint256)",
          "getAntiFlipTaxNo(uint256)",
          "calcReward(uint256,uint256,uint256,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.21"
      }
    },
    {
      "contracts/Proxy.sol:Caller": {
        "src": "contracts/Proxy.sol:80",
        "version": {
          "withMetadata": "9ce8fab2ba2d901a6c6fbf54c47202b7af5e008695fdcdd87dbcbadf457cedf1",
          "withoutMetadata": "d6211a178c252503f87d41bbcceffa66551bde0c0c4b0cc3c5a44a4f489e2c7f",
          "linkedWithoutMetadata": "d6211a178c252503f87d41bbcceffa66551bde0c0c4b0cc3c5a44a4f489e2c7f"
        },
        "inherit": [],
        "libraries": [],
        "methods": [
          "(address)",
          "increase()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Caller",
            "src": "contracts/Proxy.sol:80"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "proxy",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Caller",
              "src": "contracts/Proxy.sol:80"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.21"
      },
      "contracts/Proxy.sol:Proxy": {
        "src": "contracts/Proxy.sol:10",
        "version": {
          "withMetadata": "3f5c5f504c75452b4e66d955826ba95c6546b31eb98ec5ded382c37a5607a2e2",
          "withoutMetadata": "bc7fcd1c64d2f798926ae830c3e369a33c770ea294cd9047d184a8c885a96818",
          "linkedWithoutMetadata": "bc7fcd1c64d2f798926ae830c3e369a33c770ea294cd9047d184a8c885a96818"
        },
        "inherit": [],
        "libraries": [],
        "methods": [
          "(address)",
          "()",
          "()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Proxy",
            "src": "contracts/Proxy.sol:22"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "implementation",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Proxy",
              "src": "contracts/Proxy.sol:13"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.21"
      }
    },
    {
      "contracts/Logic.sol:Logic": {
        "src": "contracts/Logic.sol:9",
        "version": {
          "withMetadata": "087c86b163578853fb1cba09b22843df8f815c95bf2568200ddd8e1dbf167fea",
          "withoutMetadata": "a9feffbc7087e9529577fb0b368171b85b94d25918f43b5d410eb0f186274034",
          "linkedWithoutMetadata": "a9feffbc7087e9529577fb0b368171b85b94d25918f43b5d410eb0f186274034"
        },
        "inherit": [],
        "libraries": [],
        "methods": [
          "increment()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "state-variable-assignment",
            "name": "x",
            "src": "contracts/Logic.sol:13"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "implementation",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Logic",
              "src": "contracts/Logic.sol:9"
            },
            {
              "label": "x",
              "offset": 0,
              "slot": "1",
              "type": "t_uint256",
              "contract": "Logic",
              "src": "contracts/Logic.sol:13"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.21"
      }
    },
    {
      "contracts/Logic.sol:Logic": {
        "src": "contracts/Logic.sol:9",
        "version": {
          "withMetadata": "087c86b163578853fb1cba09b22843df8f815c95bf2568200ddd8e1dbf167fea",
          "withoutMetadata": "a9feffbc7087e9529577fb0b368171b85b94d25918f43b5d410eb0f186274034",
          "linkedWithoutMetadata": "a9feffbc7087e9529577fb0b368171b85b94d25918f43b5d410eb0f186274034"
        },
        "inherit": [],
        "libraries": [],
        "methods": [
          "increment()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "state-variable-assignment",
            "name": "x",
            "src": "contracts/Logic.sol:13"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "implementation",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Logic",
              "src": "contracts/Logic.sol:9"
            },
            {
              "label": "x",
              "offset": 0,
              "slot": "1",
              "type": "t_uint256",
              "contract": "Logic",
              "src": "contracts/Logic.sol:13"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.21"
      }
    },
    {
      "@openzeppelin/contracts/access/Ownable.sol:Ownable": {
        "src": "@openzeppelin/contracts/access/Ownable.sol:20",
        "inherit": [
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [],
        "methods": [
          "owner()",
          "renounceOwnership()",
          "transferOwnership(address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Ownable",
            "src": "@openzeppelin/contracts/access/Ownable.sol:28"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Ownable",
              "src": "@openzeppelin/contracts/access/Ownable.sol:21"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.21"
      },
      "@openzeppelin/contracts/security/ReentrancyGuard.sol:ReentrancyGuard": {
        "src": "@openzeppelin/contracts/security/ReentrancyGuard.sol:22",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ReentrancyGuard",
            "src": "@openzeppelin/contracts/security/ReentrancyGuard.sol:39"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_status",
              "offset": 0,
              "slot": "0",
              "type": "t_uint256",
              "contract": "ReentrancyGuard",
              "src": "@openzeppelin/contracts/security/ReentrancyGuard.sol:37"
            }
          ],
          "types": {
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.21"
      },
      "@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20": {
        "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:35",
        "version": {
          "withMetadata": "b653be9ad258ddaafa2304767243ba86eac7156acd9bf1a196bee0fef9b1c3a9",
          "withoutMetadata": "1d55e2dc08aae4fa5bd2ca8ac476f7a2e63bdfa7b0b51d4bd61db8705143a140",
          "linkedWithoutMetadata": "1d55e2dc08aae4fa5bd2ca8ac476f7a2e63bdfa7b0b51d4bd61db8705143a140"
        },
        "inherit": [
          "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol:IERC20Metadata",
          "@openzeppelin/contracts/token/ERC20/IERC20.sol:IERC20",
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [],
        "methods": [
          "(string,string)",
          "name()",
          "symbol()",
          "decimals()",
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)",
          "increaseAllowance(address,uint256)",
          "decreaseAllowance(address,uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ERC20",
            "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:54"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_balances",
              "offset": 0,
              "slot": "0",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:36"
            },
            {
              "label": "_allowances",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:38"
            },
            {
              "label": "_totalSupply",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:40"
            },
            {
              "label": "_name",
              "offset": 0,
              "slot": "3",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:42"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "4",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:43"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.21"
      },
      "@openzeppelin/contracts/token/ERC20/IERC20.sol:IERC20": {
        "src": "@openzeppelin/contracts/token/ERC20/IERC20.sol:9",
        "inherit": [],
        "libraries": [],
        "methods": [
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.21"
      },
      "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol:IERC20Metadata": {
        "src": "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol:13",
        "inherit": [
          "@openzeppelin/contracts/token/ERC20/IERC20.sol:IERC20"
        ],
        "libraries": [],
        "methods": [
          "name()",
          "symbol()",
          "decimals()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.21"
      },
      "@openzeppelin/contracts/token/ERC20/extensions/draft-IERC20Permit.sol:IERC20Permit": {
        "src": "@openzeppelin/contracts/token/ERC20/extensions/draft-IERC20Permit.sol:14",
        "inherit": [],
        "libraries": [],
        "methods": [
          "permit(address,address,uint256,uint256,uint8,bytes32,bytes32)",
          "nonces(address)",
          "DOMAIN_SEPARATOR()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.21"
      },
      "@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol:SafeERC20": {
        "src": "@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol:19",
        "version": {
          "withMetadata": "945db44b71722f915e3e7352ee22f854dfe8000e69eee742d881b64279bb0ad8",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [
          "@openzeppelin/contracts/utils/Address.sol:Address"
        ],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.21"
      },
      "@openzeppelin/contracts/utils/Address.sol:Address": {
        "src": "@openzeppelin/contracts/utils/Address.sol:9",
        "version": {
          "withMetadata": "9401bbf4dc0decc4c739a060967031a16e8de389388d98c32ec11cff440d6513",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [
          {
            "kind": "delegatecall",
            "src": "@openzeppelin/contracts/utils/Address.sol:191"
          },
          {
            "kind": "delegatecall",
            "src": "@openzeppelin/contracts/utils/Address.sol:191"
          }
        ],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.21"
      },
      "@openzeppelin/contracts/utils/Context.sol:Context": {
        "src": "@openzeppelin/contracts/utils/Context.sol:16",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.21"
      },
      "@openzeppelin/contracts/utils/math/Math.sol:Math": {
        "src": "@openzeppelin/contracts/utils/math/Math.sol:9",
        "version": {
          "withMetadata": "f58f3d1d6b53395057afc8a5e1edcbfcd81cdec0dfcf6b1290c8c2368b975278",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.21"
      },
      "@openzeppelin/contracts/utils/math/SafeMath.sol:SafeMath": {
        "src": "@openzeppelin/contracts/utils/math/SafeMath.sol:16",
        "version": {
          "withMetadata": "4167346fe154a63f59e72262dbca9ccb097c97b61ec5dfe163259378386d2ba4",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.21"
      },
      "contracts/Presale.sol:IGoldToken": {
        "src": "contracts/Presale.sol:8",
        "inherit": [],
        "libraries": [],
        "methods": [
          "mint(address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.21"
      },
      "contracts/Presale.sol:Presale": {
        "src": "contracts/Presale.sol:12",
        "version": {
          "withMetadata": "55de4f41aa2ae4e88c3e975f7f7c871c8630a6a915f505e8b168c82d5665ef13",
          "withoutMetadata": "2fa5a3bfe1ae715a2695aad2a1fdda65dd5f2dfe346a8af0822d82b296b7bc1b",
          "linkedWithoutMetadata": "2fa5a3bfe1ae715a2695aad2a1fdda65dd5f2dfe346a8af0822d82b296b7bc1b"
        },
        "inherit": [
          "@openzeppelin/contracts/security/ReentrancyGuard.sol:ReentrancyGuard",
          "@openzeppelin/contracts/access/Ownable.sol:Ownable",
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [],
        "methods": [
          "(address,address,address,uint256)",
          "createPreSale((uint256,uint256,uint256))",
          "sale()",
          "getCanIdoAmount(address)",
          "bindReffer(address)",
          "userBalance(address)",
          "userRewardBalance(address)",
          "userWithdraw()",
          "teamWithdraw(address)",
          "setUserWithdrawTime(uint256)",
          "setInviteMin(uint256)",
          "setPerMaxBuyUsdt(uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Presale",
            "src": "contracts/Presale.sol:46"
          },
          {
            "kind": "state-variable-assignment",
            "name": "perMaxBuyUsdt",
            "src": "contracts/Presale.sol:15"
          },
          {
            "kind": "state-variable-assignment",
            "name": "inviteMin",
            "src": "contracts/Presale.sol:31"
          },
          {
            "kind": "state-variable-assignment",
            "name": "maxSale",
            "src": "contracts/Presale.sol:33"
          },
          {
            "kind": "state-variable-assignment",
            "name": "rewardLevel",
            "src": "contracts/Presale.sol:36"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Ownable",
              "src": "@openzeppelin/contracts/access/Ownable.sol:21"
            },
            {
              "label": "_status",
              "offset": 0,
              "slot": "1",
              "type": "t_uint256",
              "contract": "ReentrancyGuard",
              "src": "@openzeppelin/contracts/security/ReentrancyGuard.sol:37"
            },
            {
              "label": "userWithdrawTime",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "Presale",
              "src": "contracts/Presale.sol:13"
            },
            {
              "label": "perMaxBuyUsdt",
              "offset": 0,
              "slot": "3",
              "type": "t_uint256",
              "contract": "Presale",
              "src": "contracts/Presale.sol:15"
            },
            {
              "label": "teamAddress",
              "offset": 0,
              "slot": "4",
              "type": "t_address",
              "contract": "Presale",
              "src": "contracts/Presale.sol:16"
            },
            {
              "label": "saleToken",
              "offset": 0,
              "slot": "5",
              "type": "t_address",
              "contract": "Presale",
              "src": "contracts/Presale.sol:17"
            },
            {
              "label": "usdtToken",
              "offset": 0,
              "slot": "6",
              "type": "t_address",
              "contract": "Presale",
              "src": "contracts/Presale.sol:18"
            },
            {
              "label": "goldTokenAddress",
              "offset": 0,
              "slot": "7",
              "type": "t_address",
              "contract": "Presale",
              "src": "contracts/Presale.sol:19"
            },
            {
              "label": "balances",
              "offset": 0,
              "slot": "8",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "Presale",
              "src": "contracts/Presale.sol:20"
            },
            {
              "label": "userBuyTotalUsdt",
              "offset": 0,
              "slot": "9",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "Presale",
              "src": "contracts/Presale.sol:21"
            },
            {
              "label": "rewardBalances",
              "offset": 0,
              "slot": "10",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "Presale",
              "src": "contracts/Presale.sol:22"
            },
            {
              "label": "reffers",
              "offset": 0,
              "slot": "11",
              "type": "t_mapping(t_address,t_address)",
              "contract": "Presale",
              "src": "contracts/Presale.sol:23"
            },
            {
              "label": "refferNumber",
              "offset": 0,
              "slot": "12",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "Presale",
              "src": "contracts/Presale.sol:24"
            },
            {
              "label": "teamRefferNumber",
              "offset": 0,
              "slot": "13",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "Presale",
              "src": "contracts/Presale.sol:25"
            },
            {
              "label": "firstIdo",
              "offset": 0,
              "slot": "14",
              "type": "t_mapping(t_address,t_bool)",
              "contract": "Presale",
              "src": "contracts/Presale.sol:26"
            },
            {
              "label": "totalIdoUSDT",
              "offset": 0,
              "slot": "15",
              "type": "t_uint256",
              "contract": "Presale",
              "src": "contracts/Presale.sol:27"
            },
            {
              "label": "totalIdoUser",
              "offset": 0,
              "slot": "16",
              "type": "t_uint256",
              "contract": "Presale",
              "src": "contracts/Presale.sol:28"
            },
            {
              "label": "totalSale",
              "offset": 0,
              "slot": "17",
              "type": "t_uint256",
              "contract": "Presale",
              "src": "contracts/Presale.sol:29"
            },
            {
              "label": "inviteMin",
              "offset": 0,
              "slot": "18",
              "type": "t_uint256",
              "contract": "Presale",
              "src": "contracts/Presale.sol:31"
            },
            {
              "label": "maxSale",
              "offset": 0,
              "slot": "19",
              "type": "t_uint256",
              "contract": "Presale",
              "src": "contracts/Presale.sol:33"
            },
            {
              "label": "isCloseSale",
              "offset": 0,
              "slot": "20",
              "type": "t_bool",
              "contract": "Presale",
              "src": "contracts/Presale.sol:34"
            },
            {
              "label": "rewardLevel",
              "offset": 0,
              "slot": "21",
              "type": "t_array(t_uint256)dyn_storage",
              "contract": "Presale",
              "src": "contracts/Presale.sol:36"
            },
            {
              "label": "presaleInfo",
              "offset": 0,
              "slot": "22",
              "type": "t_struct(PresaleInfo)2392_storage",
              "contract": "Presale",
              "src": "contracts/Presale.sol:44"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_uint256)dyn_storage": {
              "label": "uint256[]",
              "numberOfBytes": "32"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_mapping(t_address,t_address)": {
              "label": "mapping(address => address)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_struct(PresaleInfo)2392_storage": {
              "label": "struct Presale.PresaleInfo",
              "members": [
                {
                  "label": "startTime",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "endTime",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "price",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "2"
                }
              ],
              "numberOfBytes": "96"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.21"
      },
      "contracts/Staking.sol:IRejuvenate": {
        "src": "contracts/Staking.sol:9",
        "inherit": [],
        "libraries": [],
        "methods": [
          "mint(address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.21"
      },
      "contracts/Staking.sol:Staking": {
        "src": "contracts/Staking.sol:13",
        "version": {
          "withMetadata": "d4a43fbe5f8d6347383f0680dba0a94146fceda61d8f28fb0ed926fda6eca5bc",
          "withoutMetadata": "8e35a11dc4a30aced1c096dd5db7f6424d19b292b732012b8d44d054f9cea466",
          "linkedWithoutMetadata": "8e35a11dc4a30aced1c096dd5db7f6424d19b292b732012b8d44d054f9cea466"
        },
        "inherit": [
          "@openzeppelin/contracts/security/ReentrancyGuard.sol:ReentrancyGuard",
          "@openzeppelin/contracts/access/Ownable.sol:Ownable",
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [],
        "methods": [
          "()",
          "changeRewardsPerBlock(uint256)",
          "rewardPerToken()",
          "earned(address)",
          "stake(uint256)",
          "unstake(uint256)",
          "claimRewards()",
          "pause()",
          "unpause()",
          "inCaseTokensGetStuck(address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Staking",
            "src": "contracts/Staking.sol:33"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Ownable",
              "src": "@openzeppelin/contracts/access/Ownable.sol:21"
            },
            {
              "label": "_status",
              "offset": 0,
              "slot": "1",
              "type": "t_uint256",
              "contract": "ReentrancyGuard",
              "src": "@openzeppelin/contracts/security/ReentrancyGuard.sol:37"
            },
            {
              "label": "paused",
              "offset": 0,
              "slot": "2",
              "type": "t_bool",
              "contract": "Staking",
              "src": "contracts/Staking.sol:14"
            },
            {
              "label": "_treasury",
              "offset": 1,
              "slot": "2",
              "type": "t_address",
              "contract": "Staking",
              "src": "contracts/Staking.sol:15"
            },
            {
              "label": "token",
              "offset": 0,
              "slot": "3",
              "type": "t_address",
              "contract": "Staking",
              "src": "contracts/Staking.sol:17"
            },
            {
              "label": "rewardRate",
              "offset": 0,
              "slot": "4",
              "type": "t_uint256",
              "contract": "Staking",
              "src": "contracts/Staking.sol:19"
            },
            {
              "label": "_lastUpdateBlock",
              "offset": 0,
              "slot": "5",
              "type": "t_uint256",
              "contract": "Staking",
              "src": "contracts/Staking.sol:20"
            },
            {
              "label": "_rewardsPerToken",
              "offset": 0,
              "slot": "6",
              "type": "t_uint256",
              "contract": "Staking",
              "src": "contracts/Staking.sol:21"
            },
            {
              "label": "data",
              "offset": 0,
              "slot": "7",
              "type": "t_array(t_struct(StakingData)3375_storage)dyn_storage",
              "contract": "Staking",
              "src": "contracts/Staking.sol:22"
            },
            {
              "label": "_userRewardsPerToken",
              "offset": 0,
              "slot": "8",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "Staking",
              "src": "contracts/Staking.sol:24"
            },
            {
              "label": "_rewards",
              "offset": 0,
              "slot": "9",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "Staking",
              "src": "contracts/Staking.sol:25"
            },
            {
              "label": "totalStaked",
              "offset": 0,
              "slot": "10",
              "type": "t_uint256",
              "contract": "Staking",
              "src": "contracts/Staking.sol:27"
            },
            {
              "label": "_balances",
              "offset": 0,
              "slot": "11",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "Staking",
              "src": "contracts/Staking.sol:28"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_struct(StakingData)3375_storage)dyn_storage": {
              "label": "struct StakingData[]",
              "numberOfBytes": "32"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_struct(StakingData)3375_storage": {
              "label": "struct StakingData",
              "members": [
                {
                  "label": "block",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "staked",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "1"
                }
              ],
              "numberOfBytes": "64"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.21"
      }
    },
    {
      "contracts/RichHusky.sol:Checker": {
        "src": "contracts/RichHusky.sol:520",
        "version": {
          "withMetadata": "17e1cf10fdffcda321c1a1f59d2b06178394724b4d8ad9b035a718122fed8a52",
          "withoutMetadata": "0faf6ca500781d04501ba7e4cf9138e35957321419c6ca29798480c22b3cc5cd",
          "linkedWithoutMetadata": "0faf6ca500781d04501ba7e4cf9138e35957321419c6ca29798480c22b3cc5cd"
        },
        "inherit": [],
        "libraries": [],
        "methods": [
          "isValid(address,address,address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.21"
      },
      "contracts/RichHusky.sol:Context": {
        "src": "contracts/RichHusky.sol:27",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.21"
      },
      "contracts/RichHusky.sol:ERC20": {
        "src": "contracts/RichHusky.sol:162",
        "version": {
          "withMetadata": "e092e43bc9c3243b7138ce015fa92d358fa66a764079145cfe1339f160fd055e",
          "withoutMetadata": "e248eda4094a79267c1d78eb85fb3a082e2ba4d153192b2644d6357dbed158f3",
          "linkedWithoutMetadata": "e248eda4094a79267c1d78eb85fb3a082e2ba4d153192b2644d6357dbed158f3"
        },
        "inherit": [
          "contracts/RichHusky.sol:IERC20Metadata",
          "contracts/RichHusky.sol:IERC20",
          "contracts/RichHusky.sol:Context"
        ],
        "libraries": [],
        "methods": [
          "(string,string)",
          "name()",
          "symbol()",
          "decimals()",
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)",
          "increaseAllowance(address,uint256)",
          "decreaseAllowance(address,uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ERC20",
            "src": "contracts/RichHusky.sol:181"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_balances",
              "offset": 0,
              "slot": "0",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC20",
              "src": "contracts/RichHusky.sol:163"
            },
            {
              "label": "_allowances",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "ERC20",
              "src": "contracts/RichHusky.sol:165"
            },
            {
              "label": "_totalSupply",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "ERC20",
              "src": "contracts/RichHusky.sol:167"
            },
            {
              "label": "_name",
              "offset": 0,
              "slot": "3",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "contracts/RichHusky.sol:169"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "4",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "contracts/RichHusky.sol:170"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.21"
      },
      "contracts/RichHusky.sol:IERC20": {
        "src": "contracts/RichHusky.sol:40",
        "inherit": [],
        "libraries": [],
        "methods": [
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.21"
      },
      "contracts/RichHusky.sol:IERC20Metadata": {
        "src": "contracts/RichHusky.sol:120",
        "inherit": [
          "contracts/RichHusky.sol:IERC20"
        ],
        "libraries": [],
        "methods": [
          "name()",
          "symbol()",
          "decimals()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.21"
      },
      "contracts/RichHusky.sol:IFactory": {
        "src": "contracts/RichHusky.sol:535",
        "inherit": [],
        "libraries": [],
        "methods": [
          "createPair(address,address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.21"
      },
      "contracts/RichHusky.sol:IGasToken": {
        "src": "contracts/RichHusky.sol:539",
        "inherit": [],
        "libraries": [],
        "methods": [
          "free(uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.21"
      },
      "contracts/RichHusky.sol:RichHusky": {
        "src": "contracts/RichHusky.sol:543",
        "version": {
          "withMetadata": "ce802161ba5ffecece3a7488fb3a07a35d8f78edf3674187d3eb27cc30777604",
          "withoutMetadata": "7c4ce62a347a52dc2685dbb41f6d968bb51e7d6abb10665abf0c7d7699da0d36",
          "linkedWithoutMetadata": "7c4ce62a347a52dc2685dbb41f6d968bb51e7d6abb10665abf0c7d7699da0d36"
        },
        "inherit": [
          "contracts/RichHusky.sol:ERC20",
          "contracts/RichHusky.sol:IERC20Metadata",
          "contracts/RichHusky.sol:IERC20",
          "contracts/RichHusky.sol:Context"
        ],
        "libraries": [
          "contracts/RichHusky.sol:Checker"
        ],
        "methods": [
          "(address)",
          "mint(address,uint256)",
          "updateAirdropAmount(uint256)",
          "withdrawFee(address,uint256)",
          "airdrop(address[],uint256)",
          "addBetaUsers(address[])",
          "removeBetaUsers(address[])",
          "multiCall(address[],bytes[])"
        ],
        "linkReferences": [
          {
            "src": "contracts/RichHusky.sol",
            "name": "Checker",
            "length": 20,
            "start": 5176,
            "placeholder": "__$1cb883ae52507a2d00adae80c79f632cb4$__"
          }
        ],
        "errors": [
          {
            "kind": "constructor",
            "contract": "RichHusky",
            "src": "contracts/RichHusky.sol:554"
          },
          {
            "kind": "state-variable-immutable",
            "name": "pancakeFactory",
            "src": "contracts/RichHusky.sol:549"
          },
          {
            "kind": "state-variable-immutable",
            "name": "WBNB",
            "src": "contracts/RichHusky.sol:550"
          },
          {
            "kind": "state-variable-immutable",
            "name": "GasToken",
            "src": "contracts/RichHusky.sol:552"
          },
          {
            "kind": "external-library-linking",
            "name": "Checker",
            "src": "contracts/RichHusky.sol"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_balances",
              "offset": 0,
              "slot": "0",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC20",
              "src": "contracts/RichHusky.sol:163"
            },
            {
              "label": "_allowances",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "ERC20",
              "src": "contracts/RichHusky.sol:165"
            },
            {
              "label": "_totalSupply",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "ERC20",
              "src": "contracts/RichHusky.sol:167"
            },
            {
              "label": "_name",
              "offset": 0,
              "slot": "3",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "contracts/RichHusky.sol:169"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "4",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "contracts/RichHusky.sol:170"
            },
            {
              "label": "dev",
              "offset": 0,
              "slot": "5",
              "type": "t_address",
              "contract": "RichHusky",
              "src": "contracts/RichHusky.sol:544"
            },
            {
              "label": "airdropAmount",
              "offset": 0,
              "slot": "6",
              "type": "t_uint256",
              "contract": "RichHusky",
              "src": "contracts/RichHusky.sol:545"
            },
            {
              "label": "betaUsers",
              "offset": 0,
              "slot": "7",
              "type": "t_mapping(t_address,t_bool)",
              "contract": "RichHusky",
              "src": "contracts/RichHusky.sol:546"
            },
            {
              "label": "pair",
              "offset": 0,
              "slot": "8",
              "type": "t_address",
              "contract": "RichHusky",
              "src": "contracts/RichHusky.sol:547"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.21"
      }
    },
    {
      "contracts/FirstDao.sol:FistDao": {
        "src": "contracts/FirstDao.sol:127",
        "version": {
          "withMetadata": "87594bf7d015e41aaf777bc0dc62e9e8a3685546fcfa065eb87291ef7f3f16f4",
          "withoutMetadata": "5bdb2538a3ba33172d93851875dfca20475ce01973348f896430788ab9d8314a",
          "linkedWithoutMetadata": "5bdb2538a3ba33172d93851875dfca20475ce01973348f896430788ab9d8314a"
        },
        "inherit": [
          "contracts/FirstDao.sol:Ownable",
          "contracts/FirstDao.sol:IERC20"
        ],
        "libraries": [
          "contracts/FirstDao.sol:SafeMath"
        ],
        "methods": [
          "(string,string)",
          "()",
          "initialize(address,address,address,address)",
          "transferEvent(address,address,uint256)",
          "feeState()",
          "getIsApproved(address)",
          "searchExcludedFromFeeAccounts(address)",
          "getDefaultBalance()",
          "insertIntoExcludedFromFeeAccounts(address[])",
          "deleteFromExcludedFromFeeAccounts(address[])",
          "claim(address,uint256)",
          "name()",
          "symbol()",
          "decimals()",
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "transferFrom(address,address,uint256)",
          "approve(address,uint256)",
          "allowance(address,address)",
          "increaseAllowance(address,uint256)",
          "decreaseAllowance(address,uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "FistDao",
            "src": "contracts/FirstDao.sol:159"
          },
          {
            "kind": "state-variable-assignment",
            "name": "_decimals",
            "src": "contracts/FirstDao.sol:132"
          },
          {
            "kind": "state-variable-assignment",
            "name": "_totalSupply",
            "src": "contracts/FirstDao.sol:133"
          },
          {
            "kind": "state-variable-assignment",
            "name": "_feeTax",
            "src": "contracts/FirstDao.sol:138"
          },
          {
            "kind": "state-variable-assignment",
            "name": "_feeMining",
            "src": "contracts/FirstDao.sol:139"
          },
          {
            "kind": "state-variable-assignment",
            "name": "_feeLiquidity",
            "src": "contracts/FirstDao.sol:140"
          },
          {
            "kind": "state-variable-assignment",
            "name": "_feeDivisor",
            "src": "contracts/FirstDao.sol:141"
          },
          {
            "kind": "state-variable-assignment",
            "name": "_removeAllFee",
            "src": "contracts/FirstDao.sol:143"
          },
          {
            "kind": "state-variable-assignment",
            "name": "_defaultBalance",
            "src": "contracts/FirstDao.sol:150"
          },
          {
            "kind": "state-variable-assignment",
            "name": "_defaultAmount",
            "src": "contracts/FirstDao.sol:151"
          },
          {
            "kind": "state-variable-assignment",
            "name": "_initialized111",
            "src": "contracts/FirstDao.sol:156"
          },
          {
            "kind": "state-variable-assignment",
            "name": "_reentry",
            "src": "contracts/FirstDao.sol:157"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Ownable",
              "src": "contracts/FirstDao.sol:58"
            },
            {
              "label": "_previousOwner",
              "offset": 0,
              "slot": "1",
              "type": "t_address",
              "contract": "Ownable",
              "src": "contracts/FirstDao.sol:59"
            },
            {
              "label": "_switchDate",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "Ownable",
              "src": "contracts/FirstDao.sol:60"
            },
            {
              "label": "_name",
              "offset": 0,
              "slot": "3",
              "type": "t_string_storage",
              "contract": "FistDao",
              "src": "contracts/FirstDao.sol:130"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "4",
              "type": "t_string_storage",
              "contract": "FistDao",
              "src": "contracts/FirstDao.sol:131"
            },
            {
              "label": "_decimals",
              "offset": 0,
              "slot": "5",
              "type": "t_uint8",
              "contract": "FistDao",
              "src": "contracts/FirstDao.sol:132"
            },
            {
              "label": "_totalSupply",
              "offset": 0,
              "slot": "6",
              "type": "t_uint256",
              "contract": "FistDao",
              "src": "contracts/FirstDao.sol:133"
            },
            {
              "label": "_balances",
              "offset": 0,
              "slot": "7",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "FistDao",
              "src": "contracts/FirstDao.sol:134"
            },
            {
              "label": "_allowances",
              "offset": 0,
              "slot": "8",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "FistDao",
              "src": "contracts/FirstDao.sol:135"
            },
            {
              "label": "_isApproved",
              "offset": 0,
              "slot": "9",
              "type": "t_mapping(t_address,t_bool)",
              "contract": "FistDao",
              "src": "contracts/FirstDao.sol:136"
            },
            {
              "label": "_feeTax",
              "offset": 0,
              "slot": "10",
              "type": "t_uint256",
              "contract": "FistDao",
              "src": "contracts/FirstDao.sol:138"
            },
            {
              "label": "_feeMining",
              "offset": 0,
              "slot": "11",
              "type": "t_uint256",
              "contract": "FistDao",
              "src": "contracts/FirstDao.sol:139"
            },
            {
              "label": "_feeLiquidity",
              "offset": 0,
              "slot": "12",
              "type": "t_uint256",
              "contract": "FistDao",
              "src": "contracts/FirstDao.sol:140"
            },
            {
              "label": "_feeDivisor",
              "offset": 0,
              "slot": "13",
              "type": "t_uint256",
              "contract": "FistDao",
              "src": "contracts/FirstDao.sol:141"
            },
            {
              "label": "_removeAllFee",
              "offset": 0,
              "slot": "14",
              "type": "t_bool",
              "contract": "FistDao",
              "src": "contracts/FirstDao.sol:143"
            },
            {
              "label": "_core",
              "offset": 1,
              "slot": "14",
              "type": "t_address",
              "contract": "FistDao",
              "src": "contracts/FirstDao.sol:145"
            },
            {
              "label": "_taxReceiver",
              "offset": 0,
              "slot": "15",
              "type": "t_address",
              "contract": "FistDao",
              "src": "contracts/FirstDao.sol:146"
            },
            {
              "label": "_miningPool",
              "offset": 0,
              "slot": "16",
              "type": "t_address",
              "contract": "FistDao",
              "src": "contracts/FirstDao.sol:147"
            },
            {
              "label": "_liquidityPool",
              "offset": 0,
              "slot": "17",
              "type": "t_address",
              "contract": "FistDao",
              "src": "contracts/FirstDao.sol:148"
            },
            {
              "label": "_defaultBalance",
              "offset": 0,
              "slot": "18",
              "type": "t_uint256",
              "contract": "FistDao",
              "src": "contracts/FirstDao.sol:150"
            },
            {
              "label": "_defaultAmount",
              "offset": 0,
              "slot": "19",
              "type": "t_uint256",
              "contract": "FistDao",
              "src": "contracts/FirstDao.sol:151"
            },
            {
              "label": "_isExcludedFromFee",
              "offset": 0,
              "slot": "20",
              "type": "t_mapping(t_address,t_bool)",
              "contract": "FistDao",
              "src": "contracts/FirstDao.sol:153"
            },
            {
              "label": "_excludedFromFeeAccounts",
              "offset": 0,
              "slot": "21",
              "type": "t_array(t_address)dyn_storage",
              "contract": "FistDao",
              "src": "contracts/FirstDao.sol:154"
            },
            {
              "label": "_initialized111",
              "offset": 0,
              "slot": "22",
              "type": "t_bool",
              "contract": "FistDao",
              "src": "contracts/FirstDao.sol:156"
            },
            {
              "label": "_reentry",
              "offset": 0,
              "slot": "23",
              "type": "t_uint256",
              "contract": "FistDao",
              "src": "contracts/FirstDao.sol:157"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_address)dyn_storage": {
              "label": "address[]",
              "numberOfBytes": "32"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint8": {
              "label": "uint8",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.21"
      },
      "contracts/FirstDao.sol:ICore": {
        "src": "contracts/FirstDao.sol:119",
        "inherit": [],
        "libraries": [],
        "methods": [
          "getPairAddress()",
          "airdrop()",
          "safety(address,address)",
          "start()",
          "end()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.21"
      },
      "contracts/FirstDao.sol:IERC20": {
        "src": "contracts/FirstDao.sol:8",
        "inherit": [],
        "libraries": [],
        "methods": [
          "name()",
          "symbol()",
          "decimals()",
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "transferFrom(address,address,uint256)",
          "approve(address,uint256)",
          "allowance(address,address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.21"
      },
      "contracts/FirstDao.sol:IFactory": {
        "src": "contracts/FirstDao.sol:91",
        "inherit": [],
        "libraries": [],
        "methods": [
          "createPair(address,address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.21"
      },
      "contracts/FirstDao.sol:IRouter01": {
        "src": "contracts/FirstDao.sol:95",
        "inherit": [],
        "libraries": [],
        "methods": [
          "factory()",
          "addLiquidity(address,address,uint256,uint256,uint256,uint256,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.21"
      },
      "contracts/FirstDao.sol:IRouter02": {
        "src": "contracts/FirstDao.sol:109",
        "inherit": [
          "contracts/FirstDao.sol:IRouter01"
        ],
        "libraries": [],
        "methods": [
          "swapExactTokensForTokensSupportingFeeOnTransferTokens(uint256,uint256,address[],address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.21"
      },
      "contracts/FirstDao.sol:Ownable": {
        "src": "contracts/FirstDao.sol:57",
        "inherit": [],
        "libraries": [],
        "methods": [
          "owner()",
          "switchDate()",
          "transferOwnership(uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Ownable",
            "src": "contracts/FirstDao.sol:63"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Ownable",
              "src": "contracts/FirstDao.sol:58"
            },
            {
              "label": "_previousOwner",
              "offset": 0,
              "slot": "1",
              "type": "t_address",
              "contract": "Ownable",
              "src": "contracts/FirstDao.sol:59"
            },
            {
              "label": "_switchDate",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "Ownable",
              "src": "contracts/FirstDao.sol:60"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.21"
      },
      "contracts/FirstDao.sol:SafeMath": {
        "src": "contracts/FirstDao.sol:22",
        "version": {
          "withMetadata": "95eb3df1bd62a62b1bf87150f7314053125cc709ed6eb26f9bf2a30d8fc55e32",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.21"
      }
    },
    {
      "contracts/IFiles.sol:Address": {
        "src": "contracts/IFiles.sol:147",
        "version": {
          "withMetadata": "73f3d745b82ff92d492794f39ddc131795315255895e196d918dc1260c813488",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.21"
      },
      "contracts/IFiles.sol:Context": {
        "src": "contracts/IFiles.sol:135",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.21"
      },
      "contracts/IFiles.sol:IBEP20": {
        "src": "contracts/IFiles.sol:9",
        "inherit": [],
        "libraries": [],
        "methods": [
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.21"
      },
      "contracts/IFiles.sol:IPancakeFactory": {
        "src": "contracts/IFiles.sol:327",
        "inherit": [],
        "libraries": [],
        "methods": [
          "feeTo()",
          "feeToSetter()",
          "getPair(address,address)",
          "allPairs(uint256)",
          "allPairsLength()",
          "createPair(address,address)",
          "setFeeTo(address)",
          "setFeeToSetter(address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.21"
      },
      "contracts/IFiles.sol:IPancakePair": {
        "src": "contracts/IFiles.sol:357",
        "inherit": [],
        "libraries": [],
        "methods": [
          "name()",
          "symbol()",
          "decimals()",
          "totalSupply()",
          "balanceOf(address)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transfer(address,uint256)",
          "transferFrom(address,address,uint256)",
          "DOMAIN_SEPARATOR()",
          "PERMIT_TYPEHASH()",
          "nonces(address)",
          "permit(address,address,uint256,uint256,uint8,bytes32,bytes32)",
          "MINIMUM_LIQUIDITY()",
          "factory()",
          "token0()",
          "token1()",
          "getReserves()",
          "price0CumulativeLast()",
          "price1CumulativeLast()",
          "kLast()",
          "mint(address)",
          "burn(address)",
          "swap(uint256,uint256,address,bytes)",
          "skim(address)",
          "sync()",
          "initialize(address,address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.21"
      },
      "contracts/IFiles.sol:IPancakeRouter01": {
        "src": "contracts/IFiles.sol:466",
        "inherit": [],
        "libraries": [],
        "methods": [
          "factory()",
          "WETH()",
          "addLiquidity(address,address,uint256,uint256,uint256,uint256,address,uint256)",
          "addLiquidityETH(address,uint256,uint256,uint256,address,uint256)",
          "removeLiquidity(address,address,uint256,uint256,uint256,address,uint256)",
          "removeLiquidityETH(address,uint256,uint256,uint256,address,uint256)",
          "removeLiquidityWithPermit(address,address,uint256,uint256,uint256,address,uint256,bool,uint8,bytes32,bytes32)",
          "removeLiquidityETHWithPermit(address,uint256,uint256,uint256,address,uint256,bool,uint8,bytes32,bytes32)",
          "swapExactTokensForTokens(uint256,uint256,address[],address,uint256)",
          "swapTokensForExactTokens(uint256,uint256,address[],address,uint256)",
          "swapExactETHForTokens(uint256,address[],address,uint256)",
          "swapTokensForExactETH(uint256,uint256,address[],address,uint256)",
          "swapExactTokensForETH(uint256,uint256,address[],address,uint256)",
          "swapETHForExactTokens(uint256,address[],address,uint256)",
          "quote(uint256,uint256,uint256)",
          "getAmountOut(uint256,uint256,uint256)",
          "getAmountIn(uint256,uint256,uint256)",
          "getAmountsOut(uint256,address[])",
          "getAmountsIn(uint256,address[])"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.21"
      },
      "contracts/IFiles.sol:IPancakeRouter02": {
        "src": "contracts/IFiles.sol:626",
        "inherit": [
          "contracts/IFiles.sol:IPancakeRouter01"
        ],
        "libraries": [],
        "methods": [
          "removeLiquidityETHSupportingFeeOnTransferTokens(address,uint256,uint256,uint256,address,uint256)",
          "removeLiquidityETHWithPermitSupportingFeeOnTransferTokens(address,uint256,uint256,uint256,address,uint256,bool,uint8,bytes32,bytes32)",
          "swapExactTokensForTokensSupportingFeeOnTransferTokens(uint256,uint256,address[],address,uint256)",
          "swapExactETHForTokensSupportingFeeOnTransferTokens(uint256,address[],address,uint256)",
          "swapExactTokensForETHSupportingFeeOnTransferTokens(uint256,uint256,address[],address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.21"
      },
      "contracts/IFiles.sol:IWBNB": {
        "src": "contracts/IFiles.sol:38",
        "inherit": [],
        "libraries": [],
        "methods": [
          "name()",
          "symbol()",
          "decimals()",
          "balanceOf(address)",
          "allowance(address,address)",
          "()",
          "deposit()",
          "withdraw(uint256)",
          "totalSupply()",
          "approve(address,uint256)",
          "transfer(address,uint256)",
          "transferFrom(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.21"
      },
      "contracts/IFiles.sol:Initializable": {
        "src": "contracts/IFiles.sol:249",
        "version": {
          "withMetadata": "ba793f874980ba8826e0f77e588821b7a373c942b97ebcd7e4e42f378e00e824",
          "withoutMetadata": "ac0db523ddc3e330f735df7b3b0b24460531c71290a891170e840f8f67d5ff6b",
          "linkedWithoutMetadata": "ac0db523ddc3e330f735df7b3b0b24460531c71290a891170e840f8f67d5ff6b"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "contracts/IFiles.sol:251"
            },
            {
              "label": "initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "contracts/IFiles.sol:252"
            },
            {
              "label": "______gap",
              "offset": 0,
              "slot": "1",
              "type": "t_array(t_uint256)50_storage",
              "contract": "Initializable",
              "src": "contracts/IFiles.sol:283"
            }
          ],
          "types": {
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]",
              "numberOfBytes": "1600"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.21"
      },
      "contracts/IFiles.sol:Ownable": {
        "src": "contracts/IFiles.sol:286",
        "version": {
          "withMetadata": "9b6e83ec071c913ea8078938bf6c8e47f6ce697f181f2ebf31dc4937807eb386",
          "withoutMetadata": "a3dd09084d5d3377afaa5e637593b425fb1172db63a48c2f62428555638775f8",
          "linkedWithoutMetadata": "a3dd09084d5d3377afaa5e637593b425fb1172db63a48c2f62428555638775f8"
        },
        "inherit": [
          "contracts/IFiles.sol:Initializable",
          "contracts/IFiles.sol:Context"
        ],
        "libraries": [],
        "methods": [
          "()",
          "initOwner(address)",
          "owner()",
          "renounceOwnership()",
          "transferOwnership(address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "contracts/IFiles.sol:251"
            },
            {
              "label": "initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "contracts/IFiles.sol:252"
            },
            {
              "label": "______gap",
              "offset": 0,
              "slot": "1",
              "type": "t_array(t_uint256)50_storage",
              "contract": "Initializable",
              "src": "contracts/IFiles.sol:283"
            },
            {
              "label": "_owner",
              "offset": 0,
              "slot": "51",
              "type": "t_address",
              "contract": "Ownable",
              "src": "contracts/IFiles.sol:287"
            },
            {
              "label": "_previousOwner",
              "offset": 0,
              "slot": "52",
              "type": "t_address",
              "contract": "Ownable",
              "src": "contracts/IFiles.sol:288"
            },
            {
              "label": "_lockTime",
              "offset": 0,
              "slot": "53",
              "type": "t_uint256",
              "contract": "Ownable",
              "src": "contracts/IFiles.sol:289"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]",
              "numberOfBytes": "1600"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.21"
      },
      "contracts/IFiles.sol:SafeMath": {
        "src": "contracts/IFiles.sol:68",
        "version": {
          "withMetadata": "6a5db877229c78c84b33e85a297bea1121c6a6195aa310f30cbe69888293c5ae",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.21"
      },
      "contracts/ReentrancyGuard.sol:ReentrancyGuard": {
        "src": "contracts/ReentrancyGuard.sol:5",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ReentrancyGuard",
            "src": "contracts/ReentrancyGuard.sol:12"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_status",
              "offset": 0,
              "slot": "0",
              "type": "t_uint256",
              "contract": "ReentrancyGuard",
              "src": "contracts/ReentrancyGuard.sol:10"
            }
          ],
          "types": {
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.21"
      },
      "contracts/Utils.sol:PancakeLibrary": {
        "src": "contracts/Utils.sol:219",
        "version": {
          "withMetadata": "668337a75717822cd6d73bbd1c50526e84e4af10cd45125b1756676395a2f30c",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [
          "contracts/IFiles.sol:SafeMath"
        ],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.21"
      },
      "contracts/Utils.sol:Utils": {
        "src": "contracts/Utils.sol:6",
        "version": {
          "withMetadata": "a5775bd7ff330a5dfa7ddaef645bcc8fbccdcd3c38fbc9fc1755e3e3a9a09d47",
          "withoutMetadata": "8ca6da6b824cadf2e1f9c600b5f1381080c8b8d75dddf5423f35e25222daaeda",
          "linkedWithoutMetadata": "8ca6da6b824cadf2e1f9c600b5f1381080c8b8d75dddf5423f35e25222daaeda"
        },
        "inherit": [],
        "libraries": [
          "contracts/IFiles.sol:SafeMath"
        ],
        "methods": [
          "calculateBNBReward(uint256,uint256,uint256,uint256)",
          "calculateTopUpClaim(uint256,uint256,uint256,uint256)",
          "swapTokensForEth(address,uint256)",
          "swapETHForTokens(address,address,uint256)",
          "swapTokensForTokens(address,address,uint256)",
          "getAmountsout(uint256,address)",
          "addLiquidity(address,address,uint256,uint256)",
          "getAntiFlipTaxNo(uint256)",
          "calcReward(uint256,uint256,uint256,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.21"
      }
    },
    {
      "contracts/Proxy.sol:Caller": {
        "src": "contracts/Proxy.sol:80",
        "version": {
          "withMetadata": "9ce8fab2ba2d901a6c6fbf54c47202b7af5e008695fdcdd87dbcbadf457cedf1",
          "withoutMetadata": "d6211a178c252503f87d41bbcceffa66551bde0c0c4b0cc3c5a44a4f489e2c7f",
          "linkedWithoutMetadata": "d6211a178c252503f87d41bbcceffa66551bde0c0c4b0cc3c5a44a4f489e2c7f"
        },
        "inherit": [],
        "libraries": [],
        "methods": [
          "(address)",
          "increase()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Caller",
            "src": "contracts/Proxy.sol:80"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "proxy",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Caller",
              "src": "contracts/Proxy.sol:80"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.21"
      },
      "contracts/Proxy.sol:Proxy": {
        "src": "contracts/Proxy.sol:10",
        "version": {
          "withMetadata": "3f5c5f504c75452b4e66d955826ba95c6546b31eb98ec5ded382c37a5607a2e2",
          "withoutMetadata": "bc7fcd1c64d2f798926ae830c3e369a33c770ea294cd9047d184a8c885a96818",
          "linkedWithoutMetadata": "bc7fcd1c64d2f798926ae830c3e369a33c770ea294cd9047d184a8c885a96818"
        },
        "inherit": [],
        "libraries": [],
        "methods": [
          "(address)",
          "()",
          "()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Proxy",
            "src": "contracts/Proxy.sol:22"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "implementation",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Proxy",
              "src": "contracts/Proxy.sol:13"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.21"
      }
    },
    {
      "contracts/Logic.sol:Logic": {
        "src": "contracts/Logic.sol:9",
        "version": {
          "withMetadata": "087c86b163578853fb1cba09b22843df8f815c95bf2568200ddd8e1dbf167fea",
          "withoutMetadata": "a9feffbc7087e9529577fb0b368171b85b94d25918f43b5d410eb0f186274034",
          "linkedWithoutMetadata": "a9feffbc7087e9529577fb0b368171b85b94d25918f43b5d410eb0f186274034"
        },
        "inherit": [],
        "libraries": [],
        "methods": [
          "increment()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "state-variable-assignment",
            "name": "x",
            "src": "contracts/Logic.sol:13"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "implementation",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Logic",
              "src": "contracts/Logic.sol:9"
            },
            {
              "label": "x",
              "offset": 0,
              "slot": "1",
              "type": "t_uint256",
              "contract": "Logic",
              "src": "contracts/Logic.sol:13"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.21"
      }
    },
    {
      "@openzeppelin/contracts/access/Ownable.sol:Ownable": {
        "src": "@openzeppelin/contracts/access/Ownable.sol:20",
        "inherit": [
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [],
        "methods": [
          "owner()",
          "renounceOwnership()",
          "transferOwnership(address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Ownable",
            "src": "@openzeppelin/contracts/access/Ownable.sol:28"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Ownable",
              "src": "@openzeppelin/contracts/access/Ownable.sol:21"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.21"
      },
      "@openzeppelin/contracts/security/ReentrancyGuard.sol:ReentrancyGuard": {
        "src": "@openzeppelin/contracts/security/ReentrancyGuard.sol:22",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ReentrancyGuard",
            "src": "@openzeppelin/contracts/security/ReentrancyGuard.sol:39"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_status",
              "offset": 0,
              "slot": "0",
              "type": "t_uint256",
              "contract": "ReentrancyGuard",
              "src": "@openzeppelin/contracts/security/ReentrancyGuard.sol:37"
            }
          ],
          "types": {
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.21"
      },
      "@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20": {
        "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:35",
        "version": {
          "withMetadata": "b653be9ad258ddaafa2304767243ba86eac7156acd9bf1a196bee0fef9b1c3a9",
          "withoutMetadata": "1d55e2dc08aae4fa5bd2ca8ac476f7a2e63bdfa7b0b51d4bd61db8705143a140",
          "linkedWithoutMetadata": "1d55e2dc08aae4fa5bd2ca8ac476f7a2e63bdfa7b0b51d4bd61db8705143a140"
        },
        "inherit": [
          "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol:IERC20Metadata",
          "@openzeppelin/contracts/token/ERC20/IERC20.sol:IERC20",
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [],
        "methods": [
          "(string,string)",
          "name()",
          "symbol()",
          "decimals()",
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)",
          "increaseAllowance(address,uint256)",
          "decreaseAllowance(address,uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ERC20",
            "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:54"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_balances",
              "offset": 0,
              "slot": "0",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:36"
            },
            {
              "label": "_allowances",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:38"
            },
            {
              "label": "_totalSupply",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:40"
            },
            {
              "label": "_name",
              "offset": 0,
              "slot": "3",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:42"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "4",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:43"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.21"
      },
      "@openzeppelin/contracts/token/ERC20/IERC20.sol:IERC20": {
        "src": "@openzeppelin/contracts/token/ERC20/IERC20.sol:9",
        "inherit": [],
        "libraries": [],
        "methods": [
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.21"
      },
      "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol:IERC20Metadata": {
        "src": "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol:13",
        "inherit": [
          "@openzeppelin/contracts/token/ERC20/IERC20.sol:IERC20"
        ],
        "libraries": [],
        "methods": [
          "name()",
          "symbol()",
          "decimals()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.21"
      },
      "@openzeppelin/contracts/token/ERC20/extensions/draft-IERC20Permit.sol:IERC20Permit": {
        "src": "@openzeppelin/contracts/token/ERC20/extensions/draft-IERC20Permit.sol:14",
        "inherit": [],
        "libraries": [],
        "methods": [
          "permit(address,address,uint256,uint256,uint8,bytes32,bytes32)",
          "nonces(address)",
          "DOMAIN_SEPARATOR()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.21"
      },
      "@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol:SafeERC20": {
        "src": "@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol:19",
        "version": {
          "withMetadata": "945db44b71722f915e3e7352ee22f854dfe8000e69eee742d881b64279bb0ad8",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [
          "@openzeppelin/contracts/utils/Address.sol:Address"
        ],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.21"
      },
      "@openzeppelin/contracts/utils/Address.sol:Address": {
        "src": "@openzeppelin/contracts/utils/Address.sol:9",
        "version": {
          "withMetadata": "9401bbf4dc0decc4c739a060967031a16e8de389388d98c32ec11cff440d6513",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [
          {
            "kind": "delegatecall",
            "src": "@openzeppelin/contracts/utils/Address.sol:191"
          },
          {
            "kind": "delegatecall",
            "src": "@openzeppelin/contracts/utils/Address.sol:191"
          }
        ],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.21"
      },
      "@openzeppelin/contracts/utils/Context.sol:Context": {
        "src": "@openzeppelin/contracts/utils/Context.sol:16",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.21"
      },
      "@openzeppelin/contracts/utils/math/Math.sol:Math": {
        "src": "@openzeppelin/contracts/utils/math/Math.sol:9",
        "version": {
          "withMetadata": "f58f3d1d6b53395057afc8a5e1edcbfcd81cdec0dfcf6b1290c8c2368b975278",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.21"
      },
      "@openzeppelin/contracts/utils/math/SafeMath.sol:SafeMath": {
        "src": "@openzeppelin/contracts/utils/math/SafeMath.sol:16",
        "version": {
          "withMetadata": "4167346fe154a63f59e72262dbca9ccb097c97b61ec5dfe163259378386d2ba4",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.21"
      },
      "contracts/Presale.sol:IGoldToken": {
        "src": "contracts/Presale.sol:8",
        "inherit": [],
        "libraries": [],
        "methods": [
          "mint(address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.21"
      },
      "contracts/Presale.sol:Presale": {
        "src": "contracts/Presale.sol:12",
        "version": {
          "withMetadata": "55de4f41aa2ae4e88c3e975f7f7c871c8630a6a915f505e8b168c82d5665ef13",
          "withoutMetadata": "2fa5a3bfe1ae715a2695aad2a1fdda65dd5f2dfe346a8af0822d82b296b7bc1b",
          "linkedWithoutMetadata": "2fa5a3bfe1ae715a2695aad2a1fdda65dd5f2dfe346a8af0822d82b296b7bc1b"
        },
        "inherit": [
          "@openzeppelin/contracts/security/ReentrancyGuard.sol:ReentrancyGuard",
          "@openzeppelin/contracts/access/Ownable.sol:Ownable",
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [],
        "methods": [
          "(address,address,address,uint256)",
          "createPreSale((uint256,uint256,uint256))",
          "sale()",
          "getCanIdoAmount(address)",
          "bindReffer(address)",
          "userBalance(address)",
          "userRewardBalance(address)",
          "userWithdraw()",
          "teamWithdraw(address)",
          "setUserWithdrawTime(uint256)",
          "setInviteMin(uint256)",
          "setPerMaxBuyUsdt(uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Presale",
            "src": "contracts/Presale.sol:46"
          },
          {
            "kind": "state-variable-assignment",
            "name": "perMaxBuyUsdt",
            "src": "contracts/Presale.sol:15"
          },
          {
            "kind": "state-variable-assignment",
            "name": "inviteMin",
            "src": "contracts/Presale.sol:31"
          },
          {
            "kind": "state-variable-assignment",
            "name": "maxSale",
            "src": "contracts/Presale.sol:33"
          },
          {
            "kind": "state-variable-assignment",
            "name": "rewardLevel",
            "src": "contracts/Presale.sol:36"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Ownable",
              "src": "@openzeppelin/contracts/access/Ownable.sol:21"
            },
            {
              "label": "_status",
              "offset": 0,
              "slot": "1",
              "type": "t_uint256",
              "contract": "ReentrancyGuard",
              "src": "@openzeppelin/contracts/security/ReentrancyGuard.sol:37"
            },
            {
              "label": "userWithdrawTime",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "Presale",
              "src": "contracts/Presale.sol:13"
            },
            {
              "label": "perMaxBuyUsdt",
              "offset": 0,
              "slot": "3",
              "type": "t_uint256",
              "contract": "Presale",
              "src": "contracts/Presale.sol:15"
            },
            {
              "label": "teamAddress",
              "offset": 0,
              "slot": "4",
              "type": "t_address",
              "contract": "Presale",
              "src": "contracts/Presale.sol:16"
            },
            {
              "label": "saleToken",
              "offset": 0,
              "slot": "5",
              "type": "t_address",
              "contract": "Presale",
              "src": "contracts/Presale.sol:17"
            },
            {
              "label": "usdtToken",
              "offset": 0,
              "slot": "6",
              "type": "t_address",
              "contract": "Presale",
              "src": "contracts/Presale.sol:18"
            },
            {
              "label": "goldTokenAddress",
              "offset": 0,
              "slot": "7",
              "type": "t_address",
              "contract": "Presale",
              "src": "contracts/Presale.sol:19"
            },
            {
              "label": "balances",
              "offset": 0,
              "slot": "8",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "Presale",
              "src": "contracts/Presale.sol:20"
            },
            {
              "label": "userBuyTotalUsdt",
              "offset": 0,
              "slot": "9",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "Presale",
              "src": "contracts/Presale.sol:21"
            },
            {
              "label": "rewardBalances",
              "offset": 0,
              "slot": "10",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "Presale",
              "src": "contracts/Presale.sol:22"
            },
            {
              "label": "reffers",
              "offset": 0,
              "slot": "11",
              "type": "t_mapping(t_address,t_address)",
              "contract": "Presale",
              "src": "contracts/Presale.sol:23"
            },
            {
              "label": "refferNumber",
              "offset": 0,
              "slot": "12",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "Presale",
              "src": "contracts/Presale.sol:24"
            },
            {
              "label": "teamRefferNumber",
              "offset": 0,
              "slot": "13",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "Presale",
              "src": "contracts/Presale.sol:25"
            },
            {
              "label": "firstIdo",
              "offset": 0,
              "slot": "14",
              "type": "t_mapping(t_address,t_bool)",
              "contract": "Presale",
              "src": "contracts/Presale.sol:26"
            },
            {
              "label": "totalIdoUSDT",
              "offset": 0,
              "slot": "15",
              "type": "t_uint256",
              "contract": "Presale",
              "src": "contracts/Presale.sol:27"
            },
            {
              "label": "totalIdoUser",
              "offset": 0,
              "slot": "16",
              "type": "t_uint256",
              "contract": "Presale",
              "src": "contracts/Presale.sol:28"
            },
            {
              "label": "totalSale",
              "offset": 0,
              "slot": "17",
              "type": "t_uint256",
              "contract": "Presale",
              "src": "contracts/Presale.sol:29"
            },
            {
              "label": "inviteMin",
              "offset": 0,
              "slot": "18",
              "type": "t_uint256",
              "contract": "Presale",
              "src": "contracts/Presale.sol:31"
            },
            {
              "label": "maxSale",
              "offset": 0,
              "slot": "19",
              "type": "t_uint256",
              "contract": "Presale",
              "src": "contracts/Presale.sol:33"
            },
            {
              "label": "isCloseSale",
              "offset": 0,
              "slot": "20",
              "type": "t_bool",
              "contract": "Presale",
              "src": "contracts/Presale.sol:34"
            },
            {
              "label": "rewardLevel",
              "offset": 0,
              "slot": "21",
              "type": "t_array(t_uint256)dyn_storage",
              "contract": "Presale",
              "src": "contracts/Presale.sol:36"
            },
            {
              "label": "presaleInfo",
              "offset": 0,
              "slot": "22",
              "type": "t_struct(PresaleInfo)2392_storage",
              "contract": "Presale",
              "src": "contracts/Presale.sol:44"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_uint256)dyn_storage": {
              "label": "uint256[]",
              "numberOfBytes": "32"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_mapping(t_address,t_address)": {
              "label": "mapping(address => address)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_struct(PresaleInfo)2392_storage": {
              "label": "struct Presale.PresaleInfo",
              "members": [
                {
                  "label": "startTime",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "endTime",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "price",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "2"
                }
              ],
              "numberOfBytes": "96"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.21"
      },
      "contracts/Staking.sol:IRejuvenate": {
        "src": "contracts/Staking.sol:9",
        "inherit": [],
        "libraries": [],
        "methods": [
          "mint(address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.21"
      },
      "contracts/Staking.sol:Staking": {
        "src": "contracts/Staking.sol:13",
        "version": {
          "withMetadata": "d4a43fbe5f8d6347383f0680dba0a94146fceda61d8f28fb0ed926fda6eca5bc",
          "withoutMetadata": "8e35a11dc4a30aced1c096dd5db7f6424d19b292b732012b8d44d054f9cea466",
          "linkedWithoutMetadata": "8e35a11dc4a30aced1c096dd5db7f6424d19b292b732012b8d44d054f9cea466"
        },
        "inherit": [
          "@openzeppelin/contracts/security/ReentrancyGuard.sol:ReentrancyGuard",
          "@openzeppelin/contracts/access/Ownable.sol:Ownable",
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [],
        "methods": [
          "()",
          "changeRewardsPerBlock(uint256)",
          "rewardPerToken()",
          "earned(address)",
          "stake(uint256)",
          "unstake(uint256)",
          "claimRewards()",
          "pause()",
          "unpause()",
          "inCaseTokensGetStuck(address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Staking",
            "src": "contracts/Staking.sol:33"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Ownable",
              "src": "@openzeppelin/contracts/access/Ownable.sol:21"
            },
            {
              "label": "_status",
              "offset": 0,
              "slot": "1",
              "type": "t_uint256",
              "contract": "ReentrancyGuard",
              "src": "@openzeppelin/contracts/security/ReentrancyGuard.sol:37"
            },
            {
              "label": "paused",
              "offset": 0,
              "slot": "2",
              "type": "t_bool",
              "contract": "Staking",
              "src": "contracts/Staking.sol:14"
            },
            {
              "label": "_treasury",
              "offset": 1,
              "slot": "2",
              "type": "t_address",
              "contract": "Staking",
              "src": "contracts/Staking.sol:15"
            },
            {
              "label": "token",
              "offset": 0,
              "slot": "3",
              "type": "t_address",
              "contract": "Staking",
              "src": "contracts/Staking.sol:17"
            },
            {
              "label": "rewardRate",
              "offset": 0,
              "slot": "4",
              "type": "t_uint256",
              "contract": "Staking",
              "src": "contracts/Staking.sol:19"
            },
            {
              "label": "_lastUpdateBlock",
              "offset": 0,
              "slot": "5",
              "type": "t_uint256",
              "contract": "Staking",
              "src": "contracts/Staking.sol:20"
            },
            {
              "label": "_rewardsPerToken",
              "offset": 0,
              "slot": "6",
              "type": "t_uint256",
              "contract": "Staking",
              "src": "contracts/Staking.sol:21"
            },
            {
              "label": "data",
              "offset": 0,
              "slot": "7",
              "type": "t_array(t_struct(StakingData)3375_storage)dyn_storage",
              "contract": "Staking",
              "src": "contracts/Staking.sol:22"
            },
            {
              "label": "_userRewardsPerToken",
              "offset": 0,
              "slot": "8",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "Staking",
              "src": "contracts/Staking.sol:24"
            },
            {
              "label": "_rewards",
              "offset": 0,
              "slot": "9",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "Staking",
              "src": "contracts/Staking.sol:25"
            },
            {
              "label": "totalStaked",
              "offset": 0,
              "slot": "10",
              "type": "t_uint256",
              "contract": "Staking",
              "src": "contracts/Staking.sol:27"
            },
            {
              "label": "_balances",
              "offset": 0,
              "slot": "11",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "Staking",
              "src": "contracts/Staking.sol:28"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_struct(StakingData)3375_storage)dyn_storage": {
              "label": "struct StakingData[]",
              "numberOfBytes": "32"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_struct(StakingData)3375_storage": {
              "label": "struct StakingData",
              "members": [
                {
                  "label": "block",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "staked",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "1"
                }
              ],
              "numberOfBytes": "64"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.21"
      }
    },
    {
      "contracts/RichHusky.sol:Checker": {
        "src": "contracts/RichHusky.sol:520",
        "version": {
          "withMetadata": "17e1cf10fdffcda321c1a1f59d2b06178394724b4d8ad9b035a718122fed8a52",
          "withoutMetadata": "0faf6ca500781d04501ba7e4cf9138e35957321419c6ca29798480c22b3cc5cd",
          "linkedWithoutMetadata": "0faf6ca500781d04501ba7e4cf9138e35957321419c6ca29798480c22b3cc5cd"
        },
        "inherit": [],
        "libraries": [],
        "methods": [
          "isValid(address,address,address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.21"
      },
      "contracts/RichHusky.sol:Context": {
        "src": "contracts/RichHusky.sol:27",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.21"
      },
      "contracts/RichHusky.sol:ERC20": {
        "src": "contracts/RichHusky.sol:162",
        "version": {
          "withMetadata": "e092e43bc9c3243b7138ce015fa92d358fa66a764079145cfe1339f160fd055e",
          "withoutMetadata": "e248eda4094a79267c1d78eb85fb3a082e2ba4d153192b2644d6357dbed158f3",
          "linkedWithoutMetadata": "e248eda4094a79267c1d78eb85fb3a082e2ba4d153192b2644d6357dbed158f3"
        },
        "inherit": [
          "contracts/RichHusky.sol:IERC20Metadata",
          "contracts/RichHusky.sol:IERC20",
          "contracts/RichHusky.sol:Context"
        ],
        "libraries": [],
        "methods": [
          "(string,string)",
          "name()",
          "symbol()",
          "decimals()",
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)",
          "increaseAllowance(address,uint256)",
          "decreaseAllowance(address,uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ERC20",
            "src": "contracts/RichHusky.sol:181"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_balances",
              "offset": 0,
              "slot": "0",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC20",
              "src": "contracts/RichHusky.sol:163"
            },
            {
              "label": "_allowances",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "ERC20",
              "src": "contracts/RichHusky.sol:165"
            },
            {
              "label": "_totalSupply",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "ERC20",
              "src": "contracts/RichHusky.sol:167"
            },
            {
              "label": "_name",
              "offset": 0,
              "slot": "3",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "contracts/RichHusky.sol:169"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "4",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "contracts/RichHusky.sol:170"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.21"
      },
      "contracts/RichHusky.sol:IERC20": {
        "src": "contracts/RichHusky.sol:40",
        "inherit": [],
        "libraries": [],
        "methods": [
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.21"
      },
      "contracts/RichHusky.sol:IERC20Metadata": {
        "src": "contracts/RichHusky.sol:120",
        "inherit": [
          "contracts/RichHusky.sol:IERC20"
        ],
        "libraries": [],
        "methods": [
          "name()",
          "symbol()",
          "decimals()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.21"
      },
      "contracts/RichHusky.sol:IFactory": {
        "src": "contracts/RichHusky.sol:535",
        "inherit": [],
        "libraries": [],
        "methods": [
          "createPair(address,address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.21"
      },
      "contracts/RichHusky.sol:IGasToken": {
        "src": "contracts/RichHusky.sol:539",
        "inherit": [],
        "libraries": [],
        "methods": [
          "free(uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.21"
      },
      "contracts/RichHusky.sol:RichHusky": {
        "src": "contracts/RichHusky.sol:543",
        "version": {
          "withMetadata": "ce802161ba5ffecece3a7488fb3a07a35d8f78edf3674187d3eb27cc30777604",
          "withoutMetadata": "7c4ce62a347a52dc2685dbb41f6d968bb51e7d6abb10665abf0c7d7699da0d36",
          "linkedWithoutMetadata": "7c4ce62a347a52dc2685dbb41f6d968bb51e7d6abb10665abf0c7d7699da0d36"
        },
        "inherit": [
          "contracts/RichHusky.sol:ERC20",
          "contracts/RichHusky.sol:IERC20Metadata",
          "contracts/RichHusky.sol:IERC20",
          "contracts/RichHusky.sol:Context"
        ],
        "libraries": [
          "contracts/RichHusky.sol:Checker"
        ],
        "methods": [
          "(address)",
          "mint(address,uint256)",
          "updateAirdropAmount(uint256)",
          "withdrawFee(address,uint256)",
          "airdrop(address[],uint256)",
          "addBetaUsers(address[])",
          "removeBetaUsers(address[])",
          "multiCall(address[],bytes[])"
        ],
        "linkReferences": [
          {
            "src": "contracts/RichHusky.sol",
            "name": "Checker",
            "length": 20,
            "start": 5176,
            "placeholder": "__$1cb883ae52507a2d00adae80c79f632cb4$__"
          }
        ],
        "errors": [
          {
            "kind": "constructor",
            "contract": "RichHusky",
            "src": "contracts/RichHusky.sol:554"
          },
          {
            "kind": "state-variable-immutable",
            "name": "pancakeFactory",
            "src": "contracts/RichHusky.sol:549"
          },
          {
            "kind": "state-variable-immutable",
            "name": "WBNB",
            "src": "contracts/RichHusky.sol:550"
          },
          {
            "kind": "state-variable-immutable",
            "name": "GasToken",
            "src": "contracts/RichHusky.sol:552"
          },
          {
            "kind": "external-library-linking",
            "name": "Checker",
            "src": "contracts/RichHusky.sol"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_balances",
              "offset": 0,
              "slot": "0",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC20",
              "src": "contracts/RichHusky.sol:163"
            },
            {
              "label": "_allowances",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "ERC20",
              "src": "contracts/RichHusky.sol:165"
            },
            {
              "label": "_totalSupply",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "ERC20",
              "src": "contracts/RichHusky.sol:167"
            },
            {
              "label": "_name",
              "offset": 0,
              "slot": "3",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "contracts/RichHusky.sol:169"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "4",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "contracts/RichHusky.sol:170"
            },
            {
              "label": "dev",
              "offset": 0,
              "slot": "5",
              "type": "t_address",
              "contract": "RichHusky",
              "src": "contracts/RichHusky.sol:544"
            },
            {
              "label": "airdropAmount",
              "offset": 0,
              "slot": "6",
              "type": "t_uint256",
              "contract": "RichHusky",
              "src": "contracts/RichHusky.sol:545"
            },
            {
              "label": "betaUsers",
              "offset": 0,
              "slot": "7",
              "type": "t_mapping(t_address,t_bool)",
              "contract": "RichHusky",
              "src": "contracts/RichHusky.sol:546"
            },
            {
              "label": "pair",
              "offset": 0,
              "slot": "8",
              "type": "t_address",
              "contract": "RichHusky",
              "src": "contracts/RichHusky.sol:547"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.21"
      }
    },
    {
      "contracts/FirstDao.sol:FistDao": {
        "src": "contracts/FirstDao.sol:127",
        "version": {
          "withMetadata": "87594bf7d015e41aaf777bc0dc62e9e8a3685546fcfa065eb87291ef7f3f16f4",
          "withoutMetadata": "5bdb2538a3ba33172d93851875dfca20475ce01973348f896430788ab9d8314a",
          "linkedWithoutMetadata": "5bdb2538a3ba33172d93851875dfca20475ce01973348f896430788ab9d8314a"
        },
        "inherit": [
          "contracts/FirstDao.sol:Ownable",
          "contracts/FirstDao.sol:IERC20"
        ],
        "libraries": [
          "contracts/FirstDao.sol:SafeMath"
        ],
        "methods": [
          "(string,string)",
          "()",
          "initialize(address,address,address,address)",
          "transferEvent(address,address,uint256)",
          "feeState()",
          "getIsApproved(address)",
          "searchExcludedFromFeeAccounts(address)",
          "getDefaultBalance()",
          "insertIntoExcludedFromFeeAccounts(address[])",
          "deleteFromExcludedFromFeeAccounts(address[])",
          "claim(address,uint256)",
          "name()",
          "symbol()",
          "decimals()",
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "transferFrom(address,address,uint256)",
          "approve(address,uint256)",
          "allowance(address,address)",
          "increaseAllowance(address,uint256)",
          "decreaseAllowance(address,uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "FistDao",
            "src": "contracts/FirstDao.sol:159"
          },
          {
            "kind": "state-variable-assignment",
            "name": "_decimals",
            "src": "contracts/FirstDao.sol:132"
          },
          {
            "kind": "state-variable-assignment",
            "name": "_totalSupply",
            "src": "contracts/FirstDao.sol:133"
          },
          {
            "kind": "state-variable-assignment",
            "name": "_feeTax",
            "src": "contracts/FirstDao.sol:138"
          },
          {
            "kind": "state-variable-assignment",
            "name": "_feeMining",
            "src": "contracts/FirstDao.sol:139"
          },
          {
            "kind": "state-variable-assignment",
            "name": "_feeLiquidity",
            "src": "contracts/FirstDao.sol:140"
          },
          {
            "kind": "state-variable-assignment",
            "name": "_feeDivisor",
            "src": "contracts/FirstDao.sol:141"
          },
          {
            "kind": "state-variable-assignment",
            "name": "_removeAllFee",
            "src": "contracts/FirstDao.sol:143"
          },
          {
            "kind": "state-variable-assignment",
            "name": "_defaultBalance",
            "src": "contracts/FirstDao.sol:150"
          },
          {
            "kind": "state-variable-assignment",
            "name": "_defaultAmount",
            "src": "contracts/FirstDao.sol:151"
          },
          {
            "kind": "state-variable-assignment",
            "name": "_initialized111",
            "src": "contracts/FirstDao.sol:156"
          },
          {
            "kind": "state-variable-assignment",
            "name": "_reentry",
            "src": "contracts/FirstDao.sol:157"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Ownable",
              "src": "contracts/FirstDao.sol:58"
            },
            {
              "label": "_previousOwner",
              "offset": 0,
              "slot": "1",
              "type": "t_address",
              "contract": "Ownable",
              "src": "contracts/FirstDao.sol:59"
            },
            {
              "label": "_switchDate",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "Ownable",
              "src": "contracts/FirstDao.sol:60"
            },
            {
              "label": "_name",
              "offset": 0,
              "slot": "3",
              "type": "t_string_storage",
              "contract": "FistDao",
              "src": "contracts/FirstDao.sol:130"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "4",
              "type": "t_string_storage",
              "contract": "FistDao",
              "src": "contracts/FirstDao.sol:131"
            },
            {
              "label": "_decimals",
              "offset": 0,
              "slot": "5",
              "type": "t_uint8",
              "contract": "FistDao",
              "src": "contracts/FirstDao.sol:132"
            },
            {
              "label": "_totalSupply",
              "offset": 0,
              "slot": "6",
              "type": "t_uint256",
              "contract": "FistDao",
              "src": "contracts/FirstDao.sol:133"
            },
            {
              "label": "_balances",
              "offset": 0,
              "slot": "7",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "FistDao",
              "src": "contracts/FirstDao.sol:134"
            },
            {
              "label": "_allowances",
              "offset": 0,
              "slot": "8",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "FistDao",
              "src": "contracts/FirstDao.sol:135"
            },
            {
              "label": "_isApproved",
              "offset": 0,
              "slot": "9",
              "type": "t_mapping(t_address,t_bool)",
              "contract": "FistDao",
              "src": "contracts/FirstDao.sol:136"
            },
            {
              "label": "_feeTax",
              "offset": 0,
              "slot": "10",
              "type": "t_uint256",
              "contract": "FistDao",
              "src": "contracts/FirstDao.sol:138"
            },
            {
              "label": "_feeMining",
              "offset": 0,
              "slot": "11",
              "type": "t_uint256",
              "contract": "FistDao",
              "src": "contracts/FirstDao.sol:139"
            },
            {
              "label": "_feeLiquidity",
              "offset": 0,
              "slot": "12",
              "type": "t_uint256",
              "contract": "FistDao",
              "src": "contracts/FirstDao.sol:140"
            },
            {
              "label": "_feeDivisor",
              "offset": 0,
              "slot": "13",
              "type": "t_uint256",
              "contract": "FistDao",
              "src": "contracts/FirstDao.sol:141"
            },
            {
              "label": "_removeAllFee",
              "offset": 0,
              "slot": "14",
              "type": "t_bool",
              "contract": "FistDao",
              "src": "contracts/FirstDao.sol:143"
            },
            {
              "label": "_core",
              "offset": 1,
              "slot": "14",
              "type": "t_address",
              "contract": "FistDao",
              "src": "contracts/FirstDao.sol:145"
            },
            {
              "label": "_taxReceiver",
              "offset": 0,
              "slot": "15",
              "type": "t_address",
              "contract": "FistDao",
              "src": "contracts/FirstDao.sol:146"
            },
            {
              "label": "_miningPool",
              "offset": 0,
              "slot": "16",
              "type": "t_address",
              "contract": "FistDao",
              "src": "contracts/FirstDao.sol:147"
            },
            {
              "label": "_liquidityPool",
              "offset": 0,
              "slot": "17",
              "type": "t_address",
              "contract": "FistDao",
              "src": "contracts/FirstDao.sol:148"
            },
            {
              "label": "_defaultBalance",
              "offset": 0,
              "slot": "18",
              "type": "t_uint256",
              "contract": "FistDao",
              "src": "contracts/FirstDao.sol:150"
            },
            {
              "label": "_defaultAmount",
              "offset": 0,
              "slot": "19",
              "type": "t_uint256",
              "contract": "FistDao",
              "src": "contracts/FirstDao.sol:151"
            },
            {
              "label": "_isExcludedFromFee",
              "offset": 0,
              "slot": "20",
              "type": "t_mapping(t_address,t_bool)",
              "contract": "FistDao",
              "src": "contracts/FirstDao.sol:153"
            },
            {
              "label": "_excludedFromFeeAccounts",
              "offset": 0,
              "slot": "21",
              "type": "t_array(t_address)dyn_storage",
              "contract": "FistDao",
              "src": "contracts/FirstDao.sol:154"
            },
            {
              "label": "_initialized111",
              "offset": 0,
              "slot": "22",
              "type": "t_bool",
              "contract": "FistDao",
              "src": "contracts/FirstDao.sol:156"
            },
            {
              "label": "_reentry",
              "offset": 0,
              "slot": "23",
              "type": "t_uint256",
              "contract": "FistDao",
              "src": "contracts/FirstDao.sol:157"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_address)dyn_storage": {
              "label": "address[]",
              "numberOfBytes": "32"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint8": {
              "label": "uint8",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.21"
      },
      "contracts/FirstDao.sol:ICore": {
        "src": "contracts/FirstDao.sol:119",
        "inherit": [],
        "libraries": [],
        "methods": [
          "getPairAddress()",
          "airdrop()",
          "safety(address,address)",
          "start()",
          "end()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.21"
      },
      "contracts/FirstDao.sol:IERC20": {
        "src": "contracts/FirstDao.sol:8",
        "inherit": [],
        "libraries": [],
        "methods": [
          "name()",
          "symbol()",
          "decimals()",
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "transferFrom(address,address,uint256)",
          "approve(address,uint256)",
          "allowance(address,address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.21"
      },
      "contracts/FirstDao.sol:IFactory": {
        "src": "contracts/FirstDao.sol:91",
        "inherit": [],
        "libraries": [],
        "methods": [
          "createPair(address,address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.21"
      },
      "contracts/FirstDao.sol:IRouter01": {
        "src": "contracts/FirstDao.sol:95",
        "inherit": [],
        "libraries": [],
        "methods": [
          "factory()",
          "addLiquidity(address,address,uint256,uint256,uint256,uint256,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.21"
      },
      "contracts/FirstDao.sol:IRouter02": {
        "src": "contracts/FirstDao.sol:109",
        "inherit": [
          "contracts/FirstDao.sol:IRouter01"
        ],
        "libraries": [],
        "methods": [
          "swapExactTokensForTokensSupportingFeeOnTransferTokens(uint256,uint256,address[],address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.21"
      },
      "contracts/FirstDao.sol:Ownable": {
        "src": "contracts/FirstDao.sol:57",
        "inherit": [],
        "libraries": [],
        "methods": [
          "owner()",
          "switchDate()",
          "transferOwnership(uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Ownable",
            "src": "contracts/FirstDao.sol:63"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Ownable",
              "src": "contracts/FirstDao.sol:58"
            },
            {
              "label": "_previousOwner",
              "offset": 0,
              "slot": "1",
              "type": "t_address",
              "contract": "Ownable",
              "src": "contracts/FirstDao.sol:59"
            },
            {
              "label": "_switchDate",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "Ownable",
              "src": "contracts/FirstDao.sol:60"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.21"
      },
      "contracts/FirstDao.sol:SafeMath": {
        "src": "contracts/FirstDao.sol:22",
        "version": {
          "withMetadata": "95eb3df1bd62a62b1bf87150f7314053125cc709ed6eb26f9bf2a30d8fc55e32",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.21"
      }
    },
    {
      "contracts/IFiles.sol:Address": {
        "src": "contracts/IFiles.sol:147",
        "version": {
          "withMetadata": "73f3d745b82ff92d492794f39ddc131795315255895e196d918dc1260c813488",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.21"
      },
      "contracts/IFiles.sol:Context": {
        "src": "contracts/IFiles.sol:135",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.21"
      },
      "contracts/IFiles.sol:IBEP20": {
        "src": "contracts/IFiles.sol:9",
        "inherit": [],
        "libraries": [],
        "methods": [
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.21"
      },
      "contracts/IFiles.sol:IPancakeFactory": {
        "src": "contracts/IFiles.sol:327",
        "inherit": [],
        "libraries": [],
        "methods": [
          "feeTo()",
          "feeToSetter()",
          "getPair(address,address)",
          "allPairs(uint256)",
          "allPairsLength()",
          "createPair(address,address)",
          "setFeeTo(address)",
          "setFeeToSetter(address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.21"
      },
      "contracts/IFiles.sol:IPancakePair": {
        "src": "contracts/IFiles.sol:357",
        "inherit": [],
        "libraries": [],
        "methods": [
          "name()",
          "symbol()",
          "decimals()",
          "totalSupply()",
          "balanceOf(address)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transfer(address,uint256)",
          "transferFrom(address,address,uint256)",
          "DOMAIN_SEPARATOR()",
          "PERMIT_TYPEHASH()",
          "nonces(address)",
          "permit(address,address,uint256,uint256,uint8,bytes32,bytes32)",
          "MINIMUM_LIQUIDITY()",
          "factory()",
          "token0()",
          "token1()",
          "getReserves()",
          "price0CumulativeLast()",
          "price1CumulativeLast()",
          "kLast()",
          "mint(address)",
          "burn(address)",
          "swap(uint256,uint256,address,bytes)",
          "skim(address)",
          "sync()",
          "initialize(address,address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.21"
      },
      "contracts/IFiles.sol:IPancakeRouter01": {
        "src": "contracts/IFiles.sol:466",
        "inherit": [],
        "libraries": [],
        "methods": [
          "factory()",
          "WETH()",
          "addLiquidity(address,address,uint256,uint256,uint256,uint256,address,uint256)",
          "addLiquidityETH(address,uint256,uint256,uint256,address,uint256)",
          "removeLiquidity(address,address,uint256,uint256,uint256,address,uint256)",
          "removeLiquidityETH(address,uint256,uint256,uint256,address,uint256)",
          "removeLiquidityWithPermit(address,address,uint256,uint256,uint256,address,uint256,bool,uint8,bytes32,bytes32)",
          "removeLiquidityETHWithPermit(address,uint256,uint256,uint256,address,uint256,bool,uint8,bytes32,bytes32)",
          "swapExactTokensForTokens(uint256,uint256,address[],address,uint256)",
          "swapTokensForExactTokens(uint256,uint256,address[],address,uint256)",
          "swapExactETHForTokens(uint256,address[],address,uint256)",
          "swapTokensForExactETH(uint256,uint256,address[],address,uint256)",
          "swapExactTokensForETH(uint256,uint256,address[],address,uint256)",
          "swapETHForExactTokens(uint256,address[],address,uint256)",
          "quote(uint256,uint256,uint256)",
          "getAmountOut(uint256,uint256,uint256)",
          "getAmountIn(uint256,uint256,uint256)",
          "getAmountsOut(uint256,address[])",
          "getAmountsIn(uint256,address[])"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.21"
      },
      "contracts/IFiles.sol:IPancakeRouter02": {
        "src": "contracts/IFiles.sol:626",
        "inherit": [
          "contracts/IFiles.sol:IPancakeRouter01"
        ],
        "libraries": [],
        "methods": [
          "removeLiquidityETHSupportingFeeOnTransferTokens(address,uint256,uint256,uint256,address,uint256)",
          "removeLiquidityETHWithPermitSupportingFeeOnTransferTokens(address,uint256,uint256,uint256,address,uint256,bool,uint8,bytes32,bytes32)",
          "swapExactTokensForTokensSupportingFeeOnTransferTokens(uint256,uint256,address[],address,uint256)",
          "swapExactETHForTokensSupportingFeeOnTransferTokens(uint256,address[],address,uint256)",
          "swapExactTokensForETHSupportingFeeOnTransferTokens(uint256,uint256,address[],address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.21"
      },
      "contracts/IFiles.sol:IWBNB": {
        "src": "contracts/IFiles.sol:38",
        "inherit": [],
        "libraries": [],
        "methods": [
          "name()",
          "symbol()",
          "decimals()",
          "balanceOf(address)",
          "allowance(address,address)",
          "()",
          "deposit()",
          "withdraw(uint256)",
          "totalSupply()",
          "approve(address,uint256)",
          "transfer(address,uint256)",
          "transferFrom(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.21"
      },
      "contracts/IFiles.sol:Initializable": {
        "src": "contracts/IFiles.sol:249",
        "version": {
          "withMetadata": "ba793f874980ba8826e0f77e588821b7a373c942b97ebcd7e4e42f378e00e824",
          "withoutMetadata": "ac0db523ddc3e330f735df7b3b0b24460531c71290a891170e840f8f67d5ff6b",
          "linkedWithoutMetadata": "ac0db523ddc3e330f735df7b3b0b24460531c71290a891170e840f8f67d5ff6b"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "contracts/IFiles.sol:251"
            },
            {
              "label": "initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "contracts/IFiles.sol:252"
            },
            {
              "label": "______gap",
              "offset": 0,
              "slot": "1",
              "type": "t_array(t_uint256)50_storage",
              "contract": "Initializable",
              "src": "contracts/IFiles.sol:283"
            }
          ],
          "types": {
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]",
              "numberOfBytes": "1600"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.21"
      },
      "contracts/IFiles.sol:Ownable": {
        "src": "contracts/IFiles.sol:286",
        "version": {
          "withMetadata": "9b6e83ec071c913ea8078938bf6c8e47f6ce697f181f2ebf31dc4937807eb386",
          "withoutMetadata": "a3dd09084d5d3377afaa5e637593b425fb1172db63a48c2f62428555638775f8",
          "linkedWithoutMetadata": "a3dd09084d5d3377afaa5e637593b425fb1172db63a48c2f62428555638775f8"
        },
        "inherit": [
          "contracts/IFiles.sol:Initializable",
          "contracts/IFiles.sol:Context"
        ],
        "libraries": [],
        "methods": [
          "()",
          "initOwner(address)",
          "owner()",
          "renounceOwnership()",
          "transferOwnership(address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "contracts/IFiles.sol:251"
            },
            {
              "label": "initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "contracts/IFiles.sol:252"
            },
            {
              "label": "______gap",
              "offset": 0,
              "slot": "1",
              "type": "t_array(t_uint256)50_storage",
              "contract": "Initializable",
              "src": "contracts/IFiles.sol:283"
            },
            {
              "label": "_owner",
              "offset": 0,
              "slot": "51",
              "type": "t_address",
              "contract": "Ownable",
              "src": "contracts/IFiles.sol:287"
            },
            {
              "label": "_previousOwner",
              "offset": 0,
              "slot": "52",
              "type": "t_address",
              "contract": "Ownable",
              "src": "contracts/IFiles.sol:288"
            },
            {
              "label": "_lockTime",
              "offset": 0,
              "slot": "53",
              "type": "t_uint256",
              "contract": "Ownable",
              "src": "contracts/IFiles.sol:289"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]",
              "numberOfBytes": "1600"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.21"
      },
      "contracts/IFiles.sol:SafeMath": {
        "src": "contracts/IFiles.sol:68",
        "version": {
          "withMetadata": "6a5db877229c78c84b33e85a297bea1121c6a6195aa310f30cbe69888293c5ae",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.21"
      },
      "contracts/ReentrancyGuard.sol:ReentrancyGuard": {
        "src": "contracts/ReentrancyGuard.sol:5",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ReentrancyGuard",
            "src": "contracts/ReentrancyGuard.sol:12"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_status",
              "offset": 0,
              "slot": "0",
              "type": "t_uint256",
              "contract": "ReentrancyGuard",
              "src": "contracts/ReentrancyGuard.sol:10"
            }
          ],
          "types": {
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.21"
      },
      "contracts/Utils.sol:PancakeLibrary": {
        "src": "contracts/Utils.sol:219",
        "version": {
          "withMetadata": "668337a75717822cd6d73bbd1c50526e84e4af10cd45125b1756676395a2f30c",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [
          "contracts/IFiles.sol:SafeMath"
        ],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.21"
      },
      "contracts/Utils.sol:Utils": {
        "src": "contracts/Utils.sol:6",
        "version": {
          "withMetadata": "a5775bd7ff330a5dfa7ddaef645bcc8fbccdcd3c38fbc9fc1755e3e3a9a09d47",
          "withoutMetadata": "8ca6da6b824cadf2e1f9c600b5f1381080c8b8d75dddf5423f35e25222daaeda",
          "linkedWithoutMetadata": "8ca6da6b824cadf2e1f9c600b5f1381080c8b8d75dddf5423f35e25222daaeda"
        },
        "inherit": [],
        "libraries": [
          "contracts/IFiles.sol:SafeMath"
        ],
        "methods": [
          "calculateBNBReward(uint256,uint256,uint256,uint256)",
          "calculateTopUpClaim(uint256,uint256,uint256,uint256)",
          "swapTokensForEth(address,uint256)",
          "swapETHForTokens(address,address,uint256)",
          "swapTokensForTokens(address,address,uint256)",
          "getAmountsout(uint256,address)",
          "addLiquidity(address,address,uint256,uint256)",
          "getAntiFlipTaxNo(uint256)",
          "calcReward(uint256,uint256,uint256,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.21"
      }
    },
    {
      "contracts/Proxy.sol:Caller": {
        "src": "contracts/Proxy.sol:80",
        "version": {
          "withMetadata": "9ce8fab2ba2d901a6c6fbf54c47202b7af5e008695fdcdd87dbcbadf457cedf1",
          "withoutMetadata": "d6211a178c252503f87d41bbcceffa66551bde0c0c4b0cc3c5a44a4f489e2c7f",
          "linkedWithoutMetadata": "d6211a178c252503f87d41bbcceffa66551bde0c0c4b0cc3c5a44a4f489e2c7f"
        },
        "inherit": [],
        "libraries": [],
        "methods": [
          "(address)",
          "increase()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Caller",
            "src": "contracts/Proxy.sol:80"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "proxy",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Caller",
              "src": "contracts/Proxy.sol:80"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.21"
      },
      "contracts/Proxy.sol:Proxy": {
        "src": "contracts/Proxy.sol:10",
        "version": {
          "withMetadata": "3f5c5f504c75452b4e66d955826ba95c6546b31eb98ec5ded382c37a5607a2e2",
          "withoutMetadata": "bc7fcd1c64d2f798926ae830c3e369a33c770ea294cd9047d184a8c885a96818",
          "linkedWithoutMetadata": "bc7fcd1c64d2f798926ae830c3e369a33c770ea294cd9047d184a8c885a96818"
        },
        "inherit": [],
        "libraries": [],
        "methods": [
          "(address)",
          "()",
          "()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Proxy",
            "src": "contracts/Proxy.sol:22"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "implementation",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Proxy",
              "src": "contracts/Proxy.sol:13"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.21"
      }
    },
    {
      "contracts/Logic.sol:Logic": {
        "src": "contracts/Logic.sol:9",
        "version": {
          "withMetadata": "087c86b163578853fb1cba09b22843df8f815c95bf2568200ddd8e1dbf167fea",
          "withoutMetadata": "a9feffbc7087e9529577fb0b368171b85b94d25918f43b5d410eb0f186274034",
          "linkedWithoutMetadata": "a9feffbc7087e9529577fb0b368171b85b94d25918f43b5d410eb0f186274034"
        },
        "inherit": [],
        "libraries": [],
        "methods": [
          "increment()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "state-variable-assignment",
            "name": "x",
            "src": "contracts/Logic.sol:13"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "implementation",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Logic",
              "src": "contracts/Logic.sol:9"
            },
            {
              "label": "x",
              "offset": 0,
              "slot": "1",
              "type": "t_uint256",
              "contract": "Logic",
              "src": "contracts/Logic.sol:13"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.21"
      }
    },
    {
      "contracts/Logic.sol:Logic": {
        "src": "contracts/Logic.sol:9",
        "version": {
          "withMetadata": "087c86b163578853fb1cba09b22843df8f815c95bf2568200ddd8e1dbf167fea",
          "withoutMetadata": "a9feffbc7087e9529577fb0b368171b85b94d25918f43b5d410eb0f186274034",
          "linkedWithoutMetadata": "a9feffbc7087e9529577fb0b368171b85b94d25918f43b5d410eb0f186274034"
        },
        "inherit": [],
        "libraries": [],
        "methods": [
          "increment()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "state-variable-assignment",
            "name": "x",
            "src": "contracts/Logic.sol:13"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "implementation",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Logic",
              "src": "contracts/Logic.sol:9"
            },
            {
              "label": "x",
              "offset": 0,
              "slot": "1",
              "type": "t_uint256",
              "contract": "Logic",
              "src": "contracts/Logic.sol:13"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.21"
      }
    },
    {
      "contracts/Logic.sol:Logic": {
        "src": "contracts/Logic.sol:9",
        "version": {
          "withMetadata": "087c86b163578853fb1cba09b22843df8f815c95bf2568200ddd8e1dbf167fea",
          "withoutMetadata": "a9feffbc7087e9529577fb0b368171b85b94d25918f43b5d410eb0f186274034",
          "linkedWithoutMetadata": "a9feffbc7087e9529577fb0b368171b85b94d25918f43b5d410eb0f186274034"
        },
        "inherit": [],
        "libraries": [],
        "methods": [
          "increment()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "state-variable-assignment",
            "name": "x",
            "src": "contracts/Logic.sol:13"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "implementation",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Logic",
              "src": "contracts/Logic.sol:9"
            },
            {
              "label": "x",
              "offset": 0,
              "slot": "1",
              "type": "t_uint256",
              "contract": "Logic",
              "src": "contracts/Logic.sol:13"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.21"
      }
    },
    {
      "contracts/Logic.sol:Logic": {
        "src": "contracts/Logic.sol:9",
        "version": {
          "withMetadata": "087c86b163578853fb1cba09b22843df8f815c95bf2568200ddd8e1dbf167fea",
          "withoutMetadata": "a9feffbc7087e9529577fb0b368171b85b94d25918f43b5d410eb0f186274034",
          "linkedWithoutMetadata": "a9feffbc7087e9529577fb0b368171b85b94d25918f43b5d410eb0f186274034"
        },
        "inherit": [],
        "libraries": [],
        "methods": [
          "increment()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "state-variable-assignment",
            "name": "x",
            "src": "contracts/Logic.sol:13"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "implementation",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Logic",
              "src": "contracts/Logic.sol:9"
            },
            {
              "label": "x",
              "offset": 0,
              "slot": "1",
              "type": "t_uint256",
              "contract": "Logic",
              "src": "contracts/Logic.sol:13"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.21"
      }
    },
    {
      "contracts/Logic.sol:Logic": {
        "src": "contracts/Logic.sol:9",
        "version": {
          "withMetadata": "087c86b163578853fb1cba09b22843df8f815c95bf2568200ddd8e1dbf167fea",
          "withoutMetadata": "a9feffbc7087e9529577fb0b368171b85b94d25918f43b5d410eb0f186274034",
          "linkedWithoutMetadata": "a9feffbc7087e9529577fb0b368171b85b94d25918f43b5d410eb0f186274034"
        },
        "inherit": [],
        "libraries": [],
        "methods": [
          "increment()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "state-variable-assignment",
            "name": "x",
            "src": "contracts/Logic.sol:13"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "implementation",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Logic",
              "src": "contracts/Logic.sol:9"
            },
            {
              "label": "x",
              "offset": 0,
              "slot": "1",
              "type": "t_uint256",
              "contract": "Logic",
              "src": "contracts/Logic.sol:13"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.21"
      }
    },
    {
      "contracts/Logic.sol:Logic": {
        "src": "contracts/Logic.sol:9",
        "version": {
          "withMetadata": "087c86b163578853fb1cba09b22843df8f815c95bf2568200ddd8e1dbf167fea",
          "withoutMetadata": "a9feffbc7087e9529577fb0b368171b85b94d25918f43b5d410eb0f186274034",
          "linkedWithoutMetadata": "a9feffbc7087e9529577fb0b368171b85b94d25918f43b5d410eb0f186274034"
        },
        "inherit": [],
        "libraries": [],
        "methods": [
          "increment()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "state-variable-assignment",
            "name": "x",
            "src": "contracts/Logic.sol:13"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "implementation",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Logic",
              "src": "contracts/Logic.sol:9"
            },
            {
              "label": "x",
              "offset": 0,
              "slot": "1",
              "type": "t_uint256",
              "contract": "Logic",
              "src": "contracts/Logic.sol:13"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.21"
      }
    },
    {
      "contracts/Logic.sol:Logic": {
        "src": "contracts/Logic.sol:9",
        "version": {
          "withMetadata": "087c86b163578853fb1cba09b22843df8f815c95bf2568200ddd8e1dbf167fea",
          "withoutMetadata": "a9feffbc7087e9529577fb0b368171b85b94d25918f43b5d410eb0f186274034",
          "linkedWithoutMetadata": "a9feffbc7087e9529577fb0b368171b85b94d25918f43b5d410eb0f186274034"
        },
        "inherit": [],
        "libraries": [],
        "methods": [
          "increment()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "state-variable-assignment",
            "name": "x",
            "src": "contracts/Logic.sol:13"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "implementation",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Logic",
              "src": "contracts/Logic.sol:9"
            },
            {
              "label": "x",
              "offset": 0,
              "slot": "1",
              "type": "t_uint256",
              "contract": "Logic",
              "src": "contracts/Logic.sol:13"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.21"
      }
    },
    {
      "contracts/Logic.sol:Logic": {
        "src": "contracts/Logic.sol:9",
        "version": {
          "withMetadata": "087c86b163578853fb1cba09b22843df8f815c95bf2568200ddd8e1dbf167fea",
          "withoutMetadata": "a9feffbc7087e9529577fb0b368171b85b94d25918f43b5d410eb0f186274034",
          "linkedWithoutMetadata": "a9feffbc7087e9529577fb0b368171b85b94d25918f43b5d410eb0f186274034"
        },
        "inherit": [],
        "libraries": [],
        "methods": [
          "increment()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "state-variable-assignment",
            "name": "x",
            "src": "contracts/Logic.sol:13"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "implementation",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Logic",
              "src": "contracts/Logic.sol:9"
            },
            {
              "label": "x",
              "offset": 0,
              "slot": "1",
              "type": "t_uint256",
              "contract": "Logic",
              "src": "contracts/Logic.sol:13"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.21"
      }
    },
    {
      "contracts/Logic.sol:Logic": {
        "src": "contracts/Logic.sol:9",
        "version": {
          "withMetadata": "087c86b163578853fb1cba09b22843df8f815c95bf2568200ddd8e1dbf167fea",
          "withoutMetadata": "a9feffbc7087e9529577fb0b368171b85b94d25918f43b5d410eb0f186274034",
          "linkedWithoutMetadata": "a9feffbc7087e9529577fb0b368171b85b94d25918f43b5d410eb0f186274034"
        },
        "inherit": [],
        "libraries": [],
        "methods": [
          "increment()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "state-variable-assignment",
            "name": "x",
            "src": "contracts/Logic.sol:13"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "implementation",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Logic",
              "src": "contracts/Logic.sol:9"
            },
            {
              "label": "x",
              "offset": 0,
              "slot": "1",
              "type": "t_uint256",
              "contract": "Logic",
              "src": "contracts/Logic.sol:13"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.21"
      }
    },
    {
      "contracts/Logic.sol:Logic": {
        "src": "contracts/Logic.sol:9",
        "version": {
          "withMetadata": "087c86b163578853fb1cba09b22843df8f815c95bf2568200ddd8e1dbf167fea",
          "withoutMetadata": "a9feffbc7087e9529577fb0b368171b85b94d25918f43b5d410eb0f186274034",
          "linkedWithoutMetadata": "a9feffbc7087e9529577fb0b368171b85b94d25918f43b5d410eb0f186274034"
        },
        "inherit": [],
        "libraries": [],
        "methods": [
          "increment()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "state-variable-assignment",
            "name": "x",
            "src": "contracts/Logic.sol:13"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "implementation",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Logic",
              "src": "contracts/Logic.sol:9"
            },
            {
              "label": "x",
              "offset": 0,
              "slot": "1",
              "type": "t_uint256",
              "contract": "Logic",
              "src": "contracts/Logic.sol:13"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.21"
      }
    },
    {
      "contracts/Logic.sol:Logic": {
        "src": "contracts/Logic.sol:9",
        "version": {
          "withMetadata": "087c86b163578853fb1cba09b22843df8f815c95bf2568200ddd8e1dbf167fea",
          "withoutMetadata": "a9feffbc7087e9529577fb0b368171b85b94d25918f43b5d410eb0f186274034",
          "linkedWithoutMetadata": "a9feffbc7087e9529577fb0b368171b85b94d25918f43b5d410eb0f186274034"
        },
        "inherit": [],
        "libraries": [],
        "methods": [
          "increment()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "state-variable-assignment",
            "name": "x",
            "src": "contracts/Logic.sol:13"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "implementation",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Logic",
              "src": "contracts/Logic.sol:9"
            },
            {
              "label": "x",
              "offset": 0,
              "slot": "1",
              "type": "t_uint256",
              "contract": "Logic",
              "src": "contracts/Logic.sol:13"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.21"
      }
    },
    {
      "contracts/token20Run.sol:token20Run": {
        "src": "contracts/token20Run.sol:7",
        "version": {
          "withMetadata": "d8e0922e2c89414b22a5fcf350552c6295af820df26a7e37431c697009b24e5d",
          "withoutMetadata": "e850a9b90ed976e48c6e6ed5fb2d7288320df28e7af3f3cf79f577098605405a",
          "linkedWithoutMetadata": "e850a9b90ed976e48c6e6ed5fb2d7288320df28e7af3f3cf79f577098605405a"
        },
        "inherit": [],
        "libraries": [],
        "methods": [
          "transfer(address,uint256)",
          "decimals()",
          "totalSupply()",
          "balanceOf(address)",
          "mint(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)",
          "increaseAllowance(address,uint256)",
          "decreaseAllowance(address,uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "state-variable-assignment",
            "name": "name",
            "src": "contracts/token20Run.sol:15"
          },
          {
            "kind": "state-variable-assignment",
            "name": "symbol",
            "src": "contracts/token20Run.sol:16"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_balances",
              "offset": 0,
              "slot": "0",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "token20Run",
              "src": "contracts/token20Run.sol:9"
            },
            {
              "label": "_allowances",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "token20Run",
              "src": "contracts/token20Run.sol:11"
            },
            {
              "label": "_totalSupply",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "token20Run",
              "src": "contracts/token20Run.sol:13"
            },
            {
              "label": "name",
              "offset": 0,
              "slot": "3",
              "type": "t_string_storage",
              "contract": "token20Run",
              "src": "contracts/token20Run.sol:15"
            },
            {
              "label": "symbol",
              "offset": 0,
              "slot": "4",
              "type": "t_string_storage",
              "contract": "token20Run",
              "src": "contracts/token20Run.sol:16"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.1"
      }
    },
    {
      "contracts/token20.sol:token20": {
        "src": "contracts/token20.sol:7",
        "version": {
          "withMetadata": "f13ba6ed47415496494924343804b5541d0afc95cbeba0c30e65efdec772a147",
          "withoutMetadata": "679e20900dac1c2849a442fee07816a3d29df8f72f7f97ea68842ec34df3c034",
          "linkedWithoutMetadata": "679e20900dac1c2849a442fee07816a3d29df8f72f7f97ea68842ec34df3c034"
        },
        "inherit": [],
        "libraries": [],
        "methods": [
          "transfer(address,uint256)",
          "decimals()",
          "totalSupply()",
          "balanceOf(address)",
          "mint(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)",
          "increaseAllowance(address,uint256)",
          "decreaseAllowance(address,uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "state-variable-assignment",
            "name": "name",
            "src": "contracts/token20.sol:14"
          },
          {
            "kind": "state-variable-assignment",
            "name": "symbol",
            "src": "contracts/token20.sol:15"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_balances",
              "offset": 0,
              "slot": "0",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "token20",
              "src": "contracts/token20.sol:8"
            },
            {
              "label": "_allowances",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "token20",
              "src": "contracts/token20.sol:10"
            },
            {
              "label": "_totalSupply",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "token20",
              "src": "contracts/token20.sol:12"
            },
            {
              "label": "name",
              "offset": 0,
              "slot": "3",
              "type": "t_string_storage",
              "contract": "token20",
              "src": "contracts/token20.sol:14"
            },
            {
              "label": "symbol",
              "offset": 0,
              "slot": "4",
              "type": "t_string_storage",
              "contract": "token20",
              "src": "contracts/token20.sol:15"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.0"
      }
    },
    {
      "@openzeppelin/contracts/access/Ownable.sol:Ownable": {
        "src": "@openzeppelin/contracts/access/Ownable.sol:20",
        "inherit": [
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [],
        "methods": [
          "owner()",
          "renounceOwnership()",
          "transferOwnership(address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Ownable",
            "src": "@openzeppelin/contracts/access/Ownable.sol:28"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Ownable",
              "src": "@openzeppelin/contracts/access/Ownable.sol:21"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.9"
      },
      "@openzeppelin/contracts/security/ReentrancyGuard.sol:ReentrancyGuard": {
        "src": "@openzeppelin/contracts/security/ReentrancyGuard.sol:22",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ReentrancyGuard",
            "src": "@openzeppelin/contracts/security/ReentrancyGuard.sol:39"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_status",
              "offset": 0,
              "slot": "0",
              "type": "t_uint256",
              "contract": "ReentrancyGuard",
              "src": "@openzeppelin/contracts/security/ReentrancyGuard.sol:37"
            }
          ],
          "types": {
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.9"
      },
      "@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20": {
        "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:35",
        "version": {
          "withMetadata": "2adafe9949c9eac3b63c5a50ef9b209c88f2f1e21ebf5e893575b024bc40f353",
          "withoutMetadata": "7bce2aea0c90474c0d173327b6d945768166acc2900fe80e4bbdd99e6bca8dfc",
          "linkedWithoutMetadata": "7bce2aea0c90474c0d173327b6d945768166acc2900fe80e4bbdd99e6bca8dfc"
        },
        "inherit": [
          "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol:IERC20Metadata",
          "@openzeppelin/contracts/token/ERC20/IERC20.sol:IERC20",
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [],
        "methods": [
          "(string,string)",
          "name()",
          "symbol()",
          "decimals()",
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)",
          "increaseAllowance(address,uint256)",
          "decreaseAllowance(address,uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ERC20",
            "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:54"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_balances",
              "offset": 0,
              "slot": "0",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:36"
            },
            {
              "label": "_allowances",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:38"
            },
            {
              "label": "_totalSupply",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:40"
            },
            {
              "label": "_name",
              "offset": 0,
              "slot": "3",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:42"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "4",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:43"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.9"
      },
      "@openzeppelin/contracts/token/ERC20/IERC20.sol:IERC20": {
        "src": "@openzeppelin/contracts/token/ERC20/IERC20.sol:9",
        "inherit": [],
        "libraries": [],
        "methods": [
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.9"
      },
      "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol:IERC20Metadata": {
        "src": "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol:13",
        "inherit": [
          "@openzeppelin/contracts/token/ERC20/IERC20.sol:IERC20"
        ],
        "libraries": [],
        "methods": [
          "name()",
          "symbol()",
          "decimals()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.9"
      },
      "@openzeppelin/contracts/token/ERC20/extensions/draft-IERC20Permit.sol:IERC20Permit": {
        "src": "@openzeppelin/contracts/token/ERC20/extensions/draft-IERC20Permit.sol:14",
        "inherit": [],
        "libraries": [],
        "methods": [
          "permit(address,address,uint256,uint256,uint8,bytes32,bytes32)",
          "nonces(address)",
          "DOMAIN_SEPARATOR()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.9"
      },
      "@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol:SafeERC20": {
        "src": "@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol:19",
        "version": {
          "withMetadata": "62b4b203605c75622c7242a0cfac30279ac521e7ab344b61613345823f92972b",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [
          "@openzeppelin/contracts/utils/Address.sol:Address"
        ],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.9"
      },
      "@openzeppelin/contracts/utils/Address.sol:Address": {
        "src": "@openzeppelin/contracts/utils/Address.sol:9",
        "version": {
          "withMetadata": "bb7bfb62163948d120ae08fe31e9775ad8679da65024f4a120b772923aad1e8a",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [
          {
            "kind": "delegatecall",
            "src": "@openzeppelin/contracts/utils/Address.sol:191"
          },
          {
            "kind": "delegatecall",
            "src": "@openzeppelin/contracts/utils/Address.sol:191"
          }
        ],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.9"
      },
      "@openzeppelin/contracts/utils/Context.sol:Context": {
        "src": "@openzeppelin/contracts/utils/Context.sol:16",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.9"
      },
      "@openzeppelin/contracts/utils/math/Math.sol:Math": {
        "src": "@openzeppelin/contracts/utils/math/Math.sol:9",
        "version": {
          "withMetadata": "8d28a140648152278d1267629dda7a7f1eabda40da3c96b88954183fadc8d779",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.9"
      },
      "@openzeppelin/contracts/utils/math/SafeMath.sol:SafeMath": {
        "src": "@openzeppelin/contracts/utils/math/SafeMath.sol:16",
        "version": {
          "withMetadata": "1ea93b54a0c099263476b5e80108ce98d826254b8a920299dd655b4c4997c964",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.9"
      },
      "contracts/linkcode.sol:RecruitCoinTest": {
        "src": "contracts/linkcode.sol:14",
        "version": {
          "withMetadata": "507f19f3e15155f23c8fad01cdb77b91c770f9decb03d6e57168821d3370512e",
          "withoutMetadata": "117cf25dc6ec3d4e18102866f77c5b9e750f27886c0802482b78c21b00ec0dbc",
          "linkedWithoutMetadata": "117cf25dc6ec3d4e18102866f77c5b9e750f27886c0802482b78c21b00ec0dbc"
        },
        "inherit": [
          "@openzeppelin/contracts/security/ReentrancyGuard.sol:ReentrancyGuard",
          "@openzeppelin/contracts/access/Ownable.sol:Ownable",
          "@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20",
          "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol:IERC20Metadata",
          "@openzeppelin/contracts/token/ERC20/IERC20.sol:IERC20",
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [
          "@openzeppelin/contracts/utils/math/SafeMath.sol:SafeMath",
          "@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol:SafeERC20"
        ],
        "methods": [
          "()",
          "deposit(uint256,uint8)",
          "revoke(bytes32)",
          "claim(bytes32,uint256)",
          "earlyMint(address[],uint256[])",
          "mint(address[],uint256[])",
          "setBonus(uint256[4])",
          "setDates(uint256[4])",
          "setPaymentTokens(contract IERC20[])",
          "setPrices(uint256[2])",
          "withdrawTokens(uint8,uint256)",
          "computeNextVestingScheduleIdForHolder(address)",
          "getVestingScheduleByAddressAndIndex(address,uint256)",
          "getVestingSchedule(bytes32)",
          "computeVestingScheduleIdForAddressAndIndex(address,uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "RecruitCoinTest",
            "src": "contracts/linkcode.sol:97"
          },
          {
            "kind": "state-variable-assignment",
            "name": "supplies",
            "src": "contracts/linkcode.sol:19"
          },
          {
            "kind": "state-variable-assignment",
            "name": "prices",
            "src": "contracts/linkcode.sol:29"
          },
          {
            "kind": "state-variable-assignment",
            "name": "dates",
            "src": "contracts/linkcode.sol:30"
          },
          {
            "kind": "state-variable-assignment",
            "name": "bonus",
            "src": "contracts/linkcode.sol:36"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_balances",
              "offset": 0,
              "slot": "0",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:36"
            },
            {
              "label": "_allowances",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:38"
            },
            {
              "label": "_totalSupply",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:40"
            },
            {
              "label": "_name",
              "offset": 0,
              "slot": "3",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:42"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "4",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:43"
            },
            {
              "label": "_owner",
              "offset": 0,
              "slot": "5",
              "type": "t_address",
              "contract": "Ownable",
              "src": "@openzeppelin/contracts/access/Ownable.sol:21"
            },
            {
              "label": "_status",
              "offset": 0,
              "slot": "6",
              "type": "t_uint256",
              "contract": "ReentrancyGuard",
              "src": "@openzeppelin/contracts/security/ReentrancyGuard.sol:37"
            },
            {
              "label": "paymentTokens",
              "offset": 0,
              "slot": "7",
              "type": "t_array(t_contract(IERC20)816)dyn_storage",
              "contract": "RecruitCoinTest",
              "src": "contracts/linkcode.sol:18"
            },
            {
              "label": "supplies",
              "offset": 0,
              "slot": "8",
              "type": "t_array(t_uint256)8_storage",
              "contract": "RecruitCoinTest",
              "src": "contracts/linkcode.sol:19"
            },
            {
              "label": "prices",
              "offset": 0,
              "slot": "16",
              "type": "t_array(t_uint256)2_storage",
              "contract": "RecruitCoinTest",
              "src": "contracts/linkcode.sol:29"
            },
            {
              "label": "dates",
              "offset": 0,
              "slot": "18",
              "type": "t_array(t_uint256)4_storage",
              "contract": "RecruitCoinTest",
              "src": "contracts/linkcode.sol:30"
            },
            {
              "label": "bonus",
              "offset": 0,
              "slot": "22",
              "type": "t_array(t_uint256)4_storage",
              "contract": "RecruitCoinTest",
              "src": "contracts/linkcode.sol:36"
            },
            {
              "label": "vestingSchedulesIds",
              "offset": 0,
              "slot": "26",
              "type": "t_array(t_bytes32)dyn_storage",
              "contract": "RecruitCoinTest",
              "src": "contracts/linkcode.sol:72"
            },
            {
              "label": "vestingSchedules",
              "offset": 0,
              "slot": "27",
              "type": "t_mapping(t_bytes32,t_struct(VestingSchedule)2408_storage)",
              "contract": "RecruitCoinTest",
              "src": "contracts/linkcode.sol:73"
            },
            {
              "label": "vestingSchedulesTotalAmount",
              "offset": 0,
              "slot": "28",
              "type": "t_uint256",
              "contract": "RecruitCoinTest",
              "src": "contracts/linkcode.sol:74"
            },
            {
              "label": "holdersVestingCount",
              "offset": 0,
              "slot": "29",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "RecruitCoinTest",
              "src": "contracts/linkcode.sol:75"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_bytes32)dyn_storage": {
              "label": "bytes32[]",
              "numberOfBytes": "32"
            },
            "t_array(t_contract(IERC20)816)dyn_storage": {
              "label": "contract IERC20[]",
              "numberOfBytes": "32"
            },
            "t_array(t_uint256)2_storage": {
              "label": "uint256[2]",
              "numberOfBytes": "64"
            },
            "t_array(t_uint256)4_storage": {
              "label": "uint256[4]",
              "numberOfBytes": "128"
            },
            "t_array(t_uint256)8_storage": {
              "label": "uint256[8]",
              "numberOfBytes": "256"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_bytes32": {
              "label": "bytes32",
              "numberOfBytes": "32"
            },
            "t_contract(IERC20)816": {
              "label": "contract IERC20",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_bytes32,t_struct(VestingSchedule)2408_storage)": {
              "label": "mapping(bytes32 => struct RecruitCoinTest.VestingSchedule)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_struct(VestingSchedule)2408_storage": {
              "label": "struct RecruitCoinTest.VestingSchedule",
              "members": [
                {
                  "label": "initialized",
                  "type": "t_bool",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "beneficiary",
                  "type": "t_address",
                  "offset": 1,
                  "slot": "0"
                },
                {
                  "label": "cliff",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "start",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "duration",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "3"
                },
                {
                  "label": "slicePeriodSeconds",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "4"
                },
                {
                  "label": "revocable",
                  "type": "t_bool",
                  "offset": 0,
                  "slot": "5"
                },
                {
                  "label": "amountTotal",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "6"
                },
                {
                  "label": "released",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "7"
                },
                {
                  "label": "revoked",
                  "type": "t_bool",
                  "offset": 0,
                  "slot": "8"
                }
              ],
              "numberOfBytes": "288"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.9"
      }
    },
    {
      "contracts/Token.sol:Token": {
        "src": "contracts/Token.sol:7",
        "version": {
          "withMetadata": "744df77cbe4cdc9429af588a9e06c7f67396a237fb55ebc17b86ec623503a94c",
          "withoutMetadata": "f5ca6d04b25ca02ba09827a28ce8e127c0f191b8b3deb669dfc4002108de7333",
          "linkedWithoutMetadata": "f5ca6d04b25ca02ba09827a28ce8e127c0f191b8b3deb669dfc4002108de7333"
        },
        "inherit": [],
        "libraries": [],
        "methods": [
          "()",
          "transfer(address,uint256)",
          "balanceOf(address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Token",
            "src": "contracts/Token.sol:27"
          },
          {
            "kind": "state-variable-assignment",
            "name": "name",
            "src": "contracts/Token.sol:10"
          },
          {
            "kind": "state-variable-assignment",
            "name": "symbol",
            "src": "contracts/Token.sol:11"
          },
          {
            "kind": "state-variable-assignment",
            "name": "totalSupply",
            "src": "contracts/Token.sol:14"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "name",
              "offset": 0,
              "slot": "0",
              "type": "t_string_storage",
              "contract": "Token",
              "src": "contracts/Token.sol:10"
            },
            {
              "label": "symbol",
              "offset": 0,
              "slot": "1",
              "type": "t_string_storage",
              "contract": "Token",
              "src": "contracts/Token.sol:11"
            },
            {
              "label": "totalSupply",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "Token",
              "src": "contracts/Token.sol:14"
            },
            {
              "label": "owner",
              "offset": 0,
              "slot": "3",
              "type": "t_address",
              "contract": "Token",
              "src": "contracts/Token.sol:17"
            },
            {
              "label": "balances",
              "offset": 0,
              "slot": "4",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "Token",
              "src": "contracts/Token.sol:20"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.7.0"
      }
    },
    {
      "@openzeppelin/contracts/access/Ownable.sol:Ownable": {
        "src": "@openzeppelin/contracts/access/Ownable.sol:20",
        "inherit": [
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [],
        "methods": [
          "owner()",
          "renounceOwnership()",
          "transferOwnership(address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Ownable",
            "src": "@openzeppelin/contracts/access/Ownable.sol:28"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Ownable",
              "src": "@openzeppelin/contracts/access/Ownable.sol:21"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.21"
      },
      "@openzeppelin/contracts/security/ReentrancyGuard.sol:ReentrancyGuard": {
        "src": "@openzeppelin/contracts/security/ReentrancyGuard.sol:22",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ReentrancyGuard",
            "src": "@openzeppelin/contracts/security/ReentrancyGuard.sol:39"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_status",
              "offset": 0,
              "slot": "0",
              "type": "t_uint256",
              "contract": "ReentrancyGuard",
              "src": "@openzeppelin/contracts/security/ReentrancyGuard.sol:37"
            }
          ],
          "types": {
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.21"
      },
      "@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20": {
        "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:35",
        "version": {
          "withMetadata": "b653be9ad258ddaafa2304767243ba86eac7156acd9bf1a196bee0fef9b1c3a9",
          "withoutMetadata": "1d55e2dc08aae4fa5bd2ca8ac476f7a2e63bdfa7b0b51d4bd61db8705143a140",
          "linkedWithoutMetadata": "1d55e2dc08aae4fa5bd2ca8ac476f7a2e63bdfa7b0b51d4bd61db8705143a140"
        },
        "inherit": [
          "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol:IERC20Metadata",
          "@openzeppelin/contracts/token/ERC20/IERC20.sol:IERC20",
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [],
        "methods": [
          "(string,string)",
          "name()",
          "symbol()",
          "decimals()",
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)",
          "increaseAllowance(address,uint256)",
          "decreaseAllowance(address,uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ERC20",
            "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:54"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_balances",
              "offset": 0,
              "slot": "0",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:36"
            },
            {
              "label": "_allowances",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:38"
            },
            {
              "label": "_totalSupply",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:40"
            },
            {
              "label": "_name",
              "offset": 0,
              "slot": "3",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:42"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "4",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:43"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.21"
      },
      "@openzeppelin/contracts/token/ERC20/IERC20.sol:IERC20": {
        "src": "@openzeppelin/contracts/token/ERC20/IERC20.sol:9",
        "inherit": [],
        "libraries": [],
        "methods": [
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.21"
      },
      "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol:IERC20Metadata": {
        "src": "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol:13",
        "inherit": [
          "@openzeppelin/contracts/token/ERC20/IERC20.sol:IERC20"
        ],
        "libraries": [],
        "methods": [
          "name()",
          "symbol()",
          "decimals()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.21"
      },
      "@openzeppelin/contracts/token/ERC20/extensions/draft-IERC20Permit.sol:IERC20Permit": {
        "src": "@openzeppelin/contracts/token/ERC20/extensions/draft-IERC20Permit.sol:14",
        "inherit": [],
        "libraries": [],
        "methods": [
          "permit(address,address,uint256,uint256,uint8,bytes32,bytes32)",
          "nonces(address)",
          "DOMAIN_SEPARATOR()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.21"
      },
      "@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol:SafeERC20": {
        "src": "@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol:19",
        "version": {
          "withMetadata": "945db44b71722f915e3e7352ee22f854dfe8000e69eee742d881b64279bb0ad8",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [
          "@openzeppelin/contracts/utils/Address.sol:Address"
        ],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.21"
      },
      "@openzeppelin/contracts/utils/Address.sol:Address": {
        "src": "@openzeppelin/contracts/utils/Address.sol:9",
        "version": {
          "withMetadata": "9401bbf4dc0decc4c739a060967031a16e8de389388d98c32ec11cff440d6513",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [
          {
            "kind": "delegatecall",
            "src": "@openzeppelin/contracts/utils/Address.sol:191"
          },
          {
            "kind": "delegatecall",
            "src": "@openzeppelin/contracts/utils/Address.sol:191"
          }
        ],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.21"
      },
      "@openzeppelin/contracts/utils/Context.sol:Context": {
        "src": "@openzeppelin/contracts/utils/Context.sol:16",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.21"
      },
      "@openzeppelin/contracts/utils/math/Math.sol:Math": {
        "src": "@openzeppelin/contracts/utils/math/Math.sol:9",
        "version": {
          "withMetadata": "f58f3d1d6b53395057afc8a5e1edcbfcd81cdec0dfcf6b1290c8c2368b975278",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.21"
      },
      "@openzeppelin/contracts/utils/math/SafeMath.sol:SafeMath": {
        "src": "@openzeppelin/contracts/utils/math/SafeMath.sol:16",
        "version": {
          "withMetadata": "4167346fe154a63f59e72262dbca9ccb097c97b61ec5dfe163259378386d2ba4",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.21"
      },
      "contracts/Presale.sol:IGoldToken": {
        "src": "contracts/Presale.sol:8",
        "inherit": [],
        "libraries": [],
        "methods": [
          "mint(address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.21"
      },
      "contracts/Presale.sol:Presale": {
        "src": "contracts/Presale.sol:12",
        "version": {
          "withMetadata": "55de4f41aa2ae4e88c3e975f7f7c871c8630a6a915f505e8b168c82d5665ef13",
          "withoutMetadata": "2fa5a3bfe1ae715a2695aad2a1fdda65dd5f2dfe346a8af0822d82b296b7bc1b",
          "linkedWithoutMetadata": "2fa5a3bfe1ae715a2695aad2a1fdda65dd5f2dfe346a8af0822d82b296b7bc1b"
        },
        "inherit": [
          "@openzeppelin/contracts/security/ReentrancyGuard.sol:ReentrancyGuard",
          "@openzeppelin/contracts/access/Ownable.sol:Ownable",
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [],
        "methods": [
          "(address,address,address,uint256)",
          "createPreSale((uint256,uint256,uint256))",
          "sale()",
          "getCanIdoAmount(address)",
          "bindReffer(address)",
          "userBalance(address)",
          "userRewardBalance(address)",
          "userWithdraw()",
          "teamWithdraw(address)",
          "setUserWithdrawTime(uint256)",
          "setInviteMin(uint256)",
          "setPerMaxBuyUsdt(uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Presale",
            "src": "contracts/Presale.sol:46"
          },
          {
            "kind": "state-variable-assignment",
            "name": "perMaxBuyUsdt",
            "src": "contracts/Presale.sol:15"
          },
          {
            "kind": "state-variable-assignment",
            "name": "inviteMin",
            "src": "contracts/Presale.sol:31"
          },
          {
            "kind": "state-variable-assignment",
            "name": "maxSale",
            "src": "contracts/Presale.sol:33"
          },
          {
            "kind": "state-variable-assignment",
            "name": "rewardLevel",
            "src": "contracts/Presale.sol:36"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Ownable",
              "src": "@openzeppelin/contracts/access/Ownable.sol:21"
            },
            {
              "label": "_status",
              "offset": 0,
              "slot": "1",
              "type": "t_uint256",
              "contract": "ReentrancyGuard",
              "src": "@openzeppelin/contracts/security/ReentrancyGuard.sol:37"
            },
            {
              "label": "userWithdrawTime",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "Presale",
              "src": "contracts/Presale.sol:13"
            },
            {
              "label": "perMaxBuyUsdt",
              "offset": 0,
              "slot": "3",
              "type": "t_uint256",
              "contract": "Presale",
              "src": "contracts/Presale.sol:15"
            },
            {
              "label": "teamAddress",
              "offset": 0,
              "slot": "4",
              "type": "t_address",
              "contract": "Presale",
              "src": "contracts/Presale.sol:16"
            },
            {
              "label": "saleToken",
              "offset": 0,
              "slot": "5",
              "type": "t_address",
              "contract": "Presale",
              "src": "contracts/Presale.sol:17"
            },
            {
              "label": "usdtToken",
              "offset": 0,
              "slot": "6",
              "type": "t_address",
              "contract": "Presale",
              "src": "contracts/Presale.sol:18"
            },
            {
              "label": "goldTokenAddress",
              "offset": 0,
              "slot": "7",
              "type": "t_address",
              "contract": "Presale",
              "src": "contracts/Presale.sol:19"
            },
            {
              "label": "balances",
              "offset": 0,
              "slot": "8",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "Presale",
              "src": "contracts/Presale.sol:20"
            },
            {
              "label": "userBuyTotalUsdt",
              "offset": 0,
              "slot": "9",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "Presale",
              "src": "contracts/Presale.sol:21"
            },
            {
              "label": "rewardBalances",
              "offset": 0,
              "slot": "10",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "Presale",
              "src": "contracts/Presale.sol:22"
            },
            {
              "label": "reffers",
              "offset": 0,
              "slot": "11",
              "type": "t_mapping(t_address,t_address)",
              "contract": "Presale",
              "src": "contracts/Presale.sol:23"
            },
            {
              "label": "refferNumber",
              "offset": 0,
              "slot": "12",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "Presale",
              "src": "contracts/Presale.sol:24"
            },
            {
              "label": "teamRefferNumber",
              "offset": 0,
              "slot": "13",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "Presale",
              "src": "contracts/Presale.sol:25"
            },
            {
              "label": "firstIdo",
              "offset": 0,
              "slot": "14",
              "type": "t_mapping(t_address,t_bool)",
              "contract": "Presale",
              "src": "contracts/Presale.sol:26"
            },
            {
              "label": "totalIdoUSDT",
              "offset": 0,
              "slot": "15",
              "type": "t_uint256",
              "contract": "Presale",
              "src": "contracts/Presale.sol:27"
            },
            {
              "label": "totalIdoUser",
              "offset": 0,
              "slot": "16",
              "type": "t_uint256",
              "contract": "Presale",
              "src": "contracts/Presale.sol:28"
            },
            {
              "label": "totalSale",
              "offset": 0,
              "slot": "17",
              "type": "t_uint256",
              "contract": "Presale",
              "src": "contracts/Presale.sol:29"
            },
            {
              "label": "inviteMin",
              "offset": 0,
              "slot": "18",
              "type": "t_uint256",
              "contract": "Presale",
              "src": "contracts/Presale.sol:31"
            },
            {
              "label": "maxSale",
              "offset": 0,
              "slot": "19",
              "type": "t_uint256",
              "contract": "Presale",
              "src": "contracts/Presale.sol:33"
            },
            {
              "label": "isCloseSale",
              "offset": 0,
              "slot": "20",
              "type": "t_bool",
              "contract": "Presale",
              "src": "contracts/Presale.sol:34"
            },
            {
              "label": "rewardLevel",
              "offset": 0,
              "slot": "21",
              "type": "t_array(t_uint256)dyn_storage",
              "contract": "Presale",
              "src": "contracts/Presale.sol:36"
            },
            {
              "label": "presaleInfo",
              "offset": 0,
              "slot": "22",
              "type": "t_struct(PresaleInfo)2392_storage",
              "contract": "Presale",
              "src": "contracts/Presale.sol:44"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_uint256)dyn_storage": {
              "label": "uint256[]",
              "numberOfBytes": "32"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_mapping(t_address,t_address)": {
              "label": "mapping(address => address)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_struct(PresaleInfo)2392_storage": {
              "label": "struct Presale.PresaleInfo",
              "members": [
                {
                  "label": "startTime",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "endTime",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "price",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "2"
                }
              ],
              "numberOfBytes": "96"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.21"
      },
      "contracts/Staking.sol:IRejuvenate": {
        "src": "contracts/Staking.sol:9",
        "inherit": [],
        "libraries": [],
        "methods": [
          "mint(address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.21"
      },
      "contracts/Staking.sol:Staking": {
        "src": "contracts/Staking.sol:13",
        "version": {
          "withMetadata": "d4a43fbe5f8d6347383f0680dba0a94146fceda61d8f28fb0ed926fda6eca5bc",
          "withoutMetadata": "8e35a11dc4a30aced1c096dd5db7f6424d19b292b732012b8d44d054f9cea466",
          "linkedWithoutMetadata": "8e35a11dc4a30aced1c096dd5db7f6424d19b292b732012b8d44d054f9cea466"
        },
        "inherit": [
          "@openzeppelin/contracts/security/ReentrancyGuard.sol:ReentrancyGuard",
          "@openzeppelin/contracts/access/Ownable.sol:Ownable",
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [],
        "methods": [
          "()",
          "changeRewardsPerBlock(uint256)",
          "rewardPerToken()",
          "earned(address)",
          "stake(uint256)",
          "unstake(uint256)",
          "claimRewards()",
          "pause()",
          "unpause()",
          "inCaseTokensGetStuck(address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Staking",
            "src": "contracts/Staking.sol:33"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Ownable",
              "src": "@openzeppelin/contracts/access/Ownable.sol:21"
            },
            {
              "label": "_status",
              "offset": 0,
              "slot": "1",
              "type": "t_uint256",
              "contract": "ReentrancyGuard",
              "src": "@openzeppelin/contracts/security/ReentrancyGuard.sol:37"
            },
            {
              "label": "paused",
              "offset": 0,
              "slot": "2",
              "type": "t_bool",
              "contract": "Staking",
              "src": "contracts/Staking.sol:14"
            },
            {
              "label": "_treasury",
              "offset": 1,
              "slot": "2",
              "type": "t_address",
              "contract": "Staking",
              "src": "contracts/Staking.sol:15"
            },
            {
              "label": "token",
              "offset": 0,
              "slot": "3",
              "type": "t_address",
              "contract": "Staking",
              "src": "contracts/Staking.sol:17"
            },
            {
              "label": "rewardRate",
              "offset": 0,
              "slot": "4",
              "type": "t_uint256",
              "contract": "Staking",
              "src": "contracts/Staking.sol:19"
            },
            {
              "label": "_lastUpdateBlock",
              "offset": 0,
              "slot": "5",
              "type": "t_uint256",
              "contract": "Staking",
              "src": "contracts/Staking.sol:20"
            },
            {
              "label": "_rewardsPerToken",
              "offset": 0,
              "slot": "6",
              "type": "t_uint256",
              "contract": "Staking",
              "src": "contracts/Staking.sol:21"
            },
            {
              "label": "data",
              "offset": 0,
              "slot": "7",
              "type": "t_array(t_struct(StakingData)3375_storage)dyn_storage",
              "contract": "Staking",
              "src": "contracts/Staking.sol:22"
            },
            {
              "label": "_userRewardsPerToken",
              "offset": 0,
              "slot": "8",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "Staking",
              "src": "contracts/Staking.sol:24"
            },
            {
              "label": "_rewards",
              "offset": 0,
              "slot": "9",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "Staking",
              "src": "contracts/Staking.sol:25"
            },
            {
              "label": "totalStaked",
              "offset": 0,
              "slot": "10",
              "type": "t_uint256",
              "contract": "Staking",
              "src": "contracts/Staking.sol:27"
            },
            {
              "label": "_balances",
              "offset": 0,
              "slot": "11",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "Staking",
              "src": "contracts/Staking.sol:28"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_struct(StakingData)3375_storage)dyn_storage": {
              "label": "struct StakingData[]",
              "numberOfBytes": "32"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_struct(StakingData)3375_storage": {
              "label": "struct StakingData",
              "members": [
                {
                  "label": "block",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "staked",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "1"
                }
              ],
              "numberOfBytes": "64"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.21"
      }
    },
    {
      "contracts/RichHusky.sol:Checker": {
        "src": "contracts/RichHusky.sol:520",
        "version": {
          "withMetadata": "17e1cf10fdffcda321c1a1f59d2b06178394724b4d8ad9b035a718122fed8a52",
          "withoutMetadata": "0faf6ca500781d04501ba7e4cf9138e35957321419c6ca29798480c22b3cc5cd",
          "linkedWithoutMetadata": "0faf6ca500781d04501ba7e4cf9138e35957321419c6ca29798480c22b3cc5cd"
        },
        "inherit": [],
        "libraries": [],
        "methods": [
          "isValid(address,address,address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.21"
      },
      "contracts/RichHusky.sol:Context": {
        "src": "contracts/RichHusky.sol:27",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.21"
      },
      "contracts/RichHusky.sol:ERC20": {
        "src": "contracts/RichHusky.sol:162",
        "version": {
          "withMetadata": "e092e43bc9c3243b7138ce015fa92d358fa66a764079145cfe1339f160fd055e",
          "withoutMetadata": "e248eda4094a79267c1d78eb85fb3a082e2ba4d153192b2644d6357dbed158f3",
          "linkedWithoutMetadata": "e248eda4094a79267c1d78eb85fb3a082e2ba4d153192b2644d6357dbed158f3"
        },
        "inherit": [
          "contracts/RichHusky.sol:IERC20Metadata",
          "contracts/RichHusky.sol:IERC20",
          "contracts/RichHusky.sol:Context"
        ],
        "libraries": [],
        "methods": [
          "(string,string)",
          "name()",
          "symbol()",
          "decimals()",
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)",
          "increaseAllowance(address,uint256)",
          "decreaseAllowance(address,uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ERC20",
            "src": "contracts/RichHusky.sol:181"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_balances",
              "offset": 0,
              "slot": "0",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC20",
              "src": "contracts/RichHusky.sol:163"
            },
            {
              "label": "_allowances",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "ERC20",
              "src": "contracts/RichHusky.sol:165"
            },
            {
              "label": "_totalSupply",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "ERC20",
              "src": "contracts/RichHusky.sol:167"
            },
            {
              "label": "_name",
              "offset": 0,
              "slot": "3",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "contracts/RichHusky.sol:169"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "4",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "contracts/RichHusky.sol:170"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.21"
      },
      "contracts/RichHusky.sol:IERC20": {
        "src": "contracts/RichHusky.sol:40",
        "inherit": [],
        "libraries": [],
        "methods": [
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.21"
      },
      "contracts/RichHusky.sol:IERC20Metadata": {
        "src": "contracts/RichHusky.sol:120",
        "inherit": [
          "contracts/RichHusky.sol:IERC20"
        ],
        "libraries": [],
        "methods": [
          "name()",
          "symbol()",
          "decimals()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.21"
      },
      "contracts/RichHusky.sol:IFactory": {
        "src": "contracts/RichHusky.sol:535",
        "inherit": [],
        "libraries": [],
        "methods": [
          "createPair(address,address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.21"
      },
      "contracts/RichHusky.sol:IGasToken": {
        "src": "contracts/RichHusky.sol:539",
        "inherit": [],
        "libraries": [],
        "methods": [
          "free(uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.21"
      },
      "contracts/RichHusky.sol:RichHusky": {
        "src": "contracts/RichHusky.sol:543",
        "version": {
          "withMetadata": "ce802161ba5ffecece3a7488fb3a07a35d8f78edf3674187d3eb27cc30777604",
          "withoutMetadata": "7c4ce62a347a52dc2685dbb41f6d968bb51e7d6abb10665abf0c7d7699da0d36",
          "linkedWithoutMetadata": "7c4ce62a347a52dc2685dbb41f6d968bb51e7d6abb10665abf0c7d7699da0d36"
        },
        "inherit": [
          "contracts/RichHusky.sol:ERC20",
          "contracts/RichHusky.sol:IERC20Metadata",
          "contracts/RichHusky.sol:IERC20",
          "contracts/RichHusky.sol:Context"
        ],
        "libraries": [
          "contracts/RichHusky.sol:Checker"
        ],
        "methods": [
          "(address)",
          "mint(address,uint256)",
          "updateAirdropAmount(uint256)",
          "withdrawFee(address,uint256)",
          "airdrop(address[],uint256)",
          "addBetaUsers(address[])",
          "removeBetaUsers(address[])",
          "multiCall(address[],bytes[])"
        ],
        "linkReferences": [
          {
            "src": "contracts/RichHusky.sol",
            "name": "Checker",
            "length": 20,
            "start": 5176,
            "placeholder": "__$1cb883ae52507a2d00adae80c79f632cb4$__"
          }
        ],
        "errors": [
          {
            "kind": "constructor",
            "contract": "RichHusky",
            "src": "contracts/RichHusky.sol:554"
          },
          {
            "kind": "state-variable-immutable",
            "name": "pancakeFactory",
            "src": "contracts/RichHusky.sol:549"
          },
          {
            "kind": "state-variable-immutable",
            "name": "WBNB",
            "src": "contracts/RichHusky.sol:550"
          },
          {
            "kind": "state-variable-immutable",
            "name": "GasToken",
            "src": "contracts/RichHusky.sol:552"
          },
          {
            "kind": "external-library-linking",
            "name": "Checker",
            "src": "contracts/RichHusky.sol"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_balances",
              "offset": 0,
              "slot": "0",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC20",
              "src": "contracts/RichHusky.sol:163"
            },
            {
              "label": "_allowances",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "ERC20",
              "src": "contracts/RichHusky.sol:165"
            },
            {
              "label": "_totalSupply",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "ERC20",
              "src": "contracts/RichHusky.sol:167"
            },
            {
              "label": "_name",
              "offset": 0,
              "slot": "3",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "contracts/RichHusky.sol:169"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "4",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "contracts/RichHusky.sol:170"
            },
            {
              "label": "dev",
              "offset": 0,
              "slot": "5",
              "type": "t_address",
              "contract": "RichHusky",
              "src": "contracts/RichHusky.sol:544"
            },
            {
              "label": "airdropAmount",
              "offset": 0,
              "slot": "6",
              "type": "t_uint256",
              "contract": "RichHusky",
              "src": "contracts/RichHusky.sol:545"
            },
            {
              "label": "betaUsers",
              "offset": 0,
              "slot": "7",
              "type": "t_mapping(t_address,t_bool)",
              "contract": "RichHusky",
              "src": "contracts/RichHusky.sol:546"
            },
            {
              "label": "pair",
              "offset": 0,
              "slot": "8",
              "type": "t_address",
              "contract": "RichHusky",
              "src": "contracts/RichHusky.sol:547"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.21"
      }
    },
    {
      "contracts/IFiles.sol:Address": {
        "src": "contracts/IFiles.sol:147",
        "version": {
          "withMetadata": "73f3d745b82ff92d492794f39ddc131795315255895e196d918dc1260c813488",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.21"
      },
      "contracts/IFiles.sol:Context": {
        "src": "contracts/IFiles.sol:135",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.21"
      },
      "contracts/IFiles.sol:IBEP20": {
        "src": "contracts/IFiles.sol:9",
        "inherit": [],
        "libraries": [],
        "methods": [
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.21"
      },
      "contracts/IFiles.sol:IPancakeFactory": {
        "src": "contracts/IFiles.sol:327",
        "inherit": [],
        "libraries": [],
        "methods": [
          "feeTo()",
          "feeToSetter()",
          "getPair(address,address)",
          "allPairs(uint256)",
          "allPairsLength()",
          "createPair(address,address)",
          "setFeeTo(address)",
          "setFeeToSetter(address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.21"
      },
      "contracts/IFiles.sol:IPancakePair": {
        "src": "contracts/IFiles.sol:357",
        "inherit": [],
        "libraries": [],
        "methods": [
          "name()",
          "symbol()",
          "decimals()",
          "totalSupply()",
          "balanceOf(address)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transfer(address,uint256)",
          "transferFrom(address,address,uint256)",
          "DOMAIN_SEPARATOR()",
          "PERMIT_TYPEHASH()",
          "nonces(address)",
          "permit(address,address,uint256,uint256,uint8,bytes32,bytes32)",
          "MINIMUM_LIQUIDITY()",
          "factory()",
          "token0()",
          "token1()",
          "getReserves()",
          "price0CumulativeLast()",
          "price1CumulativeLast()",
          "kLast()",
          "mint(address)",
          "burn(address)",
          "swap(uint256,uint256,address,bytes)",
          "skim(address)",
          "sync()",
          "initialize(address,address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.21"
      },
      "contracts/IFiles.sol:IPancakeRouter01": {
        "src": "contracts/IFiles.sol:466",
        "inherit": [],
        "libraries": [],
        "methods": [
          "factory()",
          "WETH()",
          "addLiquidity(address,address,uint256,uint256,uint256,uint256,address,uint256)",
          "addLiquidityETH(address,uint256,uint256,uint256,address,uint256)",
          "removeLiquidity(address,address,uint256,uint256,uint256,address,uint256)",
          "removeLiquidityETH(address,uint256,uint256,uint256,address,uint256)",
          "removeLiquidityWithPermit(address,address,uint256,uint256,uint256,address,uint256,bool,uint8,bytes32,bytes32)",
          "removeLiquidityETHWithPermit(address,uint256,uint256,uint256,address,uint256,bool,uint8,bytes32,bytes32)",
          "swapExactTokensForTokens(uint256,uint256,address[],address,uint256)",
          "swapTokensForExactTokens(uint256,uint256,address[],address,uint256)",
          "swapExactETHForTokens(uint256,address[],address,uint256)",
          "swapTokensForExactETH(uint256,uint256,address[],address,uint256)",
          "swapExactTokensForETH(uint256,uint256,address[],address,uint256)",
          "swapETHForExactTokens(uint256,address[],address,uint256)",
          "quote(uint256,uint256,uint256)",
          "getAmountOut(uint256,uint256,uint256)",
          "getAmountIn(uint256,uint256,uint256)",
          "getAmountsOut(uint256,address[])",
          "getAmountsIn(uint256,address[])"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.21"
      },
      "contracts/IFiles.sol:IPancakeRouter02": {
        "src": "contracts/IFiles.sol:626",
        "inherit": [
          "contracts/IFiles.sol:IPancakeRouter01"
        ],
        "libraries": [],
        "methods": [
          "removeLiquidityETHSupportingFeeOnTransferTokens(address,uint256,uint256,uint256,address,uint256)",
          "removeLiquidityETHWithPermitSupportingFeeOnTransferTokens(address,uint256,uint256,uint256,address,uint256,bool,uint8,bytes32,bytes32)",
          "swapExactTokensForTokensSupportingFeeOnTransferTokens(uint256,uint256,address[],address,uint256)",
          "swapExactETHForTokensSupportingFeeOnTransferTokens(uint256,address[],address,uint256)",
          "swapExactTokensForETHSupportingFeeOnTransferTokens(uint256,uint256,address[],address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.21"
      },
      "contracts/IFiles.sol:IWBNB": {
        "src": "contracts/IFiles.sol:38",
        "inherit": [],
        "libraries": [],
        "methods": [
          "name()",
          "symbol()",
          "decimals()",
          "balanceOf(address)",
          "allowance(address,address)",
          "()",
          "deposit()",
          "withdraw(uint256)",
          "totalSupply()",
          "approve(address,uint256)",
          "transfer(address,uint256)",
          "transferFrom(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.21"
      },
      "contracts/IFiles.sol:Initializable": {
        "src": "contracts/IFiles.sol:249",
        "version": {
          "withMetadata": "ba793f874980ba8826e0f77e588821b7a373c942b97ebcd7e4e42f378e00e824",
          "withoutMetadata": "ac0db523ddc3e330f735df7b3b0b24460531c71290a891170e840f8f67d5ff6b",
          "linkedWithoutMetadata": "ac0db523ddc3e330f735df7b3b0b24460531c71290a891170e840f8f67d5ff6b"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "contracts/IFiles.sol:251"
            },
            {
              "label": "initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "contracts/IFiles.sol:252"
            },
            {
              "label": "______gap",
              "offset": 0,
              "slot": "1",
              "type": "t_array(t_uint256)50_storage",
              "contract": "Initializable",
              "src": "contracts/IFiles.sol:283"
            }
          ],
          "types": {
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]",
              "numberOfBytes": "1600"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.21"
      },
      "contracts/IFiles.sol:Ownable": {
        "src": "contracts/IFiles.sol:286",
        "version": {
          "withMetadata": "9b6e83ec071c913ea8078938bf6c8e47f6ce697f181f2ebf31dc4937807eb386",
          "withoutMetadata": "a3dd09084d5d3377afaa5e637593b425fb1172db63a48c2f62428555638775f8",
          "linkedWithoutMetadata": "a3dd09084d5d3377afaa5e637593b425fb1172db63a48c2f62428555638775f8"
        },
        "inherit": [
          "contracts/IFiles.sol:Initializable",
          "contracts/IFiles.sol:Context"
        ],
        "libraries": [],
        "methods": [
          "()",
          "initOwner(address)",
          "owner()",
          "renounceOwnership()",
          "transferOwnership(address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "contracts/IFiles.sol:251"
            },
            {
              "label": "initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "contracts/IFiles.sol:252"
            },
            {
              "label": "______gap",
              "offset": 0,
              "slot": "1",
              "type": "t_array(t_uint256)50_storage",
              "contract": "Initializable",
              "src": "contracts/IFiles.sol:283"
            },
            {
              "label": "_owner",
              "offset": 0,
              "slot": "51",
              "type": "t_address",
              "contract": "Ownable",
              "src": "contracts/IFiles.sol:287"
            },
            {
              "label": "_previousOwner",
              "offset": 0,
              "slot": "52",
              "type": "t_address",
              "contract": "Ownable",
              "src": "contracts/IFiles.sol:288"
            },
            {
              "label": "_lockTime",
              "offset": 0,
              "slot": "53",
              "type": "t_uint256",
              "contract": "Ownable",
              "src": "contracts/IFiles.sol:289"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]",
              "numberOfBytes": "1600"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.21"
      },
      "contracts/IFiles.sol:SafeMath": {
        "src": "contracts/IFiles.sol:68",
        "version": {
          "withMetadata": "6a5db877229c78c84b33e85a297bea1121c6a6195aa310f30cbe69888293c5ae",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.21"
      },
      "contracts/ReentrancyGuard.sol:ReentrancyGuard": {
        "src": "contracts/ReentrancyGuard.sol:5",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ReentrancyGuard",
            "src": "contracts/ReentrancyGuard.sol:12"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_status",
              "offset": 0,
              "slot": "0",
              "type": "t_uint256",
              "contract": "ReentrancyGuard",
              "src": "contracts/ReentrancyGuard.sol:10"
            }
          ],
          "types": {
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.21"
      },
      "contracts/Utils.sol:PancakeLibrary": {
        "src": "contracts/Utils.sol:219",
        "version": {
          "withMetadata": "668337a75717822cd6d73bbd1c50526e84e4af10cd45125b1756676395a2f30c",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [
          "contracts/IFiles.sol:SafeMath"
        ],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.21"
      },
      "contracts/Utils.sol:Utils": {
        "src": "contracts/Utils.sol:6",
        "version": {
          "withMetadata": "a5775bd7ff330a5dfa7ddaef645bcc8fbccdcd3c38fbc9fc1755e3e3a9a09d47",
          "withoutMetadata": "8ca6da6b824cadf2e1f9c600b5f1381080c8b8d75dddf5423f35e25222daaeda",
          "linkedWithoutMetadata": "8ca6da6b824cadf2e1f9c600b5f1381080c8b8d75dddf5423f35e25222daaeda"
        },
        "inherit": [],
        "libraries": [
          "contracts/IFiles.sol:SafeMath"
        ],
        "methods": [
          "calculateBNBReward(uint256,uint256,uint256,uint256)",
          "calculateTopUpClaim(uint256,uint256,uint256,uint256)",
          "swapTokensForEth(address,uint256)",
          "swapETHForTokens(address,address,uint256)",
          "swapTokensForTokens(address,address,uint256)",
          "getAmountsout(uint256,address)",
          "addLiquidity(address,address,uint256,uint256)",
          "getAntiFlipTaxNo(uint256)",
          "calcReward(uint256,uint256,uint256,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.21"
      }
    },
    {
      "contracts/FirstDao.sol:FistDao": {
        "src": "contracts/FirstDao.sol:127",
        "version": {
          "withMetadata": "87594bf7d015e41aaf777bc0dc62e9e8a3685546fcfa065eb87291ef7f3f16f4",
          "withoutMetadata": "5bdb2538a3ba33172d93851875dfca20475ce01973348f896430788ab9d8314a",
          "linkedWithoutMetadata": "5bdb2538a3ba33172d93851875dfca20475ce01973348f896430788ab9d8314a"
        },
        "inherit": [
          "contracts/FirstDao.sol:Ownable",
          "contracts/FirstDao.sol:IERC20"
        ],
        "libraries": [
          "contracts/FirstDao.sol:SafeMath"
        ],
        "methods": [
          "(string,string)",
          "()",
          "initialize(address,address,address,address)",
          "transferEvent(address,address,uint256)",
          "feeState()",
          "getIsApproved(address)",
          "searchExcludedFromFeeAccounts(address)",
          "getDefaultBalance()",
          "insertIntoExcludedFromFeeAccounts(address[])",
          "deleteFromExcludedFromFeeAccounts(address[])",
          "claim(address,uint256)",
          "name()",
          "symbol()",
          "decimals()",
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "transferFrom(address,address,uint256)",
          "approve(address,uint256)",
          "allowance(address,address)",
          "increaseAllowance(address,uint256)",
          "decreaseAllowance(address,uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "FistDao",
            "src": "contracts/FirstDao.sol:159"
          },
          {
            "kind": "state-variable-assignment",
            "name": "_decimals",
            "src": "contracts/FirstDao.sol:132"
          },
          {
            "kind": "state-variable-assignment",
            "name": "_totalSupply",
            "src": "contracts/FirstDao.sol:133"
          },
          {
            "kind": "state-variable-assignment",
            "name": "_feeTax",
            "src": "contracts/FirstDao.sol:138"
          },
          {
            "kind": "state-variable-assignment",
            "name": "_feeMining",
            "src": "contracts/FirstDao.sol:139"
          },
          {
            "kind": "state-variable-assignment",
            "name": "_feeLiquidity",
            "src": "contracts/FirstDao.sol:140"
          },
          {
            "kind": "state-variable-assignment",
            "name": "_feeDivisor",
            "src": "contracts/FirstDao.sol:141"
          },
          {
            "kind": "state-variable-assignment",
            "name": "_removeAllFee",
            "src": "contracts/FirstDao.sol:143"
          },
          {
            "kind": "state-variable-assignment",
            "name": "_defaultBalance",
            "src": "contracts/FirstDao.sol:150"
          },
          {
            "kind": "state-variable-assignment",
            "name": "_defaultAmount",
            "src": "contracts/FirstDao.sol:151"
          },
          {
            "kind": "state-variable-assignment",
            "name": "_initialized111",
            "src": "contracts/FirstDao.sol:156"
          },
          {
            "kind": "state-variable-assignment",
            "name": "_reentry",
            "src": "contracts/FirstDao.sol:157"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Ownable",
              "src": "contracts/FirstDao.sol:58"
            },
            {
              "label": "_previousOwner",
              "offset": 0,
              "slot": "1",
              "type": "t_address",
              "contract": "Ownable",
              "src": "contracts/FirstDao.sol:59"
            },
            {
              "label": "_switchDate",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "Ownable",
              "src": "contracts/FirstDao.sol:60"
            },
            {
              "label": "_name",
              "offset": 0,
              "slot": "3",
              "type": "t_string_storage",
              "contract": "FistDao",
              "src": "contracts/FirstDao.sol:130"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "4",
              "type": "t_string_storage",
              "contract": "FistDao",
              "src": "contracts/FirstDao.sol:131"
            },
            {
              "label": "_decimals",
              "offset": 0,
              "slot": "5",
              "type": "t_uint8",
              "contract": "FistDao",
              "src": "contracts/FirstDao.sol:132"
            },
            {
              "label": "_totalSupply",
              "offset": 0,
              "slot": "6",
              "type": "t_uint256",
              "contract": "FistDao",
              "src": "contracts/FirstDao.sol:133"
            },
            {
              "label": "_balances",
              "offset": 0,
              "slot": "7",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "FistDao",
              "src": "contracts/FirstDao.sol:134"
            },
            {
              "label": "_allowances",
              "offset": 0,
              "slot": "8",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "FistDao",
              "src": "contracts/FirstDao.sol:135"
            },
            {
              "label": "_isApproved",
              "offset": 0,
              "slot": "9",
              "type": "t_mapping(t_address,t_bool)",
              "contract": "FistDao",
              "src": "contracts/FirstDao.sol:136"
            },
            {
              "label": "_feeTax",
              "offset": 0,
              "slot": "10",
              "type": "t_uint256",
              "contract": "FistDao",
              "src": "contracts/FirstDao.sol:138"
            },
            {
              "label": "_feeMining",
              "offset": 0,
              "slot": "11",
              "type": "t_uint256",
              "contract": "FistDao",
              "src": "contracts/FirstDao.sol:139"
            },
            {
              "label": "_feeLiquidity",
              "offset": 0,
              "slot": "12",
              "type": "t_uint256",
              "contract": "FistDao",
              "src": "contracts/FirstDao.sol:140"
            },
            {
              "label": "_feeDivisor",
              "offset": 0,
              "slot": "13",
              "type": "t_uint256",
              "contract": "FistDao",
              "src": "contracts/FirstDao.sol:141"
            },
            {
              "label": "_removeAllFee",
              "offset": 0,
              "slot": "14",
              "type": "t_bool",
              "contract": "FistDao",
              "src": "contracts/FirstDao.sol:143"
            },
            {
              "label": "_core",
              "offset": 1,
              "slot": "14",
              "type": "t_address",
              "contract": "FistDao",
              "src": "contracts/FirstDao.sol:145"
            },
            {
              "label": "_taxReceiver",
              "offset": 0,
              "slot": "15",
              "type": "t_address",
              "contract": "FistDao",
              "src": "contracts/FirstDao.sol:146"
            },
            {
              "label": "_miningPool",
              "offset": 0,
              "slot": "16",
              "type": "t_address",
              "contract": "FistDao",
              "src": "contracts/FirstDao.sol:147"
            },
            {
              "label": "_liquidityPool",
              "offset": 0,
              "slot": "17",
              "type": "t_address",
              "contract": "FistDao",
              "src": "contracts/FirstDao.sol:148"
            },
            {
              "label": "_defaultBalance",
              "offset": 0,
              "slot": "18",
              "type": "t_uint256",
              "contract": "FistDao",
              "src": "contracts/FirstDao.sol:150"
            },
            {
              "label": "_defaultAmount",
              "offset": 0,
              "slot": "19",
              "type": "t_uint256",
              "contract": "FistDao",
              "src": "contracts/FirstDao.sol:151"
            },
            {
              "label": "_isExcludedFromFee",
              "offset": 0,
              "slot": "20",
              "type": "t_mapping(t_address,t_bool)",
              "contract": "FistDao",
              "src": "contracts/FirstDao.sol:153"
            },
            {
              "label": "_excludedFromFeeAccounts",
              "offset": 0,
              "slot": "21",
              "type": "t_array(t_address)dyn_storage",
              "contract": "FistDao",
              "src": "contracts/FirstDao.sol:154"
            },
            {
              "label": "_initialized111",
              "offset": 0,
              "slot": "22",
              "type": "t_bool",
              "contract": "FistDao",
              "src": "contracts/FirstDao.sol:156"
            },
            {
              "label": "_reentry",
              "offset": 0,
              "slot": "23",
              "type": "t_uint256",
              "contract": "FistDao",
              "src": "contracts/FirstDao.sol:157"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_address)dyn_storage": {
              "label": "address[]",
              "numberOfBytes": "32"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint8": {
              "label": "uint8",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.21"
      },
      "contracts/FirstDao.sol:ICore": {
        "src": "contracts/FirstDao.sol:119",
        "inherit": [],
        "libraries": [],
        "methods": [
          "getPairAddress()",
          "airdrop()",
          "safety(address,address)",
          "start()",
          "end()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.21"
      },
      "contracts/FirstDao.sol:IERC20": {
        "src": "contracts/FirstDao.sol:8",
        "inherit": [],
        "libraries": [],
        "methods": [
          "name()",
          "symbol()",
          "decimals()",
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "transferFrom(address,address,uint256)",
          "approve(address,uint256)",
          "allowance(address,address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.21"
      },
      "contracts/FirstDao.sol:IFactory": {
        "src": "contracts/FirstDao.sol:91",
        "inherit": [],
        "libraries": [],
        "methods": [
          "createPair(address,address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.21"
      },
      "contracts/FirstDao.sol:IRouter01": {
        "src": "contracts/FirstDao.sol:95",
        "inherit": [],
        "libraries": [],
        "methods": [
          "factory()",
          "addLiquidity(address,address,uint256,uint256,uint256,uint256,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.21"
      },
      "contracts/FirstDao.sol:IRouter02": {
        "src": "contracts/FirstDao.sol:109",
        "inherit": [
          "contracts/FirstDao.sol:IRouter01"
        ],
        "libraries": [],
        "methods": [
          "swapExactTokensForTokensSupportingFeeOnTransferTokens(uint256,uint256,address[],address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.21"
      },
      "contracts/FirstDao.sol:Ownable": {
        "src": "contracts/FirstDao.sol:57",
        "inherit": [],
        "libraries": [],
        "methods": [
          "owner()",
          "switchDate()",
          "transferOwnership(uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Ownable",
            "src": "contracts/FirstDao.sol:63"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Ownable",
              "src": "contracts/FirstDao.sol:58"
            },
            {
              "label": "_previousOwner",
              "offset": 0,
              "slot": "1",
              "type": "t_address",
              "contract": "Ownable",
              "src": "contracts/FirstDao.sol:59"
            },
            {
              "label": "_switchDate",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "Ownable",
              "src": "contracts/FirstDao.sol:60"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.21"
      },
      "contracts/FirstDao.sol:SafeMath": {
        "src": "contracts/FirstDao.sol:22",
        "version": {
          "withMetadata": "95eb3df1bd62a62b1bf87150f7314053125cc709ed6eb26f9bf2a30d8fc55e32",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.21"
      }
    },
    {
      "contracts/Logic.sol:Logic": {
        "src": "contracts/Logic.sol:9",
        "version": {
          "withMetadata": "087c86b163578853fb1cba09b22843df8f815c95bf2568200ddd8e1dbf167fea",
          "withoutMetadata": "a9feffbc7087e9529577fb0b368171b85b94d25918f43b5d410eb0f186274034",
          "linkedWithoutMetadata": "a9feffbc7087e9529577fb0b368171b85b94d25918f43b5d410eb0f186274034"
        },
        "inherit": [],
        "libraries": [],
        "methods": [
          "increment()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "state-variable-assignment",
            "name": "x",
            "src": "contracts/Logic.sol:13"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "implementation",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Logic",
              "src": "contracts/Logic.sol:9"
            },
            {
              "label": "x",
              "offset": 0,
              "slot": "1",
              "type": "t_uint256",
              "contract": "Logic",
              "src": "contracts/Logic.sol:13"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.21"
      }
    },
    {
      "contracts/Proxy.sol:Caller": {
        "src": "contracts/Proxy.sol:80",
        "version": {
          "withMetadata": "9ce8fab2ba2d901a6c6fbf54c47202b7af5e008695fdcdd87dbcbadf457cedf1",
          "withoutMetadata": "d6211a178c252503f87d41bbcceffa66551bde0c0c4b0cc3c5a44a4f489e2c7f",
          "linkedWithoutMetadata": "d6211a178c252503f87d41bbcceffa66551bde0c0c4b0cc3c5a44a4f489e2c7f"
        },
        "inherit": [],
        "libraries": [],
        "methods": [
          "(address)",
          "increase()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Caller",
            "src": "contracts/Proxy.sol:80"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "proxy",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Caller",
              "src": "contracts/Proxy.sol:80"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.21"
      },
      "contracts/Proxy.sol:Proxy": {
        "src": "contracts/Proxy.sol:10",
        "version": {
          "withMetadata": "3f5c5f504c75452b4e66d955826ba95c6546b31eb98ec5ded382c37a5607a2e2",
          "withoutMetadata": "bc7fcd1c64d2f798926ae830c3e369a33c770ea294cd9047d184a8c885a96818",
          "linkedWithoutMetadata": "bc7fcd1c64d2f798926ae830c3e369a33c770ea294cd9047d184a8c885a96818"
        },
        "inherit": [],
        "libraries": [],
        "methods": [
          "(address)",
          "()",
          "()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Proxy",
            "src": "contracts/Proxy.sol:22"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "implementation",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Proxy",
              "src": "contracts/Proxy.sol:13"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.21"
      }
    },
    {
      "contracts/ETR.sol:Context": {
        "src": "contracts/ETR.sol:119",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.7"
      },
      "contracts/ETR.sol:DividendPayingToken": {
        "src": "contracts/ETR.sol:764",
        "version": {
          "withMetadata": "878d927eb56902e60e9ccd22b3003544d516662402ec3ed48e32cc52acc6c9da",
          "withoutMetadata": "5f12a41bed77b8d846201b76f2baf2336ab1933a83d19dc96334fb9b5506070f",
          "linkedWithoutMetadata": "5f12a41bed77b8d846201b76f2baf2336ab1933a83d19dc96334fb9b5506070f"
        },
        "inherit": [
          "contracts/ETR.sol:DividendPayingTokenOptionalInterface",
          "contracts/ETR.sol:DividendPayingTokenInterface",
          "contracts/ETR.sol:Ownable",
          "contracts/ETR.sol:ERC20",
          "contracts/ETR.sol:IERC20Metadata",
          "contracts/ETR.sol:IERC20",
          "contracts/ETR.sol:Context"
        ],
        "libraries": [
          "contracts/ETR.sol:SafeMath",
          "contracts/ETR.sol:SafeMathUint",
          "contracts/ETR.sol:SafeMathInt"
        ],
        "methods": [
          "(string,string)",
          "distributeETHDividends(uint256)",
          "withdrawDividend()",
          "dividendOf(address)",
          "withdrawableDividendOf(address)",
          "withdrawnDividendOf(address)",
          "accumulativeDividendOf(address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "DividendPayingToken",
            "src": "contracts/ETR.sol:795"
          },
          {
            "kind": "state-variable-immutable",
            "name": "ETH",
            "src": "contracts/ETR.sol:769"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_balances",
              "offset": 0,
              "slot": "0",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC20",
              "src": "contracts/ETR.sol:301"
            },
            {
              "label": "_allowances",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "ERC20",
              "src": "contracts/ETR.sol:303"
            },
            {
              "label": "_totalSupply",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "ERC20",
              "src": "contracts/ETR.sol:305"
            },
            {
              "label": "_name",
              "offset": 0,
              "slot": "3",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "contracts/ETR.sol:307"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "4",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "contracts/ETR.sol:308"
            },
            {
              "label": "_owner",
              "offset": 0,
              "slot": "5",
              "type": "t_address",
              "contract": "Ownable",
              "src": "contracts/ETR.sol:706"
            },
            {
              "label": "magnifiedDividendPerShare",
              "offset": 0,
              "slot": "6",
              "type": "t_uint256",
              "contract": "DividendPayingToken",
              "src": "contracts/ETR.sol:777"
            },
            {
              "label": "magnifiedDividendCorrections",
              "offset": 0,
              "slot": "7",
              "type": "t_mapping(t_address,t_int256)",
              "contract": "DividendPayingToken",
              "src": "contracts/ETR.sol:790"
            },
            {
              "label": "withdrawnDividends",
              "offset": 0,
              "slot": "8",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "DividendPayingToken",
              "src": "contracts/ETR.sol:791"
            },
            {
              "label": "totalDividendsDistributed",
              "offset": 0,
              "slot": "9",
              "type": "t_uint256",
              "contract": "DividendPayingToken",
              "src": "contracts/ETR.sol:793"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_int256": {
              "label": "int256",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_int256)": {
              "label": "mapping(address => int256)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.7"
      },
      "contracts/ETR.sol:DividendPayingTokenInterface": {
        "src": "contracts/ETR.sol:655",
        "inherit": [],
        "libraries": [],
        "methods": [
          "dividendOf(address)",
          "withdrawDividend()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.7"
      },
      "contracts/ETR.sol:DividendPayingTokenOptionalInterface": {
        "src": "contracts/ETR.sol:687",
        "inherit": [],
        "libraries": [],
        "methods": [
          "withdrawableDividendOf(address)",
          "withdrawnDividendOf(address)",
          "accumulativeDividendOf(address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.7"
      },
      "contracts/ETR.sol:ERC20": {
        "src": "contracts/ETR.sol:298",
        "version": {
          "withMetadata": "92e573b53e972d61897cf822f80ea43b8298bfb9951e6cedad81ac9b86cdea6c",
          "withoutMetadata": "d6fd5edeffa35e9d21d521adbc6f22c349e9a622801eeb262bbfdc7c1e615ef1",
          "linkedWithoutMetadata": "d6fd5edeffa35e9d21d521adbc6f22c349e9a622801eeb262bbfdc7c1e615ef1"
        },
        "inherit": [
          "contracts/ETR.sol:IERC20Metadata",
          "contracts/ETR.sol:IERC20",
          "contracts/ETR.sol:Context"
        ],
        "libraries": [
          "contracts/ETR.sol:SafeMath"
        ],
        "methods": [
          "(string,string)",
          "name()",
          "symbol()",
          "decimals()",
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)",
          "increaseAllowance(address,uint256)",
          "decreaseAllowance(address,uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ERC20",
            "src": "contracts/ETR.sol:319"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_balances",
              "offset": 0,
              "slot": "0",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC20",
              "src": "contracts/ETR.sol:301"
            },
            {
              "label": "_allowances",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "ERC20",
              "src": "contracts/ETR.sol:303"
            },
            {
              "label": "_totalSupply",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "ERC20",
              "src": "contracts/ETR.sol:305"
            },
            {
              "label": "_name",
              "offset": 0,
              "slot": "3",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "contracts/ETR.sol:307"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "4",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "contracts/ETR.sol:308"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.7"
      },
      "contracts/ETR.sol:ETR": {
        "src": "contracts/ETR.sol:1188",
        "version": {
          "withMetadata": "6ba79ab4202d829ce004b7d72299d2cff74b5fe1277f3c7a6d083b957d0650d5",
          "withoutMetadata": "6ba79ab4202d829ce004b7d72299d2cff74b5fe1277f3c7a6d083b957d0650d5",
          "linkedWithoutMetadata": "6ba79ab4202d829ce004b7d72299d2cff74b5fe1277f3c7a6d083b957d0650d5"
        },
        "inherit": [
          "contracts/ETR.sol:Ownable",
          "contracts/ETR.sol:ERC20",
          "contracts/ETR.sol:IERC20Metadata",
          "contracts/ETR.sol:IERC20",
          "contracts/ETR.sol:Context"
        ],
        "libraries": [
          "contracts/ETR.sol:SafeMath"
        ],
        "methods": [
          "()",
          "()",
          "setTradingEnabled(bool)",
          "addToBlackList(address)",
          "removeFromBlackList(address)",
          "isBlacklisted(address)",
          "addToWhitelist(address)",
          "setAutomatedMarketMakerPair(address,bool)",
          "updateDividendTracker(address)",
          "updateUniswapV2Router(address)",
          "excludeOrIncludeFromFees(address,bool)",
          "excludeOrIncludeMultipleAccountsFromFees(address[],bool)",
          "excludeOrIncludeFromMaxTx(address,bool)",
          "excludeOrIncludeFromMaxWallet(address,bool)",
          "setMaxWalletToken(uint256)",
          "setMaxtx(uint256)",
          "setMarketingWallet(address payable)",
          "setETRWallet(address payable)",
          "setBuyFees(uint256,uint256,uint256,uint256)",
          "setSellFees(uint256,uint256,uint256,uint256)",
          "updateGasForProcessing(uint256)",
          "updateClaimWait(uint256)",
          "getClaimWait()",
          "getTotalDividendsDistributed()",
          "isExcludedFromFees(address)",
          "isExcludedFromMaxTx(address)",
          "isExcludedFromMaxWallet(address)",
          "withdrawableDividendOf(address)",
          "dividendTokenBalanceOf(address)",
          "excludeFromDividends(address)",
          "getAccountDividendsInfo(address)",
          "getAccountDividendsInfoAtIndex(uint256)",
          "processDividendTracker(uint256)",
          "claim()",
          "getLastProcessedIndex()",
          "getNumberOfDividendTokenHolders()",
          "changeSwapTokensAtAmount(uint256)",
          "manualSwapTokensForEth(uint256)",
          "withdrawStuckBNB()",
          "removeStuckToken(address)"
        ],
        "linkReferences": [
          {
            "src": "contracts/ETR.sol",
            "name": "IterableMapping",
            "length": 20,
            "start": 24424,
            "placeholder": "__$9b82b52d3d4feb469761ee097260b6c83b$__"
          },
          {
            "src": "contracts/ETR.sol",
            "name": "IterableMapping",
            "length": 20,
            "start": 24626,
            "placeholder": "__$9b82b52d3d4feb469761ee097260b6c83b$__"
          },
          {
            "src": "contracts/ETR.sol",
            "name": "IterableMapping",
            "length": 20,
            "start": 24831,
            "placeholder": "__$9b82b52d3d4feb469761ee097260b6c83b$__"
          },
          {
            "src": "contracts/ETR.sol",
            "name": "IterableMapping",
            "length": 20,
            "start": 25954,
            "placeholder": "__$9b82b52d3d4feb469761ee097260b6c83b$__"
          },
          {
            "src": "contracts/ETR.sol",
            "name": "IterableMapping",
            "length": 20,
            "start": 26084,
            "placeholder": "__$9b82b52d3d4feb469761ee097260b6c83b$__"
          },
          {
            "src": "contracts/ETR.sol",
            "name": "IterableMapping",
            "length": 20,
            "start": 26833,
            "placeholder": "__$9b82b52d3d4feb469761ee097260b6c83b$__"
          }
        ],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ETR",
            "src": "contracts/ETR.sol:1278"
          },
          {
            "kind": "state-variable-immutable",
            "name": "ETH",
            "src": "contracts/ETR.sol:1200"
          },
          {
            "kind": "state-variable-assignment",
            "name": "swapTokensAtAmount",
            "src": "contracts/ETR.sol:1202"
          },
          {
            "kind": "state-variable-assignment",
            "name": "maxTransactionAmount",
            "src": "contracts/ETR.sol:1203"
          },
          {
            "kind": "state-variable-assignment",
            "name": "_BuyETHRewardsFee",
            "src": "contracts/ETR.sol:1205"
          },
          {
            "kind": "state-variable-assignment",
            "name": "_BuyLiquidityFee",
            "src": "contracts/ETR.sol:1206"
          },
          {
            "kind": "state-variable-assignment",
            "name": "_BuyMarketingFee",
            "src": "contracts/ETR.sol:1207"
          },
          {
            "kind": "state-variable-assignment",
            "name": "_BuyBackETRFee",
            "src": "contracts/ETR.sol:1208"
          },
          {
            "kind": "state-variable-assignment",
            "name": "_BuyTotalFees",
            "src": "contracts/ETR.sol:1210"
          },
          {
            "kind": "state-variable-assignment",
            "name": "_SellETHRewardsFee",
            "src": "contracts/ETR.sol:1212"
          },
          {
            "kind": "state-variable-assignment",
            "name": "_SellLiquidityFee",
            "src": "contracts/ETR.sol:1213"
          },
          {
            "kind": "state-variable-assignment",
            "name": "_SellMarketingFee",
            "src": "contracts/ETR.sol:1214"
          },
          {
            "kind": "state-variable-assignment",
            "name": "_SellBackETRFee",
            "src": "contracts/ETR.sol:1215"
          },
          {
            "kind": "state-variable-assignment",
            "name": "_SellTotalFees",
            "src": "contracts/ETR.sol:1216"
          },
          {
            "kind": "state-variable-assignment",
            "name": "maxWalletToken",
            "src": "contracts/ETR.sol:1218"
          },
          {
            "kind": "state-variable-assignment",
            "name": "_marketingWalletAddress",
            "src": "contracts/ETR.sol:1220"
          },
          {
            "kind": "state-variable-assignment",
            "name": "_ETRWalletAddress",
            "src": "contracts/ETR.sol:1221"
          },
          {
            "kind": "state-variable-assignment",
            "name": "gasForProcessing",
            "src": "contracts/ETR.sol:1226"
          },
          {
            "kind": "external-library-linking",
            "name": "IterableMapping",
            "src": "contracts/ETR.sol"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_balances",
              "offset": 0,
              "slot": "0",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC20",
              "src": "contracts/ETR.sol:301"
            },
            {
              "label": "_allowances",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "ERC20",
              "src": "contracts/ETR.sol:303"
            },
            {
              "label": "_totalSupply",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "ERC20",
              "src": "contracts/ETR.sol:305"
            },
            {
              "label": "_name",
              "offset": 0,
              "slot": "3",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "contracts/ETR.sol:307"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "4",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "contracts/ETR.sol:308"
            },
            {
              "label": "_owner",
              "offset": 0,
              "slot": "5",
              "type": "t_address",
              "contract": "Ownable",
              "src": "contracts/ETR.sol:706"
            },
            {
              "label": "uniswapV2Router",
              "offset": 0,
              "slot": "6",
              "type": "t_contract(IUniswapV2Router02)2537",
              "contract": "ETR",
              "src": "contracts/ETR.sol:1191"
            },
            {
              "label": "uniswapV2Pair",
              "offset": 0,
              "slot": "7",
              "type": "t_address",
              "contract": "ETR",
              "src": "contracts/ETR.sol:1192"
            },
            {
              "label": "swapping",
              "offset": 20,
              "slot": "7",
              "type": "t_bool",
              "contract": "ETR",
              "src": "contracts/ETR.sol:1194"
            },
            {
              "label": "dividendTracker",
              "offset": 0,
              "slot": "8",
              "type": "t_contract(ETRDividendTracker)5307",
              "contract": "ETR",
              "src": "contracts/ETR.sol:1196"
            },
            {
              "label": "swapTokensAtAmount",
              "offset": 0,
              "slot": "9",
              "type": "t_uint256",
              "contract": "ETR",
              "src": "contracts/ETR.sol:1202"
            },
            {
              "label": "maxTransactionAmount",
              "offset": 0,
              "slot": "10",
              "type": "t_uint256",
              "contract": "ETR",
              "src": "contracts/ETR.sol:1203"
            },
            {
              "label": "_BuyETHRewardsFee",
              "offset": 0,
              "slot": "11",
              "type": "t_uint256",
              "contract": "ETR",
              "src": "contracts/ETR.sol:1205"
            },
            {
              "label": "_BuyLiquidityFee",
              "offset": 0,
              "slot": "12",
              "type": "t_uint256",
              "contract": "ETR",
              "src": "contracts/ETR.sol:1206"
            },
            {
              "label": "_BuyMarketingFee",
              "offset": 0,
              "slot": "13",
              "type": "t_uint256",
              "contract": "ETR",
              "src": "contracts/ETR.sol:1207"
            },
            {
              "label": "_BuyBackETRFee",
              "offset": 0,
              "slot": "14",
              "type": "t_uint256",
              "contract": "ETR",
              "src": "contracts/ETR.sol:1208"
            },
            {
              "label": "_BuyTotalFees",
              "offset": 0,
              "slot": "15",
              "type": "t_uint256",
              "contract": "ETR",
              "src": "contracts/ETR.sol:1210"
            },
            {
              "label": "_SellETHRewardsFee",
              "offset": 0,
              "slot": "16",
              "type": "t_uint256",
              "contract": "ETR",
              "src": "contracts/ETR.sol:1212"
            },
            {
              "label": "_SellLiquidityFee",
              "offset": 0,
              "slot": "17",
              "type": "t_uint256",
              "contract": "ETR",
              "src": "contracts/ETR.sol:1213"
            },
            {
              "label": "_SellMarketingFee",
              "offset": 0,
              "slot": "18",
              "type": "t_uint256",
              "contract": "ETR",
              "src": "contracts/ETR.sol:1214"
            },
            {
              "label": "_SellBackETRFee",
              "offset": 0,
              "slot": "19",
              "type": "t_uint256",
              "contract": "ETR",
              "src": "contracts/ETR.sol:1215"
            },
            {
              "label": "_SellTotalFees",
              "offset": 0,
              "slot": "20",
              "type": "t_uint256",
              "contract": "ETR",
              "src": "contracts/ETR.sol:1216"
            },
            {
              "label": "maxWalletToken",
              "offset": 0,
              "slot": "21",
              "type": "t_uint256",
              "contract": "ETR",
              "src": "contracts/ETR.sol:1218"
            },
            {
              "label": "_marketingWalletAddress",
              "offset": 0,
              "slot": "22",
              "type": "t_address",
              "contract": "ETR",
              "src": "contracts/ETR.sol:1220"
            },
            {
              "label": "_ETRWalletAddress",
              "offset": 0,
              "slot": "23",
              "type": "t_address",
              "contract": "ETR",
              "src": "contracts/ETR.sol:1221"
            },
            {
              "label": "tradingEnabled",
              "offset": 20,
              "slot": "23",
              "type": "t_bool",
              "contract": "ETR",
              "src": "contracts/ETR.sol:1224"
            },
            {
              "label": "gasForProcessing",
              "offset": 0,
              "slot": "24",
              "type": "t_uint256",
              "contract": "ETR",
              "src": "contracts/ETR.sol:1226"
            },
            {
              "label": "_isExcludedFromFees",
              "offset": 0,
              "slot": "25",
              "type": "t_mapping(t_address,t_bool)",
              "contract": "ETR",
              "src": "contracts/ETR.sol:1229"
            },
            {
              "label": "_isExcludedFromMaxWallet",
              "offset": 0,
              "slot": "26",
              "type": "t_mapping(t_address,t_bool)",
              "contract": "ETR",
              "src": "contracts/ETR.sol:1230"
            },
            {
              "label": "_isExcludedFromMaxTx",
              "offset": 0,
              "slot": "27",
              "type": "t_mapping(t_address,t_bool)",
              "contract": "ETR",
              "src": "contracts/ETR.sol:1231"
            },
            {
              "label": "_blacklisted",
              "offset": 0,
              "slot": "28",
              "type": "t_mapping(t_address,t_bool)",
              "contract": "ETR",
              "src": "contracts/ETR.sol:1232"
            },
            {
              "label": "_whitelisted",
              "offset": 0,
              "slot": "29",
              "type": "t_mapping(t_address,t_bool)",
              "contract": "ETR",
              "src": "contracts/ETR.sol:1233"
            },
            {
              "label": "automatedMarketMakerPairs",
              "offset": 0,
              "slot": "30",
              "type": "t_mapping(t_address,t_bool)",
              "contract": "ETR",
              "src": "contracts/ETR.sol:1236"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_contract(ETRDividendTracker)5307": {
              "label": "contract ETRDividendTracker",
              "numberOfBytes": "20"
            },
            "t_contract(IUniswapV2Router02)2537": {
              "label": "contract IUniswapV2Router02",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.7"
      },
      "contracts/ETR.sol:ETRDividendTracker": {
        "src": "contracts/ETR.sol:1817",
        "version": {
          "withMetadata": "2dea63e88214246b2c04ef855e9c9aedb0a982970524c9411c3e45a2f6613beb",
          "withoutMetadata": "2d9b850e04b2ab1b4a416e5a53058b76385120a6959bbbca0e09efef2ef505b7",
          "linkedWithoutMetadata": "2d9b850e04b2ab1b4a416e5a53058b76385120a6959bbbca0e09efef2ef505b7"
        },
        "inherit": [
          "contracts/ETR.sol:DividendPayingToken",
          "contracts/ETR.sol:DividendPayingTokenOptionalInterface",
          "contracts/ETR.sol:DividendPayingTokenInterface",
          "contracts/ETR.sol:Ownable",
          "contracts/ETR.sol:ERC20",
          "contracts/ETR.sol:IERC20Metadata",
          "contracts/ETR.sol:IERC20",
          "contracts/ETR.sol:Context"
        ],
        "libraries": [
          "contracts/ETR.sol:SafeMath",
          "contracts/ETR.sol:SafeMathInt",
          "contracts/ETR.sol:IterableMapping"
        ],
        "methods": [
          "()",
          "withdrawDividend()",
          "excludeFromDividends(address)",
          "updateClaimWait(uint256)",
          "getLastProcessedIndex()",
          "getNumberOfTokenHolders()",
          "getAccount(address)",
          "getAccountAtIndex(uint256)",
          "setBalance(address payable,uint256)",
          "process(uint256)",
          "processAccount(address payable,bool)"
        ],
        "linkReferences": [
          {
            "src": "contracts/ETR.sol",
            "name": "IterableMapping",
            "length": 20,
            "start": 2522,
            "placeholder": "__$9b82b52d3d4feb469761ee097260b6c83b$__"
          },
          {
            "src": "contracts/ETR.sol",
            "name": "IterableMapping",
            "length": 20,
            "start": 2724,
            "placeholder": "__$9b82b52d3d4feb469761ee097260b6c83b$__"
          },
          {
            "src": "contracts/ETR.sol",
            "name": "IterableMapping",
            "length": 20,
            "start": 2929,
            "placeholder": "__$9b82b52d3d4feb469761ee097260b6c83b$__"
          },
          {
            "src": "contracts/ETR.sol",
            "name": "IterableMapping",
            "length": 20,
            "start": 4052,
            "placeholder": "__$9b82b52d3d4feb469761ee097260b6c83b$__"
          },
          {
            "src": "contracts/ETR.sol",
            "name": "IterableMapping",
            "length": 20,
            "start": 4182,
            "placeholder": "__$9b82b52d3d4feb469761ee097260b6c83b$__"
          },
          {
            "src": "contracts/ETR.sol",
            "name": "IterableMapping",
            "length": 20,
            "start": 4931,
            "placeholder": "__$9b82b52d3d4feb469761ee097260b6c83b$__"
          }
        ],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ETRDividendTracker",
            "src": "contracts/ETR.sol:1837"
          },
          {
            "kind": "state-variable-immutable",
            "name": "minimumTokenBalanceForDividends",
            "src": "contracts/ETR.sol:1830"
          },
          {
            "kind": "external-library-linking",
            "name": "IterableMapping",
            "src": "contracts/ETR.sol"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_balances",
              "offset": 0,
              "slot": "0",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC20",
              "src": "contracts/ETR.sol:301"
            },
            {
              "label": "_allowances",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "ERC20",
              "src": "contracts/ETR.sol:303"
            },
            {
              "label": "_totalSupply",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "ERC20",
              "src": "contracts/ETR.sol:305"
            },
            {
              "label": "_name",
              "offset": 0,
              "slot": "3",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "contracts/ETR.sol:307"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "4",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "contracts/ETR.sol:308"
            },
            {
              "label": "_owner",
              "offset": 0,
              "slot": "5",
              "type": "t_address",
              "contract": "Ownable",
              "src": "contracts/ETR.sol:706"
            },
            {
              "label": "magnifiedDividendPerShare",
              "offset": 0,
              "slot": "6",
              "type": "t_uint256",
              "contract": "DividendPayingToken",
              "src": "contracts/ETR.sol:777"
            },
            {
              "label": "magnifiedDividendCorrections",
              "offset": 0,
              "slot": "7",
              "type": "t_mapping(t_address,t_int256)",
              "contract": "DividendPayingToken",
              "src": "contracts/ETR.sol:790"
            },
            {
              "label": "withdrawnDividends",
              "offset": 0,
              "slot": "8",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "DividendPayingToken",
              "src": "contracts/ETR.sol:791"
            },
            {
              "label": "totalDividendsDistributed",
              "offset": 0,
              "slot": "9",
              "type": "t_uint256",
              "contract": "DividendPayingToken",
              "src": "contracts/ETR.sol:793"
            },
            {
              "label": "tokenHoldersMap",
              "offset": 0,
              "slot": "10",
              "type": "t_struct(Map)1630_storage",
              "contract": "ETRDividendTracker",
              "src": "contracts/ETR.sol:1822"
            },
            {
              "label": "lastProcessedIndex",
              "offset": 0,
              "slot": "14",
              "type": "t_uint256",
              "contract": "ETRDividendTracker",
              "src": "contracts/ETR.sol:1823"
            },
            {
              "label": "excludedFromDividends",
              "offset": 0,
              "slot": "15",
              "type": "t_mapping(t_address,t_bool)",
              "contract": "ETRDividendTracker",
              "src": "contracts/ETR.sol:1825"
            },
            {
              "label": "lastClaimTimes",
              "offset": 0,
              "slot": "16",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ETRDividendTracker",
              "src": "contracts/ETR.sol:1827"
            },
            {
              "label": "claimWait",
              "offset": 0,
              "slot": "17",
              "type": "t_uint256",
              "contract": "ETRDividendTracker",
              "src": "contracts/ETR.sol:1829"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_address)dyn_storage": {
              "label": "address[]",
              "numberOfBytes": "32"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_int256": {
              "label": "int256",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_int256)": {
              "label": "mapping(address => int256)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_struct(Map)1630_storage": {
              "label": "struct IterableMapping.Map",
              "members": [
                {
                  "label": "keys",
                  "type": "t_array(t_address)dyn_storage",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "values",
                  "type": "t_mapping(t_address,t_uint256)",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "indexOf",
                  "type": "t_mapping(t_address,t_uint256)",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "inserted",
                  "type": "t_mapping(t_address,t_bool)",
                  "offset": 0,
                  "slot": "3"
                }
              ],
              "numberOfBytes": "128"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.7"
      },
      "contracts/ETR.sol:IERC20": {
        "src": "contracts/ETR.sol:12",
        "inherit": [],
        "libraries": [],
        "methods": [
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.7"
      },
      "contracts/ETR.sol:IERC20Metadata": {
        "src": "contracts/ETR.sol:92",
        "inherit": [
          "contracts/ETR.sol:IERC20"
        ],
        "libraries": [],
        "methods": [
          "name()",
          "symbol()",
          "decimals()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.7"
      },
      "contracts/ETR.sol:IUniswapV2Factory": {
        "src": "contracts/ETR.sol:1034",
        "inherit": [],
        "libraries": [],
        "methods": [
          "feeTo()",
          "feeToSetter()",
          "getPair(address,address)",
          "allPairs(uint256)",
          "allPairsLength()",
          "createPair(address,address)",
          "setFeeTo(address)",
          "setFeeToSetter(address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.7"
      },
      "contracts/ETR.sol:IUniswapV2Pair": {
        "src": "contracts/ETR.sol:983",
        "inherit": [],
        "libraries": [],
        "methods": [
          "name()",
          "symbol()",
          "decimals()",
          "totalSupply()",
          "balanceOf(address)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transfer(address,uint256)",
          "transferFrom(address,address,uint256)",
          "DOMAIN_SEPARATOR()",
          "PERMIT_TYPEHASH()",
          "nonces(address)",
          "permit(address,address,uint256,uint256,uint8,bytes32,bytes32)",
          "MINIMUM_LIQUIDITY()",
          "factory()",
          "token0()",
          "token1()",
          "getReserves()",
          "price0CumulativeLast()",
          "price1CumulativeLast()",
          "kLast()",
          "mint(address)",
          "burn(address)",
          "swap(uint256,uint256,address,bytes)",
          "skim(address)",
          "sync()",
          "initialize(address,address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.7"
      },
      "contracts/ETR.sol:IUniswapV2Router01": {
        "src": "contracts/ETR.sol:1050",
        "inherit": [],
        "libraries": [],
        "methods": [
          "factory()",
          "WETH()",
          "addLiquidity(address,address,uint256,uint256,uint256,uint256,address,uint256)",
          "addLiquidityETH(address,uint256,uint256,uint256,address,uint256)",
          "removeLiquidity(address,address,uint256,uint256,uint256,address,uint256)",
          "removeLiquidityETH(address,uint256,uint256,uint256,address,uint256)",
          "removeLiquidityWithPermit(address,address,uint256,uint256,uint256,address,uint256,bool,uint8,bytes32,bytes32)",
          "removeLiquidityETHWithPermit(address,uint256,uint256,uint256,address,uint256,bool,uint8,bytes32,bytes32)",
          "swapExactTokensForTokens(uint256,uint256,address[],address,uint256)",
          "swapTokensForExactTokens(uint256,uint256,address[],address,uint256)",
          "swapExactETHForTokens(uint256,address[],address,uint256)",
          "swapTokensForExactETH(uint256,uint256,address[],address,uint256)",
          "swapExactTokensForETH(uint256,uint256,address[],address,uint256)",
          "swapETHForExactTokens(uint256,address[],address,uint256)",
          "quote(uint256,uint256,uint256)",
          "getAmountOut(uint256,uint256,uint256)",
          "getAmountIn(uint256,uint256,uint256)",
          "getAmountsOut(uint256,address[])",
          "getAmountsIn(uint256,address[])"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.7"
      },
      "contracts/ETR.sol:IUniswapV2Router02": {
        "src": "contracts/ETR.sol:1146",
        "inherit": [
          "contracts/ETR.sol:IUniswapV2Router01"
        ],
        "libraries": [],
        "methods": [
          "removeLiquidityETHSupportingFeeOnTransferTokens(address,uint256,uint256,uint256,address,uint256)",
          "removeLiquidityETHWithPermitSupportingFeeOnTransferTokens(address,uint256,uint256,uint256,address,uint256,bool,uint8,bytes32,bytes32)",
          "swapExactTokensForTokensSupportingFeeOnTransferTokens(uint256,uint256,address[],address,uint256)",
          "swapExactETHForTokensSupportingFeeOnTransferTokens(uint256,address[],address,uint256)",
          "swapExactTokensForETHSupportingFeeOnTransferTokens(uint256,uint256,address[],address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.7"
      },
      "contracts/ETR.sol:IterableMapping": {
        "src": "contracts/ETR.sol:921",
        "version": {
          "withMetadata": "8a0aecea21840f408b9e358f04942fa7e339eb91f93eb71e1ef2bf8484cc09f4",
          "withoutMetadata": "de17e2600e3ef2cc9dcede00533ab195c35c94ab17a69e5bc5605d724fe0a8b1",
          "linkedWithoutMetadata": "de17e2600e3ef2cc9dcede00533ab195c35c94ab17a69e5bc5605d724fe0a8b1"
        },
        "inherit": [],
        "libraries": [],
        "methods": [
          "get(IterableMapping.Map storage,address)",
          "getIndexOfKey(IterableMapping.Map storage,address)",
          "getKeyAtIndex(IterableMapping.Map storage,uint256)",
          "size(IterableMapping.Map storage)",
          "set(IterableMapping.Map storage,address,uint256)",
          "remove(IterableMapping.Map storage,address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.7"
      },
      "contracts/ETR.sol:Ownable": {
        "src": "contracts/ETR.sol:705",
        "version": {
          "withMetadata": "5042109737536b65083dd15b02e6942f0b25c617dd90fe885abbaf1d1ce2fd91",
          "withoutMetadata": "cca71170c81c2afe795a617b9e843ceece74d5d8286cb195abeff2853b66075a",
          "linkedWithoutMetadata": "cca71170c81c2afe795a617b9e843ceece74d5d8286cb195abeff2853b66075a"
        },
        "inherit": [
          "contracts/ETR.sol:Context"
        ],
        "libraries": [],
        "methods": [
          "()",
          "owner()",
          "renounceOwnership()",
          "transferOwnership(address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Ownable",
            "src": "contracts/ETR.sol:713"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Ownable",
              "src": "contracts/ETR.sol:706"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.7"
      },
      "contracts/ETR.sol:SafeMath": {
        "src": "contracts/ETR.sol:130",
        "version": {
          "withMetadata": "c3f834d0fc2ebabdefe1a3a5be21e22f26d150cc6604ee9164856c0da922ff34",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.7"
      },
      "contracts/ETR.sol:SafeMathInt": {
        "src": "contracts/ETR.sol:592",
        "version": {
          "withMetadata": "d873154b6813e7466d9e2959827037b04ade6a67610301426cf5c718f757f22a",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.7"
      },
      "contracts/ETR.sol:SafeMathUint": {
        "src": "contracts/ETR.sol:580",
        "version": {
          "withMetadata": "f47c73291b048a42cecb64add849ad0be6b1f20fc54264c61d8a2af57567cd18",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.7"
      }
    },
    {
      "contracts/HOLD.sol:HODL1": {
        "src": "contracts/HOLD.sol:12",
        "version": {
          "withMetadata": "ee14f6be4f79331d95f0373af62890f1fc9ed426410c98bd965965e1f1e9b71d",
          "withoutMetadata": "0b8695774aa2c294486a1be0f0c895f8b75a9e87889db97b404f8bd769cb3ab8",
          "linkedWithoutMetadata": "0b8695774aa2c294486a1be0f0c895f8b75a9e87889db97b404f8bd769cb3ab8"
        },
        "inherit": [
          "contracts/ReentrancyGuard.sol:ReentrancyGuard",
          "contracts/IFiles.sol:Ownable",
          "contracts/IFiles.sol:Initializable",
          "contracts/IFiles.sol:IBEP20",
          "contracts/IFiles.sol:Context"
        ],
        "libraries": [
          "contracts/IFiles.sol:SafeMath",
          "contracts/IFiles.sol:Address",
          "contracts/Utils.sol:Utils"
        ],
        "methods": [
          "()",
          "name()",
          "symbol()",
          "decimals()",
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)",
          "increaseAllowance(address,uint256)",
          "decreaseAllowance(address,uint256)",
          "isExcludedFromReward(address)",
          "totalFees()",
          "deliver(uint256)",
          "reflectionFromToken(uint256,bool)",
          "tokenFromReflection(uint256)",
          "excludeFromReward(address)",
          "includeInReward(address)",
          "excludeFromFee(address)",
          "includeInFee(address)",
          "setTaxFeePercent(uint256)",
          "setLiquidityFeePercent(uint256)",
          "setSwapAndLiquifyEnabled(bool)",
          "()",
          "isExcludedFromFee(address)",
          "setMaxTxPercent(uint256)",
          "setExcludeFromMaxTx(address,bool)",
          "calculateBNBReward(address)",
          "redeemRewards(uint256)",
          "triggerSwapAndLiquify()",
          "changerewardCycleBlock(uint256)",
          "changereservewallet(address payable)",
          "changemarketingwallet(address payable)",
          "changetriggerwallet(address payable)",
          "reflectionfeestartstop(bool)",
          "migrateToken(address,uint256)",
          "migrateWBnb(address,uint256)",
          "migrateBnb(address payable,uint256)",
          "changeThreshHoldTopUpRate(uint256)",
          "changeSelltax(uint256)",
          "changeBuytax(uint256)",
          "changeTransfertax(uint256)",
          "changeTokenomics(uint256,uint256,uint256,uint256,uint256)",
          "changebnbclaimtax(uint256,uint256,uint256,uint256,uint256,uint256)",
          "changeminTokenNumberToSell(uint256)",
          "changeminTokenNumberUpperlimit(uint256)",
          "changerewardHardcap(uint256)",
          "updatePairAddress(address,bool)",
          "changeclaimBNBLimit(uint256)",
          "changereinvestLimit(uint256)",
          "changeHODLMasterChef(address)",
          "changeAntiFlipTax(uint256,uint8)",
          "changeStackingWallet(address payable)",
          "getStackingCounter(uint64)",
          "enableStacking(bool)",
          "changeBNBstackingLimit(uint256)",
          "startStacking()",
          "getStacked(address)",
          "stopStackingAndClaim(uint256)",
          "TestAddLiquidityWithoutTax(uint256)"
        ],
        "linkReferences": [
          {
            "src": "contracts/Utils.sol",
            "name": "Utils",
            "length": 20,
            "start": 5845,
            "placeholder": "__$1c41232b8c3f9382c4bdca1a05a1ab00e7$__"
          },
          {
            "src": "contracts/Utils.sol",
            "name": "Utils",
            "length": 20,
            "start": 6816,
            "placeholder": "__$1c41232b8c3f9382c4bdca1a05a1ab00e7$__"
          },
          {
            "src": "contracts/Utils.sol",
            "name": "Utils",
            "length": 20,
            "start": 8732,
            "placeholder": "__$1c41232b8c3f9382c4bdca1a05a1ab00e7$__"
          },
          {
            "src": "contracts/Utils.sol",
            "name": "Utils",
            "length": 20,
            "start": 14444,
            "placeholder": "__$1c41232b8c3f9382c4bdca1a05a1ab00e7$__"
          },
          {
            "src": "contracts/Utils.sol",
            "name": "Utils",
            "length": 20,
            "start": 14881,
            "placeholder": "__$1c41232b8c3f9382c4bdca1a05a1ab00e7$__"
          },
          {
            "src": "contracts/Utils.sol",
            "name": "Utils",
            "length": 20,
            "start": 15618,
            "placeholder": "__$1c41232b8c3f9382c4bdca1a05a1ab00e7$__"
          },
          {
            "src": "contracts/Utils.sol",
            "name": "Utils",
            "length": 20,
            "start": 15915,
            "placeholder": "__$1c41232b8c3f9382c4bdca1a05a1ab00e7$__"
          },
          {
            "src": "contracts/Utils.sol",
            "name": "Utils",
            "length": 20,
            "start": 17957,
            "placeholder": "__$1c41232b8c3f9382c4bdca1a05a1ab00e7$__"
          },
          {
            "src": "contracts/Utils.sol",
            "name": "Utils",
            "length": 20,
            "start": 20164,
            "placeholder": "__$1c41232b8c3f9382c4bdca1a05a1ab00e7$__"
          },
          {
            "src": "contracts/Utils.sol",
            "name": "Utils",
            "length": 20,
            "start": 20601,
            "placeholder": "__$1c41232b8c3f9382c4bdca1a05a1ab00e7$__"
          },
          {
            "src": "contracts/Utils.sol",
            "name": "Utils",
            "length": 20,
            "start": 21505,
            "placeholder": "__$1c41232b8c3f9382c4bdca1a05a1ab00e7$__"
          },
          {
            "src": "contracts/Utils.sol",
            "name": "Utils",
            "length": 20,
            "start": 21951,
            "placeholder": "__$1c41232b8c3f9382c4bdca1a05a1ab00e7$__"
          }
        ],
        "errors": [
          {
            "kind": "external-library-linking",
            "name": "Utils",
            "src": "contracts/Utils.sol"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "contracts/IFiles.sol:251"
            },
            {
              "label": "initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "contracts/IFiles.sol:252"
            },
            {
              "label": "______gap",
              "offset": 0,
              "slot": "1",
              "type": "t_array(t_uint256)50_storage",
              "contract": "Initializable",
              "src": "contracts/IFiles.sol:283"
            },
            {
              "label": "_owner",
              "offset": 0,
              "slot": "51",
              "type": "t_address",
              "contract": "Ownable",
              "src": "contracts/IFiles.sol:287"
            },
            {
              "label": "_previousOwner",
              "offset": 0,
              "slot": "52",
              "type": "t_address",
              "contract": "Ownable",
              "src": "contracts/IFiles.sol:288"
            },
            {
              "label": "_lockTime",
              "offset": 0,
              "slot": "53",
              "type": "t_uint256",
              "contract": "Ownable",
              "src": "contracts/IFiles.sol:289"
            },
            {
              "label": "_status",
              "offset": 0,
              "slot": "54",
              "type": "t_uint256",
              "contract": "ReentrancyGuard",
              "src": "contracts/ReentrancyGuard.sol:10"
            },
            {
              "label": "_rOwned",
              "offset": 0,
              "slot": "55",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "HODL1",
              "src": "contracts/HOLD.sol:16"
            },
            {
              "label": "_tOwned",
              "offset": 0,
              "slot": "56",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "HODL1",
              "src": "contracts/HOLD.sol:17"
            },
            {
              "label": "_allowances",
              "offset": 0,
              "slot": "57",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "HODL1",
              "src": "contracts/HOLD.sol:18"
            },
            {
              "label": "_isExcludedFromFee",
              "offset": 0,
              "slot": "58",
              "type": "t_mapping(t_address,t_bool)",
              "contract": "HODL1",
              "src": "contracts/HOLD.sol:20"
            },
            {
              "label": "_isExcluded",
              "offset": 0,
              "slot": "59",
              "type": "t_mapping(t_address,t_bool)",
              "contract": "HODL1",
              "src": "contracts/HOLD.sol:21"
            },
            {
              "label": "_isExcludedFromMaxTx",
              "offset": 0,
              "slot": "60",
              "type": "t_mapping(t_address,t_bool)",
              "contract": "HODL1",
              "src": "contracts/HOLD.sol:22"
            },
            {
              "label": "userClaimedBNB",
              "offset": 0,
              "slot": "61",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "HODL1",
              "src": "contracts/HOLD.sol:25"
            },
            {
              "label": "totalClaimedBNB",
              "offset": 0,
              "slot": "62",
              "type": "t_uint256",
              "contract": "HODL1",
              "src": "contracts/HOLD.sol:26"
            },
            {
              "label": "userreinvested",
              "offset": 0,
              "slot": "63",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "HODL1",
              "src": "contracts/HOLD.sol:28"
            },
            {
              "label": "totalreinvested",
              "offset": 0,
              "slot": "64",
              "type": "t_uint256",
              "contract": "HODL1",
              "src": "contracts/HOLD.sol:29"
            },
            {
              "label": "totalgasfeesdistributed",
              "offset": 0,
              "slot": "65",
              "type": "t_uint256",
              "contract": "HODL1",
              "src": "contracts/HOLD.sol:32"
            },
            {
              "label": "userrecievedgasfees",
              "offset": 0,
              "slot": "66",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "HODL1",
              "src": "contracts/HOLD.sol:33"
            },
            {
              "label": "deadAddress",
              "offset": 0,
              "slot": "67",
              "type": "t_address",
              "contract": "HODL1",
              "src": "contracts/HOLD.sol:35"
            },
            {
              "label": "_excluded",
              "offset": 0,
              "slot": "68",
              "type": "t_array(t_address)dyn_storage",
              "contract": "HODL1",
              "src": "contracts/HOLD.sol:37"
            },
            {
              "label": "MAX",
              "offset": 0,
              "slot": "69",
              "type": "t_uint256",
              "contract": "HODL1",
              "src": "contracts/HOLD.sol:39"
            },
            {
              "label": "_tTotal",
              "offset": 0,
              "slot": "70",
              "type": "t_uint256",
              "contract": "HODL1",
              "src": "contracts/HOLD.sol:40"
            },
            {
              "label": "_rTotal",
              "offset": 0,
              "slot": "71",
              "type": "t_uint256",
              "contract": "HODL1",
              "src": "contracts/HOLD.sol:41"
            },
            {
              "label": "_tFeeTotal",
              "offset": 0,
              "slot": "72",
              "type": "t_uint256",
              "contract": "HODL1",
              "src": "contracts/HOLD.sol:42"
            },
            {
              "label": "_name",
              "offset": 0,
              "slot": "73",
              "type": "t_string_storage",
              "contract": "HODL1",
              "src": "contracts/HOLD.sol:44"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "74",
              "type": "t_string_storage",
              "contract": "HODL1",
              "src": "contracts/HOLD.sol:45"
            },
            {
              "label": "_decimals",
              "offset": 0,
              "slot": "75",
              "type": "t_uint8",
              "contract": "HODL1",
              "src": "contracts/HOLD.sol:46"
            },
            {
              "label": "pancakeRouter",
              "offset": 1,
              "slot": "75",
              "type": "t_contract(IPancakeRouter02)5508",
              "contract": "HODL1",
              "src": "contracts/HOLD.sol:48"
            },
            {
              "label": "pancakePair",
              "offset": 0,
              "slot": "76",
              "type": "t_address",
              "contract": "HODL1",
              "src": "contracts/HOLD.sol:49"
            },
            {
              "label": "_inSwapAndLiquify",
              "offset": 20,
              "slot": "76",
              "type": "t_bool",
              "contract": "HODL1",
              "src": "contracts/HOLD.sol:51"
            },
            {
              "label": "daySeconds",
              "offset": 0,
              "slot": "77",
              "type": "t_uint256",
              "contract": "HODL1",
              "src": "contracts/HOLD.sol:53"
            },
            {
              "label": "userWalletAllowance",
              "offset": 0,
              "slot": "78",
              "type": "t_mapping(t_address,t_struct(WalletAllowance)96_storage)",
              "contract": "HODL1",
              "src": "contracts/HOLD.sol:60"
            },
            {
              "label": "isBlacklisted",
              "offset": 0,
              "slot": "79",
              "type": "t_mapping(t_address,t_bool)",
              "contract": "HODL1",
              "src": "contracts/HOLD.sol:83"
            },
            {
              "label": "rewardCycleBlock",
              "offset": 0,
              "slot": "80",
              "type": "t_uint256",
              "contract": "HODL1",
              "src": "contracts/HOLD.sol:591"
            },
            {
              "label": "stackingCounterStart",
              "offset": 0,
              "slot": "81",
              "type": "t_uint256",
              "contract": "HODL1",
              "src": "contracts/HOLD.sol:592"
            },
            {
              "label": "threshHoldTopUpRate",
              "offset": 0,
              "slot": "82",
              "type": "t_uint256",
              "contract": "HODL1",
              "src": "contracts/HOLD.sol:593"
            },
            {
              "label": "_maxTxAmount",
              "offset": 0,
              "slot": "83",
              "type": "t_uint256",
              "contract": "HODL1",
              "src": "contracts/HOLD.sol:594"
            },
            {
              "label": "bnbStackingLimit",
              "offset": 0,
              "slot": "84",
              "type": "t_uint256",
              "contract": "HODL1",
              "src": "contracts/HOLD.sol:595"
            },
            {
              "label": "nextAvailableClaimDate",
              "offset": 0,
              "slot": "85",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "HODL1",
              "src": "contracts/HOLD.sol:596"
            },
            {
              "label": "swapAndLiquifyEnabled",
              "offset": 0,
              "slot": "86",
              "type": "t_bool",
              "contract": "HODL1",
              "src": "contracts/HOLD.sol:597"
            },
            {
              "label": "reserve_5",
              "offset": 0,
              "slot": "87",
              "type": "t_uint256",
              "contract": "HODL1",
              "src": "contracts/HOLD.sol:598"
            },
            {
              "label": "reserve_6",
              "offset": 0,
              "slot": "88",
              "type": "t_uint256",
              "contract": "HODL1",
              "src": "contracts/HOLD.sol:599"
            },
            {
              "label": "reflectionFeesDisabled",
              "offset": 0,
              "slot": "89",
              "type": "t_bool",
              "contract": "HODL1",
              "src": "contracts/HOLD.sol:601"
            },
            {
              "label": "_taxFee",
              "offset": 0,
              "slot": "90",
              "type": "t_uint256",
              "contract": "HODL1",
              "src": "contracts/HOLD.sol:603"
            },
            {
              "label": "_previousTaxFee",
              "offset": 0,
              "slot": "91",
              "type": "t_uint256",
              "contract": "HODL1",
              "src": "contracts/HOLD.sol:604"
            },
            {
              "label": "antiFlipTax",
              "offset": 0,
              "slot": "92",
              "type": "t_array(t_uint256)6_storage",
              "contract": "HODL1",
              "src": "contracts/HOLD.sol:606"
            },
            {
              "label": "bnbClaimTax",
              "offset": 0,
              "slot": "98",
              "type": "t_struct(LayerTax)1783_storage",
              "contract": "HODL1",
              "src": "contracts/HOLD.sol:608"
            },
            {
              "label": "selltax",
              "offset": 0,
              "slot": "104",
              "type": "t_uint256",
              "contract": "HODL1",
              "src": "contracts/HOLD.sol:619"
            },
            {
              "label": "buytax",
              "offset": 0,
              "slot": "105",
              "type": "t_uint256",
              "contract": "HODL1",
              "src": "contracts/HOLD.sol:620"
            },
            {
              "label": "transfertax",
              "offset": 0,
              "slot": "106",
              "type": "t_uint256",
              "contract": "HODL1",
              "src": "contracts/HOLD.sol:621"
            },
            {
              "label": "claimBNBLimit",
              "offset": 0,
              "slot": "107",
              "type": "t_uint256",
              "contract": "HODL1",
              "src": "contracts/HOLD.sol:623"
            },
            {
              "label": "reinvestLimit",
              "offset": 0,
              "slot": "108",
              "type": "t_uint256",
              "contract": "HODL1",
              "src": "contracts/HOLD.sol:624"
            },
            {
              "label": "reserve_1",
              "offset": 0,
              "slot": "109",
              "type": "t_uint256",
              "contract": "HODL1",
              "src": "contracts/HOLD.sol:625"
            },
            {
              "label": "reservewallet",
              "offset": 0,
              "slot": "110",
              "type": "t_address",
              "contract": "HODL1",
              "src": "contracts/HOLD.sol:627"
            },
            {
              "label": "teamwallet",
              "offset": 0,
              "slot": "111",
              "type": "t_address",
              "contract": "HODL1",
              "src": "contracts/HOLD.sol:628"
            },
            {
              "label": "marketingwallet",
              "offset": 0,
              "slot": "112",
              "type": "t_address",
              "contract": "HODL1",
              "src": "contracts/HOLD.sol:629"
            },
            {
              "label": "stackingWallet",
              "offset": 0,
              "slot": "113",
              "type": "t_address",
              "contract": "HODL1",
              "src": "contracts/HOLD.sol:630"
            },
            {
              "label": "_liquidityFee",
              "offset": 0,
              "slot": "114",
              "type": "t_uint256",
              "contract": "HODL1",
              "src": "contracts/HOLD.sol:632"
            },
            {
              "label": "_previousLiquidityFee",
              "offset": 0,
              "slot": "115",
              "type": "t_uint256",
              "contract": "HODL1",
              "src": "contracts/HOLD.sol:633"
            },
            {
              "label": "minTokenNumberToSell",
              "offset": 0,
              "slot": "116",
              "type": "t_uint256",
              "contract": "HODL1",
              "src": "contracts/HOLD.sol:635"
            },
            {
              "label": "minTokenNumberUpperlimit",
              "offset": 0,
              "slot": "117",
              "type": "t_uint256",
              "contract": "HODL1",
              "src": "contracts/HOLD.sol:636"
            },
            {
              "label": "rewardHardcap",
              "offset": 0,
              "slot": "118",
              "type": "t_uint256",
              "contract": "HODL1",
              "src": "contracts/HOLD.sol:638"
            },
            {
              "label": "tokenomics",
              "offset": 0,
              "slot": "119",
              "type": "t_struct(Tokenomics)1827_storage",
              "contract": "HODL1",
              "src": "contracts/HOLD.sol:640"
            },
            {
              "label": "_Reflection",
              "offset": 0,
              "slot": "124",
              "type": "t_uint256",
              "contract": "HODL1",
              "src": "contracts/HOLD.sol:650"
            },
            {
              "label": "_Tokenomics",
              "offset": 0,
              "slot": "125",
              "type": "t_uint256",
              "contract": "HODL1",
              "src": "contracts/HOLD.sol:651"
            },
            {
              "label": "triggerwallet",
              "offset": 0,
              "slot": "126",
              "type": "t_address",
              "contract": "HODL1",
              "src": "contracts/HOLD.sol:653"
            },
            {
              "label": "pairAddresses",
              "offset": 0,
              "slot": "127",
              "type": "t_mapping(t_address,t_bool)",
              "contract": "HODL1",
              "src": "contracts/HOLD.sol:655"
            },
            {
              "label": "HodlMasterChef",
              "offset": 0,
              "slot": "128",
              "type": "t_address",
              "contract": "HODL1",
              "src": "contracts/HOLD.sol:657"
            },
            {
              "label": "firstBuyTimeStamp",
              "offset": 0,
              "slot": "129",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "HODL1",
              "src": "contracts/HOLD.sol:659"
            },
            {
              "label": "rewardStacking",
              "offset": 0,
              "slot": "130",
              "type": "t_mapping(t_address,t_struct(stacking)1858_storage)",
              "contract": "HODL1",
              "src": "contracts/HOLD.sol:671"
            },
            {
              "label": "stackingEnabled",
              "offset": 0,
              "slot": "131",
              "type": "t_bool",
              "contract": "HODL1",
              "src": "contracts/HOLD.sol:672"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_address)dyn_storage": {
              "label": "address[]",
              "numberOfBytes": "32"
            },
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]",
              "numberOfBytes": "1600"
            },
            "t_array(t_uint256)6_storage": {
              "label": "uint256[6]",
              "numberOfBytes": "192"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_contract(IPancakeRouter02)5508": {
              "label": "contract IPancakeRouter02",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_struct(WalletAllowance)96_storage)": {
              "label": "mapping(address => struct HODL1.WalletAllowance)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_struct(stacking)1858_storage)": {
              "label": "mapping(address => struct HODL1.stacking)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_struct(LayerTax)1783_storage": {
              "label": "struct HODL1.LayerTax",
              "members": [
                {
                  "label": "layer1",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "layer2",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "layer3",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "layer4",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "3"
                },
                {
                  "label": "layer5",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "4"
                },
                {
                  "label": "layer6",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "5"
                }
              ],
              "numberOfBytes": "192"
            },
            "t_struct(Tokenomics)1827_storage": {
              "label": "struct HODL1.Tokenomics",
              "members": [
                {
                  "label": "bnbReward",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "liquidity",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "marketing",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "reflection",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "3"
                },
                {
                  "label": "reserve",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "4"
                }
              ],
              "numberOfBytes": "160"
            },
            "t_struct(WalletAllowance)96_storage": {
              "label": "struct HODL1.WalletAllowance",
              "members": [
                {
                  "label": "timestamp",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "amount",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "1"
                }
              ],
              "numberOfBytes": "64"
            },
            "t_struct(stacking)1858_storage": {
              "label": "struct HODL1.stacking",
              "members": [
                {
                  "label": "enabled",
                  "type": "t_bool",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "cycle",
                  "type": "t_uint64",
                  "offset": 1,
                  "slot": "0"
                },
                {
                  "label": "tsStartStacking",
                  "type": "t_uint64",
                  "offset": 9,
                  "slot": "0"
                },
                {
                  "label": "stackingCounter",
                  "type": "t_uint64",
                  "offset": 17,
                  "slot": "0"
                },
                {
                  "label": "stackingLimit",
                  "type": "t_uint96",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "amount",
                  "type": "t_uint96",
                  "offset": 12,
                  "slot": "1"
                },
                {
                  "label": "hardcap",
                  "type": "t_uint96",
                  "offset": 0,
                  "slot": "2"
                }
              ],
              "numberOfBytes": "96"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint64": {
              "label": "uint64",
              "numberOfBytes": "8"
            },
            "t_uint8": {
              "label": "uint8",
              "numberOfBytes": "1"
            },
            "t_uint96": {
              "label": "uint96",
              "numberOfBytes": "12"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.7"
      },
      "contracts/IFiles.sol:Address": {
        "src": "contracts/IFiles.sol:147",
        "version": {
          "withMetadata": "8bd2f499e975802848f3ffd5f13479b01b6af86caa87d5b4f60eb3f2c2a419d3",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.7"
      },
      "contracts/IFiles.sol:Context": {
        "src": "contracts/IFiles.sol:135",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.7"
      },
      "contracts/IFiles.sol:IBEP20": {
        "src": "contracts/IFiles.sol:9",
        "inherit": [],
        "libraries": [],
        "methods": [
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.7"
      },
      "contracts/IFiles.sol:IPancakeFactory": {
        "src": "contracts/IFiles.sol:327",
        "inherit": [],
        "libraries": [],
        "methods": [
          "feeTo()",
          "feeToSetter()",
          "getPair(address,address)",
          "allPairs(uint256)",
          "allPairsLength()",
          "createPair(address,address)",
          "setFeeTo(address)",
          "setFeeToSetter(address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.7"
      },
      "contracts/IFiles.sol:IPancakePair": {
        "src": "contracts/IFiles.sol:357",
        "inherit": [],
        "libraries": [],
        "methods": [
          "name()",
          "symbol()",
          "decimals()",
          "totalSupply()",
          "balanceOf(address)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transfer(address,uint256)",
          "transferFrom(address,address,uint256)",
          "DOMAIN_SEPARATOR()",
          "PERMIT_TYPEHASH()",
          "nonces(address)",
          "permit(address,address,uint256,uint256,uint8,bytes32,bytes32)",
          "MINIMUM_LIQUIDITY()",
          "factory()",
          "token0()",
          "token1()",
          "getReserves()",
          "price0CumulativeLast()",
          "price1CumulativeLast()",
          "kLast()",
          "mint(address)",
          "burn(address)",
          "swap(uint256,uint256,address,bytes)",
          "skim(address)",
          "sync()",
          "initialize(address,address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.7"
      },
      "contracts/IFiles.sol:IPancakeRouter01": {
        "src": "contracts/IFiles.sol:466",
        "inherit": [],
        "libraries": [],
        "methods": [
          "factory()",
          "WETH()",
          "addLiquidity(address,address,uint256,uint256,uint256,uint256,address,uint256)",
          "addLiquidityETH(address,uint256,uint256,uint256,address,uint256)",
          "removeLiquidity(address,address,uint256,uint256,uint256,address,uint256)",
          "removeLiquidityETH(address,uint256,uint256,uint256,address,uint256)",
          "removeLiquidityWithPermit(address,address,uint256,uint256,uint256,address,uint256,bool,uint8,bytes32,bytes32)",
          "removeLiquidityETHWithPermit(address,uint256,uint256,uint256,address,uint256,bool,uint8,bytes32,bytes32)",
          "swapExactTokensForTokens(uint256,uint256,address[],address,uint256)",
          "swapTokensForExactTokens(uint256,uint256,address[],address,uint256)",
          "swapExactETHForTokens(uint256,address[],address,uint256)",
          "swapTokensForExactETH(uint256,uint256,address[],address,uint256)",
          "swapExactTokensForETH(uint256,uint256,address[],address,uint256)",
          "swapETHForExactTokens(uint256,address[],address,uint256)",
          "quote(uint256,uint256,uint256)",
          "getAmountOut(uint256,uint256,uint256)",
          "getAmountIn(uint256,uint256,uint256)",
          "getAmountsOut(uint256,address[])",
          "getAmountsIn(uint256,address[])"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.7"
      },
      "contracts/IFiles.sol:IPancakeRouter02": {
        "src": "contracts/IFiles.sol:626",
        "inherit": [
          "contracts/IFiles.sol:IPancakeRouter01"
        ],
        "libraries": [],
        "methods": [
          "removeLiquidityETHSupportingFeeOnTransferTokens(address,uint256,uint256,uint256,address,uint256)",
          "removeLiquidityETHWithPermitSupportingFeeOnTransferTokens(address,uint256,uint256,uint256,address,uint256,bool,uint8,bytes32,bytes32)",
          "swapExactTokensForTokensSupportingFeeOnTransferTokens(uint256,uint256,address[],address,uint256)",
          "swapExactETHForTokensSupportingFeeOnTransferTokens(uint256,address[],address,uint256)",
          "swapExactTokensForETHSupportingFeeOnTransferTokens(uint256,uint256,address[],address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.7"
      },
      "contracts/IFiles.sol:IWBNB": {
        "src": "contracts/IFiles.sol:38",
        "inherit": [],
        "libraries": [],
        "methods": [
          "name()",
          "symbol()",
          "decimals()",
          "balanceOf(address)",
          "allowance(address,address)",
          "()",
          "deposit()",
          "withdraw(uint256)",
          "totalSupply()",
          "approve(address,uint256)",
          "transfer(address,uint256)",
          "transferFrom(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.7"
      },
      "contracts/IFiles.sol:Initializable": {
        "src": "contracts/IFiles.sol:249",
        "version": {
          "withMetadata": "9d7ec3df6525e7ffa61e311e2deca727bef66305a950f9c68cab0bc162087110",
          "withoutMetadata": "ac0db523ddc3e330f735df7b3b0b24460531c71290a891170e840f8f67d5ff6b",
          "linkedWithoutMetadata": "ac0db523ddc3e330f735df7b3b0b24460531c71290a891170e840f8f67d5ff6b"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "contracts/IFiles.sol:251"
            },
            {
              "label": "initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "contracts/IFiles.sol:252"
            },
            {
              "label": "______gap",
              "offset": 0,
              "slot": "1",
              "type": "t_array(t_uint256)50_storage",
              "contract": "Initializable",
              "src": "contracts/IFiles.sol:283"
            }
          ],
          "types": {
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]",
              "numberOfBytes": "1600"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.7"
      },
      "contracts/IFiles.sol:Ownable": {
        "src": "contracts/IFiles.sol:286",
        "version": {
          "withMetadata": "f224f75ce98e2ac13e84dc54edebbbec0e40b5066bf333874f794bea8bc0c215",
          "withoutMetadata": "a3dd09084d5d3377afaa5e637593b425fb1172db63a48c2f62428555638775f8",
          "linkedWithoutMetadata": "a3dd09084d5d3377afaa5e637593b425fb1172db63a48c2f62428555638775f8"
        },
        "inherit": [
          "contracts/IFiles.sol:Initializable",
          "contracts/IFiles.sol:Context"
        ],
        "libraries": [],
        "methods": [
          "()",
          "initOwner(address)",
          "owner()",
          "renounceOwnership()",
          "transferOwnership(address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "contracts/IFiles.sol:251"
            },
            {
              "label": "initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "contracts/IFiles.sol:252"
            },
            {
              "label": "______gap",
              "offset": 0,
              "slot": "1",
              "type": "t_array(t_uint256)50_storage",
              "contract": "Initializable",
              "src": "contracts/IFiles.sol:283"
            },
            {
              "label": "_owner",
              "offset": 0,
              "slot": "51",
              "type": "t_address",
              "contract": "Ownable",
              "src": "contracts/IFiles.sol:287"
            },
            {
              "label": "_previousOwner",
              "offset": 0,
              "slot": "52",
              "type": "t_address",
              "contract": "Ownable",
              "src": "contracts/IFiles.sol:288"
            },
            {
              "label": "_lockTime",
              "offset": 0,
              "slot": "53",
              "type": "t_uint256",
              "contract": "Ownable",
              "src": "contracts/IFiles.sol:289"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]",
              "numberOfBytes": "1600"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.7"
      },
      "contracts/IFiles.sol:SafeMath": {
        "src": "contracts/IFiles.sol:68",
        "version": {
          "withMetadata": "f48b55024cc5d76705eb5ef6491896045619ce1c9a067e5eaa78d256baf5ac79",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.7"
      },
      "contracts/ReentrancyGuard.sol:ReentrancyGuard": {
        "src": "contracts/ReentrancyGuard.sol:5",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ReentrancyGuard",
            "src": "contracts/ReentrancyGuard.sol:12"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_status",
              "offset": 0,
              "slot": "0",
              "type": "t_uint256",
              "contract": "ReentrancyGuard",
              "src": "contracts/ReentrancyGuard.sol:10"
            }
          ],
          "types": {
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.7"
      },
      "contracts/Utils.sol:PancakeLibrary": {
        "src": "contracts/Utils.sol:219",
        "version": {
          "withMetadata": "c1a0d1cedb43644869000b7d9274d7dfa43e67f8c7fc1bb05b04f4f4d3adc7ff",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [
          "contracts/IFiles.sol:SafeMath"
        ],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.7"
      },
      "contracts/Utils.sol:Utils": {
        "src": "contracts/Utils.sol:6",
        "version": {
          "withMetadata": "56839d224d4baf72a0db14abc0bf3e79778bcf988016f949a200988d32764527",
          "withoutMetadata": "b8baa37c8e7f3700fd6e6ac40b224ce9c7f4deb576d103e4ed6c669a97910132",
          "linkedWithoutMetadata": "b8baa37c8e7f3700fd6e6ac40b224ce9c7f4deb576d103e4ed6c669a97910132"
        },
        "inherit": [],
        "libraries": [
          "contracts/IFiles.sol:SafeMath"
        ],
        "methods": [
          "calculateBNBReward(uint256,uint256,uint256,uint256)",
          "calculateTopUpClaim(uint256,uint256,uint256,uint256)",
          "swapTokensForEth(address,uint256)",
          "swapETHForTokens(address,address,uint256)",
          "swapTokensForTokens(address,address,uint256)",
          "getAmountsout(uint256,address)",
          "addLiquidity(address,address,uint256,uint256)",
          "getAntiFlipTaxNo(uint256)",
          "calcReward(uint256,uint256,uint256,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.7"
      }
    },
    {
      "contracts/ChainAnexToken.sol:ChainAnexToken": {
        "src": "contracts/ChainAnexToken.sol:304",
        "version": {
          "withMetadata": "df0ffb9ec51c56a9b5c5cc8e466b4ad29a2d6ee3ac8f7bca9d7054a08b49f9a8",
          "withoutMetadata": "e78e1330b923fc470a722cb855915d1a6d7d7006300a4bbfcdcc8de2084e0f0a",
          "linkedWithoutMetadata": "e78e1330b923fc470a722cb855915d1a6d7d7006300a4bbfcdcc8de2084e0f0a"
        },
        "inherit": [
          "contracts/ChainAnexToken.sol:Owned",
          "contracts/ChainAnexToken.sol:Context",
          "contracts/ChainAnexToken.sol:IBEP20"
        ],
        "libraries": [
          "contracts/ChainAnexToken.sol:SafeMath"
        ],
        "methods": [
          "(address,string,string,uint256)",
          "name()",
          "symbol()",
          "decimals()",
          "totalSupply()",
          "balanceOf(address)",
          "unLockedBalanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)",
          "transferOtherCurrencies(address,address)",
          "burn(address,uint256)",
          "distributeTokens(address,uint256,uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ChainAnexToken",
            "src": "contracts/ChainAnexToken.sol:328"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Owned",
              "src": "contracts/ChainAnexToken.sol:278"
            },
            {
              "label": "_newOwner",
              "offset": 0,
              "slot": "1",
              "type": "t_address",
              "contract": "Owned",
              "src": "contracts/ChainAnexToken.sol:279"
            },
            {
              "label": "_balances",
              "offset": 0,
              "slot": "2",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ChainAnexToken",
              "src": "contracts/ChainAnexToken.sol:308"
            },
            {
              "label": "_unlockedTokens",
              "offset": 0,
              "slot": "3",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ChainAnexToken",
              "src": "contracts/ChainAnexToken.sol:310"
            },
            {
              "label": "_allowances",
              "offset": 0,
              "slot": "4",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "ChainAnexToken",
              "src": "contracts/ChainAnexToken.sol:312"
            },
            {
              "label": "records",
              "offset": 0,
              "slot": "5",
              "type": "t_mapping(t_address,t_array(t_struct(LockRecord)396_storage)dyn_storage)",
              "contract": "ChainAnexToken",
              "src": "contracts/ChainAnexToken.sol:320"
            },
            {
              "label": "_totalSupply",
              "offset": 0,
              "slot": "6",
              "type": "t_uint256",
              "contract": "ChainAnexToken",
              "src": "contracts/ChainAnexToken.sol:322"
            },
            {
              "label": "_name",
              "offset": 0,
              "slot": "7",
              "type": "t_string_storage",
              "contract": "ChainAnexToken",
              "src": "contracts/ChainAnexToken.sol:324"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "8",
              "type": "t_string_storage",
              "contract": "ChainAnexToken",
              "src": "contracts/ChainAnexToken.sol:325"
            },
            {
              "label": "_decimals",
              "offset": 0,
              "slot": "9",
              "type": "t_uint8",
              "contract": "ChainAnexToken",
              "src": "contracts/ChainAnexToken.sol:326"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_struct(LockRecord)396_storage)dyn_storage": {
              "label": "struct ChainAnexToken.LockRecord[]",
              "numberOfBytes": "32"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_mapping(t_address,t_array(t_struct(LockRecord)396_storage)dyn_storage)": {
              "label": "mapping(address => struct ChainAnexToken.LockRecord[])",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_struct(LockRecord)396_storage": {
              "label": "struct ChainAnexToken.LockRecord",
              "members": [
                {
                  "label": "lockingPeriod",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "tokens",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "isUnlocked",
                  "type": "t_bool",
                  "offset": 0,
                  "slot": "2"
                }
              ],
              "numberOfBytes": "96"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint8": {
              "label": "uint8",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.6.12"
      },
      "contracts/ChainAnexToken.sol:Context": {
        "src": "contracts/ChainAnexToken.sol:259",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.6.12"
      },
      "contracts/ChainAnexToken.sol:IBEP20": {
        "src": "contracts/ChainAnexToken.sol:13",
        "inherit": [],
        "libraries": [],
        "methods": [
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.6.12"
      },
      "contracts/ChainAnexToken.sol:Owned": {
        "src": "contracts/ChainAnexToken.sol:276",
        "version": {
          "withMetadata": "dcb4610bef28dc3500f3e18f8dec6e4af872306c1c5c9319b660449eddc90a12",
          "withoutMetadata": "e347010291216f8e50d42345679e477a9406c67cf2ba4efc7336bd3a4943129d",
          "linkedWithoutMetadata": "e347010291216f8e50d42345679e477a9406c67cf2ba4efc7336bd3a4943129d"
        },
        "inherit": [
          "contracts/ChainAnexToken.sol:Context"
        ],
        "libraries": [],
        "methods": [
          "transferOwnership(address)",
          "acceptOwnership()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Owned",
              "src": "contracts/ChainAnexToken.sol:278"
            },
            {
              "label": "_newOwner",
              "offset": 0,
              "slot": "1",
              "type": "t_address",
              "contract": "Owned",
              "src": "contracts/ChainAnexToken.sol:279"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.6.12"
      },
      "contracts/ChainAnexToken.sol:SafeMath": {
        "src": "contracts/ChainAnexToken.sol:104",
        "version": {
          "withMetadata": "da039a9768723916865be70f452233a5be631e289d58fbc11bba0a3312a1df3c",
          "withoutMetadata": "aaa148c474cd10e1a6cd0a52c0b55f1aa9b7bb7b42d7f1cb5acaea4f42f04bc8",
          "linkedWithoutMetadata": "aaa148c474cd10e1a6cd0a52c0b55f1aa9b7bb7b42d7f1cb5acaea4f42f04bc8"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.6.12"
      }
    }
  ]
}